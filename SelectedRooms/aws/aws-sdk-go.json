[
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi everyone, welcome to our Gitter.im channel for the AWS SDK for Go.  Please ask any question and let us know of any feedback you have.",
  "id": "558c0955e6702c3a57647db2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 1,
  "sent": "2015-06-25T13:59:49.471Z",
  "text": "Hi everyone, welcome to our Gitter.im channel for the AWS SDK for Go.  Please ask any question and let us know of any feedback you have.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "I hate to ask a noob question, but I&#39;m having difficulty with the policy actions necessary to allow s3.ListObjects. I have set s3:ListObject and s3:ListBucket, but I still get an access denied. The access key I&#39;m using is working for other operations (put, get and delete). My code is more or less the same as the example (replacing my bucket name and so on). I&#39;m using access keys in my .aws/credentials, so it is picking up the same credentials as the other actinos. Many thanks for the help!",
  "id": "55915cb298f9c0bc3da07fbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T14:56:50.240Z",
  "text": "I hate to ask a noob question, but I'm having difficulty with the policy actions necessary to allow s3.ListObjects. I have set s3:ListObject and s3:ListBucket, but I still get an access denied. The access key I'm using is working for other operations (put, get and delete). My code is more or less the same as the example (replacing my bucket name and so on). I'm using access keys in my .aws/credentials, so it is picking up the same credentials as the other actinos. Many thanks for the help!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "that should be enough, but I can take look at my configuration and share how I did it",
  "id": "55915dc1b4ce4e473250bd9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:01:21.531Z",
  "text": "that should be enough, but I can take look at my configuration and share how I did it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "Any luck?",
  "id": "559166ef98f9c0bc3da0819e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:40:31.939Z",
  "text": "Any luck?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "it&#39;s much like what you can see here: <a href=\"http://stackoverflow.com/questions/6615168/s3-policy-limiting-access-to-only-one-bucket-listing-included\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://stackoverflow.com/questions/6615168/s3-policy-limiting-access-to-only-one-bucket-listing-included</a>",
  "id": "5591670a98f9c0bc3da081a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:40:58.651Z",
  "text": "it's much like what you can see here: http://stackoverflow.com/questions/6615168/s3-policy-limiting-access-to-only-one-bucket-listing-included",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/6615168/s3-policy-limiting-access-to-only-one-bucket-listing-included"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "you can remove the destructive operations and you should be good",
  "id": "55916740b57c03f7556bf7d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:41:52.532Z",
  "text": "you can remove the destructive operations and you should be good",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "in my case I also have write access defined",
  "id": "55916778a3aa0fa2043c7a13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:42:48.600Z",
  "text": "in my case I also have write access defined",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "Ah! Maybe it&#39;s the ACL actions...I&#39;ll give that a shot",
  "id": "55916778a3aa0fa2043c7a14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:42:48.801Z",
  "text": "Ah! Maybe it's the ACL actions...I'll give that a shot",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "what errors do you see when doing the requests?",
  "id": "559167a198f9c0bc3da081b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:43:29.440Z",
  "text": "what errors do you see when doing the requests?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "on a side note, if I wanted to debug the access keys used by the s3 services, where can I find that? I looked around and didn&#39;t see anything obvious.",
  "id": "559167a6666fd9af67369cf8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:43:34.941Z",
  "text": "on a side note, if I wanted to debug the access keys used by the s3 services, where can I find that? I looked around and didn't see anything obvious.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "I&#39;m getting a 403",
  "id": "559167aa98f9c0bc3da081b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:43:38.433Z",
  "text": "I'm getting a 403",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "DEBUG: ListOfObjects returned err: AccessDenied: Access Denied<br>    status code: 403, request id: []",
  "id": "559167c1b4ce4e473250bf57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:44:01.692Z",
  "text": "DEBUG: ListOfObjects returned err: AccessDenied: Access Denied\n\tstatus code: 403, request id: []\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "yes, but if you use the API to list it, you should get some AWS&#39;y errors as well",
  "id": "559167c6b4ce4e473250bf59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:44:06.219Z",
  "text": "yes, but if you use the API to list it, you should get some AWS'y errors as well",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "I used the API to list the error as well, and got the same result",
  "id": "559167efa3aa0fa2043c7a2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:44:47.236Z",
  "text": "I used the API to list the error as well, and got the same result",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "it didn&#39;t help",
  "id": "559167f392e368b167bd1a9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:44:51.426Z",
  "text": "it didn't help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html</a>",
  "id": "5591680792e368b167bd1aa2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:45:11.349Z",
  "text": "http://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "yeah I found that page, but ListObject is not on the page...unless it&#39;s a part of another call?",
  "id": "5591684898f9c0bc3da081d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:46:16.193Z",
  "text": "yeah I found that page, but ListObject is not on the page...unless it's a part of another call?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "I also used the policy simulator to test a listobject on my bucket and it passed",
  "id": "5591687c98f9c0bc3da081e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:47:08.515Z",
  "text": "I also used the policy simulator to test a listobject on my bucket and it passed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "hence my confusion",
  "id": "55916881a3aa0fa2043c7a46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:47:13.524Z",
  "text": "hence my confusion",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I think you confuse AWS list operations with getting the list over HTTP",
  "id": "559168a2b57c03f7556bf80b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:47:46.220Z",
  "text": "I think you confuse AWS list operations with getting the list over HTTP",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "it&#39;s a completely different topic",
  "id": "559168af92e368b167bd1ac0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:47:59.446Z",
  "text": "it's a completely different topic",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "for HTTP you might need to enable website serving",
  "id": "559168c198f9c0bc3da081ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:48:17.832Z",
  "text": "for HTTP you might need to enable website serving",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/HowDoIWebsiteConfiguration.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AmazonS3/latest/dev/HowDoIWebsiteConfiguration.html</a>",
  "id": "5591690ba3aa0fa2043c7a58",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:49:31.332Z",
  "text": "http://docs.aws.amazon.com/AmazonS3/latest/dev/HowDoIWebsiteConfiguration.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AmazonS3/latest/dev/HowDoIWebsiteConfiguration.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "well, what I want to do is list objects from the aws go api",
  "id": "5591699992e368b167bd1ade",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:51:53.943Z",
  "text": "well, what I want to do is list objects from the aws go api",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "ok",
  "id": "559169a0666fd9af67369d3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:52:00.026Z",
  "text": "ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "then just ignore the HTTP stuff",
  "id": "559169b7b4ce4e473250bfc1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:52:23.065Z",
  "text": "then just ignore the HTTP stuff",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "here is an example of what I&#39;m trying to do...I have an api to parse a command-line parameter, and that&#39;s where the bucket name is coming from",
  "id": "559169d3b57c03f7556bf83e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:52:51.063Z",
  "text": "here is an example of what I'm trying to do...I have an api to parse a command-line parameter, and that's where the bucket name is coming from",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "<p>&#39;&#39;&#39;path, err := parseCmdline()<br>    if err != nil {<br>        printHelp()<br>        os.Exit(1)<br>    }</p><pre><code>aws.DefaultConfig.Region = region\n\n<span class=\"keyword\">if</span> lib.IsS3Path(path) {\ns3path,_ := lib.ParseS3Path(path)\nsvc := s3.<span class=\"keyword\">New</span>(nil)\nlogger.Debug(fmt.Sprintf(<span class=\"string\">\"bucket: %s, path: %s\"</span>,s3path.Bucket, s3path.Path))\nparams := &amp;s3.ListObjectsInput{\n    Bucket:       aws.<span class=\"built_in\">String</span>(s3path.Bucket),\n}\nresp, <span class=\"built_in\">err</span> := svc.ListObjects(params)\n<span class=\"keyword\">if</span> <span class=\"built_in\">err</span> != nil {\n  logger.Debug(fmt.Sprintf(<span class=\"string\">\"ListOfObjects returned err: %s\"</span>,<span class=\"built_in\">err</span>))\n  os.<span class=\"keyword\">Exit</span>(<span class=\"number\">1</span>)\n}\nlogger.Debug(fmt.Sprintf(<span class=\"string\">\"File %s\"</span>,resp.Contents))\n} <span class=\"keyword\">else</span> {\n    printHelp()\n    os.<span class=\"keyword\">Exit</span>(<span class=\"number\">1</span>)\n}</code></pre><p>&#39;&#39;&#39;</p>",
  "id": "559169dba3aa0fa2043c7a70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:52:59.051Z",
  "text": "'''path, err := parseCmdline()\n\tif err != nil {\n\t\tprintHelp()\n\t\tos.Exit(1)\n\t}\n\n\taws.DefaultConfig.Region = region\n\n\tif lib.IsS3Path(path) {\n    s3path,_ := lib.ParseS3Path(path)\n    svc := s3.New(nil)\n    logger.Debug(fmt.Sprintf(\"bucket: %s, path: %s\",s3path.Bucket, s3path.Path))\n    params := &s3.ListObjectsInput{\n        Bucket:       aws.String(s3path.Bucket),\n    }\n    resp, err := svc.ListObjects(params)\n    if err != nil {\n      logger.Debug(fmt.Sprintf(\"ListOfObjects returned err: %s\",err))\n      os.Exit(1)\n    }\n    logger.Debug(fmt.Sprintf(\"File %s\",resp.Contents))\n\t} else {\n\t\tprintHelp()\n\t\tos.Exit(1)\n\t}\n'''",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "ah i horked the markdown but you get the idea",
  "id": "559169f798f9c0bc3da0820e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:53:27.892Z",
  "text": "ah i horked the markdown but you get the idea",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "it&#39;s more-or-less the same as the example in the aws go sdk documentation",
  "id": "55916a1892e368b167bd1af6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:54:00.283Z",
  "text": "it's more-or-less the same as the example in the aws go sdk documentation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "I&#39;ve removed all other params to ListObjects, in an attempt to rule out bad params",
  "id": "55916a2ab57c03f7556bf84c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:54:18.698Z",
  "text": "I've removed all other params to ListObjects, in an attempt to rule out bad params",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "I can&#39;t seem to get ListObjects to get past the 403",
  "id": "55916a3798f9c0bc3da0821b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:54:31.240Z",
  "text": "I can't seem to get ListObjects to get past the 403",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "here&#39;s the result when I run it",
  "id": "55916a49b4ce4e473250bfdb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:54:49.068Z",
  "text": "here's the result when I run it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "<p><a href=\"mailto:timbert@samsung-laptop\" rel=\"nofollow\">timbert@samsung-laptop</a> ~/g/s/g/t/s/c/s3ls (master) <a href=\"http://www.carstensinz.de/papers/CP-2005.pdf\" rel=\"nofollow\" target=\"_blank\" class=\"link\">1</a>&gt; ./s3ls -debug s3:tdunnington-testbucket:/test<br>DEBUG: got args &#39;[./s3ls -debug s3:tdunnington-testbucket:/test]&#39;</p><p>DEBUG: bucket: tdunnington-testbucket, path: /test<br>DEBUG: ListOfObjects returned err: AccessDenied: Access Denied<br>    status code: 403, request id: []<br><a href=\"mailto:timbert@samsung-laptop\" rel=\"nofollow\">timbert@samsung-laptop</a> ~/g/s/g/t/s/c/s3ls (master) <a href=\"http://www.carstensinz.de/papers/CP-2005.pdf\" rel=\"nofollow\" target=\"_blank\" class=\"link\">1</a>&gt; </p>",
  "id": "55916a4a666fd9af67369d5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:54:50.271Z",
  "text": "timbert@samsung-laptop ~/g/s/g/t/s/c/s3ls (master) [1]> ./s3ls -debug s3:tdunnington-testbucket:/test\nDEBUG: got args '[./s3ls -debug s3:tdunnington-testbucket:/test]'\n\nDEBUG: bucket: tdunnington-testbucket, path: /test\nDEBUG: ListOfObjects returned err: AccessDenied: Access Denied\n\tstatus code: 403, request id: []\ntimbert@samsung-laptop ~/g/s/g/t/s/c/s3ls (master) [1]> \n",
  "unread": false,
  "urls": [
   {
    "url": "mailto:timbert@samsung-laptop"
   },
   {
    "url": "http://www.carstensinz.de/papers/CP-2005.pdf"
   },
   {
    "url": "mailto:timbert@samsung-laptop"
   },
   {
    "url": "http://www.carstensinz.de/papers/CP-2005.pdf"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "does it work if you grant it all the S3 permissions in the bucket policy?",
  "id": "55916a5892e368b167bd1b04",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:55:04.187Z",
  "text": "does it work if you grant it all the S3 permissions in the bucket policy?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "good question :)",
  "id": "55916a64b4ce4e473250bfe2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:55:16.350Z",
  "text": "good question :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "let me try that",
  "id": "55916a67b57c03f7556bf852",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:55:19.741Z",
  "text": "let me try that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "maybe you are running into some authentication issue, and not authorization",
  "id": "55916a81b57c03f7556bf856",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:55:45.533Z",
  "text": "maybe you are running into some authentication issue, and not authorization",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "well i&#39;ll be",
  "id": "55916a84666fd9af67369d6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:55:48.672Z",
  "text": "well i'll be",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "yeah, that was why i was asking about the api, where does it store the credentials it is using",
  "id": "55916a98a3aa0fa2043c7a9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:56:08.363Z",
  "text": "yeah, that was why i was asking about the api, where does it store the credentials it is using",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-06-29T15:56:31.539Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "you can pass them in multiple ways",
  "id": "55916aac666fd9af67369d6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:56:28.125Z",
  "text": "you can pass them in multiple ways",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "no i know that, but i can&#39;t ascertain what the api is actually seeing when it runs",
  "id": "55916ac5b57c03f7556bf868",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:56:53.737Z",
  "text": "no i know that, but i can't ascertain what the api is actually seeing when it runs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "what is it trying to use for credentials",
  "id": "55916acba3aa0fa2043c7a9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:56:59.849Z",
  "text": "what is it trying to use for credentials",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "how do i debug that?",
  "id": "55916ad892e368b167bd1b1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:57:12.778Z",
  "text": "how do i debug that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "right now my credentials are in ~/.aws/credentials",
  "id": "55916ae5666fd9af67369d80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:57:25.351Z",
  "text": "right now my credentials are in ~/.aws/credentials",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "in theory you might see that by printing the S3 object",
  "id": "55916aed98f9c0bc3da08241",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:57:33.300Z",
  "text": "in theory you might see that by printing the S3 object",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "and the other s3 actions are picking them up",
  "id": "55916aef92e368b167bd1b22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:57:35.040Z",
  "text": "and the other s3 actions are picking them up",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "ah let me see, good ida",
  "id": "55916af6b57c03f7556bf86e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:57:42.817Z",
  "text": "ah let me see, good ida",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "idea even",
  "id": "55916afab4ce4e473250bff0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:57:46.698Z",
  "text": "idea even",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "you can edit previous messages if you press the up arrow",
  "id": "55916b12b57c03f7556bf873",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T15:58:10.477Z",
  "text": "you can edit previous messages if you press the up arrow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "i knew that ;) thanks!",
  "id": "55916b98666fd9af67369d96",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T16:00:24.955Z",
  "text": "i knew that ;) thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "(i mean I really didn&#39;t know that, new to gitter)",
  "id": "55916bbe666fd9af67369d9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T16:01:02.909Z",
  "text": "(i mean I really didn't know that, new to gitter)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "okay, after several iterations, found this to get the current credentials",
  "id": "55916e6fb57c03f7556bf8dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T16:12:31.421Z",
  "text": "okay, after several iterations, found this to get the current credentials",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "val,err := svc.Config.Credentials.Get()",
  "id": "55916e7992e368b167bd1b9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T16:12:41.597Z",
  "text": "val,err := svc.Config.Credentials.Get()",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "if you then print val, you&#39;ll see the current credentials",
  "id": "55916e8cb4ce4e473250c054",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T16:13:00.550Z",
  "text": "if you then print val, you'll see the current credentials",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "and it is getting exactly what i expect",
  "id": "55916e9c92e368b167bd1ba7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T16:13:16.489Z",
  "text": "and it is getting exactly what i expect",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "hmmm....i&#39;m starting to wonder if i have an acl problem...appreciate your help! i&#39;ll not waste any more of your time and see what I can find in my bucket acls",
  "id": "55916ed9666fd9af67369dfc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T16:14:17.762Z",
  "text": "hmmm....i'm starting to wonder if i have an acl problem...appreciate your help! i'll not waste any more of your time and see what I can find in my bucket acls",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tdunnington",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11526988?v=4&s=60",
   "displayName": "Tim Dunnington",
   "gv": "4",
   "id": "55915aac15522ed4b3e306ae",
   "url": "/tdunnington",
   "username": "tdunnington",
   "v": 1
  },
  "html": "Okay, I got it. To list objects inside a bucket, you need ListBucket rights at the <em>bucket</em> level...&#39;arn:aws:s3:::bucket&#39;...<strong>not</strong> &#39;arn:aws:s3:::bucket/*&#39;",
  "id": "55917f28b4ce4e473250c287",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-06-29T17:23:52.629Z",
  "text": "Okay, I got it. To list objects inside a bucket, you need ListBucket rights at the *bucket* level...'arn:aws:s3:::bucket'...**not** 'arn:aws:s3:::bucket/*'",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"tdunnington\" class=\"mention\">@tdunnington</span>  glad you were able to solve the problem you were encountering. Don&#39;t hesitate to ask us again if you run into any oddness using the SDK",
  "id": "5591a47bb4ce4e473250c7c0",
  "issues": [],
  "mentions": [
   {
    "screenName": "tdunnington",
    "userId": "55915aac15522ed4b3e306ae",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2015-06-29T20:03:07.260Z",
  "text": "@tdunnington  glad you were able to solve the problem you were encountering. Don't hesitate to ask us again if you run into any oddness using the SDK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I have a question regarding the way the SDK calls are done, I saw most of them have Input and Output types defined on them",
  "id": "5591a975a3aa0fa2043c83c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-06-29T20:24:21.323Z",
  "text": "I have a question regarding the way the SDK calls are done, I saw most of them have Input and Output types defined on them",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "in some cases, you can use the Output of a call as Input for another one, simply by skipping some fields",
  "id": "5591a992b57c03f7556c0111",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-06-29T20:24:50.148Z",
  "text": "in some cases, you can use the Output of a call as Input for another one, simply by skipping some fields",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "are there any plans, or is there a way to make them compatible at the type level, like by extracting the common attributes in a sort of supertype?",
  "id": "5591a9d1666fd9af6736a63f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-06-29T20:25:53.879Z",
  "text": "are there any plans, or is there a way to make them compatible at the type level, like by extracting the common attributes in a sort of supertype?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "for example: <a href=\"https://godoc.org/github.com/aws/aws-sdk-go/service/autoscaling#LaunchConfiguration\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://godoc.org/github.com/aws/aws-sdk-go/service/autoscaling#LaunchConfiguration</a> and <a href=\"https://godoc.org/github.com/aws/aws-sdk-go/service/autoscaling#CreateLaunchConfigurationInput\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://godoc.org/github.com/aws/aws-sdk-go/service/autoscaling#CreateLaunchConfigurationInput</a>",
  "id": "5591aa3c92e368b167bd239d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-06-29T20:27:40.133Z",
  "text": "for example: https://godoc.org/github.com/aws/aws-sdk-go/service/autoscaling#LaunchConfiguration and https://godoc.org/github.com/aws/aws-sdk-go/service/autoscaling#CreateLaunchConfigurationInput",
  "unread": false,
  "urls": [
   {
    "url": "https://godoc.org/github.com/aws/aws-sdk-go/service/autoscaling#LaunchConfiguration"
   },
   {
    "url": "https://godoc.org/github.com/aws/aws-sdk-go/service/autoscaling#CreateLaunchConfigurationInput"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Correct this was intentional to prevent breaking the SDK if a service API parameters added or removed from the input or output structs. ",
  "id": "5591aaac98f9c0bc3da08bae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-06-29T20:29:32.103Z",
  "text": "Correct this was intentional to prevent breaking the SDK if a service API parameters added or removed from the input or output structs. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "my use case would be in basically an easier way to copy launch configurations from an Output of  a call to an Input of another one",
  "id": "5591aac298f9c0bc3da08bb3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-06-29T20:29:54.612Z",
  "text": "my use case would be in basically an easier way to copy launch configurations from an Output of  a call to an Input of another one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "or any resource for that matter, LaunchConfiguration is just an example in here",
  "id": "5591aaf192e368b167bd23ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-06-29T20:30:41.298Z",
  "text": "or any resource for that matter, LaunchConfiguration is just an example in here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Would a valid workaround be for your codebase to have a helper function to copy the fields from one struct to the other selecting the fields which matter. ",
  "id": "5591ab60b4ce4e473250c909",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-06-29T20:32:32.810Z",
  "text": "Would a valid workaround be for your codebase to have a helper function to copy the fields from one struct to the other selecting the fields which matter. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "that&#39;s kind of what I have in mind at the moment",
  "id": "5591ab79a3aa0fa2043c840d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-06-29T20:32:57.708Z",
  "text": "that's kind of what I have in mind at the moment",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I think that will probably be your best workaround.",
  "id": "5591aba9a3aa0fa2043c8413",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-06-29T20:33:45.388Z",
  "text": "I think that will probably be your best workaround.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "thanks",
  "id": "5591abb1b57c03f7556c0162",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-06-29T20:33:53.661Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thenrich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943087?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943087?v=4&s=60",
   "displayName": "Tim Henrich",
   "gv": "4",
   "id": "559289a515522ed4b3e31660",
   "url": "/thenrich",
   "username": "thenrich",
   "v": 1
  },
  "html": "I&#39;m occasionally receiving an internal server error from the DynamoDB Query method. Digging through the code it looks like all services have a default retry count of 3, but it seems like it might be retrying as quickly as possible without any delays. Should I be implementing an exponential back-off myself?",
  "id": "559291ebb4ce4e473250ddcf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T12:56:11.165Z",
  "text": "I'm occasionally receiving an internal server error from the DynamoDB Query method. Digging through the code it looks like all services have a default retry count of 3, but it seems like it might be retrying as quickly as possible without any delays. Should I be implementing an exponential back-off myself?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "hi <span data-link-type=\"mention\" data-screen-name=\"thenrich\" class=\"mention\">@thenrich</span> dynamodb should actually be retying up to 10 times with using exponential backoff",
  "id": "5592c8adb57c03f7556c1ee9",
  "issues": [],
  "mentions": [
   {
    "screenName": "thenrich",
    "userId": "559289a515522ed4b3e31660",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T16:49:49.060Z",
  "text": "hi @thenrich dynamodb should actually be retying up to 10 times with using exponential backoff",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "would you mind pasting the effort message you&#39;re getting?  Are you seeing the error message multiple times or just once?",
  "id": "5592c8e392e368b167bd41d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T16:50:43.571Z",
  "text": "would you mind pasting the effort message you're getting?  Are you seeing the error message multiple times or just once?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thenrich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943087?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943087?v=4&s=60",
   "displayName": "Tim Henrich",
   "gv": "4",
   "id": "559289a515522ed4b3e31660",
   "url": "/thenrich",
   "username": "thenrich",
   "v": 1
  },
  "html": "I unfortunately only logged <code>err.Error()</code>: <code>ERROR: 2015/06/25 21:26:01 logging.go:11: Internal server error</code>",
  "id": "5592cfe692e368b167bd4320",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:20:38.063Z",
  "text": "I unfortunately only logged `err.Error()`: `ERROR: 2015/06/25 21:26:01 logging.go:11: Internal server error`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thenrich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943087?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943087?v=4&s=60",
   "displayName": "Tim Henrich",
   "gv": "4",
   "id": "559289a515522ed4b3e31660",
   "url": "/thenrich",
   "username": "thenrich",
   "v": 1
  },
  "html": "The process was running for several days before it encountered this, so it&#39;s a bit difficult to reproduce",
  "id": "5592d018b57c03f7556c2067",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:21:28.890Z",
  "text": "The process was running for several days before it encountered this, so it's a bit difficult to reproduce",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Ah I see. was that err.Error() a SDK error or a custom type?  I would of expected a code and message to be included",
  "id": "5592d043a3aa0fa2043ca4ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:22:11.748Z",
  "text": "Ah I see. was that err.Error() a SDK error or a custom type?  I would of expected a code and message to be included",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "or does logging.go just extract the <code>awserr.Error.Message()</code> ?",
  "id": "5592d067666fd9af6736c6d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:22:47.381Z",
  "text": "or does logging.go just extract the `awserr.Error.Message()` ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thenrich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943087?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943087?v=4&s=60",
   "displayName": "Tim Henrich",
   "gv": "4",
   "id": "559289a515522ed4b3e31660",
   "url": "/thenrich",
   "username": "thenrich",
   "v": 1
  },
  "html": "That code wasn&#39;t doing a type assertion to awserr, it was just the <code>err.Error()</code> from <code>dynamodb.Query()</code>",
  "id": "5592d136b4ce4e473250e99f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:26:14.456Z",
  "text": "That code wasn't doing a type assertion to awserr, it was just the `err.Error()` from `dynamodb.Query()`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thenrich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943087?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943087?v=4&s=60",
   "displayName": "Tim Henrich",
   "gv": "4",
   "id": "559289a515522ed4b3e31660",
   "url": "/thenrich",
   "username": "thenrich",
   "v": 1
  },
  "html": "Which I&#39;m now seeing I probably should&#39;ve done",
  "id": "5592d15292e368b167bd4369",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:26:42.244Z",
  "text": "Which I'm now seeing I probably should've done",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Oh interesting are you sure you&#39;re code base is up to date? because all service operations will return a <code>awserr.Error</code> type as the generic <code>error</code> interface type. So the <code>err.Error()</code> would of still printed the expected message",
  "id": "5592d18ea3aa0fa2043ca536",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:27:42.952Z",
  "text": "Oh interesting are you sure you're code base is up to date? because all service operations will return a `awserr.Error` type as the generic `error` interface type. So the `err.Error()` would of still printed the expected message",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thenrich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943087?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943087?v=4&s=60",
   "displayName": "Tim Henrich",
   "gv": "4",
   "id": "559289a515522ed4b3e31660",
   "url": "/thenrich",
   "username": "thenrich",
   "v": 1
  },
  "html": "I&#39;ll try updating",
  "id": "5592d1b6b57c03f7556c20a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:28:22.914Z",
  "text": "I'll try updating",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thenrich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943087?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943087?v=4&s=60",
   "displayName": "Tim Henrich",
   "gv": "4",
   "id": "559289a515522ed4b3e31660",
   "url": "/thenrich",
   "username": "thenrich",
   "v": 1
  },
  "html": "Possibly not -- I have it vendored so it&#39;s at least a few weeks old.",
  "id": "5592d1c5b4ce4e473250e9bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:28:37.078Z",
  "text": "Possibly not -- I have it vendored so it's at least a few weeks old.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "unless we have a hole in the SDK where an generic error is making its way from the request without being wrapped.",
  "id": "5592d1ceb4ce4e473250e9be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:28:46.876Z",
  "text": "unless we have a hole in the SDK where an generic error is making its way from the request without being wrapped.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "That might be the case.  I know error retrying has been significantly improved a few weeks ago. Just after the awserr.New() error constructors were added.",
  "id": "5592d20198f9c0bc3da0abdb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:29:37.891Z",
  "text": "That might be the case.  I know error retrying has been significantly improved a few weeks ago. Just after the awserr.New() error constructors were added.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thenrich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943087?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943087?v=4&s=60",
   "displayName": "Tim Henrich",
   "gv": "4",
   "id": "559289a515522ed4b3e31660",
   "url": "/thenrich",
   "username": "thenrich",
   "v": 1
  },
  "html": "Ok, I&#39;m checking the source I have to see how up to date it is",
  "id": "5592d245b4ce4e473250e9d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:30:45.126Z",
  "text": "Ok, I'm checking the source I have to see how up to date it is",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thenrich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943087?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943087?v=4&s=60",
   "displayName": "Tim Henrich",
   "gv": "4",
   "id": "559289a515522ed4b3e31660",
   "url": "/thenrich",
   "username": "thenrich",
   "v": 1
  },
  "html": "Hm, not seeing awserr.New() -- I&#39;ll update and see if I can reproduce it ",
  "id": "5592d2bf92e368b167bd43af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:32:47.942Z",
  "text": "Hm, not seeing awserr.New() -- I'll update and see if I can reproduce it ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thenrich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943087?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943087?v=4&s=60",
   "displayName": "Tim Henrich",
   "gv": "4",
   "id": "559289a515522ed4b3e31660",
   "url": "/thenrich",
   "username": "thenrich",
   "v": 1
  },
  "html": "Thanks!",
  "id": "5592d2c3a3aa0fa2043ca56d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:32:51.342Z",
  "text": "Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "no problem, awserr.New will be in <code>aws/awserr</code> package",
  "id": "5592d2e198f9c0bc3da0ac02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:33:21.665Z",
  "text": "no problem, awserr.New will be in `aws/awserr` package",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thenrich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943087?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943087?v=4&s=60",
   "displayName": "Tim Henrich",
   "gv": "4",
   "id": "559289a515522ed4b3e31660",
   "url": "/thenrich",
   "username": "thenrich",
   "v": 1
  },
  "html": "Now I&#39;ve got it -- cool. We&#39;ll see what happens this time :)",
  "id": "5592d3db92e368b167bd43e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:37:31.939Z",
  "text": "Now I've got it -- cool. We'll see what happens this time :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "great! hopefully that fixes the issues you were having. Let us know how it goes",
  "id": "5592d3f9b57c03f7556c2109",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:38:01.098Z",
  "text": "great! hopefully that fixes the issues you were having. Let us know how it goes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/thenrich",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/943087?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/943087?v=4&s=60",
   "displayName": "Tim Henrich",
   "gv": "4",
   "id": "559289a515522ed4b3e31660",
   "url": "/thenrich",
   "username": "thenrich",
   "v": 1
  },
  "html": "Will do, thanks again",
  "id": "5592d417b57c03f7556c2113",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-06-30T17:38:31.062Z",
  "text": "Will do, thanks again",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/milescrabill",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=60",
   "displayName": "Miles Crabill",
   "gv": "3",
   "id": "559b057715522ed4b3e38324",
   "url": "/milescrabill",
   "username": "milescrabill",
   "v": 1
  },
  "html": "How do I get resources for a cloudformation?",
  "id": "559b05861c1634674f8a55a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-06T22:47:34.529Z",
  "text": "How do I get resources for a cloudformation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"milescrabill\" class=\"mention\">@milescrabill</span> could you explain a little bit more about what you are looking for?",
  "id": "559b069e5331f9985a7fab4a",
  "issues": [],
  "mentions": [
   {
    "screenName": "milescrabill",
    "userId": "559b057715522ed4b3e38324",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-06T22:52:14.613Z",
  "text": "@milescrabill could you explain a little bit more about what you are looking for?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/milescrabill",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=60",
   "displayName": "Miles Crabill",
   "gv": "3",
   "id": "559b057715522ed4b3e38324",
   "url": "/milescrabill",
   "username": "milescrabill",
   "v": 1
  },
  "html": "I&#39;m looking for somethings similar to the Resources tab of the Cloudformation console",
  "id": "559b0c8a52cc8c664f50e762",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-06T23:17:30.465Z",
  "text": "I'm looking for somethings similar to the Resources tab of the Cloudformation console",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/milescrabill",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=60",
   "displayName": "Miles Crabill",
   "gv": "3",
   "id": "559b057715522ed4b3e38324",
   "url": "/milescrabill",
   "username": "milescrabill",
   "v": 1
  },
  "html": "oh - I can get StackResources for a given Stack, never mind",
  "id": "559b0cb21c1634674f8a5649",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-06T23:18:10.839Z",
  "text": "oh - I can get StackResources for a given Stack, never mind",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/milescrabill",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=60",
   "displayName": "Miles Crabill",
   "gv": "3",
   "id": "559b057715522ed4b3e38324",
   "url": "/milescrabill",
   "username": "milescrabill",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"lsegal\" class=\"mention\">@lsegal</span> Any plans for a DescribeStackResourcesPages?",
  "id": "559c118852cc8c664f5102ce",
  "issues": [],
  "mentions": [
   {
    "screenName": "lsegal",
    "userId": "541c750e163965c9bc205b15",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-07T17:51:04.972Z",
  "text": "@lsegal Any plans for a DescribeStackResourcesPages?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/milescrabill",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=60",
   "displayName": "Miles Crabill",
   "gv": "3",
   "id": "559b057715522ed4b3e38324",
   "url": "/milescrabill",
   "username": "milescrabill",
   "v": 1
  },
  "html": "I&#39;m &quot;Throttling: Rate exceeded&quot; on ListStackResourcesPages",
  "id": "559c119a52cc8c664f5102d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-07T17:51:22.913Z",
  "text": "I'm \"Throttling: Rate exceeded\" on ListStackResourcesPages",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/milescrabill",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=60",
   "displayName": "Miles Crabill",
   "gv": "3",
   "id": "559b057715522ed4b3e38324",
   "url": "/milescrabill",
   "username": "milescrabill",
   "v": 1
  },
  "html": "I&#39;m getting*",
  "id": "559c119f52cc8c664f5102d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-07T17:51:27.094Z",
  "text": "I'm getting*",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"milescrabill\" class=\"mention\">@milescrabill</span> what are you looking to paginate in DescribeStackResource?",
  "id": "559c1fb1e9c8fd6779dc68d1",
  "issues": [],
  "mentions": [
   {
    "screenName": "milescrabill",
    "userId": "559b057715522ed4b3e38324",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-07T18:51:29.712Z",
  "text": "@milescrabill what are you looking to paginate in DescribeStackResource?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "Pages operations are only added to operations that have pagination tokens. DescribeStackResource only describes a single stack resource at a time, so there are no plans to create that method currently.",
  "id": "559c20ae52cc8c664f5104ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-07T18:55:42.556Z",
  "text": "Pages operations are only added to operations that have pagination tokens. DescribeStackResource only describes a single stack resource at a time, so there are no plans to create that method currently.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/milescrabill",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=60",
   "displayName": "Miles Crabill",
   "gv": "3",
   "id": "559b057715522ed4b3e38324",
   "url": "/milescrabill",
   "username": "milescrabill",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"lsegal\" class=\"mention\">@lsegal</span> could you give me more info on the rate limit / throttling?",
  "id": "559c22c6e9c8fd6779dc6934",
  "issues": [],
  "mentions": [
   {
    "screenName": "lsegal",
    "userId": "541c750e163965c9bc205b15",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-07T19:04:38.787Z",
  "text": "@lsegal could you give me more info on the rate limit / throttling?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"milescrabill\" class=\"mention\">@milescrabill</span> what kind of info are you looking for? Throttling errors typically occur if you&#39;re sending too many requests at once.",
  "id": "559c309f0edc4b6a7987151f",
  "issues": [],
  "mentions": [
   {
    "screenName": "milescrabill",
    "userId": "559b057715522ed4b3e38324",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-07T20:03:43.101Z",
  "text": "@milescrabill what kind of info are you looking for? Throttling errors typically occur if you're sending too many requests at once.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/milescrabill",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=60",
   "displayName": "Miles Crabill",
   "gv": "3",
   "id": "559b057715522ed4b3e38324",
   "url": "/milescrabill",
   "username": "milescrabill",
   "v": 1
  },
  "html": "I was just wondering what the limit was, but I got around it by waiting + retrying",
  "id": "559c39bf52cc8c664f510925",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-07T20:42:39.412Z",
  "text": "I was just wondering what the limit was, but I got around it by waiting + retrying",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"milescrabill\" class=\"mention\">@milescrabill</span> throttling times depend by service so it would be difficult to know. You can certainly make a forum post on the CloudFormation forums to ask.",
  "id": "559c3bc252cc8c664f510979",
  "issues": [],
  "mentions": [
   {
    "screenName": "milescrabill",
    "userId": "559b057715522ed4b3e38324",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-07T20:51:14.624Z",
  "text": "@milescrabill throttling times depend by service so it would be difficult to know. You can certainly make a forum post on the CloudFormation forums to ask.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/milescrabill",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4430892?v=3&s=60",
   "displayName": "Miles Crabill",
   "gv": "3",
   "id": "559b057715522ed4b3e38324",
   "url": "/milescrabill",
   "username": "milescrabill",
   "v": 1
  },
  "html": "thanks for the help <span data-link-type=\"mention\" data-screen-name=\"lsegal\" class=\"mention\">@lsegal</span> lsg",
  "id": "559c696d21e1d6761f2a1e8a",
  "issues": [],
  "mentions": [
   {
    "screenName": "lsegal",
    "userId": "541c750e163965c9bc205b15",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-08T00:06:05.805Z",
  "text": "thanks for the help @lsegal lsg",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "Hi guys. I noticed <code>PutObject</code> doesn\u2019t return a Location in the response like <code>CompleteMultipartUpload</code> does. While this is fine, I would like to know the best way to construct the url to the thing I just uploaded. What would that be?",
  "id": "55a4402ba598407d5fa848d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-07-13T22:48:11.728Z",
  "text": "Hi guys. I noticed `PutObject` doesn\u2019t return a Location in the response like `CompleteMultipartUpload` does. While this is fine, I would like to know the best way to construct the url to the thing I just uploaded. What would that be?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "(this is for the s3 api) ",
  "id": "55a44057c1adf9245132b98a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-07-13T22:48:55.668Z",
  "text": "(this is for the s3 api) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dwieeb\" class=\"mention\">@dwieeb</span> you can (and probably should) use the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">s3manager</a> to do your uploads, which will give you a Location. This is how we do it in the manager, if you still want PutObject, though: <a href=\"https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3manager/upload.go#L357-L369\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3manager/upload.go#L357-L369</a>",
  "id": "55a441dd6f087e6752f9f559",
  "issues": [],
  "mentions": [
   {
    "screenName": "dwieeb",
    "userId": "5564bfc715522ed4b3e0f857",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2015-07-13T22:55:25.851Z",
  "text": "@dwieeb you can (and probably should) use the [s3manager](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager.html) to do your uploads, which will give you a Location. This is how we do it in the manager, if you still want PutObject, though: https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3manager/upload.go#L357-L369",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager.html"
   },
   {
    "url": "https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3manager/upload.go#L357-L369"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"lsegal\" class=\"mention\">@lsegal</span> geez, that was dead simple. Thanks! Great work on this sdk",
  "id": "55a53a03a4e7bc47651e9616",
  "issues": [],
  "mentions": [
   {
    "screenName": "lsegal",
    "userId": "541c750e163965c9bc205b15",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2015-07-14T16:34:11.769Z",
  "text": "@lsegal geez, that was dead simple. Thanks! Great work on this sdk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "(using the s3manager, that is) ",
  "id": "55a53a2e4eb6e30337fb9f27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-07-14T16:34:54.531Z",
  "text": "(using the s3manager, that is) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dwieeb\" class=\"mention\">@dwieeb</span> np!",
  "id": "55a53a57b3483c3002310e82",
  "issues": [],
  "mentions": [
   {
    "screenName": "dwieeb",
    "userId": "5564bfc715522ed4b3e0f857",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 4,
  "sent": "2015-07-14T16:35:35.000Z",
  "text": "@dwieeb np!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harshavardhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/622699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/622699?v=4&s=60",
   "displayName": "Harshavardhana",
   "gv": "4",
   "id": "5492d44cdb8155e6700e0a2f",
   "url": "/harshavardhana",
   "username": "harshavardhana",
   "v": 24
  },
  "html": "<p>I recently saw an issue while writing custom signature-v4 - </p><p>x-amz-date:20150711T032572Z   in the following format as part of the signature v4 request s3.amazonaws.com seems to work completely fine. isn&#39;t it true that this date should be stricter and parsed properly? </p><p>Here is the request and reply </p>",
  "id": "55a5786de60033aa58b179ad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-14T21:00:29.234Z",
  "text": "I recently saw an issue while writing custom signature-v4 - \n\nx-amz-date:20150711T032572Z   in the following format as part of the signature v4 request s3.amazonaws.com seems to work completely fine. isn't it true that this date should be stricter and parsed properly? \n\nHere is the request and reply \n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harshavardhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/622699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/622699?v=4&s=60",
   "displayName": "Harshavardhana",
   "gv": "4",
   "id": "5492d44cdb8155e6700e0a2f",
   "url": "/harshavardhana",
   "username": "harshavardhana",
   "v": 24
  },
  "html": "<pre><code>[ <span class=\"string\">'GET\\n/\\n\\nhost:s3.amazonaws.com:443\\nx-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\\nx-amz-date:20150711T032572Z\\n\\nhost;x-amz-content-sha256;x-amz-date\\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'</span>,\n<span class=\"string\">'host;x-amz-content-sha256;x-amz-date'</span> ]\nGET\n/\n<span class=\"label\">\nhost:</span>s3.amazonaws.<span class=\"string\">com:</span><span class=\"number\">443</span>\nx-amz-content-<span class=\"string\">sha256:</span>e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\nx-amz-<span class=\"string\">date:</span><span class=\"number\">20150711</span>T032572Z\n\nhost;x-amz-content-sha256;x-amz-date\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\nAWS4-HMAC-SHA256 Credential=&lt;Access Key Removed&gt;<span class=\"regexp\">/20150711/</span>us-east-<span class=\"number\">1</span><span class=\"regexp\">/s3/</span>aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=cb5baf2509e0be11b2d54a0f954e5f45b61011e2f8c1f76f2433f050ff745eb1\n{ <span class=\"string\">name:</span> <span class=\"string\">'andoria'</span>, <span class=\"string\">creationDate:</span> <span class=\"string\">'2015-05-29T04:26:53.000Z'</span> }\n{ <span class=\"string\">name:</span> <span class=\"string\">'ferenginar'</span>, <span class=\"string\">creationDate:</span> <span class=\"string\">'2015-05-01T00:54:05.000Z'</span> }\n{ <span class=\"string\">name:</span> <span class=\"string\">'hyperbotics'</span>,\n<span class=\"string\">creationDate:</span> <span class=\"string\">'2015-05-17T10:21:04.000Z'</span> }\n{ <span class=\"string\">name:</span> <span class=\"string\">'khitomer'</span>, <span class=\"string\">creationDate:</span> <span class=\"string\">'2015-05-17T10:22:27.000Z'</span> }\n{ <span class=\"string\">name:</span> <span class=\"string\">'windows-testing'</span>,\n<span class=\"string\">creationDate:</span> <span class=\"string\">'2015-06-12T04:36:57.000Z'</span> }</code></pre>",
  "id": "55a5787a17582ac167f4025f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-14T21:00:42.847Z",
  "text": "\n~~~\n[ 'GET\\n/\\n\\nhost:s3.amazonaws.com:443\\nx-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\\nx-amz-date:20150711T032572Z\\n\\nhost;x-amz-content-sha256;x-amz-date\\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',\n'host;x-amz-content-sha256;x-amz-date' ]\nGET\n/\n\nhost:s3.amazonaws.com:443\nx-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\nx-amz-date:20150711T032572Z\n\nhost;x-amz-content-sha256;x-amz-date\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\nAWS4-HMAC-SHA256 Credential=<Access Key Removed>/20150711/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=cb5baf2509e0be11b2d54a0f954e5f45b61011e2f8c1f76f2433f050ff745eb1\n{ name: 'andoria', creationDate: '2015-05-29T04:26:53.000Z' }\n{ name: 'ferenginar', creationDate: '2015-05-01T00:54:05.000Z' }\n{ name: 'hyperbotics',\ncreationDate: '2015-05-17T10:21:04.000Z' }\n{ name: 'khitomer', creationDate: '2015-05-17T10:22:27.000Z' }\n{ name: 'windows-testing',\ncreationDate: '2015-06-12T04:36:57.000Z' }\n~~~",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-07-14T21:01:17.994Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harshavardhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/622699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/622699?v=4&s=60",
   "displayName": "Harshavardhana",
   "gv": "4",
   "id": "5492d44cdb8155e6700e0a2f",
   "url": "/harshavardhana",
   "username": "harshavardhana",
   "v": 24
  },
  "html": "<a href=\"http://play.golang.org/p/IIah2QBNR3\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://play.golang.org/p/IIah2QBNR3</a> , this talks about valid and invalid dates",
  "id": "55a5789617582ac167f40265",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-14T21:01:10.532Z",
  "text": "http://play.golang.org/p/IIah2QBNR3 , this talks about valid and invalid dates",
  "unread": false,
  "urls": [
   {
    "url": "http://play.golang.org/p/IIah2QBNR3"
   }
  ],
  "v": 2
 },
 {
  "editedAt": "2015-07-14T21:02:08.116Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harshavardhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/622699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/622699?v=4&s=60",
   "displayName": "Harshavardhana",
   "gv": "4",
   "id": "5492d44cdb8155e6700e0a2f",
   "url": "/harshavardhana",
   "username": "harshavardhana",
   "v": 24
  },
  "html": "just wanted to report this, found it to be quite strange.. since i assumed x-amz-date should be iso8601Format in stricter sense",
  "id": "55a578bc2c7ce75c0a89102d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-14T21:01:48.926Z",
  "text": "just wanted to report this, found it to be quite strange.. since i assumed x-amz-date should be iso8601Format in stricter sense",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"harshavardhana\" class=\"mention\">@harshavardhana</span> it would be up to S3 to decide how to validate that input. I can&#39;t answer why (or if) &quot;72&quot; would be a valid second range.",
  "id": "55a57a04e810027406edb10e",
  "issues": [],
  "mentions": [
   {
    "screenName": "harshavardhana",
    "userId": "5492d44cdb8155e6700e0a2f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-14T21:07:16.070Z",
  "text": "@harshavardhana it would be up to S3 to decide how to validate that input. I can't answer why (or if) \"72\" would be a valid second range.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harshavardhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/622699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/622699?v=4&s=60",
   "displayName": "Harshavardhana",
   "gv": "4",
   "id": "5492d44cdb8155e6700e0a2f",
   "url": "/harshavardhana",
   "username": "harshavardhana",
   "v": 24
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"lsegal\" class=\"mention\">@lsegal</span> ",
  "id": "55a57a9ae810027406edb12b",
  "issues": [],
  "mentions": [
   {
    "screenName": "lsegal",
    "userId": "541c750e163965c9bc205b15",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-14T21:09:46.623Z",
  "text": "@lsegal ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harshavardhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/622699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/622699?v=4&s=60",
   "displayName": "Harshavardhana",
   "gv": "4",
   "id": "5492d44cdb8155e6700e0a2f",
   "url": "/harshavardhana",
   "username": "harshavardhana",
   "v": 24
  },
  "html": "thanks sorry for off topic posting.. ",
  "id": "55a57aa1c132f78d06ad315f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-14T21:09:53.603Z",
  "text": "thanks sorry for off topic posting.. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "no problem. It might be worth bringing that up on the <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=24\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Amazon S3 forums</a>.",
  "id": "55a57ac3e60033aa58b17a2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2015-07-14T21:10:27.445Z",
  "text": "no problem. It might be worth bringing that up on the [Amazon S3 forums](https://forums.aws.amazon.com/forum.jspa?forumID=24).",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=24"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harshavardhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/622699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/622699?v=4&s=60",
   "displayName": "Harshavardhana",
   "gv": "4",
   "id": "5492d44cdb8155e6700e0a2f",
   "url": "/harshavardhana",
   "username": "harshavardhana",
   "v": 24
  },
  "html": "yes i tried there, no replies :D",
  "id": "55a57ad1c132f78d06ad316a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-07-14T21:10:41.519Z",
  "text": "yes i tried there, no replies :D",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harshavardhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/622699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/622699?v=4&s=60",
   "displayName": "Harshavardhana",
   "gv": "4",
   "id": "5492d44cdb8155e6700e0a2f",
   "url": "/harshavardhana",
   "username": "harshavardhana",
   "v": 24
  },
  "html": "was wondering if someone saw this behavior, which i really find it strange. ",
  "id": "55a57aeb2c7ce75c0a89109e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-07-14T21:11:07.155Z",
  "text": "was wondering if someone saw this behavior, which i really find it strange. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "Certainly seems strange.",
  "id": "55a57afbf2f123ed05c6c46d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2015-07-14T21:11:23.698Z",
  "text": "Certainly seems strange.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "Anyone have any advice for migrating from a fairly old version of the AWS Go SDK to the latest?",
  "id": "55a6c140ea224d36097759be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-07-15T20:23:28.491Z",
  "text": "Anyone have any advice for migrating from a fairly old version of the AWS Go SDK to the latest?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "did a quick internet search and didn&#39;t see any migration guides for the Go SDK",
  "id": "55a6c158ea224d36097759c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-07-15T20:23:52.531Z",
  "text": "did a quick internet search and didn't see any migration guides for the Go SDK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jdonboch\" class=\"mention\">@jdonboch</span> About how old is the SDK you&#39;re using?",
  "id": "55a6c15d003280a056fa767d",
  "issues": [],
  "mentions": [
   {
    "screenName": "jdonboch",
    "userId": "55a6c1285e0d51bd787b7c3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2015-07-15T20:23:57.918Z",
  "text": "@jdonboch About how old is the SDK you're using?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "not exactly sure, it was based on the project when it was still under awslab accounts",
  "id": "55a6c189d5362aa97eb3942b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-07-15T20:24:41.795Z",
  "text": "not exactly sure, it was based on the project when it was still under awslab accounts",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jdonboch\" class=\"mention\">@jdonboch</span> there shouldn&#39;t be <em>too</em> many changes between those releases.",
  "id": "55a6c1b486b503e7467ae1cc",
  "issues": [],
  "mentions": [
   {
    "screenName": "jdonboch",
    "userId": "55a6c1285e0d51bd787b7c3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2015-07-15T20:25:24.710Z",
  "text": "@jdonboch there shouldn't be *too* many changes between those releases.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "ok got ya, the biggest changes to occur since then probably would be error handling",
  "id": "55a6c1cf003280a056fa768a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-07-15T20:25:51.286Z",
  "text": "ok got ya, the biggest changes to occur since then probably would be error handling",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "aws.Error struct was removed in favor of awserr.Error interface",
  "id": "55a6c1e29f8c816a4c13b900",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-07-15T20:26:10.623Z",
  "text": "aws.Error struct was removed in favor of awserr.Error interface",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "ok, i haven&#39;t tried switching them out, are the namespaces fairly the same? i guess by your reply im getting the impression it shouldn&#39;t be too bad",
  "id": "55a6c220003280a056fa7699",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-07-15T20:27:12.136Z",
  "text": "ok, i haven't tried switching them out, are the namespaces fairly the same? i guess by your reply im getting the impression it shouldn't be too bad",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Other than updating your import path from <a href=\"http://github.com/awslabs/aws-sdk-go/x\" rel=\"nofollow\" target=\"_blank\" class=\"link\">github.com/awslabs/aws-sdk-go/x</a> to <a href=\"http://github.com/aws/aws-sdk-go/x\" rel=\"nofollow\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/x</a> I don&#39;t expect too many changes ",
  "id": "55a6c256003280a056fa76a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2015-07-15T20:28:06.081Z",
  "text": "Other than updating your import path from github.com/awslabs/aws-sdk-go/x to github.com/aws/aws-sdk-go/x I don't expect too many changes ",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/awslabs/aws-sdk-go/x"
   },
   {
    "url": "http://github.com/aws/aws-sdk-go/x"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "The import package names changed (because of the repo names) but other than that it shouldn&#39;t be too bad.",
  "id": "55a6c256003280a056fa76a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-15T20:28:06.828Z",
  "text": "The import package names changed (because of the repo names) but other than that it shouldn't be too bad.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "We actually held off on a full migration guide because there wasn&#39;t enough to put in a document like that",
  "id": "55a6c27a003280a056fa76b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-15T20:28:42.627Z",
  "text": "We actually held off on a full migration guide because there wasn't enough to put in a document like that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "But do let us know if you run into any issues, we can create a small guide on the wiki if need be!",
  "id": "55a6c294d5362aa97eb39459",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-15T20:29:08.640Z",
  "text": "But do let us know if you run into any issues, we can create a small guide on the wiki if need be!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "sure, thanks for the quick responses!",
  "id": "55a6c2b719007a694c571a52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-15T20:29:43.772Z",
  "text": "sure, thanks for the quick responses!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> <span data-link-type=\"mention\" data-screen-name=\"lsegal\" class=\"mention\">@lsegal</span> the migration was super simple, only a few small changes, thanks again",
  "id": "55a79ba9e881cbd76356e10f",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   },
   {
    "screenName": "lsegal",
    "userId": "541c750e163965c9bc205b15",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-16T11:55:21.866Z",
  "text": "@jasdel @lsegal the migration was super simple, only a few small changes, thanks again",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "are there any plans to provide some kind of out of the box support  for custom CloudFormation resources?",
  "id": "55a7b3d98f0333fe6bf76613",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-16T13:38:33.632Z",
  "text": "are there any plans to provide some kind of out of the box support  for custom CloudFormation resources?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-sns.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-sns.html</a>",
  "id": "55a7b41790d684505d588e7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-16T13:39:35.259Z",
  "text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-sns.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-sns.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "on one of my pet projects I&#39;m downloading from s3 then running a golang binary from a javascript lambda function, in turn invoked by a custom CloudFormation resource",
  "id": "55a7b4f31a5d2fe3207418cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-16T13:43:15.267Z",
  "text": "on one of my pet projects I'm downloading from s3 then running a golang binary from a javascript lambda function, in turn invoked by a custom CloudFormation resource",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-07-16T13:44:10.668Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "the golang code is able to see all the event data passed to the lambda function, and can take action on it",
  "id": "55a7b51cafbc665466c56e00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-16T13:43:56.797Z",
  "text": "the golang code is able to see all the event data passed to the lambda function, and can take action on it",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2015-07-16T13:48:50.892Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "but cloudformation blocks indefinitely expecting some output on the S3 URL, and I&#39;m now trying to implement that, but it would be nice to have this in the sdk",
  "id": "55a7b55bafbc665466c56e05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-16T13:44:59.548Z",
  "text": "but cloudformation blocks indefinitely expecting some output on the S3 URL, and I'm now trying to implement that, but it would be nice to have this in the sdk",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "Just out of curiosity, what is the reasoning behind making every value in <code>Input</code> structs a pointer? Even strings",
  "id": "55a7d449afbc665466c57318",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-16T15:56:57.671Z",
  "text": "Just out of curiosity, what is the reasoning behind making every value in `Input` structs a pointer? Even strings",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dwieeb\" class=\"mention\">@dwieeb</span> the reason is that it makes it possible to test for missing values, which will automatically become nil pointers",
  "id": "55a7d62a90d684505d5893bc",
  "issues": [],
  "mentions": [
   {
    "screenName": "dwieeb",
    "userId": "5564bfc715522ed4b3e0f857",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-16T16:04:58.162Z",
  "text": "@dwieeb the reason is that it makes it possible to test for missing values, which will automatically become nil pointers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> that seems obvious, but even required fields are <code>*string</code>, I assume for consistency ",
  "id": "55a7e4c010602d6e64f79530",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-16T17:07:12.026Z",
  "text": "@cristim that seems obvious, but even required fields are `*string`, I assume for consistency ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "I am two weeks into go, so just trying to gather as much info as possible ",
  "id": "55a7e4dc1a5d2fe3207420fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-16T17:07:40.965Z",
  "text": "I am two weeks into go, so just trying to gather as much info as possible ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dwieeb\" class=\"mention\">@dwieeb</span> those are pointers also for consistency, and to prevent breaking the SDK in conditions when required fields become optional in the future.",
  "id": "55a7e4eee399097631789ce5",
  "issues": [],
  "mentions": [
   {
    "screenName": "dwieeb",
    "userId": "5564bfc715522ed4b3e0f857",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-16T17:07:58.681Z",
  "text": "@dwieeb those are pointers also for consistency, and to prevent breaking the SDK in conditions when required fields become optional in the future.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Though there is a helper method <code>aws.String()</code> which will simplify getting the address of a string literal inline. That function pretty much only exists because it is not valid to take the address of a literal. <code>&amp;&quot;mystring&quot;</code>",
  "id": "55a7e52c8f0333fe6bf76e9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-16T17:09:00.063Z",
  "text": "Though there is a helper method `aws.String()` which will simplify getting the address of a string literal inline. That function pretty much only exists because it is not valid to take the address of a literal. `&\"mystring\"`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> okay, cool. Yeah, I\u2019ve used <code>aws.String()</code> in a few places. I suppose there\u2019s also a performance benefit when passing these structs around functions",
  "id": "55a7e5708f0333fe6bf76ea3",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-16T17:10:08.450Z",
  "text": "@jasdel okay, cool. Yeah, I\u2019ve used `aws.String()` in a few places. I suppose there\u2019s also a performance benefit when passing these structs around functions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I haven&#39;t profiled that so not sure if there is a performance benefit or not, since most of the structs are small.",
  "id": "55a7e5bf90d684505d589654",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-16T17:11:27.326Z",
  "text": "I haven't profiled that so not sure if there is a performance benefit or not, since most of the structs are small.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> ,  CloudFormation resources aren&#39;t on our plate currently.  I might be able to answer some questions you&#39;re having with the CloudFormation resource problem you&#39;re having though. Are you running into an issue extracting information from the resource?",
  "id": "55a7f07aafbc665466c577a5",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-16T17:57:14.431Z",
  "text": "@cristim ,  CloudFormation resources aren't on our plate currently.  I might be able to answer some questions you're having with the CloudFormation resource problem you're having though. Are you running into an issue extracting information from the resource?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jdonboch\" class=\"mention\">@jdonboch</span> Great glad it was pretty simple!  Let us know if you run into any issue with the new version of the SDK.",
  "id": "55a7f09910602d6e64f796fb",
  "issues": [],
  "mentions": [
   {
    "screenName": "jdonboch",
    "userId": "55a6c1285e0d51bd787b7c3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-16T17:57:45.501Z",
  "text": "@jdonboch Great glad it was pretty simple!  Let us know if you run into any issue with the new version of the SDK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thanks, but I&#39;m still playing with it, I&#39;ll get back to you if I have any questions",
  "id": "55a804f08f0333fe6bf7731c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2015-07-16T19:24:31.882Z",
  "text": "@jasdel thanks, but I'm still playing with it, I'll get back to you if I have any questions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pquerna",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/110123?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/110123?v=4&s=60",
   "displayName": "Paul Querna",
   "gv": "4",
   "id": "55919d1215522ed4b3e30b43",
   "url": "/pquerna",
   "username": "pquerna",
   "v": 2
  },
  "html": "Hi I was wondering if there is a recommended package for interacting with the ec2 metadata service?  Looked in the SDK but didn&#39;t see any functions related to hitting it.",
  "id": "55aedefa14ea54755e72c0f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-22T00:08:26.003Z",
  "text": "Hi I was wondering if there is a recommended package for interacting with the ec2 metadata service?  Looked in the SDK but didn't see any functions related to hitting it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lsegal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/686?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/686?v=4&s=60",
   "displayName": "Loren Segal",
   "gv": "4",
   "id": "541c750e163965c9bc205b15",
   "url": "/lsegal",
   "username": "lsegal",
   "v": 5
  },
  "html": "We actually have some pull requests in the works to address the metadata service. There&#39;s no recommendation yet but stay tuned :)",
  "id": "55aedf41615eb46a117373a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-22T00:09:37.070Z",
  "text": "We actually have some pull requests in the works to address the metadata service. There's no recommendation yet but stay tuned :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pquerna",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/110123?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/110123?v=4&s=60",
   "displayName": "Paul Querna",
   "gv": "4",
   "id": "55919d1215522ed4b3e30b43",
   "url": "/pquerna",
   "username": "pquerna",
   "v": 2
  },
  "html": "yeah, see them.  don&#39;t look... that active. hrm.",
  "id": "55aedfdb3c1189fb1dc1134e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-22T00:12:11.611Z",
  "text": "yeah, see them.  don't look... that active. hrm.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"pquerna\" class=\"mention\">@pquerna</span> is there additional functionality you are looking for?",
  "id": "55afe39816ac52ff650f54a2",
  "issues": [],
  "mentions": [
   {
    "screenName": "pquerna",
    "userId": "55919d1215522ed4b3e30b43",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-22T18:40:24.940Z",
  "text": "@pquerna is there additional functionality you are looking for?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "In the EC2 metadata service",
  "id": "55afe3a86e982043058ae5af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-22T18:40:40.235Z",
  "text": "In the EC2 metadata service",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "is there a way to define the region when connecting to a service, like for example sns, without the need of an environment variable?",
  "id": "55b02c9916ac52ff650f6011",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-22T23:51:53.961Z",
  "text": "is there a way to define the region when connecting to a service, like for example sns, without the need of an environment variable?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "never mind",
  "id": "55b02d19f2cdad46058b02a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-22T23:54:01.119Z",
  "text": "never mind",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/FreekingDean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=60",
   "displayName": "Dean Galvin",
   "gv": "4",
   "id": "5537d93f15522ed4b3df5f9f",
   "url": "/FreekingDean",
   "username": "FreekingDean",
   "v": 11
  },
  "html": "What is the best way to check what error DynamoDB (or i suppose any aws sdk) is returning?",
  "id": "55b2527aa8abbaff79d6c308",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-24T14:58:02.901Z",
  "text": "What is the best way to check what error DynamoDB (or i suppose any aws sdk) is returning?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/FreekingDean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=60",
   "displayName": "Dean Galvin",
   "gv": "4",
   "id": "5537d93f15522ed4b3df5f9f",
   "url": "/FreekingDean",
   "username": "FreekingDean",
   "v": 11
  },
  "html": "what kind of error",
  "id": "55b25288b7522a5d584bd926",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-24T14:58:16.199Z",
  "text": "what kind of error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"FreekingDean\" class=\"mention\">@FreekingDean</span> are you looking for a list of possible errors that the AWS services could return, or just how to access the returned error?  If the latter checkout the <a href=\"https://github.com/aws/aws-sdk-go/wiki/Getting-Started-Error-Handling\" rel=\"nofollow\" target=\"_blank\" class=\"link\">error handling wiki</a> page",
  "id": "55b26f9061d39fd716064c58",
  "issues": [],
  "mentions": [
   {
    "screenName": "FreekingDean",
    "userId": "5537d93f15522ed4b3df5f9f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-24T17:02:08.090Z",
  "text": "@FreekingDean are you looking for a list of possible errors that the AWS services could return, or just how to access the returned error?  If the latter checkout the [error handling wiki](https://github.com/aws/aws-sdk-go/wiki/Getting-Started-Error-Handling) page",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/wiki/Getting-Started-Error-Handling"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "In brief, <code>awserr.Error</code> interface provides two convenience methods Code() and Message(). <code>Code()</code> is a uniform key that you can use for switch statements to determine how to handle the error.  <code>Message()</code> is a freeform text for humans.",
  "id": "55b26ff6bab860d81689dfc6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-24T17:03:50.013Z",
  "text": "In brief, `awserr.Error` interface provides two convenience methods Code() and Message(). `Code()` is a uniform key that you can use for switch statements to determine how to handle the error.  `Message()` is a freeform text for humans.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/FreekingDean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=60",
   "displayName": "Dean Galvin",
   "gv": "4",
   "id": "5537d93f15522ed4b3df5f9f",
   "url": "/FreekingDean",
   "username": "FreekingDean",
   "v": 11
  },
  "html": "Sorry jasdel I am looking for a list of possible errors.",
  "id": "55b270c961d39fd716064c83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-24T17:07:21.347Z",
  "text": "Sorry jasdel I am looking for a list of possible errors.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/FreekingDean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=60",
   "displayName": "Dean Galvin",
   "gv": "4",
   "id": "5537d93f15522ed4b3df5f9f",
   "url": "/FreekingDean",
   "username": "FreekingDean",
   "v": 11
  },
  "html": "Specifically <code>ProvisionedThroughputExceededException</code>",
  "id": "55b270e7bab860d81689dfec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-24T17:07:51.867Z",
  "text": "Specifically `ProvisionedThroughputExceededException`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/FreekingDean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=60",
   "displayName": "Dean Galvin",
   "gv": "4",
   "id": "5537d93f15522ed4b3df5f9f",
   "url": "/FreekingDean",
   "username": "FreekingDean",
   "v": 11
  },
  "html": "I do not know what package it is in if any at all",
  "id": "55b270fbe923d83d6d4680c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-24T17:08:11.951Z",
  "text": "I do not know what package it is in if any at all",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "The SDK doesn&#39;t maintain a list of possible errors, the best place know which errors a service can return is from its AWS API docs. In the case of DynamoDB, <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ErrorHandling.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ErrorHandling.html</a>",
  "id": "55b2712ae923d83d6d4680cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-24T17:08:58.320Z",
  "text": "The SDK doesn't maintain a list of possible errors, the best place know which errors a service can return is from its AWS API docs. In the case of DynamoDB, http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ErrorHandling.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ErrorHandling.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "for the error you mentioned: ",
  "id": "55b2713769ee33730f443698",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-24T17:09:11.574Z",
  "text": "for the error you mentioned: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "You exceeded your maximum allowed provisioned throughput for a table or for one or more global secondary indexes. To view performance metrics for provisioned throughput vs. consumed throughput, go to the Amazon CloudWatch console.",
  "id": "55b2713861d39fd716064c97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-24T17:09:12.448Z",
  "text": "You exceeded your maximum allowed provisioned throughput for a table or for one or more global secondary indexes. To view performance metrics for provisioned throughput vs. consumed throughput, go to the Amazon CloudWatch console.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/FreekingDean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=60",
   "displayName": "Dean Galvin",
   "gv": "4",
   "id": "5537d93f15522ed4b3df5f9f",
   "url": "/FreekingDean",
   "username": "FreekingDean",
   "v": 11
  },
  "html": "I get the error, I want to catch it and create an exponential backoff loop around that error",
  "id": "55b2716369ee33730f4436a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2015-07-24T17:09:55.448Z",
  "text": "I get the error, I want to catch it and create an exponential backoff loop around that error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-07-24T17:11:15.227Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/FreekingDean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=60",
   "displayName": "Dean Galvin",
   "gv": "4",
   "id": "5537d93f15522ed4b3df5f9f",
   "url": "/FreekingDean",
   "username": "FreekingDean",
   "v": 11
  },
  "html": "<pre><code class=\"go\"><span class=\"keyword\">if</span> throughput_exceded {\n  this();\n} <span class=\"keyword\">else</span> {\n  that();\n}</code></pre>",
  "id": "55b2718261d39fd716064ca3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-24T17:10:26.057Z",
  "text": "```go\nif throughput_exceded {\n  this();\n} else {\n  that();\n}\n```",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Ah great, in that case doing the following:<pre><code class=\"go\">res, err := svc.DeleteItem(...)\n<span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n    <span class=\"keyword\">if</span> a, ok := err.(awserr.Error); ok &amp;&amp; a.Code() == <span class=\"string\">`ProvisionedThroughputExceededException`</span>{\n        this()\n    } <span class=\"keyword\">else</span> {\n        that()\n    }\n}</code></pre>",
  "id": "55b2720fcfe8c23a6dfa7666",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-24T17:12:47.867Z",
  "text": "Ah great, in that case doing the following:\n```go\nres, err := svc.DeleteItem(...)\nif err != nil {\n    if a, ok := err.(awserr.Error); ok && a.Code() == `ProvisionedThroughputExceededException`{\n        this()\n    } else {\n        that()\n    }\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "does this make sense?",
  "id": "55b27218e923d83d6d4680ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-24T17:12:56.301Z",
  "text": "does this make sense?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/FreekingDean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=60",
   "displayName": "Dean Galvin",
   "gv": "4",
   "id": "5537d93f15522ed4b3df5f9f",
   "url": "/FreekingDean",
   "username": "FreekingDean",
   "v": 11
  },
  "html": "perfect sense that is exactly what I was looking for thank you!",
  "id": "55b2723e69ee33730f4436bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2015-07-24T17:13:34.586Z",
  "text": "perfect sense that is exactly what I was looking for thank you!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "no problem, hope it helps, let us know if you have any other questions",
  "id": "55b27266bab860d81689e01b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2015-07-24T17:14:14.346Z",
  "text": "no problem, hope it helps, let us know if you have any other questions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "does anyone have an example of consuming pre-signed S3 URLs for PUT? I keep getting  errors about signatures since apparently my PUT request is incorrect",
  "id": "55b4a12acfe8c23a6dfa9d64",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-26T08:58:18.130Z",
  "text": "does anyone have an example of consuming pre-signed S3 URLs for PUT? I keep getting  errors about signatures since apparently my PUT request is incorrect",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "it&#39;s caused by the fact that golang doesn&#39;t automatically escape the colons in the S3 signed URL path, which I&#39;ve seen curl is doing ",
  "id": "55b4d99f52d85d450f4032c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-26T12:59:11.196Z",
  "text": "it's caused by the fact that golang doesn't automatically escape the colons in the S3 signed URL path, which I've seen curl is doing ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "failing /cloudformation-custom-resource-response-useast1/arn:aws:cloudformation:us-east-1 becomes /cloudformation-custom-resource-response-useast1/arn%3Aaws%3Acloudformation%3Aus-east-1 in curl",
  "id": "55b4d9dd61d39fd716067611",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-26T13:00:13.236Z",
  "text": "failing /cloudformation-custom-resource-response-useast1/arn:aws:cloudformation:us-east-1 becomes /cloudformation-custom-resource-response-useast1/arn%3Aaws%3Acloudformation%3Aus-east-1 in curl",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "and curl works",
  "id": "55b4d9e7e923d83d6d46abaa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-26T13:00:23.050Z",
  "text": "and curl works",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "funnily enough the URL comes escaped and golang&#39;s url unescapes it",
  "id": "55b4db61e923d83d6d46abc0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-26T13:06:41.781Z",
  "text": "funnily enough the URL comes escaped and golang's url unescapes it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "so ruby, curl and javascript don&#39;t change it",
  "id": "55b4e091cfe8c23a6dfaa089",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-26T13:28:49.204Z",
  "text": "so ruby, curl and javascript don't change it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "perhaps AWS should allow it unescaped as well... <span data-link-type=\"mention\" data-screen-name=\"lsegal\" class=\"mention\">@lsegal</span> would this be worthy of a feature request?",
  "id": "55b4e16952d85d450f403333",
  "issues": [],
  "mentions": [
   {
    "screenName": "lsegal",
    "userId": "541c750e163965c9bc205b15",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2015-07-26T13:32:25.133Z",
  "text": "perhaps AWS should allow it unescaped as well... @lsegal would this be worthy of a feature request?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I finally sorted it out using  Opaque http request URLs",
  "id": "55b4fe2261d39fd716067849",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2015-07-26T15:34:58.512Z",
  "text": "I finally sorted it out using  Opaque http request URLs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-07-26T15:43:13.169Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<pre><code>    <span class=\"tag\">req</span>, <span class=\"rule\"><span class=\"attribute\">err </span>:<span class=\"value\">= http.<span class=\"function\">NewRequest</span>(<span class=\"string\">\"PUT\"</span>, event.ResponseURL, strings.<span class=\"function\">NewReader</span>(<span class=\"function\">string</span>(responseBody)))\n    req.URL.Opaque = strings.<span class=\"function\">Replace</span>(URL.Path, <span class=\"string\">\":\"</span>, <span class=\"string\">\"%3A\"</span>, -<span class=\"number\">1</span>)\n    req.URL.Opaque = strings.<span class=\"function\">Replace</span>(req.URL.Opaque, <span class=\"string\">\"|\"</span>, <span class=\"string\">\"%7C\"</span>, -<span class=\"number\">1</span>)\n\n    req.Header.<span class=\"function\">Set</span>(<span class=\"string\">\"content-length\"</span>, strconv.<span class=\"function\">Itoa</span>(<span class=\"function\">len</span>(responseBody)))\n\n    client := &amp;http.Client{}\n    resp, err := client.<span class=\"function\">Do</span>(req)\n\n    if err != nil {\n        fmt.<span class=\"function\">Println</span>(<span class=\"string\">\"Failed to set CloudFormation state\"</span>, err.<span class=\"function\">Error</span>())\n    }\n    defer resp.Body.<span class=\"function\">Close</span>()\n\n    fmt.<span class=\"function\">Println</span>(<span class=\"string\">\"response Status:\"</span>, resp.Status)\n    fmt.<span class=\"function\">Println</span>(<span class=\"string\">\"response Headers:\"</span>, resp.Header)\n    body, _ := ioutil.<span class=\"function\">ReadAll</span>(resp.Body)\n    fmt.<span class=\"function\">Println</span>(<span class=\"string\">\"response Body:\"</span>, <span class=\"function\">string</span>(body))</span></span></code></pre>",
  "id": "55b4fefdcfe8c23a6dfaa26f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2015-07-26T15:38:37.798Z",
  "text": "```\t\n\treq, err := http.NewRequest(\"PUT\", event.ResponseURL, strings.NewReader(string(responseBody)))\n\treq.URL.Opaque = strings.Replace(URL.Path, \":\", \"%3A\", -1)\n\treq.URL.Opaque = strings.Replace(req.URL.Opaque, \"|\", \"%7C\", -1)\n\n\treq.Header.Set(\"content-length\", strconv.Itoa(len(responseBody)))\n\n\tclient := &http.Client{}\n\tresp, err := client.Do(req)\n\n\tif err != nil {\n\t\tfmt.Println(\"Failed to set CloudFormation state\", err.Error())\n\t}\n\tdefer resp.Body.Close()\n\n\tfmt.Println(\"response Status:\", resp.Status)\n\tfmt.Println(\"response Headers:\", resp.Header)\n\tbody, _ := ioutil.ReadAll(resp.Body)\n\tfmt.Println(\"response Body:\", string(body))\n```",
  "unread": false,
  "urls": [],
  "v": 6
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> thanks for posting your issue.  Go is a little bit more strict about what will be escaped when using URLs. Generally if the URL spec does not require a character to be escaped go will use the unescaped version.  Is the error you get with the <code>:</code> and <code>|</code> values invalid signature ?",
  "id": "55b692d2bda88f9578e63e9a",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2015-07-27T20:21:38.642Z",
  "text": "@cristim thanks for posting your issue.  Go is a little bit more strict about what will be escaped when using URLs. Generally if the URL spec does not require a character to be escaped go will use the unescaped version.  Is the error you get with the `:` and `|` values invalid signature ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> exactly, the signature fails",
  "id": "55b7bf5eb49857ca22382588",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-28T17:43:58.092Z",
  "text": "@jasdel exactly, the signature fails",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span>, for now i think your workaround is the best method, but I&#39;m curious if we can remove escaping of <code>:</code>and <code>|</code> all together in these conditions. The signature is failing because it was signed with the escaped version, if the SDK were able to sign and transmit the requests with the unescaped version the request might succeed.",
  "id": "55b7d7114c04f0cc22e70b12",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2015-07-28T19:25:05.119Z",
  "text": "Thanks @cristim, for now i think your workaround is the best method, but I'm curious if we can remove escaping of `:`and `|` all together in these conditions. The signature is failing because it was signed with the escaped version, if the SDK were able to sign and transmit the requests with the unescaped version the request might succeed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jjeffery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/458924?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/458924?v=4&s=60",
   "displayName": "John Jeffery",
   "gv": "4",
   "id": "55b9c0e40fc9f982beab7dcc",
   "url": "/jjeffery",
   "username": "jjeffery",
   "v": 9
  },
  "html": "Hi all. I submitted a pull request <span data-link-type=\"issue\" data-issue=\"316\" class=\"issue\">#316</span> a few weeks ago that implemented support for SimpleDB. I notice that a lot of other pull requests have been accepted, but this one has not. I&#39;m just wondering if anyone is able to provide me with some feedback. Are there any changes I can make to make the PR acceptable? I&#39;m happy to work on it. Or maybe SimpleDB support is not a priority at the moment?",
  "id": "55b9c1d1aaa7fab9633e0104",
  "issues": [
   {
    "number": "316"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2015-07-30T06:18:57.834Z",
  "text": "Hi all. I submitted a pull request #316 a few weeks ago that implemented support for SimpleDB. I notice that a lot of other pull requests have been accepted, but this one has not. I'm just wondering if anyone is able to provide me with some feedback. Are there any changes I can make to make the PR acceptable? I'm happy to work on it. Or maybe SimpleDB support is not a priority at the moment?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"jjeffery\" class=\"mention\">@jjeffery</span> thank you for the request, and apologies for the slow response getting back to you.  We are reviewing the PR, and thank you very much for taking the time to submit it. We will get back to you as soon as we can with feedback.",
  "id": "55ba5fb4a0587bc54d68b815",
  "issues": [],
  "mentions": [
   {
    "screenName": "jjeffery",
    "userId": "55b9c0e40fc9f982beab7dcc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2015-07-30T17:32:36.877Z",
  "text": "Hi @jjeffery thank you for the request, and apologies for the slow response getting back to you.  We are reviewing the PR, and thank you very much for taking the time to submit it. We will get back to you as soon as we can with feedback.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jjeffery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/458924?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/458924?v=4&s=60",
   "displayName": "John Jeffery",
   "gv": "4",
   "id": "55b9c0e40fc9f982beab7dcc",
   "url": "/jjeffery",
   "username": "jjeffery",
   "v": 9
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>. No problems at all -- I don&#39;t want to hurry you. Please let me know if there is anything I can do to make the PR better -- I&#39;m keen to help.",
  "id": "55ba962b12f77ab279a94a5a",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2015-07-30T21:24:59.089Z",
  "text": "Thanks @jasdel. No problems at all -- I don't want to hurry you. Please let me know if there is anything I can do to make the PR better -- I'm keen to help.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"jjeffery\" class=\"mention\">@jjeffery</span> we are always glad to receive community feedback, and PRs.",
  "id": "55ba96ab8deffbc44d8ddd9f",
  "issues": [],
  "mentions": [
   {
    "screenName": "jjeffery",
    "userId": "55b9c0e40fc9f982beab7dcc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2015-07-30T21:27:07.224Z",
  "text": "Thanks @jjeffery we are always glad to receive community feedback, and PRs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/hngkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=60",
   "displayName": "Henning Kristensen",
   "gv": "3",
   "id": "55bfdb250fc9f982beac0e72",
   "url": "/hngkr",
   "username": "hngkr",
   "v": 1
  },
  "html": "I have a stupid question regarding how to change/build aws-sdk-go. I&#39;m new to go, so bear with me. In the repo, I have a sneaking suspicion that this file might come from some other source? apis/dynamodb/2012-08-10/api-2.json",
  "id": "55bfdd06eff8f1d77cc30412",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-08-03T21:28:38.164Z",
  "text": "I have a stupid question regarding how to change/build aws-sdk-go. I'm new to go, so bear with me. In the repo, I have a sneaking suspicion that this file might come from some other source? apis/dynamodb/2012-08-10/api-2.json",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/hngkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=60",
   "displayName": "Henning Kristensen",
   "gv": "3",
   "id": "55bfdb250fc9f982beac0e72",
   "url": "/hngkr",
   "username": "hngkr",
   "v": 1
  },
  "html": "I&#39;m asking because there&#39;s a ScalarAttributeType in that json file - that governs the attribute types for DynamoDB, and that type does not include &#39;M&#39;, just &#39;S&#39;, &#39;N&#39; and &#39;B&#39;",
  "id": "55bfdd7e9fb911ea3129eafc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-08-03T21:30:38.516Z",
  "text": "I'm asking because there's a ScalarAttributeType in that json file - that governs the attribute types for DynamoDB, and that type does not include 'M', just 'S', 'N' and 'B'",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"hngkr\" class=\"mention\">@hngkr</span> Those API json files define what API operations are available and the Input/Output structures for them. Generally these definition files are shared between each language&#39;s AWS SDKs. In this case, <code>ScalarAttributeType</code> is an enumerable string type which can take the values M,S,N or B. These are available as constants in <code>dynamodb.ScalarAttributeTypeS</code>,  <code>dynamodb.ScalarAttributeTypeM</code>, <code>dynamodb.ScalarAttributeTypeN</code>, and <code>dynamodb.ScalarAttributeTypeB</code>.",
  "id": "55bfe3167a6037e67c596176",
  "issues": [],
  "mentions": [
   {
    "screenName": "hngkr",
    "userId": "55bfdb250fc9f982beac0e72",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2015-08-03T21:54:30.652Z",
  "text": "Hi @hngkr Those API json files define what API operations are available and the Input/Output structures for them. Generally these definition files are shared between each language's AWS SDKs. In this case, `ScalarAttributeType` is an enumerable string type which can take the values M,S,N or B. These are available as constants in `dynamodb.ScalarAttributeTypeS`,  `dynamodb.ScalarAttributeTypeM`, `dynamodb.ScalarAttributeTypeN`, and `dynamodb.ScalarAttributeTypeB`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "In order to ensure backwards compatibility with API&#39;s the enum&#39;s type is not used and string constants are created instead in the pattern of {Type}{EnumValue}",
  "id": "55bfe34937816be77caf77ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2015-08-03T21:55:21.791Z",
  "text": "In order to ensure backwards compatibility with API's the enum's type is not used and string constants are created instead in the pattern of {Type}{EnumValue}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Ah, now i see in your issue <span data-link-type=\"issue\" data-issue=\"333\" class=\"issue\">#333</span>, the &#39;M&#39; is not defined as a valid value.",
  "id": "55bfe39b68c869d67cf00fa2",
  "issues": [
   {
    "number": "333"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T21:56:43.166Z",
  "text": "Ah, now i see in your issue #333, the 'M' is not defined as a valid value.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/hngkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=60",
   "displayName": "Henning Kristensen",
   "gv": "3",
   "id": "55bfdb250fc9f982beac0e72",
   "url": "/hngkr",
   "username": "hngkr",
   "v": 1
  },
  "html": "Yes, I tried opening an issue - were not sure what timezone you guys were operating in",
  "id": "55bfe3b47a6037e67c59619a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T21:57:08.020Z",
  "text": "Yes, I tried opening an issue - were not sure what timezone you guys were operating in",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/hngkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=60",
   "displayName": "Henning Kristensen",
   "gv": "3",
   "id": "55bfdb250fc9f982beac0e72",
   "url": "/hngkr",
   "username": "hngkr",
   "v": 1
  },
  "html": "And yes... No M, which is what I&#39;m going to use for a customer.",
  "id": "55bfe3c8eff8f1d77cc3052b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T21:57:28.121Z",
  "text": "And yes... No M, which is what I'm going to use for a customer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "The Reason <code>M</code> is not being accepted is because ScalarAttributeType requires scalars such as numbers, strings, or boolean types. M represents Map is not a scalar",
  "id": "55bfe42f7a6037e67c5961b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T21:59:11.732Z",
  "text": "The Reason `M` is not being accepted is because ScalarAttributeType requires scalars such as numbers, strings, or boolean types. M represents Map is not a scalar",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Are you looking to set a Hash or Range key, or create a scheme for table? Those values can only be scalars types, Maps are not valid types for those.",
  "id": "55bfe4fa7a6037e67c5961d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T22:02:34.888Z",
  "text": "Are you looking to set a Hash or Range key, or create a scheme for table? Those values can only be scalars types, Maps are not valid types for those.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/hngkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=60",
   "displayName": "Henning Kristensen",
   "gv": "3",
   "id": "55bfdb250fc9f982beac0e72",
   "url": "/hngkr",
   "username": "hngkr",
   "v": 1
  },
  "html": "Creating a schema - nothing fancy with hash/range keys. It seems possible in Boto3, but not in the NodeJS API.",
  "id": "55bfe5ba9fb911ea3129ec4b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T22:05:46.873Z",
  "text": "Creating a schema - nothing fancy with hash/range keys. It seems possible in Boto3, but not in the NodeJS API.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/hngkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=60",
   "displayName": "Henning Kristensen",
   "gv": "3",
   "id": "55bfdb250fc9f982beac0e72",
   "url": "/hngkr",
   "username": "hngkr",
   "v": 1
  },
  "html": "Ah-well... I&#39;m not too sure about boto3 either",
  "id": "55bfe6912c1b3bec31987972",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T22:09:21.922Z",
  "text": "Ah-well... I'm not too sure about boto3 either",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Generally you shouldn&#39;t need to create a scheme for records unless they are intended to be searchable with hash or range keys. ",
  "id": "55bfe6a0eff8f1d77cc305ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T22:09:36.525Z",
  "text": "Generally you shouldn't need to create a scheme for records unless they are intended to be searchable with hash or range keys. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/hngkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=60",
   "displayName": "Henning Kristensen",
   "gv": "3",
   "id": "55bfdb250fc9f982beac0e72",
   "url": "/hngkr",
   "username": "hngkr",
   "v": 1
  },
  "html": "OK - that might be the solution. ",
  "id": "55bfe70f7a6037e67c596229",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T22:11:27.221Z",
  "text": "OK - that might be the solution. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "check out, <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html</a> if you haven&#39;t already, it provides some really good information how how best to define your data model for Dynamodb",
  "id": "55bfe74768c869d67cf0104b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T22:12:23.337Z",
  "text": "check out, http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html if you haven't already, it provides some really good information how how best to define your data model for Dynamodb",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/hngkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=60",
   "displayName": "Henning Kristensen",
   "gv": "3",
   "id": "55bfdb250fc9f982beac0e72",
   "url": "/hngkr",
   "username": "hngkr",
   "v": 1
  },
  "html": "I guess that I&#39;m in an SQL-mindset - that probably will have to change. Thanks for the pointer.",
  "id": "55bfe7957a6037e67c596239",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T22:13:41.142Z",
  "text": "I guess that I'm in an SQL-mindset - that probably will have to change. Thanks for the pointer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/hngkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=60",
   "displayName": "Henning Kristensen",
   "gv": "3",
   "id": "55bfdb250fc9f982beac0e72",
   "url": "/hngkr",
   "username": "hngkr",
   "v": 1
  },
  "html": "I&#39;ve closed the issue again. Thanks for great advice.",
  "id": "55bfe8807a6037e67c596250",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T22:17:36.405Z",
  "text": "I've closed the issue again. Thanks for great advice.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "If you are looking for relational database <a href=\"http://aws.amazon.com/rds/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Amazon Relational Database Service</a> may be a good solutions. ",
  "id": "55bfe8a5eff8f1d77cc305dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T22:18:13.775Z",
  "text": "If you are looking for relational database [Amazon Relational Database Service](http://aws.amazon.com/rds/) may be a good solutions. ",
  "unread": false,
  "urls": [
   {
    "url": "http://aws.amazon.com/rds/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "no problem, let us know if you have any other questions or feedback",
  "id": "55bfe8b37a6037e67c596257",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T22:18:27.944Z",
  "text": "no problem, let us know if you have any other questions or feedback",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/hngkr",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2076174?v=3&s=60",
   "displayName": "Henning Kristensen",
   "gv": "3",
   "id": "55bfdb250fc9f982beac0e72",
   "url": "/hngkr",
   "username": "hngkr",
   "v": 1
  },
  "html": "We&#39;re explicitly looking at DynamoDB for a brand-new, exciting project at Philips - and I just got the first table created now ;-) Thanks again. I&#39;m a very happy (but not very NOSQL-savvy) customer.",
  "id": "55bfeb062c1b3bec31987a1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-08-03T22:28:22.360Z",
  "text": "We're explicitly looking at DynamoDB for a brand-new, exciting project at Philips - and I just got the first table created now ;-) Thanks again. I'm a very happy (but not very NOSQL-savvy) customer.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"hngkr\" class=\"mention\">@hngkr</span> it would be nice if you can contribute some sample code, I&#39;ll also try to get started with dynamo in a few days or so.",
  "id": "55c38e784e42d518111ff5ea",
  "issues": [],
  "mentions": [
   {
    "screenName": "hngkr",
    "userId": "55bfdb250fc9f982beac0e72",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2015-08-06T16:42:32.768Z",
  "text": "@hngkr it would be nice if you can contribute some sample code, I'll also try to get started with dynamo in a few days or so.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "So it seems like the only thing in Go that implements <code>WriterAt</code> is <code>File</code>. I want to be able to download straight to []byte, and ultimately to string. How would I go about doing that? ",
  "id": "55c52199aac97ada66dd1256",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-07T21:22:33.857Z",
  "text": "So it seems like the only thing in Go that implements `WriterAt` is `File`. I want to be able to download straight to []byte, and ultimately to string. How would I go about doing that? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dwieeb\" class=\"mention\">@dwieeb</span> Initially I would suggest using an <code>os.File</code> to download to, but if you&#39;re usecase needs in memory buffer I&#39;d suggest something like <a href=\"http://play.golang.org/p/PwHuxVCqbz\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://play.golang.org/p/PwHuxVCqbz</a> ",
  "id": "55c537acaac97ada66dd1492",
  "issues": [],
  "mentions": [
   {
    "screenName": "dwieeb",
    "userId": "5564bfc715522ed4b3e0f857",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-07T22:56:44.269Z",
  "text": "@dwieeb Initially I would suggest using an `os.File` to download to, but if you're usecase needs in memory buffer I'd suggest something like http://play.golang.org/p/PwHuxVCqbz ",
  "unread": false,
  "urls": [
   {
    "url": "http://play.golang.org/p/PwHuxVCqbz"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "sorry that should of been, <a href=\"http://play.golang.org/p/k9CaoWp1NB\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://play.golang.org/p/k9CaoWp1NB</a>",
  "id": "55c53a9f21801cd866ca4e68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-08-07T23:09:19.136Z",
  "text": "sorry that should of been, http://play.golang.org/p/k9CaoWp1NB",
  "unread": false,
  "urls": [
   {
    "url": "http://play.golang.org/p/k9CaoWp1NB"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/anxiousmodernman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/396004?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/396004?v=4&s=60",
   "displayName": "Coleman McFarland",
   "gv": "4",
   "id": "5531c7bb15522ed4b3df2e88",
   "url": "/anxiousmodernman",
   "username": "anxiousmodernman",
   "v": 7
  },
  "html": "<p>I am having some trouble doing a simple upload to S3 with this lib, and I need a nudge in the right direction. I get the error: </p><pre><code>SignatureDoesNotMatch The request signature we calculated does not match the signature you provided. <span class=\"operator\"><span class=\"keyword\">Check</span> your <span class=\"keyword\">key</span> <span class=\"keyword\">and</span> signing method. &lt;nil&gt;\nSignatureDoesNotMatch The request signature we calculated does <span class=\"keyword\">not</span> <span class=\"keyword\">match</span> the signature you provided. <span class=\"keyword\">Check</span> your <span class=\"keyword\">key</span> <span class=\"keyword\">and</span> signing method. <span class=\"number\">403</span></span></code></pre><p>I&#39;m fairly confident that the keys I have set up are admins (for testing) and should be able to write to the bucket. The code I&#39;m using is here: <a href=\"https://gist.github.com/anxiousmodernman/e128e3d4b4f3a8057c02\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/anxiousmodernman/e128e3d4b4f3a8057c02</a></p>",
  "id": "55c78a3c8f067d637598a748",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-08-09T17:13:32.149Z",
  "text": "I am having some trouble doing a simple upload to S3 with this lib, and I need a nudge in the right direction. I get the error: \n```\nSignatureDoesNotMatch The request signature we calculated does not match the signature you provided. Check your key and signing method. <nil>\nSignatureDoesNotMatch The request signature we calculated does not match the signature you provided. Check your key and signing method. 403\n```\n\nI'm fairly confident that the keys I have set up are admins (for testing) and should be able to write to the bucket. The code I'm using is here: https://gist.github.com/anxiousmodernman/e128e3d4b4f3a8057c02\n\n",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/anxiousmodernman/e128e3d4b4f3a8057c02"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "hi <span data-link-type=\"mention\" data-screen-name=\"anxiousmodernman\" class=\"mention\">@anxiousmodernman</span> Initially i suggest turning on logging with ",
  "id": "55c7bf0b21801cd866ca75aa",
  "issues": [],
  "mentions": [
   {
    "screenName": "anxiousmodernman",
    "userId": "5531c7bb15522ed4b3df2e88",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-08-09T20:58:51.925Z",
  "text": "hi @anxiousmodernman Initially i suggest turning on logging with ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<pre><code class=\"go\">svc := s3.New(aws.NewConfig().WithLogLevel(aws.LogDebugWithSigning)</code></pre>This will log your request, and the information the SDK used to sign it. ",
  "id": "55c7bf7c0c29567545d971fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-08-09T21:00:44.227Z",
  "text": "```go\nsvc := s3.New(aws.NewConfig().WithLogLevel(aws.LogDebugWithSigning)\n```\nThis will log your request, and the information the SDK used to sign it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/anxiousmodernman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/396004?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/396004?v=4&s=60",
   "displayName": "Coleman McFarland",
   "gv": "4",
   "id": "5531c7bb15522ed4b3df2e88",
   "url": "/anxiousmodernman",
   "username": "anxiousmodernman",
   "v": 7
  },
  "html": "Thank you much",
  "id": "55c7bfa921801cd866ca75b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-08-09T21:01:29.360Z",
  "text": "Thank you much",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "In the debug log check if if the path is escaping in a way you&#39;re not expecting it to be. e.g the object key",
  "id": "55c7bfd92ee3da6275c34d72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-08-09T21:02:17.926Z",
  "text": "In the debug log check if if the path is escaping in a way you're not expecting it to be. e.g the object key\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "no problem let us know if you still have questions or issues after that",
  "id": "55c7bff40c29567545d97204",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-08-09T21:02:44.593Z",
  "text": "no problem let us know if you still have questions or issues after that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-08-11T08:01:10.724Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jjeffery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/458924?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/458924?v=4&s=60",
   "displayName": "John Jeffery",
   "gv": "4",
   "id": "55b9c0e40fc9f982beab7dcc",
   "url": "/jjeffery",
   "username": "jjeffery",
   "v": 9
  },
  "html": "I&#39;m looking at the S3 API, in particular the S3.PutObject method, and I&#39;m wondering why the Body has to be an io.ReadSeeker. There are not too many types that implement io.ReadSeeker -- os.File is of course one of them. I guess this is similar to the discussion earlier about WriterAt. It would be nice if the Body could be an io.Reader, as then it would be possible to use a wider range of standard types for storing data. I&#39;m thinking in particular of bytes.Buffer.",
  "id": "55c9abac21801cd866caa92a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-11T08:00:44.685Z",
  "text": "I'm looking at the S3 API, in particular the S3.PutObject method, and I'm wondering why the Body has to be an io.ReadSeeker. There are not too many types that implement io.ReadSeeker -- os.File is of course one of them. I guess this is similar to the discussion earlier about WriterAt. It would be nice if the Body could be an io.Reader, as then it would be possible to use a wider range of standard types for storing data. I'm thinking in particular of bytes.Buffer.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for the feedback <span data-link-type=\"mention\" data-screen-name=\"jjeffery\" class=\"mention\">@jjeffery</span>,  <code>io.ReadSeeker</code> is used so that the SDK can know the size of the buffer without reading in the bytes into memory for the Content-Length header and signing signature. With that said, a <code>bytes.Reader</code> and <code>strings.Reader</code> both implement <code>io.ReadSeeker</code>. Though this doesn&#39;t help if your app only has a <code>io.Reader</code>. One workaround would be to read the content of the io.Reader into memory and give <code>S3.PutObject</code> a <code>bytes.Reader</code>. Alternatively we can take a look at the need of requiring an io.ReadSeeker for SDK input streams.",
  "id": "55ca2b7b8f067d637598efb6",
  "issues": [],
  "mentions": [
   {
    "screenName": "jjeffery",
    "userId": "55b9c0e40fc9f982beab7dcc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-11T17:06:03.427Z",
  "text": "Thanks for the feedback @jjeffery,  `io.ReadSeeker` is used so that the SDK can know the size of the buffer without reading in the bytes into memory for the Content-Length header and signing signature. With that said, a `bytes.Reader` and `strings.Reader` both implement `io.ReadSeeker`. Though this doesn't help if your app only has a `io.Reader`. One workaround would be to read the content of the io.Reader into memory and give `S3.PutObject` a `bytes.Reader`. Alternatively we can take a look at the need of requiring an io.ReadSeeker for SDK input streams.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dwieeb\" class=\"mention\">@dwieeb</span> <span data-link-type=\"commit\" data-commit-sha=\"3206408\" data-commit-repo=\"aws/aws-sdk-go\" class=\"commit\">aws/aws-sdk-go@3206408</span> adds a WriteAtBuffer so you can use a s3manager.Downloader with in memory, not requiring a file.",
  "id": "55ca380021801cd866cabd88",
  "issues": [],
  "mentions": [
   {
    "screenName": "dwieeb",
    "userId": "5564bfc715522ed4b3e0f857",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-11T17:59:28.836Z",
  "text": "@dwieeb aws/aws-sdk-go@3206408 adds a WriteAtBuffer so you can use a s3manager.Downloader with in memory, not requiring a file.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jjeffery\" class=\"mention\">@jjeffery</span> I&#39;d suggest if you&#39;re using a <code>io.Reader</code> and want to send the object to S3 is to use <code>s3manager.Uploader</code> which accepts an <code>io.Reader</code> by buffering smaller chunks (<code>s3manager.DefaultUploadPartSize</code>) in memory. Alternatively for smaller content you could using <code>ioutil.ReadAll</code> with <code>bytes.Reader</code> to load the full content into memory. The <code>ioutil.ReadAll</code> works great for small objects, but large objects may exhaust your system&#39;s memory. For large objects I suggest using files or <code>s3manager.Uploader</code> which will explicitly support buffering into memory if the body is not a <code>io.ReadSeeker</code>. <code>s3manager.Uploader</code> will also provide more robust retry logic than the vanilla <code>S3.PutObject</code>.",
  "id": "55ca410baac97ada66dd8546",
  "issues": [],
  "mentions": [
   {
    "screenName": "jjeffery",
    "userId": "55b9c0e40fc9f982beab7dcc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-11T18:38:03.867Z",
  "text": "@jjeffery I'd suggest if you're using a `io.Reader` and want to send the object to S3 is to use `s3manager.Uploader` which accepts an `io.Reader` by buffering smaller chunks (`s3manager.DefaultUploadPartSize`) in memory. Alternatively for smaller content you could using `ioutil.ReadAll` with `bytes.Reader` to load the full content into memory. The `ioutil.ReadAll` works great for small objects, but large objects may exhaust your system's memory. For large objects I suggest using files or `s3manager.Uploader` which will explicitly support buffering into memory if the body is not a `io.ReadSeeker`. `s3manager.Uploader` will also provide more robust retry logic than the vanilla `S3.PutObject`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Nice. I am definitely excited for that. I took your earlier suggestion and just am making a file for now. Sorry I forgot to say thanks, I think. Just been crazy busy. ",
  "id": "55cbbfa6255950880cfb3cb8",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-12T21:50:30.475Z",
  "text": "@jasdel Nice. I am definitely excited for that. I took your earlier suggestion and just am making a file for now. Sorry I forgot to say thanks, I think. Just been crazy busy. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> There should probably be a test for using <code>WriteAtBuffer</code> in multiple goroutines, since the claim is that it is safe to use concurrently. Mind if I fork and try to tackle that? ",
  "id": "55cbc5103d8917890c15c177",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-12T22:13:36.333Z",
  "text": "@jasdel There should probably be a test for using `WriteAtBuffer` in multiple goroutines, since the claim is that it is safe to use concurrently. Mind if I fork and try to tackle that? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dwieeb\" class=\"mention\">@dwieeb</span> that would be great. we are always looking for contributions",
  "id": "55cbd4af204de35b422fd338",
  "issues": [],
  "mentions": [
   {
    "screenName": "dwieeb",
    "userId": "5564bfc715522ed4b3e0f857",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2015-08-12T23:20:15.521Z",
  "text": "@dwieeb that would be great. we are always looking for contributions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-08-13T04:31:26.179Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/simathur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5669765?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5669765?v=3&s=60",
   "displayName": "Siddharth Mathur",
   "gv": "3",
   "id": "55cc12010fc9f982bead380d",
   "url": "/simathur",
   "username": "simathur",
   "v": 3
  },
  "html": "Any one using DynamoDB API here ? I am having a really hard time figuring out how to assemble a dynamodb.PutItemInput together <a href=\"http://godoc.org/github.com/aws/aws-sdk-go/service/dynamodb#example-DynamoDB-PutItem\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://godoc.org/github.com/aws/aws-sdk-go/service/dynamodb#example-DynamoDB-PutItem</a>",
  "id": "55cc1d869b45e15c4263f864",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-13T04:31:02.882Z",
  "text": "Any one using DynamoDB API here ? I am having a really hard time figuring out how to assemble a dynamodb.PutItemInput together http://godoc.org/github.com/aws/aws-sdk-go/service/dynamodb#example-DynamoDB-PutItem",
  "unread": false,
  "urls": [
   {
    "url": "http://godoc.org/github.com/aws/aws-sdk-go/service/dynamodb#example-DynamoDB-PutItem"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/simathur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5669765?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5669765?v=3&s=60",
   "displayName": "Siddharth Mathur",
   "gv": "3",
   "id": "55cc12010fc9f982bead380d",
   "url": "/simathur",
   "username": "simathur",
   "v": 3
  },
  "html": "I have a created an empty table via the web Console with primary hash key &quot;ClientVirtualIP&quot; (string) , range key &quot;RemoteID&quot; (string), and secondary index range key &quot;Timestamp&quot; (number) ",
  "id": "55cc1dfb204de35b422fd93c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-13T04:32:59.560Z",
  "text": "I have a created an empty table via the web Console with primary hash key \"ClientVirtualIP\" (string) , range key \"RemoteID\" (string), and secondary index range key \"Timestamp\" (number) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/simathur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5669765?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5669765?v=3&s=60",
   "displayName": "Siddharth Mathur",
   "gv": "3",
   "id": "55cc12010fc9f982bead380d",
   "url": "/simathur",
   "username": "simathur",
   "v": 3
  },
  "html": "how do I assemble the simplest dynamodb.PutItemInput to insert my first entry in the DB ? ",
  "id": "55cc1e1235e3e09b3ada78fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-13T04:33:22.096Z",
  "text": "how do I assemble the simplest dynamodb.PutItemInput to insert my first entry in the DB ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jjeffery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/458924?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/458924?v=4&s=60",
   "displayName": "John Jeffery",
   "gv": "4",
   "id": "55b9c0e40fc9f982beab7dcc",
   "url": "/jjeffery",
   "username": "jjeffery",
   "v": 9
  },
  "html": "Thanks for the info <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>. Makes sense. You know I had completely overlooked bytes.Reader. I am using bytes.Buffer to create the content to upload, and wrote my comment earlier because it does not implement the Seek method. However, wrapping the content of the buffer in a bytes.Reader will work just fine.",
  "id": "55cc29ad057d8c9d3a6d1d36",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2015-08-13T05:22:53.476Z",
  "text": "Thanks for the info @jasdel. Makes sense. You know I had completely overlooked bytes.Reader. I am using bytes.Buffer to create the content to upload, and wrote my comment earlier because it does not implement the Seek method. However, wrapping the content of the buffer in a bytes.Reader will work just fine.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"simathur\" class=\"mention\">@simathur</span>  it might be easier to use a Go concrete struct along with the <a href=\"http://godoc.org/github.com/aws/aws-sdk-go/service/dynamodb/dynamodbattribute#ConvertTo\" rel=\"nofollow\" target=\"_blank\" class=\"link\">dynamodbattribute.ConvertTo</a> instead of trying to build from hand.  I just updated the doc for the conversion utility package, hopefully it is a little bit clearer. With the <code>ConvertTo</code> utility you would define a struct with the fields you&#39;re wanting to set with PutItem. ",
  "id": "55cceb95057d8c9d3a6d39db",
  "issues": [],
  "mentions": [
   {
    "screenName": "simathur",
    "userId": "55cc12010fc9f982bead380d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2015-08-13T19:10:13.676Z",
  "text": "@simathur  it might be easier to use a Go concrete struct along with the [dynamodbattribute.ConvertTo](http://godoc.org/github.com/aws/aws-sdk-go/service/dynamodb/dynamodbattribute#ConvertTo) instead of trying to build from hand.  I just updated the doc for the conversion utility package, hopefully it is a little bit clearer. With the `ConvertTo` utility you would define a struct with the fields you're wanting to set with PutItem. ",
  "unread": false,
  "urls": [
   {
    "url": "http://godoc.org/github.com/aws/aws-sdk-go/service/dynamodb/dynamodbattribute#ConvertTo"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Check out this example:",
  "id": "55cceb9a057d8c9d3a6d39dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-08-13T19:10:18.345Z",
  "text": "Check out this example:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<pre><code class=\"go\"><span class=\"keyword\">package</span> main\n\n<span class=\"keyword\">import</span> (\n    <span class=\"string\">\"fmt\"</span>\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/aws\"</span>\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/service/dynamodb\"</span>\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/service/dynamodb/dynamodbattribute\"</span>\n    <span class=\"string\">\"time\"</span>\n)\n\n<span class=\"keyword\">type</span> Record <span class=\"keyword\">struct</span> {\n    ClientVirtualIP <span class=\"typename\">string</span>\n    RemoteID        <span class=\"typename\">string</span>\n    OtherData       <span class=\"keyword\">map</span>[<span class=\"typename\">string</span>]<span class=\"typename\">int</span>\n    Timestamp       <span class=\"typename\">int64</span>\n}\n\n<span class=\"keyword\">func</span> main() {\n    r := Record{\n        ClientVirtualIP: <span class=\"string\">\"127.0.0.1\"</span>,\n        RemoteID:        <span class=\"string\">\"abc-001\"</span>,\n        OtherData:       <span class=\"keyword\">map</span>[<span class=\"typename\">string</span>]<span class=\"typename\">int</span>{<span class=\"string\">\"a\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"b\"</span>: <span class=\"number\">2</span>, <span class=\"string\">\"c\"</span>: <span class=\"number\">3</span>},\n        Timestamp:       time.Now().UTC().Unix(),\n    }\n\n    svc := dynamodb.New(<span class=\"constant\">nil</span>)\n    item, err := dynamodbattribute.ConvertToMap(r)\n    <span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n        fmt.Println(<span class=\"string\">\"Failed to convert\"</span>, err)\n        <span class=\"keyword\">return</span>\n    }\n    result, err := svc.PutItem(&amp;dynamodb.PutItemInput{\n        Item:      item,\n        TableName: aws.String(<span class=\"string\">\"exampleTable\"</span>),\n    })\n\n    fmt.Println(result, err)\n}</code></pre>",
  "id": "55ccebad255950880cfb619f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-08-13T19:10:37.927Z",
  "text": "```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/aws/aws-sdk-go/aws\"\n\t\"github.com/aws/aws-sdk-go/service/dynamodb\"\n\t\"github.com/aws/aws-sdk-go/service/dynamodb/dynamodbattribute\"\n\t\"time\"\n)\n\ntype Record struct {\n\tClientVirtualIP string\n\tRemoteID        string\n\tOtherData       map[string]int\n\tTimestamp       int64\n}\n\nfunc main() {\n\tr := Record{\n\t\tClientVirtualIP: \"127.0.0.1\",\n\t\tRemoteID:        \"abc-001\",\n\t\tOtherData:       map[string]int{\"a\": 1, \"b\": 2, \"c\": 3},\n\t\tTimestamp:       time.Now().UTC().Unix(),\n\t}\n\n\tsvc := dynamodb.New(nil)\n\titem, err := dynamodbattribute.ConvertToMap(r)\n\tif err != nil {\n\t\tfmt.Println(\"Failed to convert\", err)\n\t\treturn\n\t}\n\tresult, err := svc.PutItem(&dynamodb.PutItemInput{\n\t\tItem:      item,\n\t\tTableName: aws.String(\"exampleTable\"),\n\t})\n\n\tfmt.Println(result, err)\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/simathur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5669765?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5669765?v=3&s=60",
   "displayName": "Siddharth Mathur",
   "gv": "3",
   "id": "55cc12010fc9f982bead380d",
   "url": "/simathur",
   "username": "simathur",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thank you so much! dynamodbattribute.ConvertTo looks exactly what the doctor ordered :) . Relieved. I did a first pass of os.exec() with the AWS CLI invocation yesterday, but will try this more sustainable route. Also, could you add a bold reference to ConvertTo on the top of the documentation for &quot;<a href=\"http://github.com/aws/aws-sdk-go/service/dynamodb&quot\" rel=\"nofollow\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/service/dynamodb&quot</a>;",
  "id": "55cd68b9057d8c9d3a6d4b29",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-14T04:04:09.719Z",
  "text": "@jasdel thank you so much! dynamodbattribute.ConvertTo looks exactly what the doctor ordered :) . Relieved. I did a first pass of os.exec() with the AWS CLI invocation yesterday, but will try this more sustainable route. Also, could you add a bold reference to ConvertTo on the top of the documentation for \"github.com/aws/aws-sdk-go/service/dynamodb\"",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/aws/aws-sdk-go/service/dynamodb&quot"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/simathur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5669765?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5669765?v=3&s=60",
   "displayName": "Siddharth Mathur",
   "gv": "3",
   "id": "55cc12010fc9f982bead380d",
   "url": "/simathur",
   "username": "simathur",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> if there are features in the higher-level &quot;aws&quot; package such as aws.String() please also point to them in the doc updates. For example, the top-level README.md does a poor job communicating that any helper utilities are hidden in the meta package",
  "id": "55cd6947204de35b423005b3",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-14T04:06:31.841Z",
  "text": "@jasdel if there are features in the higher-level \"aws\" package such as aws.String() please also point to them in the doc updates. For example, the top-level README.md does a poor job communicating that any helper utilities are hidden in the meta package",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/simathur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5669765?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5669765?v=3&s=60",
   "displayName": "Siddharth Mathur",
   "gv": "3",
   "id": "55cc12010fc9f982bead380d",
   "url": "/simathur",
   "username": "simathur",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thank you again. ",
  "id": "55cd695e35e3e09b3adaa781",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-14T04:06:54.844Z",
  "text": "@jasdel thank you again. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/wari",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/525422?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/525422?v=4&s=60",
   "displayName": "Wari Wahab",
   "gv": "4",
   "id": "55c1a15d0fc9f982beac4225",
   "url": "/wari",
   "username": "wari",
   "v": 1
  },
  "html": "Hi there, is there a proper way to generate presigned urls for the cloudfront service, there dont seem to be a call like s3.CreateObjectRequest() type of call for CloudFront",
  "id": "55d02805204de35b42304855",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-16T06:04:53.252Z",
  "text": "Hi there, is there a proper way to generate presigned urls for the cloudfront service, there dont seem to be a call like s3.CreateObjectRequest() type of call for CloudFront",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"wari\" class=\"mention\">@wari</span> checkout the [service/cloudfront/sign](",
  "id": "55d0378c35e3e09b3adaeccd",
  "issues": [],
  "mentions": [
   {
    "screenName": "wari",
    "userId": "55c1a15d0fc9f982beac4225",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-08-16T07:11:08.536Z",
  "text": "@wari checkout the [service/cloudfront/sign](",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<a href=\"http://godoc.org/github.com/aws/aws-sdk-go/service/cloudfront/sign\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://godoc.org/github.com/aws/aws-sdk-go/service/cloudfront/sign</a>",
  "id": "55d037969b45e15c4264698b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-08-16T07:11:18.117Z",
  "text": "http://godoc.org/github.com/aws/aws-sdk-go/service/cloudfront/sign",
  "unread": false,
  "urls": [
   {
    "url": "http://godoc.org/github.com/aws/aws-sdk-go/service/cloudfront/sign"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Checkout the service/cloudfront/sign package it provides URL signing. The link above includes a few common usage examples.",
  "id": "55d038083d8917890c163b2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-08-16T07:13:12.989Z",
  "text": "Checkout the service/cloudfront/sign package it provides URL signing. The link above includes a few common usage examples.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/wari",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/525422?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/525422?v=4&s=60",
   "displayName": "Wari Wahab",
   "gv": "4",
   "id": "55c1a15d0fc9f982beac4225",
   "url": "/wari",
   "username": "wari",
   "v": 1
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>, will try it out, it looks like the signing is different from the S3 type as it requires an RSA private key.",
  "id": "55d0a65b9b45e15c426471c6",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-08-16T15:03:55.092Z",
  "text": "Thanks @jasdel, will try it out, it looks like the signing is different from the S3 type as it requires an RSA private key.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"wari\" class=\"mention\">@wari</span> Correct, CloudFront signed URLs are signed with a RSA Private Key. The Public Key is stored in  <code>Your Security Credentials</code>&#39;s <code>CloudFront Key Pairs</code> section for your account. The Key ID string provided to the <code>URLSigner</code> is the <code>CloudFront Key Pairs</code>&#39;s <code>Access Key ID</code> of a Public Key either created via that page or a key you created your self and uploaded.",
  "id": "55d17186204de35b4230608a",
  "issues": [],
  "mentions": [
   {
    "screenName": "wari",
    "userId": "55c1a15d0fc9f982beac4225",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-08-17T05:30:46.312Z",
  "text": "@wari Correct, CloudFront signed URLs are signed with a RSA Private Key. The Public Key is stored in  `Your Security Credentials`'s `CloudFront Key Pairs` section for your account. The Key ID string provided to the `URLSigner` is the `CloudFront Key Pairs`'s `Access Key ID` of a Public Key either created via that page or a key you created your self and uploaded.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-08-27T09:18:54.616Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/Bochenski",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/330886?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/330886?v=3&s=60",
   "displayName": "David Bochenski",
   "gv": "3",
   "id": "533323b85e986b0712f0000f",
   "url": "/Bochenski",
   "username": "Bochenski",
   "v": 4
  },
  "html": "I&#39;m trying to generate a federation token through the go sdk and think I&#39;m struggling on the string representation of the Policy.  Does anyone have a working example of how to encode the policy string correctly?",
  "id": "55ded4b1d42b22ce3e295d45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-08-27T09:13:21.184Z",
  "text": "I'm trying to generate a federation token through the go sdk and think I'm struggling on the string representation of the Policy.  Does anyone have a working example of how to encode the policy string correctly?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2015-08-27T09:16:12.255Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/Bochenski",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/330886?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/330886?v=3&s=60",
   "displayName": "David Bochenski",
   "gv": "3",
   "id": "533323b85e986b0712f0000f",
   "url": "/Bochenski",
   "username": "Bochenski",
   "v": 4
  },
  "html": "<pre><code class=\"go\">params := &amp;sts.GetFederationTokenInput{\n        Name:            aws.String(<span class=\"string\">\"user\"</span>), <span class=\"comment\">// Required</span>\n        DurationSeconds: aws.Int64(<span class=\"number\">901</span>),\n        Policy:          aws.String(<span class=\"string\">`{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"s3:*\"],\"Resource\":[\"arn:aws:s3:::bucketname/*\"]}]}`</span>),\n    }</code></pre>is what I have currently, and I get a token back but it seems not to have the correct permissions associated with it",
  "id": "55ded4c99be7c0820510afac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-08-27T09:13:45.506Z",
  "text": "```go\nparams := &sts.GetFederationTokenInput{\n        Name:            aws.String(\"user\"), // Required\n        DurationSeconds: aws.Int64(901),\n        Policy:          aws.String(`{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"s3:*\"],\"Resource\":[\"arn:aws:s3:::bucketname/*\"]}]}`),\n    }\n```\nis what I have currently, and I get a token back but it seems not to have the correct permissions associated with it",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/Bochenski",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/330886?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/330886?v=3&s=60",
   "displayName": "David Bochenski",
   "gv": "3",
   "id": "533323b85e986b0712f0000f",
   "url": "/Bochenski",
   "username": "Bochenski",
   "v": 4
  },
  "html": "Not to worry - we found the problem elsewhere, so for reference that does appear to be an accurate way to represent a Policy string in JSON",
  "id": "55dee4c8a001749b2d957f4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-08-27T10:22:00.929Z",
  "text": "Not to worry - we found the problem elsewhere, so for reference that does appear to be an accurate way to represent a Policy string in JSON",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"Bochenski\" class=\"mention\">@Bochenski</span> If you take a look at the service/cloudfront/sign package it includes a <a href=\"https://github.com/aws/aws-sdk-go/blob/master/service/cloudfront/sign/policy.go\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Policy </a> marshaller for CloudFront URL Signing. </p><p>There isn&#39;t a generic Policy serializer since used<br> fields of a Policy can vary by service.</p>",
  "id": "55df6cf4c5601f830c871134",
  "issues": [],
  "mentions": [
   {
    "screenName": "Bochenski",
    "userId": "533323b85e986b0712f0000f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-08-27T20:03:00.357Z",
  "text": "@Bochenski If you take a look at the service/cloudfront/sign package it includes a [Policy ](https://github.com/aws/aws-sdk-go/blob/master/service/cloudfront/sign/policy.go) marshaller for CloudFront URL Signing. \n\nThere isn't a generic Policy serializer since used\n fields of a Policy can vary by service.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/blob/master/service/cloudfront/sign/policy.go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/Bochenski",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/330886?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/330886?v=3&s=60",
   "displayName": "David Bochenski",
   "gv": "3",
   "id": "533323b85e986b0712f0000f",
   "url": "/Bochenski",
   "username": "Bochenski",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Bochenski\" class=\"mention\">@Bochenski</span> Thanks <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ",
  "id": "55e4215e3d8fc2d12eaa6cae",
  "issues": [],
  "mentions": [
   {
    "screenName": "Bochenski",
    "userId": "533323b85e986b0712f0000f",
    "userIds": []
   },
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-08-31T09:41:50.671Z",
  "text": "@Bochenski Thanks @jasdel ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/josler",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/167061?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/167061?v=3&s=60",
   "displayName": "Jamie Osler",
   "gv": "3",
   "id": "55e5a0f50fc9f982beaf4930",
   "url": "/josler",
   "username": "josler"
  },
  "html": "Hey, just a super quick question - the go-aws DynamoDB client - I can create one <code>*dynamodb.DynamoDB</code>  and access it from multiple goroutines at the same time right? There&#39;s no problem with concurrent updates?",
  "id": "55e5a1393d8fc2d12eaaa15d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-09-01T12:59:37.670Z",
  "text": "Hey, just a super quick question - the go-aws DynamoDB client - I can create one `*dynamodb.DynamoDB`  and access it from multiple goroutines at the same time right? There's no problem with concurrent updates?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"josler\" class=\"mention\">@josler</span> the service clients are goroutine safe. You definitely can use the SDK clients across multiple goroutines. In generally you probably only want to create a single client instance for all of your requests unless you&#39;re working across multiple regions, or need specific configuration for a given instance. Also I should note modifying fields of a service client, or its Config, is not goroutine safe. Only the service API operations calls safe. ",
  "id": "55e5d58eb4f7751c343ab596",
  "issues": [],
  "mentions": [
   {
    "screenName": "josler",
    "userId": "55e5a0f50fc9f982beaf4930",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-09-01T16:42:54.423Z",
  "text": "Hi @josler the service clients are goroutine safe. You definitely can use the SDK clients across multiple goroutines. In generally you probably only want to create a single client instance for all of your requests unless you're working across multiple regions, or need specific configuration for a given instance. Also I should note modifying fields of a service client, or its Config, is not goroutine safe. Only the service API operations calls safe. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Generally you shouldn&#39;t need to mutate the service client&#39;s field values. If you do just make sure to do it up front before the service client is given to the goroutines.",
  "id": "55e5d58f56211cd86f86f55d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-09-01T16:42:55.745Z",
  "text": "Generally you shouldn't need to mutate the service client's field values. If you do just make sure to do it up front before the service client is given to the goroutines.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/josler",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/167061?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/167061?v=3&s=60",
   "displayName": "Jamie Osler",
   "gv": "3",
   "id": "55e5a0f50fc9f982beaf4930",
   "url": "/josler",
   "username": "josler"
  },
  "html": "Thanks :)",
  "id": "55e5f9c54ae8239378eb07b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-09-01T19:17:25.784Z",
  "text": "Thanks :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/ishail",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=60",
   "displayName": "shailesh kumar",
   "gv": "3",
   "id": "55e860f70fc9f982beaf8b8b",
   "url": "/ishail",
   "username": "ishail"
  },
  "html": "Hi, I&#39;m using ses.sendEmail() to send emails. But I don&#39;t see an option to attach files in the emails. Am I missing something?",
  "id": "55e8618cfaa620f25267e4a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-09-03T15:04:44.300Z",
  "text": "Hi, I'm using ses.sendEmail() to send emails. But I don't see an option to attach files in the emails. Am I missing something?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/FreekingDean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=60",
   "displayName": "Dean Galvin",
   "gv": "4",
   "id": "5537d93f15522ed4b3df5f9f",
   "url": "/FreekingDean",
   "username": "FreekingDean",
   "v": 11
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I was wondering when using UpdateItem and using the UpdateExpression how should I go about replacing a string set?",
  "id": "55e8650c05f4097b40f6be5f",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2015-09-03T15:19:40.455Z",
  "text": "Hi @jasdel I was wondering when using UpdateItem and using the UpdateExpression how should I go about replacing a string set?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/FreekingDean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=60",
   "displayName": "Dean Galvin",
   "gv": "4",
   "id": "5537d93f15522ed4b3df5f9f",
   "url": "/FreekingDean",
   "username": "FreekingDean",
   "v": 11
  },
  "html": "Something like &quot;SET listName = {item1, item2}&quot; ",
  "id": "55e8652017b2081605a58e0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-09-03T15:20:00.026Z",
  "text": "Something like \"SET listName = {item1, item2}\" ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/FreekingDean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=60",
   "displayName": "Dean Galvin",
   "gv": "4",
   "id": "5537d93f15522ed4b3df5f9f",
   "url": "/FreekingDean",
   "username": "FreekingDean",
   "v": 11
  },
  "html": "?",
  "id": "55e8652217b2081605a58e10",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-09-03T15:20:02.781Z",
  "text": "?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ishail\" class=\"mention\">@ishail</span> Checkout SQS <a href=\"http://docs.aws.amazon.com/ses/latest/APIReference/API_SendRawEmail.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">SendRawEmail</a> It allows you to build up your own message body with attachements with a slice of bytes using <a href=\"http://docs.aws.amazon.com/ses/latest/APIReference/API_RawMessage.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">RawMessage</a>",
  "id": "55e877cd17b2081605a592a2",
  "issues": [],
  "mentions": [
   {
    "screenName": "ishail",
    "userId": "55e860f70fc9f982beaf8b8b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2015-09-03T16:39:41.257Z",
  "text": "@ishail Checkout SQS [SendRawEmail](http://docs.aws.amazon.com/ses/latest/APIReference/API_SendRawEmail.html) It allows you to build up your own message body with attachements with a slice of bytes using [RawMessage](http://docs.aws.amazon.com/ses/latest/APIReference/API_RawMessage.html)",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_SendRawEmail.html"
   },
   {
    "url": "http://docs.aws.amazon.com/ses/latest/APIReference/API_RawMessage.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/ishail",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=60",
   "displayName": "shailesh kumar",
   "gv": "3",
   "id": "55e860f70fc9f982beaf8b8b",
   "url": "/ishail",
   "username": "ishail"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> , Thank you. Will look into it.",
  "id": "55e879a2faa620f25267ea35",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2015-09-03T16:47:30.906Z",
  "text": "@jasdel , Thank you. Will look into it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/FreekingDean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=60",
   "displayName": "Dean Galvin",
   "gv": "4",
   "id": "5537d93f15522ed4b3df5f9f",
   "url": "/FreekingDean",
   "username": "FreekingDean",
   "v": 11
  },
  "html": "Anyone have any examples of setting a new string set in an update expression?",
  "id": "55e881c04d3425403fb98101",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-09-03T17:22:08.820Z",
  "text": "Anyone have any examples of setting a new string set in an update expression?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"FreekingDean\" class=\"mention\">@FreekingDean</span> I&#39;m looking up for how to build that example for you",
  "id": "55e8821bfaa620f25267ec42",
  "issues": [],
  "mentions": [
   {
    "screenName": "FreekingDean",
    "userId": "5537d93f15522ed4b3df5f9f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-09-03T17:23:39.019Z",
  "text": "@FreekingDean I'm looking up for how to build that example for you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Basically you should be able to follow the instructions here, but working on getting a working example for you. <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.Modifying.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.Modifying.html</a>",
  "id": "55e8823f46dfeb9c3dbbf378",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-09-03T17:24:15.806Z",
  "text": "Basically you should be able to follow the instructions here, but working on getting a working example for you. http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.Modifying.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.Modifying.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"FreekingDean\" class=\"mention\">@FreekingDean</span> This example should work for you, the syntax is actually AttributeValue based where values you want to set are defined in the ExpressionAttributeValues field of the UpdateItemInput.",
  "id": "55e8862917b2081605a595fe",
  "issues": [],
  "mentions": [
   {
    "screenName": "FreekingDean",
    "userId": "5537d93f15522ed4b3df5f9f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-09-03T17:40:57.076Z",
  "text": "@FreekingDean This example should work for you, the syntax is actually AttributeValue based where values you want to set are defined in the ExpressionAttributeValues field of the UpdateItemInput.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<pre><code class=\"go\">res, err := svc.UpdateItem(&amp;dynamodb.UpdateItemInput{\n        ExpressionAttributeValues: <span class=\"keyword\">map</span>[<span class=\"typename\">string</span>]*dynamodb.AttributeValue{\n            <span class=\"string\">\":myList\"</span>: {\n                SS: []*<span class=\"typename\">string</span>{\n                    aws.String(<span class=\"string\">\"a\"</span>), aws.String(<span class=\"string\">\"b\"</span>), aws.String(<span class=\"string\">\"c\"</span>),\n                },\n            },\n        },\n        UpdateExpression: aws.String(<span class=\"string\">`SET ListName=:myList`</span>),\n               <span class=\"comment\">//... your other fields.</span></code></pre>",
  "id": "55e8865b46dfeb9c3dbbf45c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-09-03T17:41:47.295Z",
  "text": "```go\nres, err := svc.UpdateItem(&dynamodb.UpdateItemInput{\n\t\tExpressionAttributeValues: map[string]*dynamodb.AttributeValue{\n\t\t\t\":myList\": {\n\t\t\t\tSS: []*string{\n\t\t\t\t\taws.String(\"a\"), aws.String(\"b\"), aws.String(\"c\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tUpdateExpression: aws.String(`SET ListName=:myList`),\n               //... your other fields.\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/FreekingDean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=60",
   "displayName": "Dean Galvin",
   "gv": "4",
   "id": "5537d93f15522ed4b3df5f9f",
   "url": "/FreekingDean",
   "username": "FreekingDean",
   "v": 11
  },
  "html": "thats perfect! thank you!",
  "id": "55e8881bfaa620f25267ed67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-09-03T17:49:15.377Z",
  "text": "thats perfect! thank you!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Great, let us know if you run into any other issues, or have any feedback",
  "id": "55e8891e4d3425403fb98286",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-09-03T17:53:34.065Z",
  "text": "Great, let us know if you run into any other issues, or have any feedback",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "Is there anyway I can send the svc to localhost dynamodb?",
  "id": "55e8ded9d231aa8e59191282",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-09-03T23:59:21.931Z",
  "text": "Is there anyway I can send the svc to localhost dynamodb?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "nevermind, figured out",
  "id": "55e8e7f3faa620f25267fd2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-09-04T00:38:11.281Z",
  "text": "nevermind, figured out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kelwang\" class=\"mention\">@kelwang</span> glad you figured it out the <code>aws.Config.Endpoint</code> field is the best specify localhost for dynamodb. ",
  "id": "55e9d3b417b2081605a5c428",
  "issues": [],
  "mentions": [
   {
    "screenName": "kelwang",
    "userId": "555e798015522ed4b3e0c232",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-09-04T17:24:04.995Z",
  "text": "@kelwang glad you figured it out the `aws.Config.Endpoint` field is the best specify localhost for dynamodb. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>  thx",
  "id": "55e9eaa82e48d88a543d8509",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-09-04T19:02:00.608Z",
  "text": "@jasdel  thx",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "I have met a weird error for s3. Not sure if that&#39;s  a permission issue. or the sdk&#39;s issue. I do have the permission to login into s3 and upload an image manually.",
  "id": "55ef19b5b69ff6ab0ec54134",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-09-08T17:24:05.076Z",
  "text": "I have met a weird error for s3. Not sure if that's  a permission issue. or the sdk's issue. I do have the permission to login into s3 and upload an image manually.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "RequestError: send request failed<br>caused by: Put <a href=\"https://kwangdev.s3.us-west-1.amazonaws.com/sonicpic.jpg\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://kwangdev.s3.us-west-1.amazonaws.com/sonicpic.jpg</a>: x509: certificate is valid for s3-us-west-1.amazonaws.com, *.s3-us-west-1.amazonaws.com, not kwangdev.s3.us-west-1.amazonaws.com",
  "id": "55ef19b596450ece4d87f9b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-09-08T17:24:05.529Z",
  "text": "RequestError: send request failed\ncaused by: Put https://kwangdev.s3.us-west-1.amazonaws.com/sonicpic.jpg: x509: certificate is valid for s3-us-west-1.amazonaws.com, *.s3-us-west-1.amazonaws.com, not kwangdev.s3.us-west-1.amazonaws.com",
  "unread": false,
  "urls": [
   {
    "url": "https://kwangdev.s3.us-west-1.amazonaws.com/sonicpic.jpg"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "params := &amp;s3.CopyObjectInput{<br>        Bucket:     aws.String(&quot;kwangdev&quot;),                     // Required<br>        CopySource: aws.String(&quot;/Users/kewang/Desktop/sonicpic.jpg&quot;), // Required<br>        Key:        aws.String(&quot;sonicpic.jpg&quot;),                       // Required<br>    }<br>    resp, err := svc.CopyObject(params)",
  "id": "55ef19caf86e90e11d5dad80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-09-08T17:24:26.485Z",
  "text": "params := &s3.CopyObjectInput{\n\t\tBucket:     aws.String(\"kwangdev\"),                     // Required\n\t\tCopySource: aws.String(\"/Users/kewang/Desktop/sonicpic.jpg\"), // Required\n\t\tKey:        aws.String(\"sonicpic.jpg\"),                       // Required\n\t}\n\tresp, err := svc.CopyObject(params)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "svc := s3.New(&amp;aws.Config{<br>        Region:      aws.String(&quot;us-west-1&quot;),<br>        Endpoint:    aws.String(&quot;<a href=\"https://s3.us-west-1.amazonaws.com\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://s3.us-west-1.amazonaws.com</a>&quot;),<br>        MaxRetries:  aws.Int(2),<br>    })",
  "id": "55ef1a4d24362d5253fe3c12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-09-08T17:26:37.151Z",
  "text": "svc := s3.New(&aws.Config{\n\t\tRegion:      aws.String(\"us-west-1\"),\n\t\tEndpoint:    aws.String(\"https://s3.us-west-1.amazonaws.com\"),\n\t\tMaxRetries:  aws.Int(2),\n\t})",
  "unread": false,
  "urls": [
   {
    "url": "https://s3.us-west-1.amazonaws.com"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kelwang\" class=\"mention\">@kelwang</span>  do you get the same error if you don&#39;t set the <code>aws.Config.Endpoint</code> field?",
  "id": "55ef42dc96450ece4d8801dc",
  "issues": [],
  "mentions": [
   {
    "screenName": "kelwang",
    "userId": "555e798015522ed4b3e0c232",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-09-08T20:19:40.243Z",
  "text": "@kelwang  do you get the same error if you don't set the `aws.Config.Endpoint` field?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "oh i think i see the issue. <code>s3.us-west-1.amazonaws.com</code> that is being used here should be <code>s3-us-west-1.amazonaws.com</code>  there is a <code>-</code> between s3 and region not <code>.</code>",
  "id": "55ef4326d121757e4d206485",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-09-08T20:20:54.690Z",
  "text": "oh i think i see the issue. `s3.us-west-1.amazonaws.com` that is being used here should be `s3-us-west-1.amazonaws.com`  there is a `-` between s3 and region not `.`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "The best course would be not to set the endpoint, since the SDK will automatically build the correct endpoint host",
  "id": "55ef59d696450ece4d880642",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-09-08T21:57:42.384Z",
  "text": "The best course would be not to set the endpoint, since the SDK will automatically build the correct endpoint host",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> actually, yeah, after I changed the endpoint to s3-us-west-1.amazonaws.com, I got different error, guess this time is the permission. AllAccessDisabled: All access to this object has been disabled<br>    status code: 403, request id:",
  "id": "55ef6a1c6fe7b2a123ea73e6",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-09-08T23:07:08.477Z",
  "text": "@jasdel actually, yeah, after I changed the endpoint to s3-us-west-1.amazonaws.com, I got different error, guess this time is the permission. AllAccessDisabled: All access to this object has been disabled\n\tstatus code: 403, request id:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Great, is that what you were expecting, or where you expecting to be able to access the object?",
  "id": "55ef6a98532e5edc655532eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-09-08T23:09:12.453Z",
  "text": "Great, is that what you were expecting, or where you expecting to be able to access the object?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "I thinking it&#39;s much better, just waiting for our ops to set up my permission :)",
  "id": "55ef7639760979e727e9313c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-09-08T23:58:49.237Z",
  "text": "I thinking it's much better, just waiting for our ops to set up my permission :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I&#39;m having problems with the latest release of the sdk. ",
  "id": "55f1901f5ba1e0ea6b807b5d",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-09-10T14:13:51.745Z",
  "text": "@jasdel I'm having problems with the latest release of the sdk. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "../src/<a href=\"http://github.com/aws/aws-sdk-go/aws/request/request.go:143\" rel=\"nofollow\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/aws/request/request.go:143</a>: undefined: aws.LogDebugWithRequestErrors<br>../src/<a href=\"http://github.com/aws/aws-sdk-go/aws/request/request.go:208\" rel=\"nofollow\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/aws/request/request.go:208</a>: undefined: aws.LogDebugWithRequestRetries",
  "id": "55f190235ba1e0ea6b807b5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-09-10T14:13:55.374Z",
  "text": "../src/github.com/aws/aws-sdk-go/aws/request/request.go:143: undefined: aws.LogDebugWithRequestErrors\n../src/github.com/aws/aws-sdk-go/aws/request/request.go:208: undefined: aws.LogDebugWithRequestRetries\n",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/aws/aws-sdk-go/aws/request/request.go:143"
   },
   {
    "url": "http://github.com/aws/aws-sdk-go/aws/request/request.go:208"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "i deleted aws from /pkg and it&#39;s working again",
  "id": "55f196a5e0a0a66b0d801076",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-09-10T14:41:41.138Z",
  "text": "i deleted aws from /pkg and it's working again",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"justinoue\" class=\"mention\">@justinoue</span> good catch, it sounds like one of our recent refactors caused the go pkg cache to become stale. I&#39;ve seen this happen a few times if a package is updated with git instead of go get -u. If it happens again you can build your program with <code>go build -a</code> which will force Go to rebuild all dependancies ensuring the cache isn&#39;t stale.",
  "id": "55f1c0f16fe7b2a123eacd2d",
  "issues": [],
  "mentions": [
   {
    "screenName": "justinoue",
    "userId": "55f190010fc9f982beb04203",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-09-10T17:42:09.103Z",
  "text": "@justinoue good catch, it sounds like one of our recent refactors caused the go pkg cache to become stale. I've seen this happen a few times if a package is updated with git instead of go get -u. If it happens again you can build your program with `go build -a` which will force Go to rebuild all dependancies ensuring the cache isn't stale.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jault3",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1740838?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1740838?v=3&s=60",
   "displayName": "Josh Ault",
   "gv": "3",
   "id": "55f30d3a0fc9f982beb06837",
   "url": "/jault3",
   "username": "jault3",
   "v": 3
  },
  "html": "hello! is it possible to upload a file with a client using a presigned url generated by a server using the s3 go sdk?",
  "id": "55f30d636fe7b2a123eafefe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-09-11T17:20:35.847Z",
  "text": "hello! is it possible to upload a file with a client using a presigned url generated by a server using the s3 go sdk?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jault3",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1740838?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1740838?v=3&s=60",
   "displayName": "Josh Ault",
   "gv": "3",
   "id": "55f30d3a0fc9f982beb06837",
   "url": "/jault3",
   "username": "jault3",
   "v": 3
  },
  "html": "it would also work if the error I&#39;m receiving from the REST API by manually uploading a file was fixed! here&#39;s the error <code>&lt;Error&gt;&lt;Code&gt;NotImplemented&lt;/Code&gt;&lt;Message&gt;A header you provided implies functionality that is not implemented&lt;/Message&gt;&lt;Header&gt;Transfer-Encoding&lt;/Header&gt;</code>",
  "id": "55f30e388825e1c87c9bbdb9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-09-11T17:24:08.282Z",
  "text": "it would also work if the error I'm receiving from the REST API by manually uploading a file was fixed! here's the error `<Error><Code>NotImplemented</Code><Message>A header you provided implies functionality that is not implemented</Message><Header>Transfer-Encoding</Header>`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jault3",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1740838?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1740838?v=3&s=60",
   "displayName": "Josh Ault",
   "gv": "3",
   "id": "55f30d3a0fc9f982beb06837",
   "url": "/jault3",
   "username": "jault3",
   "v": 3
  },
  "html": "<p>nevermind, figured it out! instead of setting content-length as a header like this </p><pre><code>req.Header = <span class=\"keyword\">http</span>.Header{\n        <span class=\"string\">\"Content-Length\"</span>:        {<span class=\"string\">\"...\"</span>},\n}</code></pre><p>you have to set it on the request object itself</p><pre><code>req<span class=\"class\">.ContentLength</span> = ...</code></pre>",
  "id": "55f317fee34ec0336dfaf94e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-11T18:05:50.174Z",
  "text": "nevermind, figured it out! instead of setting content-length as a header like this \n```\nreq.Header = http.Header{\n\t\t\"Content-Length\":        {\"...\"},\n}\n```\nyou have to set it on the request object itself\n```\nreq.ContentLength = ...\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "Hi, trying figure out how to create a preSignedUrl request for s3 putObject, is there an example for that?",
  "id": "55f7129018e0111d7e4ecb9a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-14T18:31:44.811Z",
  "text": "Hi, trying figure out how to create a preSignedUrl request for s3 putObject, is there an example for that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "found it, never mind, req.Presign",
  "id": "55f71326fe4ca46810e19a51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-14T18:34:14.990Z",
  "text": "found it, never mind, req.Presign",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "Is there any golang SQL driver for redshift?",
  "id": "55f9bf5fc588a0de6eded728",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-09-16T19:13:35.295Z",
  "text": "Is there any golang SQL driver for redshift?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kelwang\" class=\"mention\">@kelwang</span> there isn&#39;t a Redshift specific SQL driver, but it looks like <code>pq</code> the postgres driver will work.",
  "id": "55f9c02878514db1064f628c",
  "issues": [],
  "mentions": [
   {
    "screenName": "kelwang",
    "userId": "555e798015522ed4b3e0c232",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-09-16T19:16:56.745Z",
  "text": "@kelwang there isn't a Redshift specific SQL driver, but it looks like `pq` the postgres driver will work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<a href=\"https://groups.google.com/forum/#!topic/golang-nuts/YEG2dXfKYRI\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://groups.google.com/forum/#!topic/golang-nuts/YEG2dXfKYRI</a>",
  "id": "55f9c02a78514db1064f628e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-09-16T19:16:58.641Z",
  "text": "https://groups.google.com/forum/#!topic/golang-nuts/YEG2dXfKYRI",
  "unread": false,
  "urls": [
   {
    "url": "https://groups.google.com/forum/#!topic/golang-nuts/YEG2dXfKYRI"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<a href=\"https://beatsync.net/main/log20140903.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://beatsync.net/main/log20140903.html</a> (in japanes, but google&#39;s translate does a decent job)",
  "id": "55f9c05af66d320b4fbdde48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-09-16T19:17:46.177Z",
  "text": "https://beatsync.net/main/log20140903.html (in japanes, but google's translate does a decent job)",
  "unread": false,
  "urls": [
   {
    "url": "https://beatsync.net/main/log20140903.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "thanks",
  "id": "55f9c07daef03edd3ed0dcb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-09-16T19:18:21.777Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/FreekingDean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1836253?v=4&s=60",
   "displayName": "Dean Galvin",
   "gv": "4",
   "id": "5537d93f15522ed4b3df5f9f",
   "url": "/FreekingDean",
   "username": "FreekingDean",
   "v": 11
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> How would I connect to a local instance of DynamoDB",
  "id": "55f9cb4bc588a0de6eded9c1",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-09-16T20:04:27.577Z",
  "text": "@jasdel How would I connect to a local instance of DynamoDB",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"FreekingDean\" class=\"mention\">@FreekingDean</span> for local DynamoDB you just need to set your service client&#39;s endpoint to <code>http://localhost:8000</code>",
  "id": "55f9e35da2c7aa6b1086df23",
  "issues": [],
  "mentions": [
   {
    "screenName": "FreekingDean",
    "userId": "5537d93f15522ed4b3df5f9f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-09-16T21:47:09.306Z",
  "text": "@FreekingDean for local DynamoDB you just need to set your service client's endpoint to `http://localhost:8000`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "like:<pre><code class=\"go\">svc := dynamodb.New(aws.NewConfig().WithEndpoint(<span class=\"string\">\"http://localhost:8000\"</span>))</code></pre>",
  "id": "55f9e362aef03edd3ed0e5f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-09-16T21:47:14.212Z",
  "text": "like:\n```go\nsvc := dynamodb.New(aws.NewConfig().WithEndpoint(\"http://localhost:8000\"))\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Its also important to note that you do need to also ensure your client is using Credentials. They don&#39;t have to be valid credentials for Local DynamoDB but something is required. <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tools.DynamoDBLocal.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tools.DynamoDBLocal.html</a>",
  "id": "55f9e3a3aef03edd3ed0e604",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-09-16T21:48:19.926Z",
  "text": "Its also important to note that you do need to also ensure your client is using Credentials. They don't have to be valid credentials for Local DynamoDB but something is required. http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tools.DynamoDBLocal.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tools.DynamoDBLocal.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> , not sure if i missed something, I tried a simple select query, but got an TCP timed out, I did successfully connected to redshift with SQLworkbrench/j ",
  "id": "55f9e5800ed44a00046e9967",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-09-16T21:56:16.408Z",
  "text": "@jasdel , not sure if i missed something, I tried a simple select query, but got an TCP timed out, I did successfully connected to redshift with SQLworkbrench/j ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "````dbinfo := fmt.Sprintf(&quot;host=%s dbname=dw user=%s password=%s dbname=%s sslmode=disable&quot;, &quot;dw-dev.cadxwsw0k3tu.us-west-2.redshift.amazonaws.com&quot;, &quot;root&quot;, &quot;abc&quot;, &quot;dw&quot;)<br>    db, err := sql.Open(&quot;postgres&quot;, dbinfo)<br>    if err != nil {<br>        fmt.Fprintln(w, &quot;Connection: &quot;, err)<br>    }<br>    fmt.Println(&quot;here&quot;)<br>    fmt.Println(db)<br>    defer db.Close()<br>    _, err = db.Query(&quot;SELECT * FROM beliefapp_word_logging&quot;)<br>    if err != nil {<br>        fmt.Fprintln(w, &quot;Query: &quot;, err)<br>    }",
  "id": "55f9e5b6a2c7aa6b1086df7e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-09-16T21:57:10.572Z",
  "text": "````dbinfo := fmt.Sprintf(\"host=%s dbname=dw user=%s password=%s dbname=%s sslmode=disable\", \"dw-dev.cadxwsw0k3tu.us-west-2.redshift.amazonaws.com\", \"root\", \"abc\", \"dw\")\n\tdb, err := sql.Open(\"postgres\", dbinfo)\n\tif err != nil {\n\t\tfmt.Fprintln(w, \"Connection: \", err)\n\t}\n\tfmt.Println(\"here\")\n\tfmt.Println(db)\n\tdefer db.Close()\n\t_, err = db.Query(\"SELECT * FROM beliefapp_word_logging\")\n\tif err != nil {\n\t\tfmt.Fprintln(w, \"Query: \", err)\n\t}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "````",
  "id": "55f9e5b9aef03edd3ed0e650",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-09-16T21:57:13.431Z",
  "text": "````",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "Query:  dial tcp 54.202.190.223:5432: operation timed out",
  "id": "55f9e5d2a2c7aa6b1086df84",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-09-16T21:57:38.119Z",
  "text": "Query:  dial tcp 54.202.190.223:5432: operation timed out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "nevermind, guess my port is wrong",
  "id": "55f9e661c588a0de6edee124",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-09-16T22:00:01.342Z",
  "text": "nevermind, guess my port is wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "yeah, my port is wrong, all works fine, now",
  "id": "55f9e6b418e0111d7e4f3c21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-09-16T22:01:24.505Z",
  "text": "yeah, my port is wrong, all works fine, now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kelwang\" class=\"mention\">@kelwang</span> great! glad that works, are you using the pq SQL driver?",
  "id": "55f9e6dcaef03edd3ed0e682",
  "issues": [],
  "mentions": [
   {
    "screenName": "kelwang",
    "userId": "555e798015522ed4b3e0c232",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-09-16T22:02:04.536Z",
  "text": "@kelwang great! glad that works, are you using the pq SQL driver?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "yeah",
  "id": "55f9e756aef03edd3ed0e69e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-09-16T22:04:06.898Z",
  "text": "yeah",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "missing the port= 5439, by default postgres is 5432",
  "id": "55f9e76ba2c7aa6b1086dfc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-09-16T22:04:27.739Z",
  "text": "missing the port= 5439, by default postgres is 5432",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/ishail",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=60",
   "displayName": "shailesh kumar",
   "gv": "3",
   "id": "55e860f70fc9f982beaf8b8b",
   "url": "/ishail",
   "username": "ishail"
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> , I want to provide credential from code itself instead of using environment variable to connect aws. Can you suggest me a way to do so? ",
  "id": "56001b113a8116ed5f69937e",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T14:58:25.598Z",
  "text": "Hi @jasdel , I want to provide credential from code itself instead of using environment variable to connect aws. Can you suggest me a way to do so? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/ishail",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=60",
   "displayName": "shailesh kumar",
   "gv": "3",
   "id": "55e860f70fc9f982beaf8b8b",
   "url": "/ishail",
   "username": "ishail"
  },
  "html": "I tried to provide credential in<br>obj := ses.New(&amp;aws.Config{Region: aws.String(general.SESRegion)})<br>but not much successful ",
  "id": "56001b35c588a0de6edf8b0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T14:59:01.348Z",
  "text": "I tried to provide credential in \nobj := ses.New(&aws.Config{Region: aws.String(general.SESRegion)})\nbut not much successful ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"ishail\" class=\"mention\">@ishail</span>, will your application be reading the credentials from an external source, or those credentials be given to the application while running from some external source?",
  "id": "56003bc1a0ecf0e07a8dff0a",
  "issues": [],
  "mentions": [
   {
    "screenName": "ishail",
    "userId": "55e860f70fc9f982beaf8b8b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T17:17:53.596Z",
  "text": "Hi @ishail, will your application be reading the credentials from an external source, or those credentials be given to the application while running from some external source?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<p>There are two possible ways you could solve this problem:</p><p>1) Use the <code>credentials.StaticProvider</code> with <code>&amp;aws.Config{Credentials: credentials.NewStaticCredentials(&quot;key&quot;, &quot;secret&quot;, &quot;token&quot;)}</code> This will allow you to pass in the credential values so any service configured to use these credentials will make requests with them.</p><p>2) Use the <code>credentials.Provider</code> interface to build your own credentials provider which will retrieve the credentials from an external source, and supports expiring those credentials so they can be re-retrieved in a custom way. Then set the <code>Config.Credentials</code> field with your custom credentials provider.</p>",
  "id": "56003cfa0ed44a00046f464a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T17:23:06.505Z",
  "text": "There are two possible ways you could solve this problem:\n\n1) Use the `credentials.StaticProvider` with `&aws.Config{Credentials: credentials.NewStaticCredentials(\"key\", \"secret\", \"token\")}` This will allow you to pass in the credential values so any service configured to use these credentials will make requests with them.\n\n2) Use the `credentials.Provider` interface to build your own credentials provider which will retrieve the credentials from an external source, and supports expiring those credentials so they can be re-retrieved in a custom way. Then set the `Config.Credentials` field with your custom credentials provider.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<code>StaticProvider</code> is helpful when you want to sent credentials once, which will be valid for the lifetime of the application. <strong>Don&#39;t hard code your credentials in a committed file, or in code</strong> You don&#39;t want your credentials scrapped out of your repository and used without your approval.",
  "id": "56003d9b0ed44a00046f4660",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T17:25:47.756Z",
  "text": "`StaticProvider` is helpful when you want to sent credentials once, which will be valid for the lifetime of the application. **Don't hard code your credentials in a committed file, or in code** You don't want your credentials scrapped out of your repository and used without your approval.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Heres some links to the API docs which will give some more information about the credentials and providers. <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/StaticProvider.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">StaticProvider</a>, <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/Provider.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Provider interface</a>",
  "id": "56003e21463feefb419d979f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T17:28:01.047Z",
  "text": "Heres some links to the API docs which will give some more information about the credentials and providers. [StaticProvider](http://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/StaticProvider.html), [Provider interface](http://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/Provider.html)",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/StaticProvider.html"
   },
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/Provider.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/vtapaskar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5712290?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5712290?v=3&s=60",
   "displayName": "vtapaskar",
   "gv": "3",
   "id": "55f30e610fc9f982beb06867",
   "url": "/vtapaskar",
   "username": "vtapaskar"
  },
  "html": "Hi ",
  "id": "560065849f9fabb6673e7d0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T20:16:04.320Z",
  "text": "Hi ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/vtapaskar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5712290?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5712290?v=3&s=60",
   "displayName": "vtapaskar",
   "gv": "3",
   "id": "55f30e610fc9f982beb06867",
   "url": "/vtapaskar",
   "username": "vtapaskar"
  },
  "html": "I have question (and suggestion) for awserr interface. There is documented error  code list that are available from REST interface. <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html</a>. But in this library there is no way to get these codes. ",
  "id": "560065e0c588a0de6edf9b87",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T20:17:36.653Z",
  "text": "I have question (and suggestion) for awserr interface. There is documented error  code list that are available from REST interface. http://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html. But in this library there is no way to get these codes. ",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/vtapaskar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5712290?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5712290?v=3&s=60",
   "displayName": "vtapaskar",
   "gv": "3",
   "id": "55f30e610fc9f982beb06867",
   "url": "/vtapaskar",
   "username": "vtapaskar"
  },
  "html": "I would liked to have easy comparison, awserr.Code() == awserr.AccessDenied, rather than having to do string comparison. Its pretty error prone to compare string, better yet err = awserr.AccessDenied, which interface level comparison. Do you think it would be useful to add such functionality ?",
  "id": "560066539f9fabb6673e7d33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T20:19:31.608Z",
  "text": "I would liked to have easy comparison, awserr.Code() == awserr.AccessDenied, rather than having to do string comparison. Its pretty error prone to compare string, better yet err = awserr.AccessDenied, which interface level comparison. Do you think it would be useful to add such functionality ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"vtapaskar\" class=\"mention\">@vtapaskar</span> thanks for the suggestion and Idea. Each service API operation exposes a number of possible error conditions. Some of these errors are shared by name, but not necessary by meaning, between the services. Some, but not all, of these errors are defined in the  API models we generate the service client packages from.  Because of this having an awserr.&lt;type&gt; isn&#39;t really feasible across all service instances.<br>Though, with that said, we would be open to creating const strings of error codes per service. ",
  "id": "560068ef3a8116ed5f69a3fd",
  "issues": [],
  "mentions": [
   {
    "screenName": "vtapaskar",
    "userId": "55f30e610fc9f982beb06867",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T20:30:39.830Z",
  "text": "Hi @vtapaskar thanks for the suggestion and Idea. Each service API operation exposes a number of possible error conditions. Some of these errors are shared by name, but not necessary by meaning, between the services. Some, but not all, of these errors are defined in the  API models we generate the service client packages from.  Because of this having an awserr.<type> isn't really feasible across all service instances. \nThough, with that said, we would be open to creating const strings of error codes per service. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Would something like the following be good in your case:",
  "id": "560068fd0ed44a00046f4f21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T20:30:53.760Z",
  "text": "Would something like the following be good in your case:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<code>if awserr.Cmp(err, s3.ErrCodeAccessDenied)</code> ? this would basically be just a helper method for doing the casting and string compare to the const s3.ErrCodeAccessDenied",
  "id": "5600694ea0ecf0e07a8e08c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T20:32:14.518Z",
  "text": "`if awserr.Cmp(err, s3.ErrCodeAccessDenied)` ? this would basically be just a helper method for doing the casting and string compare to the const s3.ErrCodeAccessDenied",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/vtapaskar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5712290?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5712290?v=3&s=60",
   "displayName": "vtapaskar",
   "gv": "3",
   "id": "55f30e610fc9f982beb06867",
   "url": "/vtapaskar",
   "username": "vtapaskar"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>, yes your modification works just perfect.",
  "id": "56006b0b9f9fabb6673e7e3c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T20:39:39.518Z",
  "text": "@jasdel, yes your modification works just perfect.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Great, <span data-link-type=\"mention\" data-screen-name=\"vtapaskar\" class=\"mention\">@vtapaskar</span> if you&#39;d like to create an <a href=\"https://github.com/aws/aws-sdk-go/issues\" rel=\"nofollow\" target=\"_blank\" class=\"link\">issue</a>, and we can add it to our backlog, and anyone else can comment on it.",
  "id": "56006baba0ecf0e07a8e0949",
  "issues": [],
  "mentions": [
   {
    "screenName": "vtapaskar",
    "userId": "55f30e610fc9f982beb06867",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T20:42:19.163Z",
  "text": "Great, @vtapaskar if you'd like to create an [issue](https://github.com/aws/aws-sdk-go/issues), and we can add it to our backlog, and anyone else can comment on it.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/issues"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/vtapaskar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5712290?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5712290?v=3&s=60",
   "displayName": "vtapaskar",
   "gv": "3",
   "id": "55f30e610fc9f982beb06867",
   "url": "/vtapaskar",
   "username": "vtapaskar"
  },
  "html": "Sure will do that later in the evening tonight thanks <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ",
  "id": "56006c049f9fabb6673e7e79",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T20:43:48.365Z",
  "text": "Sure will do that later in the evening tonight thanks @jasdel ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "great thanks <span data-link-type=\"mention\" data-screen-name=\"vtapaskar\" class=\"mention\">@vtapaskar</span> let us know if you run into any other issues or have any other feedback",
  "id": "56007016c588a0de6edf9da2",
  "issues": [],
  "mentions": [
   {
    "screenName": "vtapaskar",
    "userId": "55f30e610fc9f982beb06867",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-21T21:01:10.070Z",
  "text": "great thanks @vtapaskar let us know if you run into any other issues or have any other feedback",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/cellofellow",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2760790?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2760790?v=4&s=60",
   "displayName": "Joshua Gardner",
   "gv": "4",
   "id": "55553a5115522ed4b3e067a1",
   "url": "/cellofellow",
   "username": "cellofellow",
   "v": 14
  },
  "html": "Does anybody know anything sort of like this <a href=\"https://pycwl.readthedocs.org/en/latest/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://pycwl.readthedocs.org/en/latest/</a> using Go?",
  "id": "5600a0db9f9fabb6673e863a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-09-22T00:29:15.070Z",
  "text": "Does anybody know anything sort of like this https://pycwl.readthedocs.org/en/latest/ using Go?",
  "unread": false,
  "urls": [
   {
    "url": "https://pycwl.readthedocs.org/en/latest/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cellofellow\" class=\"mention\">@cellofellow</span> , <a href=\"https://github.com/aws/aws-sdk-go/blob/master/service/cloudwatch/examples_test.go\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/blob/master/service/cloudwatch/examples_test.go</a> ",
  "id": "5600aa63a0ecf0e07a8e11fe",
  "issues": [],
  "mentions": [
   {
    "screenName": "cellofellow",
    "userId": "55553a5115522ed4b3e067a1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2015-09-22T01:09:55.572Z",
  "text": "@cellofellow , https://github.com/aws/aws-sdk-go/blob/master/service/cloudwatch/examples_test.go ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/blob/master/service/cloudwatch/examples_test.go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/ishail",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=60",
   "displayName": "shailesh kumar",
   "gv": "3",
   "id": "55e860f70fc9f982beaf8b8b",
   "url": "/ishail",
   "username": "ishail"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ... I&#39;m not writing credentials in committed file. I&#39;m providing credential at run time from another source, So I think it won&#39;t be an issue.",
  "id": "560111433a8116ed5f69b5ce",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-22T08:28:51.346Z",
  "text": "@jasdel ... I'm not writing credentials in committed file. I'm providing credential at run time from another source, So I think it won't be an issue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/ishail",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=60",
   "displayName": "shailesh kumar",
   "gv": "3",
   "id": "55e860f70fc9f982beaf8b8b",
   "url": "/ishail",
   "username": "ishail"
  },
  "html": "and til now, I&#39;m using only key/secret to connect with SES. Should I provide &quot;token&quot; too? and should it be unique every time?",
  "id": "560112340ed44a00046f60de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-22T08:32:52.002Z",
  "text": "and til now, I'm using only key/secret to connect with SES. Should I provide \"token\" too? and should it be unique every time?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/ishail",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=60",
   "displayName": "shailesh kumar",
   "gv": "3",
   "id": "55e860f70fc9f982beaf8b8b",
   "url": "/ishail",
   "username": "ishail"
  },
  "html": "Got it...I should keep token empty.",
  "id": "560113b3463feefb419db286",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-22T08:39:15.241Z",
  "text": "Got it...I should keep token empty.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/ishail",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=60",
   "displayName": "shailesh kumar",
   "gv": "3",
   "id": "55e860f70fc9f982beaf8b8b",
   "url": "/ishail",
   "username": "ishail"
  },
  "html": "BTW thanks <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ... I&#39;m using StaticProvider to connect with ses.",
  "id": "560113f0463feefb419db28c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-22T08:40:16.776Z",
  "text": "BTW thanks @jasdel ... I'm using StaticProvider to connect with ses.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ishail\" class=\"mention\">@ishail</span> great! glad that works. I agree in this case StaticProvider is the best option. ",
  "id": "560207e5f254567e29c44358",
  "issues": [],
  "mentions": [
   {
    "screenName": "ishail",
    "userId": "55e860f70fc9f982beaf8b8b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-23T02:01:09.581Z",
  "text": "@ishail great! glad that works. I agree in this case StaticProvider is the best option. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/ishail",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=60",
   "displayName": "shailesh kumar",
   "gv": "3",
   "id": "55e860f70fc9f982beaf8b8b",
   "url": "/ishail",
   "username": "ishail"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> , I think this package(<a href=\"http://github.com/aws/aws-sdk-go/service/ses\" rel=\"nofollow\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/service/ses</a>) doesn&#39;t have support to send emails through smtp. So, I&#39;m using &quot;<a href=\"http://github.com/go-gomail/gomail&quot\" rel=\"nofollow\" target=\"_blank\" class=\"link\">github.com/go-gomail/gomail&quot</a>; to send smtp emails but this package doesn&#39;t return any messageId. Can you help me to figure out a way?",
  "id": "5602cdcbc588a0de6edffa65",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-23T16:05:31.850Z",
  "text": "@jasdel , I think this package(github.com/aws/aws-sdk-go/service/ses) doesn't have support to send emails through smtp. So, I'm using \"github.com/go-gomail/gomail\" to send smtp emails but this package doesn't return any messageId. Can you help me to figure out a way?",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/aws/aws-sdk-go/service/ses"
   },
   {
    "url": "http://github.com/go-gomail/gomail&quot"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"ishail\" class=\"mention\">@ishail</span>, Is the problem you&#39;re encountering, that when you send a message to an Amazon SES SMTP endpoint you&#39;re not getting the MessageId which you normally get if you used the SDK&#39;s SES.SendEmail API operation?",
  "id": "5602f0d640f4ecd92f7168c6",
  "issues": [],
  "mentions": [
   {
    "screenName": "ishail",
    "userId": "55e860f70fc9f982beaf8b8b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-23T18:35:02.273Z",
  "text": "Hi @ishail, Is the problem you're encountering, that when you send a message to an Amazon SES SMTP endpoint you're not getting the MessageId which you normally get if you used the SDK's SES.SendEmail API operation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "If so, the only to get the message ID is if the SES API SendEmail or SendRawEmail is used.  Is your application unable to use the SES API to send the emails?",
  "id": "5602f4b15c1379fe645938c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-23T18:51:29.472Z",
  "text": "If so, the only to get the message ID is if the SES API SendEmail or SendRawEmail is used.  Is your application unable to use the SES API to send the emails?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/ishail",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=60",
   "displayName": "shailesh kumar",
   "gv": "3",
   "id": "55e860f70fc9f982beaf8b8b",
   "url": "/ishail",
   "username": "ishail"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> , SDK&#39;s ses.SendEmail/SendRawEmail is working perfectly fine. But I was wondering whether this SDK(<a href=\"http://github.com/aws/aws-sdk-go/service/ses\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://github.com/aws/aws-sdk-go/service/ses</a>) have supports to send mails using SMTP username/password instead of key/secret pair.",
  "id": "5602f6355c1379fe6459392d",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-23T18:57:57.950Z",
  "text": "@jasdel , SDK's ses.SendEmail/SendRawEmail is working perfectly fine. But I was wondering whether this SDK(http://github.com/aws/aws-sdk-go/service/ses) have supports to send mails using SMTP username/password instead of key/secret pair.",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/aws/aws-sdk-go/service/ses"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Ah ok I understand now. No the SDK&#39;s SES service client can only use AWS credential key/secret pair. It does not support the SMTP protocol.",
  "id": "5602fa93e85e8d3372528cbd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-23T19:16:35.730Z",
  "text": "Ah ok I understand now. No the SDK's SES service client can only use AWS credential key/secret pair. It does not support the SMTP protocol.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/ishail",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6962487?v=3&s=60",
   "displayName": "shailesh kumar",
   "gv": "3",
   "id": "55e860f70fc9f982beaf8b8b",
   "url": "/ishail",
   "username": "ishail"
  },
  "html": "okay :)..shall work for that myself",
  "id": "56031112a0ecf0e07a8e740a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-09-23T20:52:34.621Z",
  "text": "okay :)..shall work for that myself",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/maciejmrowiec",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1391631?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1391631?v=3&s=60",
   "displayName": "Maciej Mrowiec",
   "gv": "3",
   "id": "560cff9cd33f749381a7e98f",
   "url": "/maciejmrowiec",
   "username": "maciejmrowiec"
  },
  "html": "Does anyone know if  &quot;S3&quot; client type is thread-safe ? Could not find any mention in the documentation.",
  "id": "560d005a552ed791327a2828",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-10-01T09:43:54.112Z",
  "text": "Does anyone know if  \"S3\" client type is thread-safe ? Could not find any mention in the documentation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"maciejmrowiec\" class=\"mention\">@maciejmrowiec</span> you are safe to use the S3 client across multiple goroutines. All of the service clients are safe to use their operations concurrently. The only parts which are not safe to use concurrently are modifying the handlers or Config of the service clients instance",
  "id": "560d7c0dd56e15e22615b873",
  "issues": [],
  "mentions": [
   {
    "screenName": "maciejmrowiec",
    "userId": "560cff9cd33f749381a7e98f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-10-01T18:31:41.642Z",
  "text": "Hi @maciejmrowiec you are safe to use the S3 client across multiple goroutines. All of the service clients are safe to use their operations concurrently. The only parts which are not safe to use concurrently are modifying the handlers or Config of the service clients instance",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jjeffery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/458924?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/458924?v=4&s=60",
   "displayName": "John Jeffery",
   "gv": "4",
   "id": "55b9c0e40fc9f982beab7dcc",
   "url": "/jjeffery",
   "username": "jjeffery",
   "v": 9
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>. I&#39;ve updated PR 316 (SimpleDB implementation) to work with breaking changes since the PR was created. Hopefully somebody will have some time soon to review. Please let me know if there is anything I can do to improve the PR.",
  "id": "5613892b76d984a3587567c1",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-10-06T08:41:15.531Z",
  "text": "Hi @jasdel. I've updated PR 316 (SimpleDB implementation) to work with breaking changes since the PR was created. Hopefully somebody will have some time soon to review. Please let me know if there is anything I can do to improve the PR.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"jjeffery\" class=\"mention\">@jjeffery</span> thanks for updating the PR to sync with latest SDK. I&#39;ll make sure to review it tonight. I think this change will be good addition to the SDK. ",
  "id": "56140078261e77ba2dbaf891",
  "issues": [],
  "mentions": [
   {
    "screenName": "jjeffery",
    "userId": "55b9c0e40fc9f982beab7dcc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-10-06T17:10:16.615Z",
  "text": "Hi @jjeffery thanks for updating the PR to sync with latest SDK. I'll make sure to review it tonight. I think this change will be good addition to the SDK. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "is there a way to construct a credentials struct that is based on a IAM Role attached to an EC2 instance that the go routine is running in?  We are currently doing some self-signing of API Gateway REST API calls and have it working when credentials are provided via ~/.aws/credentials or via env variables but neither of those are available when the Role is associated to the EC2 instance",
  "id": "56312848b1bb53dd75724e58",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2015-10-28T19:55:52.196Z",
  "text": "is there a way to construct a credentials struct that is based on a IAM Role attached to an EC2 instance that the go routine is running in?  We are currently doing some self-signing of API Gateway REST API calls and have it working when credentials are provided via ~/.aws/credentials or via env variables but neither of those are available when the Role is associated to the EC2 instance",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"jdonboch\" class=\"mention\">@jdonboch</span> by default the SDK will grab the EC2 instance role and associated credentials if they are set.  Are you using the SDK&#39;s default credential chain? If you are not modifying the <code>aws.Config.Credentials</code>value you probably are.  As a test would you mind setting your credentials to the EC2RoleProvider and inspect the error?</p><pre><code class=\"go\"><span class=\"comment\">// Using S3 as example</span>\nsvc := s3.New(&amp;aws.Config{Credentials: ec2rolecreds.NewCredentials(<span class=\"constant\">nil</span>, <span class=\"number\">10</span>*time.Minutes)})\nresult, err := s3.GetBucketLocation(<span class=\"comment\">/*...*/</span>)</code></pre><p>Printing the error should give some insight into why the EC2 instance role credentials aren&#39;t being retrieved.</p>",
  "id": "56313c57738e06e175f46f30",
  "issues": [],
  "mentions": [
   {
    "screenName": "jdonboch",
    "userId": "55a6c1285e0d51bd787b7c3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2015-10-28T21:21:27.580Z",
  "text": "@jdonboch by default the SDK will grab the EC2 instance role and associated credentials if they are set.  Are you using the SDK's default credential chain? If you are not modifying the `aws.Config.Credentials`value you probably are.  As a test would you mind setting your credentials to the EC2RoleProvider and inspect the error?\n\n```go\n// Using S3 as example\nsvc := s3.New(&aws.Config{Credentials: ec2rolecreds.NewCredentials(nil, 10*time.Minutes)})\nresult, err := s3.GetBucketLocation(/*...*/)\n```\nPrinting the error should give some insight into why the EC2 instance role credentials aren't being retrieved.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I also created <span data-link-type=\"issue\" data-issue=\"413\" class=\"issue\">#413</span> to help improve the <code>credentails.ChainProvider</code> error message.",
  "id": "56313c89b1bb53dd757250f0",
  "issues": [
   {
    "number": "413"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-10-28T21:22:17.678Z",
  "text": "I also created #413 to help improve the `credentails.ChainProvider` error message.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> We weren&#39;t using the ec2 role provider, we&#39;ll check that out",
  "id": "56314459fee0347118af0cba",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2015-10-28T21:55:37.806Z",
  "text": "@jasdel We weren't using the ec2 role provider, we'll check that out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Great, hope that helps. The issue is most likely to do with something to do with how the Instance roles are configured. but please let us know if there looks to be an issue with the SDK.",
  "id": "56314543829f23db4a4b24ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-10-28T21:59:31.522Z",
  "text": "Great, hope that helps. The issue is most likely to do with something to do with how the Instance roles are configured. but please let us know if there looks to be an issue with the SDK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-10-29T08:43:33.865Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "<p>Hello aws gophers. :gopher: I have question about putting <code>Content-MD5</code> header when using <code>s3.PutObject</code>.</p><p>Related <span data-link-type=\"issue\" data-issue=\"177\" class=\"issue\">#177</span>, <code>service/s3/customizations.go</code> injects its behavior of creating request. (It\u2019s useful!) For integrity check, I wanna set <code>Content-MD5</code> response header when I put object to s3. <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html</a> says, <code>Content-MD5</code> is available for ObjectPUT operation. How can I do that when using <code>s3.PutObject</code> and so on.</p>",
  "id": "5631dbe86afab45a2ce6540c",
  "issues": [
   {
    "number": "177"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-10-29T08:42:16.093Z",
  "text": "Hello aws gophers. :gopher: I have question about putting `Content-MD5` header when using `s3.PutObject`.\n\nRelated #177, `service/s3/customizations.go` injects its behavior of creating request. (It\u2019s useful!) For integrity check, I wanna set `Content-MD5` response header when I put object to s3. http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html says, `Content-MD5` is available for ObjectPUT operation. How can I do that when using `s3.PutObject` and so on.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "<p>Ah, I wrote a small example using current API. (borrow <code>func contentMD5</code> ) :)</p><p><a href=\"https://gist.github.com/suzuken/96569a921f800acd8802\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/suzuken/96569a921f800acd8802</a></p>",
  "id": "5631e0106afab45a2ce65546",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-10-29T09:00:00.205Z",
  "text": "Ah, I wrote a small example using current API. (borrow `func contentMD5` ) :)\n\nhttps://gist.github.com/suzuken/96569a921f800acd8802",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/suzuken/96569a921f800acd8802"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"suzuken\" class=\"mention\">@suzuken</span> that is correct way to get the MD5 for a request body.  You can also add your <code>contentMD5(req)</code> as a request handlers of the service like mentioned in <span data-link-type=\"issue\" data-issue=\"414\" class=\"issue\">#414</span>. This workaround will make it easier for you to add the MD5 generically.",
  "id": "563285c3196bdeec543b8f6e",
  "issues": [
   {
    "number": "414"
   }
  ],
  "mentions": [
   {
    "screenName": "suzuken",
    "userId": "5424e135163965c9bc206c69",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-10-29T20:46:59.896Z",
  "text": "Hi @suzuken that is correct way to get the MD5 for a request body.  You can also add your `contentMD5(req)` as a request handlers of the service like mentioned in #414. This workaround will make it easier for you to add the MD5 generically.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "Thank you <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>, I got it. <span data-link-type=\"issue\" data-issue=\"414\" class=\"issue\">#414</span> sounds good to me.",
  "id": "5632bf93c60dc89d53ec6d49",
  "issues": [
   {
    "number": "414"
   }
  ],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2015-10-30T00:53:39.319Z",
  "text": "Thank you @jasdel, I got it. #414 sounds good to me.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "Hiya, I think there may be a bug in s3manager that keeps file descriptors open. Either that or I\u2019m doing something wrong. (code <a href=\"https://gist.github.com/dwieeb/737ff96e4eee6ab6d4dc#file-s3-go\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/dwieeb/737ff96e4eee6ab6d4dc#file-s3-go</a>) (lsof <a href=\"https://gist.githubusercontent.com/dwieeb/737ff96e4eee6ab6d4dc/raw/3770613661f0761b8fd0ca5668badf42e1e816e1/gistfile1.txt)\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.githubusercontent.com/dwieeb/737ff96e4eee6ab6d4dc/raw/3770613661f0761b8fd0ca5668badf42e1e816e1/gistfile1.txt)</a>",
  "id": "5637af513003682f1408c444",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-02T18:45:37.842Z",
  "text": "Hiya, I think there may be a bug in s3manager that keeps file descriptors open. Either that or I\u2019m doing something wrong. (code https://gist.github.com/dwieeb/737ff96e4eee6ab6d4dc#file-s3-go) (lsof https://gist.githubusercontent.com/dwieeb/737ff96e4eee6ab6d4dc/raw/3770613661f0761b8fd0ca5668badf42e1e816e1/gistfile1.txt)",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/dwieeb/737ff96e4eee6ab6d4dc#file-s3-go"
   },
   {
    "url": "https://gist.githubusercontent.com/dwieeb/737ff96e4eee6ab6d4dc/raw/3770613661f0761b8fd0ca5668badf42e1e816e1/gistfile1.txt)"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "over time, it seems amazon closes the http connection that was left open, but then I\u2019m left with a protocol-less socket ",
  "id": "5637af97a530033014e3919a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-02T18:46:47.747Z",
  "text": "over time, it seems amazon closes the http connection that was left open, but then I\u2019m left with a protocol-less socket ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dwieeb\" class=\"mention\">@dwieeb</span> Thanks for letting us know.  Would you mind creating a <a href=\"https://github.com/aws/aws-sdk-go/issues\" rel=\"nofollow\" target=\"_blank\" class=\"link\">issue</a> on on Github. initially looking at this I don&#39;t think you&#39;re doing anything wrong, and this might be a bug in the SDK",
  "id": "5637ce26a530033014e39e16",
  "issues": [],
  "mentions": [
   {
    "screenName": "dwieeb",
    "userId": "5564bfc715522ed4b3e0f857",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-02T20:57:10.930Z",
  "text": "@dwieeb Thanks for letting us know.  Would you mind creating a [issue](https://github.com/aws/aws-sdk-go/issues) on on Github. initially looking at this I don't think you're doing anything wrong, and this might be a bug in the SDK",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/issues"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "okay, sure",
  "id": "5637d1140800da954de6800d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-02T21:09:40.541Z",
  "text": "okay, sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> this is likely my fault. the lsof output is weird, sorry ",
  "id": "5638d9fcdcafd1f075084f3f",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-03T15:59:56.247Z",
  "text": "@jasdel this is likely my fault. the lsof output is weird, sorry ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dwieeb",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/236501?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/236501?v=4&s=60",
   "displayName": "dwieeb",
   "gv": "4",
   "id": "5564bfc715522ed4b3e0f857",
   "url": "/dwieeb",
   "username": "dwieeb",
   "v": 5
  },
  "html": "I forgot to close a  connection to a completely unrelated service and the ipv4 descriptors were bubbling up and showing amazon urls. :confused: ",
  "id": "5638da42a530033014e3dbc9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-03T16:01:06.108Z",
  "text": "I forgot to close a  connection to a completely unrelated service and the ipv4 descriptors were bubbling up and showing amazon urls. :confused: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dwieeb\" class=\"mention\">@dwieeb</span> great thanks for letting us know. Don&#39;t hesitate to contact us or file an issue if you do discover an issue with the SDK or have questions :)",
  "id": "56392c56fbaf60993a67dc0f",
  "issues": [],
  "mentions": [
   {
    "screenName": "dwieeb",
    "userId": "5564bfc715522ed4b3e0f857",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-03T21:51:18.335Z",
  "text": "@dwieeb great thanks for letting us know. Don't hesitate to contact us or file an issue if you do discover an issue with the SDK or have questions :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "Hi gophers. I looked this issue <span data-link-type=\"issue\" data-issue=\"208\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#208</span>, and wonder if I may not put <code>Content-MD5</code>to s3 put-object request for integrity checking when using signature version 4 signing. Most of our use cases, we put <code>Content-MD5</code> headers for integrity checking. It\u2019s not required when using s3 with aws-sdk-go ?",
  "id": "563af4e621a1a36b64a57b9a",
  "issues": [
   {
    "number": "208",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-05T06:19:18.277Z",
  "text": "Hi gophers. I looked this issue https://github.com/aws/aws-sdk-go/issues/208, and wonder if I may not put `Content-MD5`to s3 put-object request for integrity checking when using signature version 4 signing. Most of our use cases, we put `Content-MD5` headers for integrity checking. It\u2019s not required when using s3 with aws-sdk-go ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "Actually, I\u2019m not familiar with signature version 4 signing.. ",
  "id": "563af505c74a90c744794c94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-05T06:19:49.368Z",
  "text": "Actually, I\u2019m not familiar with signature version 4 signing.. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "Ah, <a href=\"https://docs.aws.amazon.com/general/latest/gr/sigv4-signed-request-examples.html#sig-v4-examples-post\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/general/latest/gr/sigv4-signed-request-examples.html#sig-v4-examples-post</a> this example is helpful for me. When using POST request, request string is used for calculating sha256 for using signature. So, it\u2019s not only for authenticate, but also including integrity check for contents... ",
  "id": "563af7eb5680530d270481b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-05T06:32:11.536Z",
  "text": "Ah, https://docs.aws.amazon.com/general/latest/gr/sigv4-signed-request-examples.html#sig-v4-examples-post this example is helpful for me. When using POST request, request string is used for calculating sha256 for using signature. So, it\u2019s not only for authenticate, but also including integrity check for contents... ",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/general/latest/gr/sigv4-signed-request-examples.html#sig-v4-examples-post"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I need to call a currently undocumented REST API from my code, namely <a href=\"https://console.aws.amazon.com/lambda/services/functions/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://console.aws.amazon.com/lambda/services/functions/</a>&lt;my-func-name&gt;/integrations/event-source/id/scheduled-event, which creates a scheduled cron trigger for my lambda function. What is the best way to implement this?",
  "id": "564873e05b7a2ea84f0833a6",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-15T12:00:32.718Z",
  "text": "@jasdel I need to call a currently undocumented REST API from my code, namely https://console.aws.amazon.com/lambda/services/functions/<my-func-name>/integrations/event-source/id/scheduled-event, which creates a scheduled cron trigger for my lambda function. What is the best way to implement this?",
  "unread": false,
  "urls": [
   {
    "url": "https://console.aws.amazon.com/lambda/services/functions/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> this would be a great feature to request on the <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=87\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Route53 forums</a>. Getting this feature added would be better than using the undocumented api. since the api could change at anytime",
  "id": "564a26a010f6aea94fddd088",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-16T18:55:28.773Z",
  "text": "Hi @cristim this would be a great feature to request on the [Route53 forums](https://forums.aws.amazon.com/forum.jspa?forumID=87). Getting this feature added would be better than using the undocumented api. since the api could change at anytime",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=87"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "Congrats on the v1.0.0 release! :smile: ",
  "id": "564e930c887ac33662a89265",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-11-20T03:27:08.315Z",
  "text": "Congrats on the v1.0.0 release! :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Hi, I just noticed the 1.0.0 release. Congrats. I have a (probably stupid) question. Will it be possible to write AWS lambda functions now via golang ? ",
  "id": "564e96cd4d5f17da1cb7dec0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-20T03:43:09.433Z",
  "text": "Hi, I just noticed the 1.0.0 release. Congrats. I have a (probably stupid) question. Will it be possible to write AWS lambda functions now via golang ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "I looked at the lambda docs and nothing is mentioned. So I suppose that is still not possible, without any hacks. But wanted to confirm.",
  "id": "564e96ea887ac33662a89294",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-20T03:43:38.742Z",
  "text": "I looked at the lambda docs and nothing is mentioned. So I suppose that is still not possible, without any hacks. But wanted to confirm.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "<p>Hi <span data-link-type=\"mention\" data-screen-name=\"psankar\" class=\"mention\">@psankar</span> , I\u2019m not using aws-sdk-go for createing Lambda functions, but it seems available. See below:</p><p>Struct: lambda.Lambda \u2014 AWS SDK for Go<br><a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/lambda/Lambda.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/lambda/Lambda.html</a></p>",
  "id": "564e9c8311ff1d3016e22215",
  "issues": [],
  "mentions": [
   {
    "screenName": "psankar",
    "userId": "55513f5715522ed4b3e03f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-20T04:07:31.601Z",
  "text": "Hi @psankar , I\u2019m not using aws-sdk-go for createing Lambda functions, but it seems available. See below:\n\nStruct: lambda.Lambda \u2014 AWS SDK for Go\nhttp://docs.aws.amazon.com/sdk-for-go/api/service/lambda/Lambda.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/lambda/Lambda.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"suzuken\" class=\"mention\">@suzuken</span> Thanks, we&#39;re excited to be launching v1.0 of the Go SDK. <span data-link-type=\"mention\" data-screen-name=\"psankar\" class=\"mention\">@psankar</span> you&#39;re correct, Lambda doesn&#39;t nativity support Go yet, but definitely send in your feedback requesting it. You are able to use arbitrary binary executable with Lambda though, <a href=\"https://aws.amazon.com/blogs/compute/running-executables-in-aws-lambda/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://aws.amazon.com/blogs/compute/running-executables-in-aws-lambda/</a>",
  "id": "564ea43bb085313316562da4",
  "issues": [],
  "mentions": [
   {
    "screenName": "suzuken",
    "userId": "5424e135163965c9bc206c69",
    "userIds": []
   },
   {
    "screenName": "psankar",
    "userId": "55513f5715522ed4b3e03f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-20T04:40:27.950Z",
  "text": "Hi @suzuken Thanks, we're excited to be launching v1.0 of the Go SDK. @psankar you're correct, Lambda doesn't nativity support Go yet, but definitely send in your feedback requesting it. You are able to use arbitrary binary executable with Lambda though, https://aws.amazon.com/blogs/compute/running-executables-in-aws-lambda/",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/blogs/compute/running-executables-in-aws-lambda/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Thanks. <span data-link-type=\"mention\" data-screen-name=\"suzuken\" class=\"mention\">@suzuken</span> Thanks. But that is to change the code in the lambda etc. What I wanted was a way to add a golang code as the lambda function.",
  "id": "564ea47811ff1d3016e22386",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   },
   {
    "screenName": "suzuken",
    "userId": "5424e135163965c9bc206c69",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-20T04:41:28.821Z",
  "text": "@jasdel Thanks. @suzuken Thanks. But that is to change the code in the lambda etc. What I wanted was a way to add a golang code as the lambda function.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "<p>Ah, I got it.</p><p>AWS Lambda Functions in Go - There\u2019s no place like ::1<br><a href=\"http://blog.0x82.com/2014/11/24/aws-lambda-functions-in-go/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://blog.0x82.com/2014/11/24/aws-lambda-functions-in-go/</a></p><p>I saw this articles before..</p>",
  "id": "564ea4a11d13e5b823958c12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-20T04:42:09.087Z",
  "text": "Ah, I got it.\n\nAWS Lambda Functions in Go - There\u2019s no place like ::1\nhttp://blog.0x82.com/2014/11/24/aws-lambda-functions-in-go/\n\nI saw this articles before..",
  "unread": false,
  "urls": [
   {
    "url": "http://blog.0x82.com/2014/11/24/aws-lambda-functions-in-go/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Yeah. they are hacks and require node etc. My team mates will say that they will rather write in node instead of wrapping golang over js :)",
  "id": "564ea4ccb085313316562dc9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-20T04:42:52.930Z",
  "text": "Yeah. they are hacks and require node etc. My team mates will say that they will rather write in node instead of wrapping golang over js :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Also don&#39;t forget to vote for Go on AWS&#39;s latest question of which language  should be added next, <a href=\"https://twitter.com/awscloud/status/659795641204260864\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://twitter.com/awscloud/status/659795641204260864</a>",
  "id": "564ea4d11d13e5b823958c13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-20T04:42:57.981Z",
  "text": "Also don't forget to vote for Go on AWS's latest question of which language  should be added next, https://twitter.com/awscloud/status/659795641204260864",
  "unread": false,
  "urls": [
   {
    "url": "https://twitter.com/awscloud/status/659795641204260864"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "Oh, Go is so popular :)",
  "id": "564ea4e7887ac33662a89366",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-20T04:43:19.691Z",
  "text": "Oh, Go is so popular :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "already voted :)",
  "id": "564ea4efb085313316562dcf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-20T04:43:27.132Z",
  "text": "already voted :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": ":)",
  "id": "564ea5301d13e5b823958c17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-11-20T04:44:32.938Z",
  "text": ":)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/tmaiaroto",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/202653?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/202653?v=4&s=60",
   "displayName": "Tom Maiaroto",
   "gv": "4",
   "id": "52c82c47ed5ab0b3bf05315e",
   "url": "/tmaiaroto",
   "username": "tmaiaroto",
   "v": 10
  },
  "html": "Absolutely Go should be next :)",
  "id": "5650081e54ba2ca24260bd14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-21T05:58:54.925Z",
  "text": "Absolutely Go should be next :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/tmaiaroto",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/202653?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/202653?v=4&s=60",
   "displayName": "Tom Maiaroto",
   "gv": "4",
   "id": "52c82c47ed5ab0b3bf05315e",
   "url": "/tmaiaroto",
   "username": "tmaiaroto",
   "v": 10
  },
  "html": "but Amazon will need to adjust billing to bill in increments lower than 100ms if they supported Go :)",
  "id": "56500998a051fea34242d9e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-21T06:05:12.766Z",
  "text": "but Amazon will need to adjust billing to bill in increments lower than 100ms if they supported Go :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/tmaiaroto",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/202653?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/202653?v=4&s=60",
   "displayName": "Tom Maiaroto",
   "gv": "4",
   "id": "52c82c47ed5ab0b3bf05315e",
   "url": "/tmaiaroto",
   "username": "tmaiaroto",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"suzuken\" class=\"mention\">@suzuken</span> also see: <a href=\"https://github.com/jasonmoo/lambda_proc\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/jasonmoo/lambda_proc</a> ... it makes better use of container re-use and therefore &quot;warm&quot; runs are far faster. it is the best method I&#39;ve come across so far.  I wrote a post on Medium about my experience. <a href=\"https://medium.com/@shift8creative/go-amazon-lambda-7e95a147cec8#.rjwroypuj\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://medium.com/@shift8creative/go-amazon-lambda-7e95a147cec8#.rjwroypuj</a>  should be a link there with an example project too that uses Lambda and API Gateway. Fork away! ",
  "id": "56500a61a051fea34242da01",
  "issues": [],
  "mentions": [
   {
    "screenName": "suzuken",
    "userId": "5424e135163965c9bc206c69",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-21T06:08:33.763Z",
  "text": "@suzuken also see: https://github.com/jasonmoo/lambda_proc ... it makes better use of container re-use and therefore \"warm\" runs are far faster. it is the best method I've come across so far.  I wrote a post on Medium about my experience. https://medium.com/@shift8creative/go-amazon-lambda-7e95a147cec8#.rjwroypuj  should be a link there with an example project too that uses Lambda and API Gateway. Fork away! ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/jasonmoo/lambda_proc"
   },
   {
    "url": "https://medium.com/@shift8creative/go-amazon-lambda-7e95a147cec8#.rjwroypuj"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "Hi tmaiaroto, sounds good to me! Good example, and lambda_proc is very simple way to spawn Go process and worked as thin wrapper of working with Go. It\u2019s cool.  <a href=\"https://github.com/tmaiaroto/go-lambda-geoip\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/tmaiaroto/go-lambda-geoip</a> is also interesting for me in relation to performance consideration. (in some case, enough performance.)",
  "id": "56501d8606a214f1080b1383",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-11-21T07:30:14.806Z",
  "text": "Hi tmaiaroto, sounds good to me! Good example, and lambda_proc is very simple way to spawn Go process and worked as thin wrapper of working with Go. It\u2019s cool.  https://github.com/tmaiaroto/go-lambda-geoip is also interesting for me in relation to performance consideration. (in some case, enough performance.)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/tmaiaroto/go-lambda-geoip"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gerred",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/365659?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/365659?v=4&s=60",
   "displayName": "Gerred Dillon",
   "gv": "4",
   "id": "529c6e53ed5ab0b3bf04de2a",
   "url": "/gerred",
   "username": "gerred",
   "v": 25
  },
  "html": "hey <span data-link-type=\"mention\" data-screen-name=\"tmaiaroto\" class=\"mention\">@tmaiaroto</span> thanks for that post.",
  "id": "565344ac3146b37569411d47",
  "issues": [],
  "mentions": [
   {
    "screenName": "tmaiaroto",
    "userId": "52c82c47ed5ab0b3bf05315e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-23T16:54:04.233Z",
  "text": "hey @tmaiaroto thanks for that post.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gerred",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/365659?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/365659?v=4&s=60",
   "displayName": "Gerred Dillon",
   "gv": "4",
   "id": "529c6e53ed5ab0b3bf04de2a",
   "url": "/gerred",
   "username": "gerred",
   "v": 25
  },
  "html": "I was wondering how well that owrked.",
  "id": "565344b6f10fe3736986fab7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-23T16:54:14.074Z",
  "text": "I was wondering how well that owrked.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gerred",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/365659?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/365659?v=4&s=60",
   "displayName": "Gerred Dillon",
   "gv": "4",
   "id": "529c6e53ed5ab0b3bf04de2a",
   "url": "/gerred",
   "username": "gerred",
   "v": 25
  },
  "html": "worked.",
  "id": "565344b6f10fe3736986fab8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-23T16:54:14.922Z",
  "text": "worked.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gerred",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/365659?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/365659?v=4&s=60",
   "displayName": "Gerred Dillon",
   "gv": "4",
   "id": "529c6e53ed5ab0b3bf04de2a",
   "url": "/gerred",
   "username": "gerred",
   "v": 25
  },
  "html": "though maybe that&#39;s worth optimizing from JSON to something like a protobuf",
  "id": "565344faf10fe3736986fad6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-23T16:55:22.540Z",
  "text": "though maybe that's worth optimizing from JSON to something like a protobuf",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gerred",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/365659?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/365659?v=4&s=60",
   "displayName": "Gerred Dillon",
   "gv": "4",
   "id": "529c6e53ed5ab0b3bf04de2a",
   "url": "/gerred",
   "username": "gerred",
   "v": 25
  },
  "html": "wonder how tight you could make that overhead.",
  "id": "565345003146b37569411d6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-11-23T16:55:28.721Z",
  "text": "wonder how tight you could make that overhead.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-11-26T04:20:46.353Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "Hi gophers. How can I mock aws session in aws-sdk-go? I write an application using <code>s3manager.NewUploader</code>. When running <code>go test</code>,  I don\u2019t wanna actually upload object. How do you deal with it?",
  "id": "5656885b0d627297620cdaf6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-11-26T04:19:39.598Z",
  "text": "Hi gophers. How can I mock aws session in aws-sdk-go? I write an application using `s3manager.NewUploader`. When running `go test`,  I don\u2019t wanna actually upload object. How do you deal with it?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "ah, use <code>github.com/aws/aws-sdk-go/awstesting/integration/smoke</code> seems good choice.. I\u2019ll look this.",
  "id": "5656a19163bfb30b58e47c86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-11-26T06:07:13.647Z",
  "text": "ah, use `github.com/aws/aws-sdk-go/awstesting/integration/smoke` seems good choice.. I\u2019ll look this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/lox",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15758?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15758?v=4&s=60",
   "displayName": "Lachlan Donald",
   "gv": "4",
   "id": "529c6e8ced5ab0b3bf04deca",
   "url": "/lox",
   "username": "lox",
   "v": 14
  },
  "html": "I&#39;m trying to figure out how to encode/decode ecs.RegisterTaskDefinitionInput to JSON. I&#39;ve got my ecs tasks in JSON I&#39;d like to use the API to register them. I&#39;d assumed it would be easy, but the structs lack the JSON tags. ",
  "id": "565d02f53734bd42649a3a43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-01T02:16:21.592Z",
  "text": "I'm trying to figure out how to encode/decode ecs.RegisterTaskDefinitionInput to JSON. I've got my ecs tasks in JSON I'd like to use the API to register them. I'd assumed it would be easy, but the structs lack the JSON tags. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"lox\" class=\"mention\">@lox</span> thanks for the question. Over at <span data-link-type=\"issue\" data-issue=\"271\" class=\"issue\">#271</span>, there is a discussion how the SDK should marshal service operation input/output as alternative encoding formats. The thread hasn&#39;t had much discussion lately, but we can definitely kick it off again. ",
  "id": "565d0e1df0893e5f6b72a542",
  "issues": [
   {
    "number": "271"
   }
  ],
  "mentions": [
   {
    "screenName": "lox",
    "userId": "529c6e8ced5ab0b3bf04deca",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-01T03:03:57.370Z",
  "text": "@lox thanks for the question. Over at #271, there is a discussion how the SDK should marshal service operation input/output as alternative encoding formats. The thread hasn't had much discussion lately, but we can definitely kick it off again. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-12-01T03:06:27.277Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "The SDK doesn&#39;t provide a clean way to marshal the input/output as non aws protocol encoding. In the general case <code>json:&quot;,omitempty&quot;</code> empty could be added for the nil fields. Which issues are you seeing specifically with <code>RegisterTaskDefinitionInput</code>",
  "id": "565d0ea73734bd42649a3b60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-01T03:06:15.611Z",
  "text": "The SDK doesn't provide a clean way to marshal the input/output as non aws protocol encoding. In the general case `json:\",omitempty\"` empty could be added for the nil fields. Which issues are you seeing specifically with `RegisterTaskDefinitionInput`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/lox",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15758?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15758?v=4&s=60",
   "displayName": "Lachlan Donald",
   "gv": "4",
   "id": "529c6e8ced5ab0b3bf04deca",
   "url": "/lox",
   "username": "lox",
   "v": 14
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>, I&#39;m actually trying to go the other way. I have an ECS task definition on disk in json format and I&#39;m trying to decode it into a RegisterTaskDefinitionInput object. ",
  "id": "565d41b13734bd42649a4079",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-01T06:44:01.081Z",
  "text": "Thanks @jasdel, I'm actually trying to go the other way. I have an ECS task definition on disk in json format and I'm trying to decode it into a RegisterTaskDefinitionInput object. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Ah thanks for the update <span data-link-type=\"mention\" data-screen-name=\"lox\" class=\"mention\">@lox</span>. I think the SDK would need to expose a custom JSON marshaller the SDK could use to unmarshal a JSON <code>io.Reader</code> or <code>[]byte</code> to a SDK shape. I updated <span data-link-type=\"issue\" data-issue=\"271\" class=\"issue\">#271</span> with this idea.",
  "id": "565e08782488cc80787485ee",
  "issues": [
   {
    "number": "271"
   }
  ],
  "mentions": [
   {
    "screenName": "lox",
    "userId": "529c6e8ced5ab0b3bf04deca",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-01T20:52:08.453Z",
  "text": "Ah thanks for the update @lox. I think the SDK would need to expose a custom JSON marshaller the SDK could use to unmarshal a JSON `io.Reader` or `[]byte` to a SDK shape. I updated #271 with this idea.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "I&#39;m trying to use Go on Amazon Beanstalk. However, it has only Golang 1.4 I want to use the Vendoring concept and so need 1.5",
  "id": "566067b51ab838e56dadf0b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-03T16:03:01.255Z",
  "text": "I'm trying to use Go on Amazon Beanstalk. However, it has only Golang 1.4 I want to use the Vendoring concept and so need 1.5",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Any idea when we can expect golang 1.5 in AWS Beanstalk ?",
  "id": "566067c110eeaf622086e9e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-03T16:03:13.915Z",
  "text": "Any idea when we can expect golang 1.5 in AWS Beanstalk ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "HI <span data-link-type=\"mention\" data-screen-name=\"psankar\" class=\"mention\">@psankar</span> the best way to use 1.5 with Beanstalk is to use the generic Docker container platform. For reinvent 2015 we demoed an application deployed to Beanstalk, and using the generic containers was one of the methods highlighted",
  "id": "5660854610eeaf622086f060",
  "issues": [],
  "mentions": [
   {
    "screenName": "psankar",
    "userId": "55513f5715522ed4b3e03f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-03T18:09:10.369Z",
  "text": "HI @psankar the best way to use 1.5 with Beanstalk is to use the generic Docker container platform. For reinvent 2015 we demoed an application deployed to Beanstalk, and using the generic containers was one of the methods highlighted",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<a href=\"https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/Dockerfile\" rel=\"nofollow\" target=\"_blank\" class=\"link\">awslabs/aws-go-wordfreq-sample/Dockerfile</a>",
  "id": "56608560d2a5a7813cd414f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-03T18:09:36.212Z",
  "text": "[awslabs/aws-go-wordfreq-sample/Dockerfile](https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/Dockerfile)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/Dockerfile"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "To help get 1.5 support I suggest posting on the <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=86\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Beanstalk Forums</a>.",
  "id": "566085de10eeaf622086f073",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-03T18:11:42.323Z",
  "text": "To help get 1.5 support I suggest posting on the [Beanstalk Forums](https://forums.aws.amazon.com/forum.jspa?forumID=86).",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=86"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/anxiousmodernman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/396004?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/396004?v=4&s=60",
   "displayName": "Coleman McFarland",
   "gv": "4",
   "id": "5531c7bb15522ed4b3df2e88",
   "url": "/anxiousmodernman",
   "username": "anxiousmodernman",
   "v": 7
  },
  "html": "Is it possible to download from S3 with a signed POST request? My colleages are worried about signed urls leaking into the world, even if they are shortlived",
  "id": "5660cf4c1ab838e56dae050b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-03T23:25:00.046Z",
  "text": "Is it possible to download from S3 with a signed POST request? My colleages are worried about signed urls leaking into the world, even if they are shortlived",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-12-04T03:24:32.890Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"anxiousmodernman\" class=\"mention\">@anxiousmodernman</span> no, once a request is signed it can only ever be used for the service API operation, method, URL and headers that it was signed with. This means if someone edits the request and replaces <code>PUT</code> with <code>GET</code> AWS&#39;s SigV4 authentication system will reject the request since the part of the signed request was changed and the signature is no longer  valid.",
  "id": "56610559c15bca7e3c960153",
  "issues": [],
  "mentions": [
   {
    "screenName": "anxiousmodernman",
    "userId": "5531c7bb15522ed4b3df2e88",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2015-12-04T03:15:37.981Z",
  "text": "@anxiousmodernman no, once a request is signed it can only ever be used for the service API operation, method, URL and headers that it was signed with. This means if someone edits the request and replaces `PUT` with `GET` AWS's SigV4 authentication system will reject the request since the part of the signed request was changed and the signature is no longer  valid.",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "editedAt": "2015-12-04T03:25:51.059Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "It is also important to ensure that you have correctly configured your S3 bucket and objects so that they are not open to unintended parties. If you have a S3 bucket or object that has its policy set incorrectly then unintended parties may be able to read that object. ",
  "id": "566105ebd2a5a7813cd42853",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2015-12-04T03:18:03.341Z",
  "text": "It is also important to ensure that you have correctly configured your S3 bucket and objects so that they are not open to unintended parties. If you have a S3 bucket or object that has its policy set incorrectly then unintended parties may be able to read that object. ",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html</a> is a good reference on how to configure your buckets policies",
  "id": "566105fe10eeaf62208703dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2015-12-04T03:18:22.069Z",
  "text": "http://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html is a good reference on how to configure your buckets policies",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Thanks. I already asked in the Beanstralk forums too. I jsut want to avoid a layer of Docker ",
  "id": "566128682cbea1d7054df8bd",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2015-12-04T05:45:12.655Z",
  "text": "Hi @jasdel Thanks. I already asked in the Beanstralk forums too. I jsut want to avoid a layer of Docker ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "But I have no option other than atm",
  "id": "56612879c15bca7e3c96045f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2015-12-04T05:45:29.028Z",
  "text": "But I have no option other than atm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Hi, I read that Dynamodb could handle updates to old version of record automatically by adding a <span data-link-type=\"mention\" data-screen-name=\"Dynamodbverionattribute\" class=\"mention\">@Dynamodbverionattribute</span> in the Java sources. How do we achieve this in the go SDK ?",
  "id": "56617e7e5057376520db8807",
  "issues": [],
  "mentions": [
   {
    "screenName": "Dynamodbverionattribute",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2015-12-04T11:52:30.690Z",
  "text": "Hi, I read that Dynamodb could handle updates to old version of record automatically by adding a @Dynamodbverionattribute in the Java sources. How do we achieve this in the go SDK ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "To explain what I want: Consider an item A {id: 1, version: 1} Now if there are two parallel update requests where one req. tries to set id to 2 and another req. tries to set id to 3",
  "id": "56617f4c10eeaf6220871118",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-04T11:55:56.657Z",
  "text": "To explain what I want: Consider an item A {id: 1, version: 1} Now if there are two parallel update requests where one req. tries to set id to 2 and another req. tries to set id to 3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "To disable this, we Expect: version to be 1 , in both the reads",
  "id": "56617f5b2cbea1d7054e0250",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-04T11:56:11.220Z",
  "text": "To disable this, we Expect: version to be 1 , in both the reads",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "but instead of coding the version, there is a way in the Java SDK to automatically mark an attribute as <span data-link-type=\"mention\" data-screen-name=\"DynamodbVersionAttribute\" class=\"mention\">@DynamodbVersionAttribute</span> and the subsequent Update/save call will fail for one of the requests",
  "id": "56617f9dc15bca7e3c960de5",
  "issues": [],
  "mentions": [
   {
    "screenName": "DynamodbVersionAttribute",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-04T11:57:17.674Z",
  "text": "but instead of coding the version, there is a way in the Java SDK to automatically mark an attribute as @DynamodbVersionAttribute and the subsequent Update/save call will fail for one of the requests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "How do achieve such a thing with the golang sdk ?",
  "id": "56617fa71da31ad605a8d880",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-04T11:57:27.736Z",
  "text": "How do achieve such a thing with the golang sdk ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Also, it will be amazing if there is a complete tutorial application that uses the go SDK for all activities with dynamodb and deployment in beanstalk",
  "id": "56617ff91ab838e56dae173f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-04T11:58:49.011Z",
  "text": "Also, it will be amazing if there is a complete tutorial application that uses the go SDK for all activities with dynamodb and deployment in beanstalk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Like the tic-tac-toe that is used in last year reInvent talk",
  "id": "5661800fd2a5a7813cd43570",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2015-12-04T11:59:11.982Z",
  "text": "Like the tic-tac-toe that is used in last year reInvent talk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "Is this one of the better aws sdk&#39;s out there for go?",
  "id": "5661f2d7d2a5a7813cd44b5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-04T20:08:55.031Z",
  "text": "Is this one of the better aws sdk's out there for go?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "Oh. Just found the &quot;official&quot; note. Sorry.",
  "id": "5661f2e777d271e66db1ffe1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-04T20:09:11.918Z",
  "text": "Oh. Just found the \"official\" note. Sorry.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "X-Amz-SignedHeaders: I have been reading everywhere that it&#39;s not possible to use AWS presigned URL to generate an URL that can only be used in conjunction with some information that is NOT in the URL (to prevent users from leaking URLs).  It is possible.  But I had to edit aws-sdk-go/private/signer/v4/v4.go:buildCanonicalHeaders to effectively use X-Amz-SignedHeaders the way that it&#39;s documented.  I want to set a header to &quot;nonce&quot; with a random value (like &quot;9999&quot;) before the req.Presign().  But I had to make it work by treating it as a special case like &quot;host&quot;.  How is this <em>supposed</em> to be done?  This is necessary to allow for direct S3 access, while ensuring that unexpired leaked URLs can&#39;t be used without the nonce (which will not show up in the URL get).",
  "id": "5662183077d271e66db20590",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-04T22:48:16.702Z",
  "text": "X-Amz-SignedHeaders: I have been reading everywhere that it's not possible to use AWS presigned URL to generate an URL that can only be used in conjunction with some information that is NOT in the URL (to prevent users from leaking URLs).  It is possible.  But I had to edit aws-sdk-go/private/signer/v4/v4.go:buildCanonicalHeaders to effectively use X-Amz-SignedHeaders the way that it's documented.  I want to set a header to \"nonce\" with a random value (like \"9999\") before the req.Presign().  But I had to make it work by treating it as a special case like \"host\".  How is this *supposed* to be done?  This is necessary to allow for direct S3 access, while ensuring that unexpired leaked URLs can't be used without the nonce (which will not show up in the URL get).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "Working on SQS inside this package, any examples? I&#39;m almost there, I think..",
  "id": "56622fc577d271e66db20862",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-05T00:28:53.382Z",
  "text": "Working on SQS inside this package, any examples? I'm almost there, I think..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Xackery\" class=\"mention\">@Xackery</span> check out <a href=\"https://github.com/awslabs/aws-go-wordfreq-sample\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/awslabs/aws-go-wordfreq-sample</a> it uses SQS both in the uploads3 and worker under the cmd path.",
  "id": "56626e8ed2a5a7813cd458f6",
  "issues": [],
  "mentions": [
   {
    "screenName": "Xackery",
    "userId": "55cefd0e0fc9f982bead7742",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-05T04:56:46.590Z",
  "text": "@Xackery check out https://github.com/awslabs/aws-go-wordfreq-sample it uses SQS both in the uploads3 and worker under the cmd path.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/awslabs/aws-go-wordfreq-sample"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"psankar\" class=\"mention\">@psankar</span> The version attribute isn&#39;t supported yet in the Go SDK we have the issue <span data-link-type=\"issue\" data-issue=\"409\" class=\"issue\">#409</span> tracking this feature. This would be a cool feature to add to the Go SDK.",
  "id": "56626f852cbea1d7054e2635",
  "issues": [
   {
    "number": "409"
   }
  ],
  "mentions": [
   {
    "screenName": "psankar",
    "userId": "55513f5715522ed4b3e03f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-05T05:00:53.943Z",
  "text": "@psankar The version attribute isn't supported yet in the Go SDK we have the issue #409 tracking this feature. This would be a cool feature to add to the Go SDK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"rfielding\" class=\"mention\">@rfielding</span> would you mind creating a <a href=\"https://github.com/aws/aws-sdk-go/issues\" rel=\"nofollow\" target=\"_blank\" class=\"link\">new issue</a> it will help mark it as a feature request, and let us track the issue.",
  "id": "56626ff677d271e66db20d7b",
  "issues": [],
  "mentions": [
   {
    "screenName": "rfielding",
    "userId": "564f3d4a16b6c7089cbb7b5a",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-05T05:02:46.518Z",
  "text": "Hi @rfielding would you mind creating a [new issue](https://github.com/aws/aws-sdk-go/issues) it will help mark it as a feature request, and let us track the issue.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/issues"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Thanks. (ah that sucks :( ) I will see if it will be simple enough for me to contribute",
  "id": "566284f677d271e66db20e81",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-05T06:32:22.197Z",
  "text": "@jasdel Thanks. (ah that sucks :( ) I will see if it will be simple enough for me to contribute",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ... I was trying to get a handle on if I am simply doing X-Amz-SignedHeaders wrong, or if the Go SDK doesn&#39;t support it.  So I will file an issue that assumes that signed headers for get requests that API allows isn&#39;t exposed by the SDK.",
  "id": "56647f2c5057376520dbd58f",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-06T18:32:12.689Z",
  "text": "Thanks @jasdel ... I was trying to get a handle on if I am simply doing X-Amz-SignedHeaders wrong, or if the Go SDK doesn't support it.  So I will file an issue that assumes that signed headers for get requests that API allows isn't exposed by the SDK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Is it possible to cerate/use autoincrementing fields in dynamodb via the golang SDK ? Java SDK supports this it seems.",
  "id": "56652b895057376520dbe739",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T06:47:37.267Z",
  "text": "Is it possible to cerate/use autoincrementing fields in dynamodb via the golang SDK ? Java SDK supports this it seems.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "How do I create a dynamodb.AttributeValueUpdate ? The golang SDK is very badly in need of some example programs (apart from that aws-go-wordfreq which is not that easy to follow through anyway :( )",
  "id": "5665468c1da31ad605a9386e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T08:42:52.576Z",
  "text": "How do I create a dynamodb.AttributeValueUpdate ? The golang SDK is very badly in need of some example programs (apart from that aws-go-wordfreq which is not that easy to follow through anyway :( )",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "All I want to do is &quot;update an existing item (row) where two of the attributes (columns) are changed&quot;. Trying to figure this out for the past one hour or so and feeling low :worried: ",
  "id": "566547591ab838e56dae786e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T08:46:17.107Z",
  "text": "All I want to do is \"update an existing item (row) where two of the attributes (columns) are changed\". Trying to figure this out for the past one hour or so and feeling low :worried: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "AWS Go SDK Code may be production ready but the documentation is woefully inadequate. I believe I may have to switch to Java for this new project :(",
  "id": "5665583e1da31ad605a93aba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T09:58:22.807Z",
  "text": "AWS Go SDK Code may be production ready but the documentation is woefully inadequate. I believe I may have to switch to Java for this new project :(",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "ah at last I figured out how to use the updateItem. This will be a good item to be part of the official docs. I should probably submit a PR. ",
  "id": "5665701b77d271e66db24f43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T11:40:11.707Z",
  "text": "ah at last I figured out how to use the updateItem. This will be a good item to be part of the official docs. I should probably submit a PR. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "We should have a mailing list for AWS SDK so that any future user queries will be easily google searchable",
  "id": "566570341da31ad605a93ec4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T11:40:36.641Z",
  "text": "We should have a mailing list for AWS SDK so that any future user queries will be easily google searchable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "How do we find golang log files (printed via log.Println) in teh beanstalk ? <code>eb logs</code>not returning those",
  "id": "5665a4bf1da31ad605a94892",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-12-07T15:24:47.570Z",
  "text": "How do we find golang log files (printed via log.Println) in teh beanstalk ? `eb logs`not returning those",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Another question: I have a golang application which uses AWS Go SDK to write to a dynamodb table. It works fine when I run from localhost. But when I deploy it in Beanstalk, I get a permission denied error. I believe that it  is because the ~/.aws/credentials do not exist in beanstalk and so naturally it fails. How do we specify the auth. details for the EBS applications ?",
  "id": "5665a969c15bca7e3c967d3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-12-07T15:44:41.901Z",
  "text": "Another question: I have a golang application which uses AWS Go SDK to write to a dynamodb table. It works fine when I run from localhost. But when I deploy it in Beanstalk, I get a permission denied error. I believe that it  is because the ~/.aws/credentials do not exist in beanstalk and so naturally it fails. How do we specify the auth. details for the EBS applications ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "I remember seeing something about this in the youtube video (reInvent 2015) but I am on a bad internet connection in an almost third world nation. So any textual link for showing the config of the credentials for applicaitons running in EBS ?",
  "id": "5665a9941da31ad605a949c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-12-07T15:45:24.541Z",
  "text": "I remember seeing something about this in the youtube video (reInvent 2015) but I am on a bad internet connection in an almost third world nation. So any textual link for showing the config of the credentials for applicaitons running in EBS ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "ah never mind. It is hidden under software configuration under configuration.",
  "id": "5665aa1dd2a5a7813cd4a6e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2015-12-07T15:47:41.516Z",
  "text": "ah never mind. It is hidden under software configuration under configuration.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Even after I set, AWS_ACCESS_KEY_ID and AWS_SECRET_KEY, I get an authorization error when I try to access dynamodb from the go program. The AWS_SECRET_KEY is set to aws_secret_access_key in the ~/.aws/credetials file that works in the localhost",
  "id": "5665ad372cbea1d7054e74e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T16:00:55.461Z",
  "text": "Even after I set, AWS_ACCESS_KEY_ID and AWS_SECRET_KEY, I get an authorization error when I try to access dynamodb from the go program. The AWS_SECRET_KEY is set to aws_secret_access_key in the ~/.aws/credetials file that works in the localhost",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Any help ?",
  "id": "5665ad3c1ab838e56dae89fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T16:01:00.766Z",
  "text": "Any help ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "aaah. <a href=\"http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.roles.apps.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.roles.apps.html</a> seem to be the solution. Trying",
  "id": "5665b8af10eeaf6220878685",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T16:49:51.457Z",
  "text": "aaah. http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.roles.apps.html seem to be the solution. Trying",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.roles.apps.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "I get an error message: User: arn:aws:sts::578725145887:assumed-role/aws-elasticbeanstalk-ec2-role/i-212ee2fb is not authorized to perform: dynamodb:ListTables on resource: *\\n\\tstatus code: 400",
  "id": "5665bd892cbea1d7054e7831",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T17:10:33.723Z",
  "text": "I get an error message: User: arn:aws:sts::578725145887:assumed-role/aws-elasticbeanstalk-ec2-role/i-212ee2fb is not authorized to perform: dynamodb:ListTables on resource: *\\n\\tstatus code: 400",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "when I try to run a SDK sample code to list tables in Beanstalk",
  "id": "5665bd9c5057376520dbfefb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T17:10:52.527Z",
  "text": "when I try to run a SDK sample code to list tables in Beanstalk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "I have given:   AmazonEC2FullAccess AmazonDynamoDBFullAccess  AWSElasticBeanstalkFullAccess for the IAM Role used for the Beanstalk ",
  "id": "5665bdddd2a5a7813cd4ab27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T17:11:57.143Z",
  "text": "I have given:   AmazonEC2FullAccess AmazonDynamoDBFullAccess  AWSElasticBeanstalkFullAccess for the IAM Role used for the Beanstalk \n ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Any help ?",
  "id": "5665bddf5057376520dbff07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T17:11:59.907Z",
  "text": "Any help ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ping ?",
  "id": "5665bde6d2a5a7813cd4ab2a",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T17:12:06.041Z",
  "text": "@jasdel ping ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Okay. I&#39;ve found the solution. In IAM we need to give AmazonDynamoDBFullAccess permission for the role aws-elasticbeanstalk-ec2-role",
  "id": "5665c1b57b5b888449a7e36a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-07T17:28:21.776Z",
  "text": "Okay. I've found the solution. In IAM we need to give AmazonDynamoDBFullAccess permission for the role aws-elasticbeanstalk-ec2-role",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "This prebuilt role is used by Beanstalk automatically and we do not have a way to avoid this, even though I have given a different role in my beanstalk environment health configuration",
  "id": "5665c1e9c4b3d2a52a6ac33b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-07T17:29:13.108Z",
  "text": "This prebuilt role is used by Beanstalk automatically and we do not have a way to avoid this, even though I have given a different role in my beanstalk environment health configuration",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-12-08T00:21:55.030Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "Anyone have interest in a struct to SQS code base system?",
  "id": "5666226eaccacb904891f899",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-08T00:21:02.743Z",
  "text": "Anyone have interest in a struct to SQS code base system?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Jasdel\" class=\"mention\">@Jasdel</span> thanks I got it working successfully with SQS.",
  "id": "5666237e835961e946e1cbf7",
  "issues": [],
  "mentions": [
   {
    "screenName": "Jasdel",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-08T00:25:34.023Z",
  "text": "@Jasdel thanks I got it working successfully with SQS.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-12-08T16:14:49.048Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "Thanks for your quick <span data-link-type=\"issue\" data-issue=\"458\" class=\"issue\">#458</span> response <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>.  Lots of people on StackOverflow ask this question regarding Presign() and signed headers that cannot appear in the GET url.  I demonstrated the existing behavior in detail in a new comment, along with my code change to v4.go to hack in something that creates the desired behavior.  The issue is that the raw GET url by itself is required to fail to download, and only work when the header is present, and you can&#39;t figure out the nonce from looking in the GET url.  The main use case for this: Users request large files for upload/download.  We can&#39;t handle large files in our framework anyway, so we simply return instructions on how to do the download or upload (URL, method, hidden form parameters, headers, etc).  In this case, it means that the client goes directly to S3 to do uploads and downloads to relieve our (Finatra) service.",
  "id": "566701197b5b888449a811e3",
  "issues": [
   {
    "number": "458"
   }
  ],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-08T16:11:05.470Z",
  "text": "Thanks for your quick #458 response @jasdel.  Lots of people on StackOverflow ask this question regarding Presign() and signed headers that cannot appear in the GET url.  I demonstrated the existing behavior in detail in a new comment, along with my code change to v4.go to hack in something that creates the desired behavior.  The issue is that the raw GET url by itself is required to fail to download, and only work when the header is present, and you can't figure out the nonce from looking in the GET url.  The main use case for this: Users request large files for upload/download.  We can't handle large files in our framework anyway, so we simply return instructions on how to do the download or upload (URL, method, hidden form parameters, headers, etc).  In this case, it means that the client goes directly to S3 to do uploads and downloads to relieve our (Finatra) service.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "To finalize my search, DynamoDB does not have a $nearSphere equivalent, correct? Is there any alternatives in the AWS ecosystem that is equivalent of $nearSphere? (Give a lat/long, and a meter radius, and it&#39;ll return a list of results matching inside the db)",
  "id": "56672cf6835961e946e1f1c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-08T19:18:14.326Z",
  "text": "To finalize my search, DynamoDB does not have a $nearSphere equivalent, correct? Is there any alternatives in the AWS ecosystem that is equivalent of $nearSphere? (Give a lat/long, and a meter radius, and it'll return a list of results matching inside the db)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-12-08T19:19:22.668Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "Hmm.. CloudSearch has haversin, I don&#39;t see near.. <em>keeps looking</em>",
  "id": "56672d2baccacb9048921e0e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-08T19:19:07.352Z",
  "text": "Hmm.. CloudSearch has haversin, I don't see near.. *keeps looking*",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "hey, anyone here can look at <span data-link-type=\"issue\" data-issue=\"459\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#459</span> and give your review comments ? Thanks.",
  "id": "5667ae65868b8da62a257ff1",
  "issues": [
   {
    "number": "459",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-09T04:30:29.535Z",
  "text": "hey, anyone here can look at https://github.com/aws/aws-sdk-go/pull/459 and give your review comments ? Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "if conditions; conditions { } are ugly  ",
  "id": "56689bc5c4b3d2a52a6b3358",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-09T21:23:17.392Z",
  "text": "if conditions; conditions { } are ugly  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "since it&#39;s an example, breaking apart each struct (e.g. your svc.CreateTable(&amp;dynamodb.CreateTableInput call) like params : = &amp;dynamodb.CreateTableInput{} and svc.CreateTable(params) helps make it easier to follow along.",
  "id": "56689c1d1af293de4696d9ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-09T21:24:45.781Z",
  "text": "since it's an example, breaking apart each struct (e.g. your svc.CreateTable(&dynamodb.CreateTableInput call) like params : = &dynamodb.CreateTableInput{} and svc.CreateTable(params) helps make it easier to follow along.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "your struct definition is in the middle of code, that&#39;s unusual.  (type file struct)",
  "id": "56689c621af293de4696d9af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-09T21:25:54.908Z",
  "text": "your struct definition is in the middle of code, that's unusual.  (type file struct)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "Intentional to add the two additional map properties (expressionAttributeNames)  differently than the converttomap call? also instead of leveraging &amp; a lot, you can use aws.String() etc, not sure which is standard",
  "id": "56689ce5835961e946e22a95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-09T21:28:05.474Z",
  "text": "Intentional to add the two additional map properties (expressionAttributeNames)  differently than the converttomap call? also instead of leveraging & a lot, you can use aws.String() etc, not sure which is standard",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "like call on createtableinput: AttributeName: aws.String(&quot;Filename&quot;),<br>while call on m1: m1[&quot;#a&quot;] = &amp;aCol //aCol := &quot;Description&quot;<br>two different ways of doing the same thing, a little confusing for an example",
  "id": "56689d4ac4b3d2a52a6b33b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-09T21:29:46.285Z",
  "text": "like call on createtableinput: AttributeName: aws.String(\"Filename\"),\nwhile call on m1: m1[\"#a\"] = &aCol //aCol := \"Description\"\ntwo different ways of doing the same thing, a little confusing for an example",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "i&#39;ll toss all this as a comment. I&#39;m probably just nit picking.",
  "id": "56689d8f981d32824933a97b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2015-12-09T21:30:55.315Z",
  "text": "i'll toss all this as a comment. I'm probably just nit picking.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harshavardhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/622699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/622699?v=4&s=60",
   "displayName": "Harshavardhana",
   "gv": "4",
   "id": "5492d44cdb8155e6700e0a2f",
   "url": "/harshavardhana",
   "username": "harshavardhana",
   "v": 24
  },
  "html": "Trying to do headObject on eu-west-1 as shown below, i am receiving a 403.<pre><code>  <span class=\"string\">newSession :</span>= session.New()\n    <span class=\"string\">s3Config :</span>= &amp;aws.Config{\n<span class=\"label\">        Credentials:</span> credentials.NewStaticCredentials(<span class=\"string\">\"*********\"</span>, <span class=\"string\">\"***********\"</span>, \\\n<span class=\"string\">\"\"</span>),\n<span class=\"label\">        Endpoint:</span>    aws.String(<span class=\"string\">\"https://s3.amazonaws.com\"</span>),\n<span class=\"label\">        Region:</span>      aws.String(<span class=\"string\">\"eu-west-1\"</span>),\n    }\n    <span class=\"comment\">// Create an S3 service object in the default region.</span>\n    <span class=\"string\">s3Client :</span>= s3.New(newSession, s3Config)\n\n    <span class=\"string\">params :</span>= &amp;s3.HeadObjectInput{\n<span class=\"label\">        Bucket:</span> aws.String(<span class=\"string\">\"myuniquebucketnameforevery\"</span>), <span class=\"comment\">// Required</span>\n<span class=\"label\">        Key:</span>    aws.String(<span class=\"string\">\"test.js\"</span>),                   <span class=\"comment\">// Required</span>\n    }\n    resp, <span class=\"string\">err :</span>= s3Client.HeadObject(params)\n    <span class=\"keyword\">if</span> err != nil {\n        <span class=\"comment\">// Print the error, cast err to awserr.Error to get the Code and</span>\n        <span class=\"comment\">// Message from an error.</span>\n        fmt.Println(err.Error())\n        <span class=\"keyword\">return</span>\n    }\n\n    <span class=\"comment\">// Pretty-print the response data.</span>\n    fmt.Println(resp)</code></pre>",
  "id": "5668a2fb5cc42d160dfaa69e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-09T21:54:03.573Z",
  "text": "Trying to do headObject on eu-west-1 as shown below, i am receiving a 403.\n\n```\n  newSession := session.New()\n    s3Config := &aws.Config{\n        Credentials: credentials.NewStaticCredentials(\"*********\", \"***********\", \\\n\"\"),\n        Endpoint:    aws.String(\"https://s3.amazonaws.com\"),\n        Region:      aws.String(\"eu-west-1\"),\n    }\n    // Create an S3 service object in the default region.\n    s3Client := s3.New(newSession, s3Config)\n\n    params := &s3.HeadObjectInput{\n        Bucket: aws.String(\"myuniquebucketnameforevery\"), // Required\n        Key:    aws.String(\"test.js\"),                   // Required\n    }\n    resp, err := s3Client.HeadObject(params)\n    if err != nil {\n        // Print the error, cast err to awserr.Error to get the Code and\n        // Message from an error.\n        fmt.Println(err.Error())\n        return\n    }\n\n    // Pretty-print the response data.\n    fmt.Println(resp)\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harshavardhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/622699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/622699?v=4&s=60",
   "displayName": "Harshavardhana",
   "gv": "4",
   "id": "5492d44cdb8155e6700e0a2f",
   "url": "/harshavardhana",
   "username": "harshavardhana",
   "v": 24
  },
  "html": "Following the same style for  - us-west-2 works fine. ",
  "id": "5668a313bada93d67c1ae73e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-09T21:54:27.145Z",
  "text": "Following the same style for  - us-west-2 works fine. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harshavardhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/622699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/622699?v=4&s=60",
   "displayName": "Harshavardhana",
   "gv": "4",
   "id": "5492d44cdb8155e6700e0a2f",
   "url": "/harshavardhana",
   "username": "harshavardhana",
   "v": 24
  },
  "html": "<pre><code>   <span class=\"string\">newSession :</span>= session.New()\n    <span class=\"string\">s3Config :</span>= &amp;aws.Config{\n<span class=\"label\">        Credentials:</span> credentials.NewStaticCredentials(<span class=\"string\">\"******\"</span>, <span class=\"string\">\"******\"</span>, \\\n<span class=\"string\">\"\"</span>),\n<span class=\"label\">        Endpoint:</span>    aws.String(<span class=\"string\">\"https://s3.amazonaws.com\"</span>),\n<span class=\"label\">        Region:</span>      aws.String(<span class=\"string\">\"us-west-2\"</span>),\n    }\n    <span class=\"comment\">// Create an S3 service object in the default region.</span>\n    <span class=\"string\">s3Client :</span>= s3.New(newSession, s3Config)\n\n    <span class=\"string\">params :</span>= &amp;s3.HeadObjectInput{\n<span class=\"label\">        Bucket:</span> aws.String(<span class=\"string\">\"anythinglikenothing\"</span>), <span class=\"comment\">// Required</span>\n<span class=\"label\">        Key:</span>    aws.String(<span class=\"string\">\"+++.txt\"</span>),             <span class=\"comment\">// Required</span>\n    }\n    resp, <span class=\"string\">err :</span>= s3Client.HeadObject(params)\n    <span class=\"keyword\">if</span> err != nil {\n        <span class=\"comment\">// Print the error, cast err to awserr.Error to get the Code and</span>\n        <span class=\"comment\">// Message from an error.</span>\n        fmt.Println(err.Error())\n        <span class=\"keyword\">return</span>\n    }\n\n    <span class=\"comment\">// Pretty-print the response data.</span>\n    fmt.Println(resp)</code></pre>",
  "id": "5668a331bada93d67c1ae73f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-09T21:54:57.920Z",
  "text": "```\n   newSession := session.New()\n    s3Config := &aws.Config{\n        Credentials: credentials.NewStaticCredentials(\"******\", \"******\", \\\n\"\"),\n        Endpoint:    aws.String(\"https://s3.amazonaws.com\"),\n        Region:      aws.String(\"us-west-2\"),\n    }\n    // Create an S3 service object in the default region.\n    s3Client := s3.New(newSession, s3Config)\n\n    params := &s3.HeadObjectInput{\n        Bucket: aws.String(\"anythinglikenothing\"), // Required\n        Key:    aws.String(\"+++.txt\"),             // Required\n    }\n    resp, err := s3Client.HeadObject(params)\n    if err != nil {\n        // Print the error, cast err to awserr.Error to get the Code and\n        // Message from an error.\n        fmt.Println(err.Error())\n        return\n    }\n\n    // Pretty-print the response data.\n    fmt.Println(resp)\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harshavardhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/622699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/622699?v=4&s=60",
   "displayName": "Harshavardhana",
   "gv": "4",
   "id": "5492d44cdb8155e6700e0a2f",
   "url": "/harshavardhana",
   "username": "harshavardhana",
   "v": 24
  },
  "html": "There is a reason why eu-west-1 will be treated differently ? ",
  "id": "5668a350dd72cc3c65eb62bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-12-09T21:55:28.325Z",
  "text": "There is a reason why eu-west-1 will be treated differently ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harshavardhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/622699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/622699?v=4&s=60",
   "displayName": "Harshavardhana",
   "gv": "4",
   "id": "5492d44cdb8155e6700e0a2f",
   "url": "/harshavardhana",
   "username": "harshavardhana",
   "v": 24
  },
  "html": "and why is it is 403 ? ",
  "id": "5668a353dd72cc3c65eb62c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-12-09T21:55:31.993Z",
  "text": "and why is it is 403 ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harshavardhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/622699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/622699?v=4&s=60",
   "displayName": "Harshavardhana",
   "gv": "4",
   "id": "5492d44cdb8155e6700e0a2f",
   "url": "/harshavardhana",
   "username": "harshavardhana",
   "v": 24
  },
  "html": "i have tried similarly with s3cmd and boto they seem to work fine for &#39;eu-west-1&#39; . ",
  "id": "5668a3c9dd72cc3c65eb62c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-09T21:57:29.024Z",
  "text": "i have tried similarly with s3cmd and boto they seem to work fine for 'eu-west-1' . ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Xackery\" class=\"mention\">@Xackery</span> Thanks for the comments. I am not sure I am able to follow them though. I am trying to understand by reading again.",
  "id": "56691ac81af293de4696e75e",
  "issues": [],
  "mentions": [
   {
    "screenName": "Xackery",
    "userId": "55cefd0e0fc9f982bead7742",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-10T06:25:12.551Z",
  "text": "@Xackery Thanks for the comments. I am not sure I am able to follow them though. I am trying to understand by reading again.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "and nitpicking is good :) It helps improve code quality, especially when it is going to be a beginner tutorial.",
  "id": "56691aeec4b3d2a52a6b4162",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-10T06:25:50.454Z",
  "text": "and nitpicking is good :) It helps improve code quality, especially when it is going to be a beginner tutorial.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "No problem, trying to be helpful.",
  "id": "566f61db3078c0747651334f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-15T00:42:03.959Z",
  "text": "No problem, trying to be helpful.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "Does anyone use lambda with Go? Any complaints? Enjoy it? Is it in production? I see blog articles about it being used successfully, but it doesn&#39;t have much beyond tutorials. I prefer go to node for static typing, and i&#39;m fine with the ~200ms spin up difference.",
  "id": "566f62085d67e2860460dd2d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-15T00:42:48.010Z",
  "text": "Does anyone use lambda with Go? Any complaints? Enjoy it? Is it in production? I see blog articles about it being used successfully, but it doesn't have much beyond tutorials. I prefer go to node for static typing, and i'm fine with the ~200ms spin up difference.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/wjimenez5271",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/322834?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/322834?v=4&s=60",
   "displayName": "William Jimenez",
   "gv": "4",
   "id": "54e77ce215522ed4b3dc4180",
   "url": "/wjimenez5271",
   "username": "wjimenez5271",
   "v": 4
  },
  "html": "Hi everyone, is there any retry functionality in this library? I.E. if API request limit is exceeded, back off exponentially and try again? ",
  "id": "56708f286a17cd3b36dd2221",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-15T22:07:36.015Z",
  "text": "Hi everyone, is there any retry functionality in this library? I.E. if API request limit is exceeded, back off exponentially and try again? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"wjimenez5271\" class=\"mention\">@wjimenez5271</span> the SDK will attempt to retry a request it is able. Responses that are 50x will automatically be retried. This will also include throttling responses, with exponential retry backoff",
  "id": "5670a94c3078c07476515f92",
  "issues": [],
  "mentions": [
   {
    "screenName": "wjimenez5271",
    "userId": "54e77ce215522ed4b3dc4180",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-15T23:59:08.230Z",
  "text": "@wjimenez5271 the SDK will attempt to retry a request it is able. Responses that are 50x will automatically be retried. This will also include throttling responses, with exponential retry backoff",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/wjimenez5271",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/322834?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/322834?v=4&s=60",
   "displayName": "William Jimenez",
   "gv": "4",
   "id": "54e77ce215522ed4b3dc4180",
   "url": "/wjimenez5271",
   "username": "wjimenez5271",
   "v": 4
  },
  "html": "OK cool",
  "id": "5670aa5cd09f61393620800a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-16T00:03:40.989Z",
  "text": "OK cool",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/wjimenez5271",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/322834?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/322834?v=4&s=60",
   "displayName": "William Jimenez",
   "gv": "4",
   "id": "54e77ce215522ed4b3dc4180",
   "url": "/wjimenez5271",
   "username": "wjimenez5271",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> is there a way to set the amount of retries it should attempt? ",
  "id": "5670aa6a187e75ea0e48d300",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-16T00:03:54.906Z",
  "text": "@jasdel is there a way to set the amount of retries it should attempt? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/wjimenez5271",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/322834?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/322834?v=4&s=60",
   "displayName": "William Jimenez",
   "gv": "4",
   "id": "54e77ce215522ed4b3dc4180",
   "url": "/wjimenez5271",
   "username": "wjimenez5271",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> and will it log or can I get it to log when it has to make a retry? ",
  "id": "5670ab35de5536717681c27f",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-16T00:07:17.320Z",
  "text": "@jasdel and will it log or can I get it to log when it has to make a retry? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"wjimenez5271\" class=\"mention\">@wjimenez5271</span> yeah you can set the number of retries with <code>aws.Config.MaxRetries</code>. the <code>aws.Config</code> can be set generically for all services with a <code>session</code> or set to a specific service.  By default the SDK will not log retries, but you can set the <code>aws.Config.LogLevel</code> to <code>aws.LogDebugWithRequestRetries</code>",
  "id": "5670adafd09f613936208077",
  "issues": [],
  "mentions": [
   {
    "screenName": "wjimenez5271",
    "userId": "54e77ce215522ed4b3dc4180",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2015-12-16T00:17:51.512Z",
  "text": "@wjimenez5271 yeah you can set the number of retries with `aws.Config.MaxRetries`. the `aws.Config` can be set generically for all services with a `session` or set to a specific service.  By default the SDK will not log retries, but you can set the `aws.Config.LogLevel` to `aws.LogDebugWithRequestRetries`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ivarg",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/248477?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/248477?v=3&s=60",
   "displayName": "Ivar Gaitan",
   "gv": "3",
   "id": "54f608c715522ed4b3dcbfc8",
   "url": "/ivarg",
   "username": "ivarg"
  },
  "html": "Hi, is there a way to check if S3.ListObjectsPages() succeeded inside the passed func(p *s3.ListObjectsOutput, lastPage bool)? Right now, I&#39;m checking if length of ListObjectsOutput.Contents array is zero and then guessing something went wrong.",
  "id": "56711b636a17cd3b36dd30b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-16T08:05:55.593Z",
  "text": "Hi, is there a way to check if S3.ListObjectsPages() succeeded inside the passed func(p *s3.ListObjectsOutput, lastPage bool)? Right now, I'm checking if length of ListObjectsOutput.Contents array is zero and then guessing something went wrong.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "I see there&#39;s a S3 PutObject() call that has a Body req of bytes.NewReader(), however, I was looking to stream file contents by chunks up to S3. I take it to do that, I&#39;ll need to use S3 UploadPart(), and I&#39;m cool with that, but I have to feed data it seems smiliar to ioutil.ReadAll to do that, taking chunks of data at doing parts.. This is the correct direction? Or am I missing a nice wrapper to simplify this process?",
  "id": "5671db2337169e856a75304d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-16T21:44:03.373Z",
  "text": "I see there's a S3 PutObject() call that has a Body req of bytes.NewReader(), however, I was looking to stream file contents by chunks up to S3. I take it to do that, I'll need to use S3 UploadPart(), and I'm cool with that, but I have to feed data it seems smiliar to ioutil.ReadAll to do that, taking chunks of data at doing parts.. This is the correct direction? Or am I missing a nice wrapper to simplify this process?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ivarg\" class=\"mention\">@ivarg</span>  the best way to identify if there were any pages would be to use <code>len(p.Content)</code> on the first page. If this value is zero and there was no error returned from <code>ListObjectsPages</code> then there are no objects in the bucket which match the filters specified in <code>ListObjectsInput</code>.   ",
  "id": "5672101437169e856a7536c9",
  "issues": [],
  "mentions": [
   {
    "screenName": "ivarg",
    "userId": "54f608c715522ed4b3dcbfc8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2015-12-17T01:29:56.361Z",
  "text": "@ivarg  the best way to identify if there were any pages would be to use `len(p.Content)` on the first page. If this value is zero and there was no error returned from `ListObjectsPages` then there are no objects in the bucket which match the filters specified in `ListObjectsInput`.   ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "An error will be returned if the request fails though",
  "id": "5672101dcc068a5e42f1b84a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-12-17T01:30:05.331Z",
  "text": "An error will be returned if the request fails though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Xackery\" class=\"mention\">@Xackery</span> Each <code>S3.UploadPart</code> can take any <code>io.ReadSeeker</code>. You can use the <a href=\"https://golang.org/pkg/io/#SectionReader\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><code>io.SectionReader</code></a> to create new readers for each part upload using an offset and limit.  This should prevent you from doing ReadAll&#39;s your self.",
  "id": "5672119cf31bbe91555aeaa2",
  "issues": [],
  "mentions": [
   {
    "screenName": "Xackery",
    "userId": "55cefd0e0fc9f982bead7742",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-17T01:36:28.686Z",
  "text": "@Xackery Each `S3.UploadPart` can take any `io.ReadSeeker`. You can use the [`io.SectionReader`](https://golang.org/pkg/io/#SectionReader) to create new readers for each part upload using an offset and limit.  This should prevent you from doing ReadAll's your self.",
  "unread": false,
  "urls": [
   {
    "url": "https://golang.org/pkg/io/#SectionReader"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Xackery\" class=\"mention\">@Xackery</span> In addition I suggest checking out the <a href=\"https://github.com/aws/aws-sdk-go/wiki/sdk-utilities#upload-manager\" rel=\"nofollow\" target=\"_blank\" class=\"link\">S3 Upload Manager</a>. This utility takes care of breaking a file into multiple parts, and the error retry associated with the upload process.",
  "id": "567211f3a95dea5d421513f9",
  "issues": [],
  "mentions": [
   {
    "screenName": "Xackery",
    "userId": "55cefd0e0fc9f982bead7742",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-17T01:37:55.242Z",
  "text": "@Xackery In addition I suggest checking out the [S3 Upload Manager](https://github.com/aws/aws-sdk-go/wiki/sdk-utilities#upload-manager). This utility takes care of breaking a file into multiple parts, and the error retry associated with the upload process.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/wiki/sdk-utilities#upload-manager"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2015-12-17T06:23:11.458Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ivarg",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/248477?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/248477?v=3&s=60",
   "displayName": "Ivar Gaitan",
   "gv": "3",
   "id": "54f608c715522ed4b3dcbfc8",
   "url": "/ivarg",
   "username": "ivarg"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thanks for the reply! But the problem is that inside the callback function passed to <code>ListObjectsPages</code> I don&#39;t see the error that <code>ListObjectsPages</code> returns, so if I <code>len(p.Content)</code> is zero, I can&#39;t say if it&#39;s because the bucket is empty or if there was an error, such as access denied.<br>I guess it&#39;s not a hard problem, my intention was to handle the error inside the callback and I got confused. I can deal with it after ListObjectsPages returns, as well.",
  "id": "5672531af99ceb846ae65d6a",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-17T06:15:54.214Z",
  "text": "@jasdel thanks for the reply! But the problem is that inside the callback function passed to `ListObjectsPages` I don't see the error that `ListObjectsPages` returns, so if I `len(p.Content)` is zero, I can't say if it's because the bucket is empty or if there was an error, such as access denied.\nI guess it's not a hard problem, my intention was to handle the error inside the callback and I got confused. I can deal with it after ListObjectsPages returns, as well.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2015-12-17T06:23:14.166Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ivarg",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/248477?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/248477?v=3&s=60",
   "displayName": "Ivar Gaitan",
   "gv": "3",
   "id": "54f608c715522ed4b3dcbfc8",
   "url": "/ivarg",
   "username": "ivarg"
  },
  "html": "",
  "id": "567254aec505c268728866d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-17T06:22:38.465Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ivarg",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/248477?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/248477?v=3&s=60",
   "displayName": "Ivar Gaitan",
   "gv": "3",
   "id": "54f608c715522ed4b3dcbfc8",
   "url": "/ivarg",
   "username": "ivarg"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ...actually, what I want to do is report the number of objects to be fetched on a channel, and to do that after <code>ListObjectsPages</code> returns, I will need to do some synchronization between caller and callback, which becomes a bit ugly.",
  "id": "567262aecc068a5e42f1be64",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-17T07:22:22.399Z",
  "text": "@jasdel ...actually, what I want to do is report the number of objects to be fetched on a channel, and to do that after `ListObjectsPages` returns, I will need to do some synchronization between caller and callback, which becomes a bit ugly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ivarg\" class=\"mention\">@ivarg</span> thanks for the clarification. The callback will always be a synchronous callback. So it will run synchronously in the same goroutine as the <code>ListObjectsPage</code> call. When ListObjectsPages returns all pages would of been processed.  It is valid for ListObjectsPages to not return any pages if no results were found. And the callback is only used when a page has been successfully received. ",
  "id": "56745689f99ceb846ae6a680",
  "issues": [],
  "mentions": [
   {
    "screenName": "ivarg",
    "userId": "54f608c715522ed4b3dcbfc8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-18T18:55:05.249Z",
  "text": "@ivarg thanks for the clarification. The callback will always be a synchronous callback. So it will run synchronously in the same goroutine as the `ListObjectsPage` call. When ListObjectsPages returns all pages would of been processed.  It is valid for ListObjectsPages to not return any pages if no results were found. And the callback is only used when a page has been successfully received. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "This is unlike the <code>path/filepath.Walker</code> pattern where the callback will return for both success and failure, because the walker can continue to the next item if an error occurs. Paginators generally wouldn&#39;t be able to continue to the next page if an error occurred.",
  "id": "567456baf31bbe91555b388c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-18T18:55:54.054Z",
  "text": "This is unlike the `path/filepath.Walker` pattern where the callback will return for both success and failure, because the walker can continue to the next item if an error occurs. Paginators generally wouldn't be able to continue to the next page if an error occurred.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/ivarg",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/248477?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/248477?v=3&s=60",
   "displayName": "Ivar Gaitan",
   "gv": "3",
   "id": "54f608c715522ed4b3dcbfc8",
   "url": "/ivarg",
   "username": "ivarg"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Ok thanks, I got that behavior now after updating. The version I was at called the callback even when there was an error. Now it makes sense.",
  "id": "5677131bb5777fb85ba4da19",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-20T20:44:11.873Z",
  "text": "@jasdel Ok thanks, I got that behavior now after updating. The version I was at called the callback even when there was an error. Now it makes sense.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ivarg\" class=\"mention\">@ivarg</span> Great glad that works, and thanks for letting us know about the extra callback occurring when it shouldn&#39;t of in the older version.",
  "id": "567843fbf31bbe91555b8da8",
  "issues": [],
  "mentions": [
   {
    "screenName": "ivarg",
    "userId": "54f608c715522ed4b3dcbfc8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-21T18:24:59.144Z",
  "text": "@ivarg Great glad that works, and thanks for letting us know about the extra callback occurring when it shouldn't of in the older version.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "Running a test for DeleteQueue: response: Failed to Delete Queue: InvalidAddress: The address delete is not valid for this endpoint.",
  "id": "567b2396653b30761d75eb0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-23T22:43:34.573Z",
  "text": "Running a test for DeleteQueue: response: Failed to Delete Queue: InvalidAddress: The address delete is not valid for this endpoint.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "Anyone know a fix?",
  "id": "567b239d3acb611716ff9b59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-23T22:43:41.048Z",
  "text": "Anyone know a fix?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Xackery\" class=\"mention\">@Xackery</span> are you consistently getting this error, and just for a single queue or multiple queues?",
  "id": "567b353a0199d70069df8765",
  "issues": [],
  "mentions": [
   {
    "screenName": "Xackery",
    "userId": "55cefd0e0fc9f982bead7742",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-23T23:58:50.048Z",
  "text": "@Xackery are you consistently getting this error, and just for a single queue or multiple queues?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Also is the delete operation call being made to the same region the queue exists in?",
  "id": "567b35824f069158055ba9e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-24T00:00:02.611Z",
  "text": "Also is the delete operation call being made to the same region the queue exists in?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Xackery\" class=\"mention\">@Xackery</span>  I wasn&#39;t able to find any reference to InvalidAddress in the current SQS documentation. The only reference i found was for an <a href=\"http://docs.aws.amazon.com/AWSSimpleQueueService/2008-01-01/SQSDeveloperGuide/index.html?Query_QueryErrors.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">old 2008 version</a>  Would you mind adding <code>aws.LogDebugWithHTTPBody</code> to your <code>aws.Config.LogLevel</code>.  The wire request will be logged which should show us what is being requested.",
  "id": "567b3744653b30761d75ed0f",
  "issues": [],
  "mentions": [
   {
    "screenName": "Xackery",
    "userId": "55cefd0e0fc9f982bead7742",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-24T00:07:32.108Z",
  "text": "@Xackery  I wasn't able to find any reference to InvalidAddress in the current SQS documentation. The only reference i found was for an [old 2008 version](http://docs.aws.amazon.com/AWSSimpleQueueService/2008-01-01/SQSDeveloperGuide/index.html?Query_QueryErrors.html)  Would you mind adding `aws.LogDebugWithHTTPBody` to your `aws.Config.LogLevel`.  The wire request will be logged which should show us what is being requested.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AWSSimpleQueueService/2008-01-01/SQSDeveloperGuide/index.html?Query_QueryErrors.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "consistently, single queue, every time.",
  "id": "567b3d6d653b30761d75ed7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2015-12-24T00:33:49.117Z",
  "text": "consistently, single queue, every time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "I&#39;m using the go aws sdk",
  "id": "567b3d783acb611716ff9d9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2015-12-24T00:34:00.184Z",
  "text": "I'm using the go aws sdk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "yeah",
  "id": "567b3d813acb611716ff9d9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-24T00:34:09.185Z",
  "text": "yeah",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "one sec..",
  "id": "567b3d854f069158055baa90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-24T00:34:13.090Z",
  "text": "one sec..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "<a href=\"http://pastebin.com/gFaELywi\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://pastebin.com/gFaELywi</a>",
  "id": "567b3f5a35e1a316162e0d49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-24T00:42:02.381Z",
  "text": "http://pastebin.com/gFaELywi",
  "unread": false,
  "urls": [
   {
    "url": "http://pastebin.com/gFaELywi"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "I commentedo ut what I think was sensitive info",
  "id": "567b3f5f0171d1791d01fae5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-24T00:42:07.715Z",
  "text": "I commentedo ut what I think was sensitive info",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "the queue channel exists.. (i&#39;ll screenshot)",
  "id": "567b3f853c6894026924a15a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-24T00:42:45.975Z",
  "text": "the queue channel exists.. (i'll screenshot)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "(In oregon)",
  "id": "567b3fa84f069158055baaad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-24T00:43:20.313Z",
  "text": "(In oregon)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "<a href=\"https://files.gitter.im/aws/aws-sdk-go/1Vqn/Screen-Shot-2015-12-23-at-4.42.58-PM.png\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/aws/aws-sdk-go/1Vqn/thumb/Screen-Shot-2015-12-23-at-4.42.58-PM.png\" alt=\"Screen Shot 2015-12-23 at 4.42.58 PM.png\" rel=\"nofollow\"></a>",
  "id": "567b3faa3c6894026924a15b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-24T00:43:22.945Z",
  "text": "[![Screen Shot 2015-12-23 at 4.42.58 PM.png](https://files.gitter.im/aws/aws-sdk-go/1Vqn/thumb/Screen-Shot-2015-12-23-at-4.42.58-PM.png)](https://files.gitter.im/aws/aws-sdk-go/1Vqn/Screen-Shot-2015-12-23-at-4.42.58-PM.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/aws/aws-sdk-go/1Vqn/thumb/Screen-Shot-2015-12-23-at-4.42.58-PM.png"
   },
   {
    "url": "https://files.gitter.im/aws/aws-sdk-go/1Vqn/Screen-Shot-2015-12-23-at-4.42.58-PM.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "my config call looks like this, just FYI, after your log recommendation:<br>config := aws.NewConfig().WithLogLevel(aws.LogDebugWithHTTPBody).WithRegion(&quot;us-west-2&quot;)<br>    service = sqs.New(session.New(), config)",
  "id": "567b3fd04f069158055baab0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-24T00:44:00.048Z",
  "text": "my config call looks like this, just FYI, after your log recommendation:\nconfig := aws.NewConfig().WithLogLevel(aws.LogDebugWithHTTPBody).WithRegion(\"us-west-2\")\n\tservice = sqs.New(session.New(), config)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "if i change the queue name to e.g. &quot;delete&quot;, instead, and create it to delete it, same error returns",
  "id": "567b3ff43acb611716ff9dc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-24T00:44:36.644Z",
  "text": "if i change the queue name to e.g. \"delete\", instead, and create it to delete it, same error returns",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2015-12-24T00:46:00.589Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "i see the error on google, but nobody has an answer. I have tested (with successful responses) SendMessage, ReceiveMessage, DeleteMessage, CreateQueue, this issue only seems to exist on DeleteQueue and now consistently get that endpoint error.",
  "id": "567b402c4f069158055baabb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-24T00:45:32.969Z",
  "text": "i see the error on google, but nobody has an answer. I have tested (with successful responses) SendMessage, ReceiveMessage, DeleteMessage, CreateQueue, this issue only seems to exist on DeleteQueue and now consistently get that endpoint error.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "OH",
  "id": "567b40843acb611716ff9dd0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2015-12-24T00:47:00.114Z",
  "text": "OH",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "I think I may have found it",
  "id": "567b40863c6894026924a164",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-12-24T00:47:02.282Z",
  "text": "I think I may have found it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "Yep. It&#39;s a user error. I&#39;m providing the literal queue name, and not the queue url.",
  "id": "567b40d535e1a316162e0d58",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-12-24T00:48:21.126Z",
  "text": "Yep. It's a user error. I'm providing the literal queue name, and not the queue url.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "my underlying problem was I just wrote CreateQueue, which obviously reqiures queue name literal, nota  url.. then wrote delete after, and was perplexed of the error with the same arguments. But, I knew from SendMessage/ReceiveMessage that the queue has to be translated to a QueueUrl for the needed parameters, an obvious oversight, but now if anyone searches the gitter history, they&#39;ll see this answer for their challenge.",
  "id": "567b4185653b30761d75edbe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-12-24T00:51:17.042Z",
  "text": "my underlying problem was I just wrote CreateQueue, which obviously reqiures queue name literal, nota  url.. then wrote delete after, and was perplexed of the error with the same arguments. But, I knew from SendMessage/ReceiveMessage that the queue has to be translated to a QueueUrl for the needed parameters, an obvious oversight, but now if anyone searches the gitter history, they'll see this answer for their challenge.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Xackery\" class=\"mention\">@Xackery</span> awesome! Glad you found the answer. It makes sense now that the the error was caused by URL instead of naming during cre",
  "id": "567b50874f069158055babe9",
  "issues": [],
  "mentions": [
   {
    "screenName": "Xackery",
    "userId": "55cefd0e0fc9f982bead7742",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2015-12-24T01:55:19.203Z",
  "text": "@Xackery awesome! Glad you found the answer. It makes sense now that the the error was caused by URL instead of naming during cre",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<ul>\n<li>during creating the queue.</li>\n</ul>\n",
  "id": "567b509535e1a316162e0e67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2015-12-24T01:55:33.961Z",
  "text": "* during creating the queue.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/lox",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15758?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15758?v=4&s=60",
   "displayName": "Lachlan Donald",
   "gv": "4",
   "id": "529c6e8ced5ab0b3bf04deca",
   "url": "/lox",
   "username": "lox",
   "v": 14
  },
  "html": "Is there any way to make changes to the underlying request sent with the aws-sdk-go? I&#39;m trying to make range requests to S3. ",
  "id": "56945ca50712a5b63b4cd9e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-12T01:53:41.807Z",
  "text": "Is there any way to make changes to the underlying request sent with the aws-sdk-go? I'm trying to make range requests to S3. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"lox\" class=\"mention\">@lox</span> yeah you can definitely do this. Each service API operation has an additional call ending in <code>Request</code> like <code>GetObject</code> and <code>GetObjectRequest</code> with the Request form you have access to the <code>HTTPRequest</code> which you can set headers on for range requests.",
  "id": "56948c9a87cb99b53b888686",
  "issues": [],
  "mentions": [
   {
    "screenName": "lox",
    "userId": "529c6e8ced5ab0b3bf04deca",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-12T05:18:18.484Z",
  "text": "@lox yeah you can definitely do this. Each service API operation has an additional call ending in `Request` like `GetObject` and `GetObjectRequest` with the Request form you have access to the `HTTPRequest` which you can set headers on for range requests.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "There is also the S3 Download manager which will take care of the range requests for you doing parallel downloads of the Objects from s3. <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/Downloader.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><code>github.com/aws/aws-sdk-go/service/s3/s3manager</code></a>.  You can also use this <a href=\"https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3manager/download.go#L200-L236\" rel=\"nofollow\" target=\"_blank\" class=\"link\">code</a> for examples on how to modify the request prior to sending it.",
  "id": "56948d278fdd3c0c382e18fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-12T05:20:39.575Z",
  "text": "There is also the S3 Download manager which will take care of the range requests for you doing parallel downloads of the Objects from s3. [`github.com/aws/aws-sdk-go/service/s3/s3manager`](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/Downloader.html).  You can also use this [code](https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3manager/download.go#L200-L236) for examples on how to modify the request prior to sending it.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/Downloader.html"
   },
   {
    "url": "https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3manager/download.go#L200-L236"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/lox",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15758?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15758?v=4&s=60",
   "displayName": "Lachlan Donald",
   "gv": "4",
   "id": "529c6e8ced5ab0b3bf04deca",
   "url": "/lox",
   "username": "lox",
   "v": 14
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>, I&#39;ve been playing around with s3manager. Are there plans to add some sort of fragment assembly into a stream like <a href=\"https://github.com/htcat/htcat/blob/master/defrag.go\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/htcat/htcat/blob/master/defrag.go</a> rather than having to provide a <code>io.ReaderAt</code>? ",
  "id": "5697412228b4586d1c8c8e85",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-14T06:33:06.206Z",
  "text": "Thanks @jasdel, I've been playing around with s3manager. Are there plans to add some sort of fragment assembly into a stream like https://github.com/htcat/htcat/blob/master/defrag.go rather than having to provide a `io.ReaderAt`? ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/htcat/htcat/blob/master/defrag.go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"lox\" class=\"mention\">@lox</span> We hadn&#39;t considered it yet.  I&#39;m curious to hear your ideas on what supporting this type of writer would be. I&#39;ve not worked with a fragmented assembly before, and the idea is interesting.  If you&#39;d like please feel free to open a issue and we can throw some ideas around. We also are always more than glad to review PRs :)",
  "id": "56987b3f2bc35f6c1c1a31f0",
  "issues": [],
  "mentions": [
   {
    "screenName": "lox",
    "userId": "529c6e8ced5ab0b3bf04deca",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-15T04:53:19.948Z",
  "text": "@lox We hadn't considered it yet.  I'm curious to hear your ideas on what supporting this type of writer would be. I've not worked with a fragmented assembly before, and the idea is interesting.  If you'd like please feel free to open a issue and we can throw some ideas around. We also are always more than glad to review PRs :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "Does AWS have any features that make charting data easy? I know you can always just conjure an EC2 and toss in a DB, but was curious about any prebuilt solutions. Closest I see is Quicksite, which is in preview",
  "id": "5699a1a42bc35f6c1c1a63eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-16T01:49:24.547Z",
  "text": "Does AWS have any features that make charting data easy? I know you can always just conjure an EC2 and toss in a DB, but was curious about any prebuilt solutions. Closest I see is Quicksite, which is in preview",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Xackery\" class=\"mention\">@Xackery</span> Correct Quicksite is a new tool AWS recently announced at reInvent 2015. I definitely recommend signing up for the preview to try it out to see if it fits your needs. Alternatively there are also several <a href=\"https://aws.amazon.com/marketplace/ref=mkt_ste_amis_redirect?b_k=291\" rel=\"nofollow\" target=\"_blank\" class=\"link\">preconfigured AMIs</a> which you can deploy to EC2, and may help reduce the time to get started, and start producing charts quickly.  I suggest taking a look at these to see if any of them meet the charting requirements you&#39;re looking for.",
  "id": "5699c19eda358920486f02b1",
  "issues": [],
  "mentions": [
   {
    "screenName": "Xackery",
    "userId": "55cefd0e0fc9f982bead7742",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-16T04:05:50.006Z",
  "text": "@Xackery Correct Quicksite is a new tool AWS recently announced at reInvent 2015. I definitely recommend signing up for the preview to try it out to see if it fits your needs. Alternatively there are also several [preconfigured AMIs](https://aws.amazon.com/marketplace/ref=mkt_ste_amis_redirect?b_k=291) which you can deploy to EC2, and may help reduce the time to get started, and start producing charts quickly.  I suggest taking a look at these to see if any of them meet the charting requirements you're looking for.",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/marketplace/ref=mkt_ste_amis_redirect?b_k=291"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "They didn&#39;t accept my application sadly for quicksite. :( Would love to have it.",
  "id": "569fe3fe28b4586d1c8dd061",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-20T19:46:06.601Z",
  "text": "They didn't accept my application sadly for quicksite. :( Would love to have it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "Thanks for the preconfigured AMI reference.",
  "id": "569fe40528b4586d1c8dd062",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-20T19:46:13.620Z",
  "text": "Thanks for the preconfigured AMI reference.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Xackery\" class=\"mention\">@Xackery</span> glad to help. Hopefully Quicksite will open up their preview pool and you can get in next time. Definetly stay tuned to their updates.",
  "id": "569ffc4b28b4586d1c8dd63b",
  "issues": [],
  "mentions": [
   {
    "screenName": "Xackery",
    "userId": "55cefd0e0fc9f982bead7742",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-20T21:29:47.723Z",
  "text": "@Xackery glad to help. Hopefully Quicksite will open up their preview pool and you can get in next time. Definetly stay tuned to their updates.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "There&#39;s no easy trick for emulating auto_increment with dynamodb, right? E.g., I use a number primary index for dynamodb, and I want it to +1 a unique field each time (from whatever highest number is). Seems UUID is only way.",
  "id": "56a03a563165a6af1a3cfe01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-21T01:54:30.826Z",
  "text": "There's no easy trick for emulating auto_increment with dynamodb, right? E.g., I use a number primary index for dynamodb, and I want it to +1 a unique field each time (from whatever highest number is). Seems UUID is only way.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "How about using UpdateItem with UpdateExpression such as \u201cSET count=count + 1\u201d ?",
  "id": "56a03a86a03e28ad1adff004",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-21T01:55:18.809Z",
  "text": "How about using UpdateItem with UpdateExpression such as \u201cSET count=count + 1\u201d ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "I need to test that <span data-link-type=\"mention\" data-screen-name=\"suzuken\" class=\"mention\">@suzuken</span> but the concern is, i&#39;m always setting e.g. count = count+1, which means if I pass 0, it may override the 1st entry each time, unless it is smart enough to count=count+1 until it finds an available increment.. or I write that logic as well",
  "id": "56a12d483165a6af1a3d26ed",
  "issues": [],
  "mentions": [
   {
    "screenName": "suzuken",
    "userId": "5424e135163965c9bc206c69",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-21T19:11:04.982Z",
  "text": "I need to test that @suzuken but the concern is, i'm always setting e.g. count = count+1, which means if I pass 0, it may override the 1st entry each time, unless it is smart enough to count=count+1 until it finds an available increment.. or I write that logic as well",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "With ElasticSearch for AWS, is there a Go client library recommended for working with ElasticSearch API within an AWS ElasticSearch instance? (It seems currently the aws-sdk-go library is for management of the cluster for ES, but actually working with elasticsearch is giving headaches for auth reasons)",
  "id": "56a160f459e3d04215bd2cfd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-01-21T22:51:32.449Z",
  "text": "With ElasticSearch for AWS, is there a Go client library recommended for working with ElasticSearch API within an AWS ElasticSearch instance? (It seems currently the aws-sdk-go library is for management of the cluster for ES, but actually working with elasticsearch is giving headaches for auth reasons)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Xackery\" class=\"mention\">@Xackery</span> The SDK only supports managing the control of ES clusters. I haven&#39;t used it but it looks like <a href=\"http://olivere.github.io/elastic/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://olivere.github.io/elastic/</a> is a simi up todate library for working with elastic searches data API.",
  "id": "56a17494da358920487024d2",
  "issues": [],
  "mentions": [
   {
    "screenName": "Xackery",
    "userId": "55cefd0e0fc9f982bead7742",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-22T00:15:16.902Z",
  "text": "@Xackery The SDK only supports managing the control of ES clusters. I haven't used it but it looks like http://olivere.github.io/elastic/ is a simi up todate library for working with elastic searches data API.",
  "unread": false,
  "urls": [
   {
    "url": "http://olivere.github.io/elastic/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "Yeah, i forked that and trying to get it to support AWS auth",
  "id": "56a17797c391361d48ec8af8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-22T00:28:07.640Z",
  "text": "Yeah, i forked that and trying to get it to support AWS auth",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "since it only supports BasicAuth or no auth",
  "id": "56a1779b28b4586d1c8e137d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-22T00:28:11.906Z",
  "text": "since it only supports BasicAuth or no auth",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "I can get it to connect, do you know if what version of ES AWS is running?",
  "id": "56a177a95de13b3f15e47f21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-22T00:28:25.876Z",
  "text": "I can get it to connect, do you know if what version of ES AWS is running?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "&quot;Amazon Elasticsearch Service currently supports Elasticsearch 1.5.2.&quot;  <a href=\"https://aws.amazon.com/elasticsearch-service/faqs/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://aws.amazon.com/elasticsearch-service/faqs/</a>",
  "id": "56a177c8a03e28ad1ae028b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-22T00:28:56.580Z",
  "text": "\"Amazon Elasticsearch Service currently supports Elasticsearch 1.5.2.\"  https://aws.amazon.com/elasticsearch-service/faqs/",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/elasticsearch-service/faqs/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "well, shit. I was running 3. That explains my issues with interfacing.",
  "id": "56a178085de13b3f15e47f2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-22T00:30:00.653Z",
  "text": "well, shit. I was running 3. That explains my issues with interfacing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "For Amazon ES (Elasticsearch Service), any requests should be signed by signature V4. Any HTTP requests  for Amazon ES should be singed. aws-sdk it self doesn\u2019t support Elasticsearch APIs, so we should sign ourselves.  It will be helpful for you <a href=\"https://github.com/aws/aws-sdk-go/blob/master/private/signer/v4/v4.go\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/blob/master/private/signer/v4/v4.go</a> . In Node.js example, making request like that <a href=\"https://gist.github.com/nakedible-p/ad95dfb1c16e75af1ad5#file-proxy-js-L65-L71\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/nakedible-p/ad95dfb1c16e75af1ad5#file-proxy-js-L65-L71</a> . ",
  "id": "56a1d8205de13b3f15e4882a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-22T07:20:00.215Z",
  "text": "For Amazon ES (Elasticsearch Service), any requests should be signed by signature V4. Any HTTP requests  for Amazon ES should be singed. aws-sdk it self doesn\u2019t support Elasticsearch APIs, so we should sign ourselves.  It will be helpful for you https://github.com/aws/aws-sdk-go/blob/master/private/signer/v4/v4.go . In Node.js example, making request like that https://gist.github.com/nakedible-p/ad95dfb1c16e75af1ad5#file-proxy-js-L65-L71 . ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/blob/master/private/signer/v4/v4.go"
   },
   {
    "url": "https://gist.github.com/nakedible-p/ad95dfb1c16e75af1ad5#file-proxy-js-L65-L71"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-01-22T07:20:43.669Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "",
  "id": "56a1d84328b4586d1c8e1c9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-22T07:20:35.607Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-01-22T07:22:12.865Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "So if you use  <a href=\"http://olivere.github.io/elastic/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://olivere.github.io/elastic/</a>, should write a request wrapper for putting signatures for Amazon ES.",
  "id": "56a1d89959e3d04215bd38e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-22T07:22:01.902Z",
  "text": "So if you use  http://olivere.github.io/elastic/, should write a request wrapper for putting signatures for Amazon ES.",
  "unread": false,
  "urls": [
   {
    "url": "http://olivere.github.io/elastic/"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "<blockquote>\n<p>I need to test that <span data-link-type=\"mention\" data-screen-name=\"suzuken\" class=\"mention\">@suzuken</span> but the concern is, i&#39;m always setting e.g. count = count+1, which means if I pass 0, it may override the 1st entry each time, unless it is smart enough to count=count+1 until it finds an available increment.. or I write that logic as well</p></blockquote>\n<p>Yeah, I got it. Atomic counter may be matching your purpose. </p><p><a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#WorkingWithItems.AtomicCounters\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#WorkingWithItems.AtomicCounters</a><br><a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.Modifying.html#Expressions.Modifying.UpdateExpressions.SET.IncrementAndDecrement\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.Modifying.html#Expressions.Modifying.UpdateExpressions.SET.IncrementAndDecrement</a></p><p>UpdateExpression supports this. It\u2019s atomic operations for Number fields.</p>",
  "id": "56a1d959a03e28ad1ae03228",
  "issues": [],
  "mentions": [
   {
    "screenName": "suzuken",
    "userId": "5424e135163965c9bc206c69",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-22T07:25:13.492Z",
  "text": "> I need to test that @suzuken but the concern is, i'm always setting e.g. count = count+1, which means if I pass 0, it may override the 1st entry each time, unless it is smart enough to count=count+1 until it finds an available increment.. or I write that logic as well\n\nYeah, I got it. Atomic counter may be matching your purpose. \n\nhttp://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#WorkingWithItems.AtomicCounters\nhttp://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.Modifying.html#Expressions.Modifying.UpdateExpressions.SET.IncrementAndDecrement\n\nUpdateExpression supports this. It\u2019s atomic operations for Number fields.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#WorkingWithItems.AtomicCounters"
   },
   {
    "url": "http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.Modifying.html#Expressions.Modifying.UpdateExpressions.SET.IncrementAndDecrement"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-01-22T07:27:31.263Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "Ah, but for making primary key purpose, I\u2019ll recommend using UUID as you said :)",
  "id": "56a1d9d7a03e28ad1ae03236",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2016-01-22T07:27:19.911Z",
  "text": "Ah, but for making primary key purpose, I\u2019ll recommend using UUID as you said :)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/kurianCoding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9929901?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9929901?v=3&s=60",
   "displayName": "kurian c kurian",
   "gv": "3",
   "id": "56a8e5a3e610378809be79d2",
   "url": "/kurianCoding",
   "username": "kurianCoding"
  },
  "html": "is there a simple example which shows how to send emails using ses?(I tried the example given in aws-sdk-go but its giving signature does not match and a long error)",
  "id": "56a8e80e80ad69394a7ac64c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-27T15:53:50.927Z",
  "text": "is there a simple example which shows how to send emails using ses?(I tried the example given in aws-sdk-go but its giving signature does not match and a long error)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"kurianCoding\" class=\"mention\">@kurianCoding</span> The SDK is very close to the service APIs so to use the SDK with SES should be similar to the AWS dev documentation. Here is an example which will send a message to a single recipient.",
  "id": "56a940b5c54bc2bf180c7047",
  "issues": [],
  "mentions": [
   {
    "screenName": "kurianCoding",
    "userId": "56a8e5a3e610378809be79d2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-27T22:12:05.189Z",
  "text": "Hi @kurianCoding The SDK is very close to the service APIs so to use the SDK with SES should be similar to the AWS dev documentation. Here is an example which will send a message to a single recipient.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<pre><code class=\"go\"><span class=\"keyword\">package</span> main\n\n<span class=\"keyword\">import</span> (\n    <span class=\"string\">\"fmt\"</span>\n\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/aws\"</span>\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/aws/session\"</span>\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/service/ses\"</span>\n)\n\n<span class=\"keyword\">func</span> main() {\n    svc := ses.New(session.New())\n    result, err := svc.SendEmail(&amp;ses.SendEmailInput{\n        Destination: &amp;ses.Destination{\n            ToAddresses: []*<span class=\"typename\">string</span>{aws.String(<span class=\"string\">\"toemail@example.com\"</span>)},\n        },\n        Source: aws.String(<span class=\"string\">\"myemail@example.com\"</span>),\n        Message: &amp;ses.Message{\n            Subject: &amp;ses.Content{Data: aws.String(<span class=\"string\">\"My Email subject\"</span>)},\n            Body:    &amp;ses.Body{Text: &amp;ses.Content{Data: aws.String(<span class=\"string\">\"My email message body\"</span>)}},\n        },\n    })\n    <span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n        fmt.Println(<span class=\"string\">\"error\"</span>, err)\n    }\n\n    fmt.Println(<span class=\"string\">\"success\"</span>, result)\n}</code></pre>",
  "id": "56a940d6dc33b33c7548471f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-27T22:12:38.924Z",
  "text": "```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/aws/aws-sdk-go/aws\"\n\t\"github.com/aws/aws-sdk-go/aws/session\"\n\t\"github.com/aws/aws-sdk-go/service/ses\"\n)\n\nfunc main() {\n\tsvc := ses.New(session.New())\n\tresult, err := svc.SendEmail(&ses.SendEmailInput{\n\t\tDestination: &ses.Destination{\n\t\t\tToAddresses: []*string{aws.String(\"toemail@example.com\")},\n\t\t},\n\t\tSource: aws.String(\"myemail@example.com\"),\n\t\tMessage: &ses.Message{\n\t\t\tSubject: &ses.Content{Data: aws.String(\"My Email subject\")},\n\t\t\tBody:    &ses.Body{Text: &ses.Content{Data: aws.String(\"My email message body\")}},\n\t\t},\n\t})\n\tif err != nil {\n\t\tfmt.Println(\"error\", err)\n\t}\n\n\tfmt.Println(\"success\", result)\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/kurianCoding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9929901?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9929901?v=3&s=60",
   "displayName": "kurian c kurian",
   "gv": "3",
   "id": "56a8e5a3e610378809be79d2",
   "url": "/kurianCoding",
   "username": "kurianCoding"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>  thank you!, but somehow it still shows    SignatureDoesNotMatch: The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.+ [some long  template error]. Thanks once more for the help. If someone could help me on what I am doing wrong, {Region:aws.String(&quot;us-east-1&quot;)} ",
  "id": "56a996a5aaae7a3a75938d73",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-28T04:18:45.549Z",
  "text": "@jasdel  thank you!, but somehow it still shows    SignatureDoesNotMatch: The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.+ [some long  template error]. Thanks once more for the help. If someone could help me on what I am doing wrong, {Region:aws.String(\"us-east-1\")} ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kurianCoding\" class=\"mention\">@kurianCoding</span> Try changing your service client initialization to do debug logging like:<br>```go",
  "id": "56a9a48c6b6468374a09f5ed",
  "issues": [],
  "mentions": [
   {
    "screenName": "kurianCoding",
    "userId": "56a8e5a3e610378809be79d2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-01-28T05:18:04.882Z",
  "text": "@kurianCoding Try changing your service client initialization to do debug logging like:\n```go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<pre><code class=\"go\">svc  := ses.New(session.New(), aws.NewConfig().WithLogLevel(aws.LogDebugWithHTTPBody))</code></pre>",
  "id": "56a9a4b76b6468374a09f5f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-28T05:18:47.984Z",
  "text": "```go\nsvc  := ses.New(session.New(), aws.NewConfig().WithLogLevel(aws.LogDebugWithHTTPBody))\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "This will log the full error message and body which might give a hint why the signature didn&#39;t match.",
  "id": "56a9a4f2aaae7a3a75938f07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-28T05:19:46.270Z",
  "text": "This will log the full error message and body which might give a hint why the signature didn't match.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Also <span data-link-type=\"mention\" data-screen-name=\"kurianCoding\" class=\"mention\">@kurianCoding</span> check the clock/datetime of the computer you&#39;re running the code on. If the time is too far off it could cause signature errors",
  "id": "56a9a6a2586242210adffc5d",
  "issues": [],
  "mentions": [
   {
    "screenName": "kurianCoding",
    "userId": "56a8e5a3e610378809be79d2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-28T05:26:58.116Z",
  "text": "Also @kurianCoding check the clock/datetime of the computer you're running the code on. If the time is too far off it could cause signature errors",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/kurianCoding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9929901?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9929901?v=3&s=60",
   "displayName": "kurian c kurian",
   "gv": "3",
   "id": "56a8e5a3e610378809be79d2",
   "url": "/kurianCoding",
   "username": "kurianCoding"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>  clock time is automatically updated from the internet. It should take care of time right?",
  "id": "56a9a79dc54bc2bf180c7c72",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-01-28T05:31:09.736Z",
  "text": "@jasdel  clock time is automatically updated from the internet. It should take care of time right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kurianCoding\" class=\"mention\">@kurianCoding</span> I would expect the clock to be synced then.  In the output error message there is a section where it lists headers. <code>key:value</code> is any of yours missing the value?  Such as <code>x-amz-date:&lt;sometime&gt;</code>",
  "id": "56aa613caaae7a3a7593b0f9",
  "issues": [],
  "mentions": [
   {
    "screenName": "kurianCoding",
    "userId": "56a8e5a3e610378809be79d2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-01-28T18:43:08.280Z",
  "text": "@kurianCoding I would expect the clock to be synced then.  In the output error message there is a section where it lists headers. `key:value` is any of yours missing the value?  Such as `x-amz-date:<sometime>`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/puredistortion",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/758887?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/758887?v=3&s=60",
   "displayName": "Dale",
   "gv": "3",
   "id": "5309cac35e986b0712efa6be",
   "url": "/puredistortion",
   "username": "puredistortion",
   "v": 1
  },
  "html": "Hi all, I have a question about NON BGP Customer Gateways.<br>When looking at the docs (<a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/ec2.html#type-CreateCustomerGatewayInput\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/ec2.html#type-CreateCustomerGatewayInput</a>) the <code>BgpAsn</code> parameter is a required feild, how do you build a NON BGP CustomerGateway via the GO SDK  ",
  "id": "56b15fc0c54bc2bf180da747",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-02-03T02:02:40.640Z",
  "text": "Hi all, I have a question about NON BGP Customer Gateways. \nWhen looking at the docs (http://docs.aws.amazon.com/sdk-for-go/api/service/ec2.html#type-CreateCustomerGatewayInput) the `BgpAsn` parameter is a required feild, how do you build a NON BGP CustomerGateway via the GO SDK  ",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/ec2.html#type-CreateCustomerGatewayInput"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/kurianCoding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9929901?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9929901?v=3&s=60",
   "displayName": "kurian c kurian",
   "gv": "3",
   "id": "56a8e5a3e610378809be79d2",
   "url": "/kurianCoding",
   "username": "kurianCoding"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>  thank you, issue was completely different(my mistake).  The aws region I was using was different from the one on which client key was registered.Some miscommunication was all the error that was. The example worked smoothly once this was rectified. Thank you for all the help.",
  "id": "56b1aca98fbaf4220afafafc",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-03T07:30:49.183Z",
  "text": "@jasdel  thank you, issue was completely different(my mistake).  The aws region I was using was different from the one on which client key was registered.Some miscommunication was all the error that was. The example worked smoothly once this was rectified. Thank you for all the help.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kurianCoding\" class=\"mention\">@kurianCoding</span> Glad that was a straightforward fix. let us know if you have any other questions, feedback, or ideas for improving that flow to make it easier, and harder to get wrong in the future",
  "id": "56b23a64a867d14059a34f84",
  "issues": [],
  "mentions": [
   {
    "screenName": "kurianCoding",
    "userId": "56a8e5a3e610378809be79d2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-03T17:35:32.357Z",
  "text": "@kurianCoding Glad that was a straightforward fix. let us know if you have any other questions, feedback, or ideas for improving that flow to make it easier, and harder to get wrong in the future",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/keviny22",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3271530?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3271530?v=3&s=60",
   "displayName": "keviny22",
   "gv": "3",
   "id": "55efadbd0fc9f982beb0157c",
   "url": "/keviny22",
   "username": "keviny22"
  },
  "html": "<p>Does anyone have an suggestions on how i can implement this function using the newer aws-sdk-go, using sessions?  I&#39;m pretty new to go and to this sdk, any pointers would be appreciated.</p><p>```</p>",
  "id": "56b4cea48e641d83305886d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-05T16:32:36.266Z",
  "text": "Does anyone have an suggestions on how i can implement this function using the newer aws-sdk-go, using sessions?  I'm pretty new to go and to this sdk, any pointers would be appreciated.\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/keviny22",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3271530?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3271530?v=3&s=60",
   "displayName": "keviny22",
   "gv": "3",
   "id": "55efadbd0fc9f982beb0157c",
   "url": "/keviny22",
   "username": "keviny22"
  },
  "html": "<pre><code>func newCredentials(role <span class=\"built_in\">string</span>) (*credentials.Credentials, <span class=\"built_in\">string</span>) {\n    <span class=\"keyword\">if</span> role == <span class=\"string\">\"\"</span> {\n        return defaults.DefaultChainCredentials, <span class=\"string\">\"default\"</span>\n    } <span class=\"keyword\">else</span> {\n        return credentials.NewCredentials(&amp;stscreds.AssumeRoleProvider{\n            Duration:     <span class=\"built_in\">time</span>.<span class=\"built_in\">Hour</span>,\n            RoleARN:      role,\n            ExpiryWindow: <span class=\"number\">5</span> * <span class=\"built_in\">time</span>.<span class=\"built_in\">Minute</span>,\n        }), <span class=\"string\">\"assume role\"</span>\n    }\n}</code></pre>",
  "id": "56b4cee4939ffd5d15f5fd67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-05T16:33:40.725Z",
  "text": "```\nfunc newCredentials(role string) (*credentials.Credentials, string) {\n\tif role == \"\" {\n\t\treturn defaults.DefaultChainCredentials, \"default\"\n\t} else {\n\t\treturn credentials.NewCredentials(&stscreds.AssumeRoleProvider{\n\t\t\tDuration:     time.Hour,\n\t\t\tRoleARN:      role,\n\t\t\tExpiryWindow: 5 * time.Minute,\n\t\t}), \"assume role\"\n\t}\n}\n\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"keviny22\" class=\"mention\">@keviny22</span> to upgrade to the latest SDK you&#39;ll need to update your logic to use <code>aws/session#Session</code>. The following example describes how this can be done.",
  "id": "56b50d8f2bb6eb8230a1b889",
  "issues": [],
  "mentions": [
   {
    "screenName": "keviny22",
    "userId": "55efadbd0fc9f982beb0157c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-05T21:01:03.538Z",
  "text": "@keviny22 to upgrade to the latest SDK you'll need to update your logic to use `aws/session#Session`. The following example describes how this can be done.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<pre><code class=\"go\"><span class=\"keyword\">package</span> main\n\n<span class=\"keyword\">import</span> (\n    <span class=\"string\">\"fmt\"</span>\n    <span class=\"string\">\"os\"</span>\n    <span class=\"string\">\"time\"</span>\n\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/aws/credentials\"</span>\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/aws/credentials/stscreds\"</span>\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/aws/defaults\"</span>\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/aws/session\"</span>\n)\n\n<span class=\"keyword\">func</span> main() {\n    role := <span class=\"string\">\"default\"</span>\n    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(os.Args) &gt; <span class=\"number\">1</span> {\n        role = os.Args[<span class=\"number\">1</span>] <span class=\"comment\">// Role to use</span>\n    }\n\n    <span class=\"comment\">// Shared session can be used across many clients</span>\n    sess := session.New() \n\n    <span class=\"comment\">// Create new credentials based on the role string</span>\n    creds, credType := newCredentials(sess, role)\n\n    <span class=\"comment\">// Assign the credentials to the session's config</span>\n    <span class=\"comment\">// so each service will use this later. Alternatively</span>\n    <span class=\"comment\">// this creds could be used in a service's New. To </span>\n    <span class=\"comment\">// provide the credentials to a select group of service</span>\n    <span class=\"comment\">// clients.</span>\n    sess.Config.Credentials = creds\n\n    fmt.Println(<span class=\"string\">\"Using credentials\"</span>, credType)\n}\n\n<span class=\"keyword\">func</span> newCredentials(sess *session.Session, role <span class=\"typename\">string</span>) (*credentials.Credentials, <span class=\"typename\">string</span>) {\n    <span class=\"keyword\">if</span> role == <span class=\"string\">\"default\"</span> {\n        <span class=\"keyword\">return</span> defaults.CredChain(sess.Config, sess.Handlers), role\n    } <span class=\"keyword\">else</span> {\n        creds := stscreds.NewCredentials(sess, role, <span class=\"keyword\">func</span>(o *stscreds.AssumeRoleProvider) {\n            o.Duration = time.Hour\n            o.ExpiryWindow = <span class=\"number\">5</span> * time.Minute\n        })\n        <span class=\"keyword\">return</span> creds, <span class=\"string\">\"assume role\"</span>\n    }\n}</code></pre>",
  "id": "56b50da71c80c61f4d0a9950",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-05T21:01:27.563Z",
  "text": "```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"time\"\n\n\t\"github.com/aws/aws-sdk-go/aws/credentials\"\n\t\"github.com/aws/aws-sdk-go/aws/credentials/stscreds\"\n\t\"github.com/aws/aws-sdk-go/aws/defaults\"\n\t\"github.com/aws/aws-sdk-go/aws/session\"\n)\n\nfunc main() {\n\trole := \"default\"\n\tif len(os.Args) > 1 {\n\t\trole = os.Args[1] // Role to use\n\t}\n\n\t// Shared session can be used across many clients\n\tsess := session.New() \n\n\t// Create new credentials based on the role string\n\tcreds, credType := newCredentials(sess, role)\n\n\t// Assign the credentials to the session's config\n\t// so each service will use this later. Alternatively\n\t// this creds could be used in a service's New. To \n\t// provide the credentials to a select group of service\n\t// clients.\n\tsess.Config.Credentials = creds\n\n\tfmt.Println(\"Using credentials\", credType)\n}\n\nfunc newCredentials(sess *session.Session, role string) (*credentials.Credentials, string) {\n\tif role == \"default\" {\n\t\treturn defaults.CredChain(sess.Config, sess.Handlers), role\n\t} else {\n\t\tcreds := stscreds.NewCredentials(sess, role, func(o *stscreds.AssumeRoleProvider) {\n\t\t\to.Duration = time.Hour\n\t\t\to.ExpiryWindow = 5 * time.Minute\n\t\t})\n\t\treturn creds, \"assume role\"\n\t}\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/keviny22",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3271530?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3271530?v=3&s=60",
   "displayName": "keviny22",
   "gv": "3",
   "id": "55efadbd0fc9f982beb0157c",
   "url": "/keviny22",
   "username": "keviny22"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thanks for the info!  One question about <code>defaults.CredChain</code> the sdk docs say the <code>defaults</code> package shouldnt be used directly. <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/defaults.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/aws/defaults.html</a>      could this be another method to get the same thing? `",
  "id": "56b50f6fa44cf16b6de01c6b",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-05T21:09:03.030Z",
  "text": "@jasdel thanks for the info!  One question about `defaults.CredChain` the sdk docs say the `defaults` package shouldnt be used directly. http://docs.aws.amazon.com/sdk-for-go/api/aws/defaults.html      could this be another method to get the same thing? `",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/defaults.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/keviny22",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3271530?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3271530?v=3&s=60",
   "displayName": "keviny22",
   "gv": "3",
   "id": "55efadbd0fc9f982beb0157c",
   "url": "/keviny22",
   "username": "keviny22"
  },
  "html": "`",
  "id": "56b50f721c80c61f4d0a99b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-05T21:09:06.733Z",
  "text": "`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/keviny22",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3271530?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3271530?v=3&s=60",
   "displayName": "keviny22",
   "gv": "3",
   "id": "55efadbd0fc9f982beb0157c",
   "url": "/keviny22",
   "username": "keviny22"
  },
  "html": "<pre><code><span class=\"func\"><span class=\"keyword\">func</span> <span class=\"title\">newCredentials</span><span class=\"params\">(role string)</span></span> (*credentials.<span class=\"type\">Credentials</span>) {                            \n    <span class=\"keyword\">if</span> role == <span class=\"string\">\"\"</span> {                                                                  \n        creds := credentials.<span class=\"type\">NewSharedCredentials</span>(<span class=\"string\">\"\"</span>, <span class=\"string\">\"default\"</span>)                 \n        <span class=\"keyword\">return</span> creds                                                             \n    } <span class=\"keyword\">else</span> {                                                                         \n        creds := credentials.<span class=\"type\">NewCredentials</span>(&amp;stscreds.<span class=\"type\">AssumeRoleProvider</span>{        \n            <span class=\"type\">RoleARN</span>: role,                                                   \n            <span class=\"type\">Duration</span>:time.<span class=\"type\">Duration</span>(<span class=\"number\">15</span>) * time.<span class=\"type\">Second</span>})                       \n        <span class=\"keyword\">return</span> creds                                                             \n    }                                                                                \n}</code></pre>",
  "id": "56b50f978e641d83305894c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-05T21:09:43.796Z",
  "text": "```\nfunc newCredentials(role string) (*credentials.Credentials) {                            \n\tif role == \"\" {                                                                  \n\t\tcreds := credentials.NewSharedCredentials(\"\", \"default\")                 \n\t\treturn creds                                                             \n\t} else {                                                                         \n\t\tcreds := credentials.NewCredentials(&stscreds.AssumeRoleProvider{        \n\t\t\tRoleARN: role,                                                   \n\t\t\tDuration:time.Duration(15) * time.Second})                       \n\t\treturn creds                                                             \n\t}                                                                                \n}                                                                                                                                                                   \n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Correct <code>defaults</code> should only be used in very special cases where other ways of using the values is not available.  this example is a great update so <code>defaults</code> is not needed. Since the code is only using the shared credentials or assume role, this is a good alternative.",
  "id": "56b511ed1c80c61f4d0a9a25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-05T21:19:41.255Z",
  "text": "Correct `defaults` should only be used in very special cases where other ways of using the values is not available.  this example is a great update so `defaults` is not needed. Since the code is only using the shared credentials or assume role, this is a good alternative.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/keviny22",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3271530?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3271530?v=3&s=60",
   "displayName": "keviny22",
   "gv": "3",
   "id": "55efadbd0fc9f982beb0157c",
   "url": "/keviny22",
   "username": "keviny22"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thanks!",
  "id": "56b51639d09b3b1c4dd9e85e",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-05T21:38:01.899Z",
  "text": "@jasdel thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Hi, Anyone working on <span data-link-type=\"issue\" data-issue=\"409\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#409</span> For my last project I could not choose the Go AWS SDK due to the lack of that feature and I too could not contribute that. A new project is coming up and this is a handy feature to avoid a lot of locks and concurrency problems. Has anyone fixed that or attempting to fix that ?",
  "id": "56b5fc462079fb5f156f3586",
  "issues": [
   {
    "number": "409",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-06T13:59:34.028Z",
  "text": "Hi, Anyone working on https://github.com/aws/aws-sdk-go/issues/409 For my last project I could not choose the Go AWS SDK due to the lack of that feature and I too could not contribute that. A new project is coming up and this is a handy feature to avoid a lot of locks and concurrency problems. Has anyone fixed that or attempting to fix that ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"psankar\" class=\"mention\">@psankar</span> I don&#39;t think any progress has been started on that issue yet. It would be great to have some eyes on <span data-link-type=\"issue\" data-issue=\"409\" class=\"issue\">#409</span>. We are more than glad to discussion design/impl and review PRs. ",
  "id": "56b6d7cb2bb6eb8230a1e8c4",
  "issues": [
   {
    "number": "409"
   }
  ],
  "mentions": [
   {
    "screenName": "psankar",
    "userId": "55513f5715522ed4b3e03f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-07T05:36:11.832Z",
  "text": "Hi @psankar I don't think any progress has been started on that issue yet. It would be great to have some eyes on #409. We are more than glad to discussion design/impl and review PRs. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ah okay. thanks for the information. I am so much pressed for time otherwise I could have done something :( I could not even get my dynamodb example program tinkered (and is sleeping on an old PR)",
  "id": "56b6d8179c53e6696d489342",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-07T05:37:27.632Z",
  "text": "@jasdel ah okay. thanks for the information. I am so much pressed for time otherwise I could have done something :( I could not even get my dynamodb example program tinkered (and is sleeping on an old PR)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Do we have a way to auto-generate rowids while inserting to dynamodb or is that also not possible yet ? (for the same reason as the lack of decorators/annotations) ?",
  "id": "56bcae8e1fbcdac17897872f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-02-11T15:53:50.552Z",
  "text": "Do we have a way to auto-generate rowids while inserting to dynamodb or is that also not possible yet ? (for the same reason as the lack of decorators/annotations) ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"psankar\" class=\"mention\">@psankar</span>  the SDK will not automatically add any field or other value to a dynamoDB put item. It does not have the concept of decorators/annotations like the Java SDK. We have not decided how we would like to expose this concept yet.",
  "id": "56bcd98237437b675608ad7f",
  "issues": [],
  "mentions": [
   {
    "screenName": "psankar",
    "userId": "55513f5715522ed4b3e03f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2016-02-11T18:57:06.314Z",
  "text": "@psankar  the SDK will not automatically add any field or other value to a dynamoDB put item. It does not have the concept of decorators/annotations like the Java SDK. We have not decided how we would like to expose this concept yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thanks :)",
  "id": "56bd5d8696d748c4782f706f",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2016-02-12T04:20:22.123Z",
  "text": "@jasdel thanks :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Hi guys, I again want to say that we really need a mailing list :) ",
  "id": "56c04c6b0295dc53403e25ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-02-14T09:44:11.551Z",
  "text": "Hi guys, I again want to say that we really need a mailing list :) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "The question that I have now is: I am trying to PUT a value in the database using the <code>svc.PutItem()</code> but I get an error: <code>ValidationException: One or more parameter values were invalid: An AttributeValue may not contain an empty string</code>",
  "id": "56c04cb138f56aa31f39da33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-02-14T09:45:21.280Z",
  "text": "The question that I have now is: I am trying to PUT a value in the database using the `svc.PutItem()` but I get an error: `ValidationException: One or more parameter values were invalid: An AttributeValue may not contain an empty string`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "I really need to insert empty strings for some keys in some records.  For example, &quot;Middle Name&quot; is a field that may not be available for everyone and may be available only for some people. So, in my golang <code>struct Person {}</code> I have all of <code>FirstName, LastName, MiddleName</code> and cannot create a new struct for all combinations of missing fields (I have dozens of fields in my struct).",
  "id": "56c04d340295dc53403e25fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-02-14T09:47:32.738Z",
  "text": "I really need to insert empty strings for some keys in some records.  For example, \"Middle Name\" is a field that may not be available for everyone and may be available only for some people. So, in my golang `struct Person {}` I have all of `FirstName, LastName, MiddleName` and cannot create a new struct for all combinations of missing fields (I have dozens of fields in my struct).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "What is the way to avoid that ValidationException in my INSERTs ?",
  "id": "56c04d50fa79226456fa44d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-02-14T09:48:00.587Z",
  "text": "What is the way to avoid that ValidationException in my INSERTs ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<p>Hey <span data-link-type=\"mention\" data-screen-name=\"psankar\" class=\"mention\">@psankar</span>, it sounds like you have some fields that are optional. If this is a case, it may be a good idea to make these pointers. </p><pre><code class=\"go\"><span class=\"keyword\">type</span> Names <span class=\"keyword\">struct</span> {                                                                                                        \n  FirstName  <span class=\"typename\">string</span>                                                                                                        \n  LastName   <span class=\"typename\">string</span>                                                                                                        \n  MiddleName *<span class=\"typename\">string</span>                                                                                                       \n}                                                                                                                          \n\n<span class=\"keyword\">func</span> SomeFunction() {                                                                                                              \n  data := Names{<span class=\"string\">\"Foo\"</span>, <span class=\"string\">\"Bar\"</span>, <span class=\"constant\">nil</span>}                                                                                         \n  m, err := dynamodbattribute.ConvertTo(data)                                                                              \n  <span class=\"comment\">// Insert                                                                                                       </span>\n}</code></pre><p>Let me know if this was what you were looking for.<br>Also, thank you for the suggestion of the mailing list! I really think that is a great idea. I&#39;ll bring it up with the team!</p>",
  "id": "56c0d0c3fa79226456fa5515",
  "issues": [],
  "mentions": [
   {
    "screenName": "psankar",
    "userId": "55513f5715522ed4b3e03f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2016-02-14T19:08:51.135Z",
  "text": "Hey @psankar, it sounds like you have some fields that are optional. If this is a case, it may be a good idea to make these pointers. \n```go\ntype Names struct {                                                                                                        \n  FirstName  string                                                                                                        \n  LastName   string                                                                                                        \n  MiddleName *string                                                                                                       \n}                                                                                                                          \n                                                                                                                           \nfunc SomeFunction() {                                                                                                              \n  data := Names{\"Foo\", \"Bar\", nil}                                                                                         \n  m, err := dynamodbattribute.ConvertTo(data)                                                                              \n  // Insert                                                                                                       \n}                                                                                                                          \n```\nLet me know if this was what you were looking for.\nAlso, thank you for the suggestion of the mailing list! I really think that is a great idea. I'll bring it up with the team!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"psankar\" class=\"mention\">@psankar</span> what did you see as the reason for the mailing list? It seems the tools that we have now, gitter and github, would support anything a mailing list would provide.",
  "id": "56c28d15bc5dee6c042587c5",
  "issues": [],
  "mentions": [
   {
    "screenName": "psankar",
    "userId": "55513f5715522ed4b3e03f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-16T02:44:37.109Z",
  "text": "@psankar what did you see as the reason for the mailing list? It seems the tools that we have now, gitter and github, would support anything a mailing list would provide.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "If there is something specific that isnt covered by either gitter or github please let us know!",
  "id": "56c28d3ffa79226456fa9ca1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-16T02:45:19.377Z",
  "text": "If there is something specific that isnt covered by either gitter or github please let us know!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> yeah. I think that making a pointer will work. But it is a bit annoying to do the conversion everytime. Is there any rationale on why it should not allow empty fields ?",
  "id": "56c2c8204dfe1fa71ffd0b97",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-16T06:56:31.997Z",
  "text": "@xibz yeah. I think that making a pointer will work. But it is a bit annoying to do the conversion everytime. Is there any rationale on why it should not allow empty fields ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> Thanks for considering to create a mailing list. The basic reason is that group discussions are search friendly",
  "id": "56c2c841d9c5a252408fb8c3",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-16T06:57:05.964Z",
  "text": "@xibz Thanks for considering to create a mailing list. The basic reason is that group discussions are search friendly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> What we discuss here in gitter are never indexed by any search engine and so is lost. Also, I should remember to come and see this channel everyday. If there had been a group, I would have got a mail as soon as you have replied.",
  "id": "56c2c86ffa79226456faa1bf",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-02-16T06:57:51.374Z",
  "text": "@xibz What we discuss here in gitter are never indexed by any search engine and so is lost. Also, I should remember to come and see this channel everyday. If there had been a group, I would have got a mail as soon as you have replied.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/psankar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/353037?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/353037?v=3&s=60",
   "displayName": "Sankar \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd",
   "gv": "3",
   "id": "55513f5715522ed4b3e03f2c",
   "url": "/psankar",
   "username": "psankar",
   "v": 2
  },
  "html": "Also, gitter is time dependent. I work in the Indian time zone and mostly the gitter channel is empty during those times. If there had been a mailing list, people could subscribe and respond at the earliest they can.",
  "id": "56c2c8c0d9c5a252408fb8d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-02-16T06:59:12.247Z",
  "text": "Also, gitter is time dependent. I work in the Indian time zone and mostly the gitter channel is empty during those times. If there had been a mailing list, people could subscribe and respond at the earliest they can.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"psankar\" class=\"mention\">@psankar</span> we do not send empty values over the wire. We do this, because DynamoDB also doesn&#39;t accept empty values over the wire.",
  "id": "56c2cb6f186fc96e04bae284",
  "issues": [],
  "mentions": [
   {
    "screenName": "psankar",
    "userId": "55513f5715522ed4b3e03f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2016-02-16T07:10:39.819Z",
  "text": "@psankar we do not send empty values over the wire. We do this, because DynamoDB also doesn't accept empty values over the wire.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "In addition you can set up gitter to send an email. I&#39;ve received emails for these requests",
  "id": "56c2cb90186fc96e04bae289",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-02-16T07:11:12.857Z",
  "text": "In addition you can set up gitter to send an email. I've received emails for these requests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "If you go to your settings notifications, you can have it email it to you",
  "id": "56c2cba0d9c5a252408fb91d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-02-16T07:11:28.484Z",
  "text": "If you go to your settings notifications, you can have it email it to you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Yea, gitter isn&#39;t searchable. Github issues are. If you have any questions, let us know! If it has already been answered elsewhere, no one of us will mind answering it again. We are here for you =]",
  "id": "56c2cc6938f56aa31f3a3961",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-02-16T07:14:49.240Z",
  "text": "Yea, gitter isn't searchable. Github issues are. If you have any questions, let us know! If it has already been answered elsewhere, no one of us will mind answering it again. We are here for you =]",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-02-24T18:23:03.934Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/petermbenjamin",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6811830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6811830?v=4&s=60",
   "displayName": "Peter Benjamin",
   "gv": "4",
   "id": "559fe1815e0d51bd787adeda",
   "url": "/petermbenjamin",
   "username": "petermbenjamin",
   "v": 13
  },
  "html": "",
  "id": "56cdf504f5ca6d9d7f97210e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2016-02-24T18:23:00.019Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mhemmings",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5692567?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5692567?v=3&s=60",
   "displayName": "Mark Hemmings",
   "gv": "3",
   "id": "56d71bc8e610378809c4a71a",
   "url": "/mhemmings",
   "username": "mhemmings"
  },
  "html": "Hi guys, does the SDK provide the functionality to create a short lived S3 url?",
  "id": "56d71c480bdb886502f6c377",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-03-02T17:00:56.722Z",
  "text": "Hi guys, does the SDK provide the functionality to create a short lived S3 url?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "I\u2019ve never messed with that, (short lived S3) unfortunately. Best is to look at how you do it with normal AWS SDK API, and if you can find the method names, search the  AWS SDK, typically there\u2019s open ended params you can pass or the method is struc\u2019d out with Input/Output fields.",
  "id": "56d7411ab01413547d899778",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-03-02T19:38:02.993Z",
  "text": "I\u2019ve never messed with that, (short lived S3) unfortunately. Best is to look at how you do it with normal AWS SDK API, and if you can find the method names, search the  AWS SDK, typically there\u2019s open ended params you can pass or the method is struc\u2019d out with Input/Output fields.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xackery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/845670?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/845670?v=4&s=60",
   "displayName": "Logan",
   "gv": "4",
   "id": "55cefd0e0fc9f982bead7742",
   "url": "/xackery",
   "username": "xackery",
   "v": 13
  },
  "html": "in the AWS SDK Go docs",
  "id": "56d7412844ba0664026a8cf6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-03-02T19:38:16.290Z",
  "text": "in the AWS SDK Go docs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mhemmings\" class=\"mention\">@mhemmings</span> With the SDK&#39;s URL presigning you can generate S3 URLs which you can share and will expire in a fixed amount of time. You control how long the URL is valid for. Check out the <a href=\"https://github.com/aws/aws-sdk-go/wiki/common-examples#generate-a-pre-signed-url-for-a-getobject-operation\" rel=\"nofollow\" target=\"_blank\" class=\"link\">wiki for sdk examples</a>",
  "id": "56d7792406ba9a282a28b0da",
  "issues": [],
  "mentions": [
   {
    "screenName": "mhemmings",
    "userId": "56d71bc8e610378809c4a71a",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2016-03-02T23:37:08.980Z",
  "text": "@mhemmings With the SDK's URL presigning you can generate S3 URLs which you can share and will expire in a fixed amount of time. You control how long the URL is valid for. Check out the [wiki for sdk examples](https://github.com/aws/aws-sdk-go/wiki/common-examples#generate-a-pre-signed-url-for-a-getobject-operation)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/wiki/common-examples#generate-a-pre-signed-url-for-a-getobject-operation"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/Quentin-M",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1332289?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1332289?v=3&s=60",
   "displayName": "Quentin Machu",
   "gv": "3",
   "id": "5685883216b6c7089cc0bafd",
   "url": "/Quentin-M",
   "username": "Quentin-M",
   "v": 7
  },
  "html": "Hi. I&#39;m a Go developper and wants to sign and verify http.Requests for my own service with AWS-Style HMAC v4. So easy to do with botocore with Python but it appears to be difficult with Go as you don&#39;t expose v4.signer at all (<a href=\"https://github.com/aws/aws-sdk-go/tree/be2ec39e520e3c4088c0c6288055bdc8184a89ee/private/signer/v4\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/tree/be2ec39e520e3c4088c0c6288055bdc8184a89ee/private/signer/v4</a>) ... Any ideas? Thanks.",
  "id": "56de05bf68ddef7764696ae7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2016-03-07T22:50:39.975Z",
  "text": "Hi. I'm a Go developper and wants to sign and verify http.Requests for my own service with AWS-Style HMAC v4. So easy to do with botocore with Python but it appears to be difficult with Go as you don't expose v4.signer at all (https://github.com/aws/aws-sdk-go/tree/be2ec39e520e3c4088c0c6288055bdc8184a89ee/private/signer/v4) ... Any ideas? Thanks.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/tree/be2ec39e520e3c4088c0c6288055bdc8184a89ee/private/signer/v4"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hey <span data-link-type=\"mention\" data-screen-name=\"Quentin-M\" class=\"mention\">@Quentin-M</span>, <span data-link-type=\"issue\" data-issue=\"567\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#567</span>. Let me know if this is what you were looking for",
  "id": "56de2fbea5492841166932d6",
  "issues": [
   {
    "number": "567",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [
   {
    "screenName": "Quentin-M",
    "userId": "5685883216b6c7089cc0bafd",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-03-08T01:49:50.255Z",
  "text": "Hey @Quentin-M, [verifying signature](https://github.com/aws/aws-sdk-go/issues/567). Let me know if this is what you were looking for",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I noticed some autoscaling types are duplicating ec2 types (for example autoscaling.Ebs duplicates ec2.EbsBlockDevice), is there a way to deduplicate them?",
  "id": "56e35f5f618c335373eb2033",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-03-12T00:14:23.159Z",
  "text": "@jasdel I noticed some autoscaling types are duplicating ec2 types (for example autoscaling.Ebs duplicates ec2.EbsBlockDevice), is there a way to deduplicate them?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I&#39;m now trying to convert from one to another and I&#39;m doing a lot of manual conversions",
  "id": "56e35f8d89dd3cce1005c37a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-03-12T00:15:09.569Z",
  "text": "I'm now trying to convert from one to another and I'm doing a lot of manual conversions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> - We do not have a convert method between the two objects. What may be best is to write an adapter method <code>ConvertToEbs(interface{})</code> then switch on the type. You could then return an <code>interface{}</code>  and just cast that or  an <code>EbsType</code> that has two methods to do the casting. That way you would only need to the majority casting in the one function.",
  "id": "56e3746c89dd3cce1005c610",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-03-12T01:44:12.946Z",
  "text": "@cristim - We do not have a convert method between the two objects. What may be best is to write an adapter method `ConvertToEbs(interface{})` then switch on the type. You could then return an `interface{}`  and just cast that or  an `EbsType` that has two methods to do the casting. That way you would only need to the majority casting in the one function.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "These types differ due to the nature of how service API&#39;s are modeled. A autoscaling type may have a similar shape to an EC2 type today, but that may not always be true. It is absolutly possible for either service to update their version of the shape with new fields which make sense in their service&#39;s API context. This is the driving force between keeping these separate at the low API level of the SDK. Like <span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span>  mentioned creating conversion utilities between types like this will make working with the different types easier. In addition the SDK does contain some helper functions which might help in this case.",
  "id": "56e3a63c9f24605773d77b8e",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2016-03-12T05:16:44.530Z",
  "text": "These types differ due to the nature of how service API's are modeled. A autoscaling type may have a similar shape to an EC2 type today, but that may not always be true. It is absolutly possible for either service to update their version of the shape with new fields which make sense in their service's API context. This is the driving force between keeping these separate at the low API level of the SDK. Like @xibz  mentioned creating conversion utilities between types like this will make working with the different types easier. In addition the SDK does contain some helper functions which might help in this case.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-03-12T05:20:19.039Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Check out <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/awsutil.html#Copy-class_method\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><code>gitub.com/aws/aws-sdk-go/aws/awsutil#Copy</code></a> This method will copy one type to another as long as the struct field names/types match.",
  "id": "56e3a6adc7364f7926be4cc8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-03-12T05:18:37.670Z",
  "text": "Check out [`gitub.com/aws/aws-sdk-go/aws/awsutil#Copy`](http://docs.aws.amazon.com/sdk-for-go/api/aws/awsutil.html#Copy-class_method) This method will copy one type to another as long as the struct field names/types match.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/awsutil.html#Copy-class_method"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Though with that said, if you find you&#39;re doing this style of copy more than a once off I&#39;d suggest creating concrete copy methods for the role specifically. Will save in performance, and improve type safety of your program",
  "id": "56e3a6fb0055f8f35a828173",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-03-12T05:19:55.380Z",
  "text": "Though with that said, if you find you're doing this style of copy more than a once off I'd suggest creating concrete copy methods for the role specifically. Will save in performance, and improve type safety of your program",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thanks, that&#39;s what I ended up doing anyway but it would be nice if the teams would align those data structures (they&#39;re not the only ones, btw)",
  "id": "56e47b9811a3dbf55acb6c27",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-03-12T20:27:04.363Z",
  "text": "@jasdel thanks, that's what I ended up doing anyway but it would be nice if the teams would align those data structures (they're not the only ones, btw)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "It seems <a href=\"https://github.com/aws/aws-sdk-go/wiki\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/wiki</a> is disable. Where\u2019s wiki? or deleted?",
  "id": "56e63c12618c335373eb8485",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-14T04:20:34.553Z",
  "text": "It seems https://github.com/aws/aws-sdk-go/wiki is disable. Where\u2019s wiki? or deleted?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/wiki"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "thanks for pointing that out <span data-link-type=\"mention\" data-screen-name=\"suzuken\" class=\"mention\">@suzuken</span> checking into where the wiki went",
  "id": "56e640c389dd3cce1006268f",
  "issues": [],
  "mentions": [
   {
    "screenName": "suzuken",
    "userId": "5424e135163965c9bc206c69",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-14T04:40:35.768Z",
  "text": "thanks for pointing that out @suzuken checking into where the wiki went",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"suzuken\" class=\"mention\">@suzuken</span> I&#39;ve re-enabled the wiki thanks for letting us know it had been accidentally removed.",
  "id": "56e6448c618c335373eb85af",
  "issues": [],
  "mentions": [
   {
    "screenName": "suzuken",
    "userId": "5424e135163965c9bc206c69",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-14T04:56:44.526Z",
  "text": "@suzuken I've re-enabled the wiki thanks for letting us know it had been accidentally removed.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/suzuken",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/491428?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/491428?v=3&s=60",
   "displayName": "Kenta SUZUKI",
   "gv": "3",
   "id": "5424e135163965c9bc206c69",
   "url": "/suzuken",
   "username": "suzuken",
   "v": 1
  },
  "html": "Thanks!",
  "id": "56e6449f11a3dbf55acbab60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-14T04:57:03.822Z",
  "text": "Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/sauercrowd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4764029?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4764029?v=3&s=60",
   "displayName": "Jonas",
   "gv": "3",
   "id": "55b220d20fc9f982beaad37f",
   "url": "/sauercrowd",
   "username": "sauercrowd",
   "v": 3
  },
  "html": "Hey, I&#39;m trying to get the Windows Password of an ec2 instance. Problem is I&#39;m currently not able to decrypt the password data.<br>I&#39;ve tried it using rsa.DecryptOAEP, but I always experienced a decryption error.<br>Does someone has a function which is able to decrypt the password properly?",
  "id": "56e7fa1511a3dbf55acc1f51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-03-15T12:03:33.147Z",
  "text": "Hey, I'm trying to get the Windows Password of an ec2 instance. Problem is I'm currently not able to decrypt the password data.\nI've tried it using rsa.DecryptOAEP, but I always experienced a decryption error.\nDoes someone has a function which is able to decrypt the password properly?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "hi <span data-link-type=\"mention\" data-screen-name=\"jonadev95\" class=\"mention\">@jonadev95</span> what method are you using to retrieve the password? <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/IIS4.1GettingPassword.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">This article</a> describes how to retrieve a password from an ec2 windows instance",
  "id": "56e8914611a3dbf55acc555f",
  "issues": [],
  "mentions": [
   {
    "screenName": "jonadev95",
    "userId": "55b220d20fc9f982beaad37f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2016-03-15T22:48:38.563Z",
  "text": "hi @jonadev95 what method are you using to retrieve the password? [This article](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/IIS4.1GettingPassword.html) describes how to retrieve a password from an ec2 windows instance",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/IIS4.1GettingPassword.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/sauercrowd",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4764029?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4764029?v=3&s=60",
   "displayName": "Jonas",
   "gv": "3",
   "id": "55b220d20fc9f982beaad37f",
   "url": "/sauercrowd",
   "username": "sauercrowd",
   "v": 3
  },
  "html": "I&#39;m using the ec2 method GetPasswordData<br>Yes Problem is I&#39;m getting the encrypted password data using this method, but currently I&#39;m not able to decrypt it properly",
  "id": "56e949009f24605773d8a770",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2016-03-16T11:52:32.769Z",
  "text": "I'm using the ec2 method GetPasswordData\nYes Problem is I'm getting the encrypted password data using this method, but currently I'm not able to decrypt it properly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "hi, guys. I am trying to store some empty string to dynamo. however, I got this error: &quot;ValidationException: One or more parameter values were invalid: An AttributeValue may not contain an empty string&quot; What&#39;s the recommend way to get around this?",
  "id": "56f5790f76b6f9de194b4c6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-03-25T17:44:47.730Z",
  "text": "hi, guys. I am trying to store some empty string to dynamo. however, I got this error: \"ValidationException: One or more parameter values were invalid: An AttributeValue may not contain an empty string\" What's the recommend way to get around this?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Instead of empty string use the NULL attribute",
  "id": "56f5dac8d39de41b495ddcfd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-03-26T00:41:44.122Z",
  "text": "Instead of empty string use the NULL attribute",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "We dont send any null values over the wire. The empty string is a null value",
  "id": "56f5daee8f5147e119f0a68b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2016-03-26T00:42:22.691Z",
  "text": "We dont send any null values over the wire. The empty string is a null value",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-03-31T05:03:56.399Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"kelwang\" class=\"mention\">@kelwang</span> , also take a look at the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbattribute/Encoder.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">dynamodbattribute.Marshal</a> it provides marshaling Go types to <code>dynamodb.AttributeValue</code>.  This tool takes care of ensuring empty strings are marshaled to <code>NULL</code> or not marshaled if <code>ommitempty</code> is set.  DynamoDB AttributeValue string elements cannot be empty, and this is the error you&#39;re seeing.  ",
  "id": "56fcafad11ea211749c363bb",
  "issues": [],
  "mentions": [
   {
    "screenName": "kelwang",
    "userId": "555e798015522ed4b3e0c232",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-03-31T05:03:41.299Z",
  "text": "Hi @kelwang , also take a look at the [dynamodbattribute.Marshal](http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbattribute/Encoder.html) it provides marshaling Go types to `dynamodb.AttributeValue`.  This tool takes care of ensuring empty strings are marshaled to `NULL` or not marshaled if `ommitempty` is set.  DynamoDB AttributeValue string elements cannot be empty, and this is the error you're seeing.  ",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbattribute/Encoder.html"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thanks,",
  "id": "56fd710e8d2a72471b7be807",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2016-03-31T18:48:46.191Z",
  "text": "@jasdel thanks,",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/johnzeng",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14085587?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14085587?v=4&s=60",
   "displayName": "Zengda",
   "gv": "4",
   "id": "5655830116b6c7089cbc181e",
   "url": "/johnzeng",
   "username": "johnzeng",
   "v": 8
  },
  "html": "Hm, last message was months ago... I don&#39;t sure if I can get respond but I just try.<br>Hi, all, I wanna try dynamo go sdk to connect the local dynamodb , but failed , can anyone help?",
  "id": "575d22a5064b9e7266f1bb8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-06-12T08:51:49.305Z",
  "text": "Hm, last message was months ago... I don't sure if I can get respond but I just try.\nHi, all, I wanna try dynamo go sdk to connect the local dynamodb , but failed , can anyone help?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jjeffery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/458924?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/458924?v=4&s=60",
   "displayName": "John Jeffery",
   "gv": "4",
   "id": "55b9c0e40fc9f982beab7dcc",
   "url": "/jjeffery",
   "username": "jjeffery",
   "v": 9
  },
  "html": "Can anyone tell me where the &quot;api-2.json&quot; files in the model/<em>/</em> directories originate from? I&#39;m interested in calling Mechanical Turk, and there looks like there is enough information at <a href=\"http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI</a> to be able to put together a Go client, but I would much rather contribute to the Go SDK.",
  "id": "57623100da1c26b045369a13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-06-16T04:54:24.915Z",
  "text": "Can anyone tell me where the \"api-2.json\" files in the model/*/* directories originate from? I'm interested in calling Mechanical Turk, and there looks like there is enough information at http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI to be able to put together a Go client, but I would much rather contribute to the Go SDK.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jjeffery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/458924?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/458924?v=4&s=60",
   "displayName": "John Jeffery",
   "gv": "4",
   "id": "55b9c0e40fc9f982beab7dcc",
   "url": "/jjeffery",
   "username": "jjeffery",
   "v": 9
  },
  "html": "The best way to do this would be to generate code like all of the other services. I suppose I could go through the process of building an api-2.json for Mechanical Turk, but I&#39;d much rather make use of an existing copy.",
  "id": "5762314d36c83a8802062d1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-06-16T04:55:41.672Z",
  "text": "The best way to do this would be to generate code like all of the other services. I suppose I could go through the process of building an api-2.json for Mechanical Turk, but I'd much rather make use of an existing copy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/freefood89",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1236436?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1236436?v=4&s=60",
   "displayName": "Rentaro Matsukata",
   "gv": "4",
   "id": "5625becc16b6c7089cb7966f",
   "url": "/freefood89",
   "username": "freefood89",
   "v": 3
  },
  "html": "hello. does anyone know if assume-role is automatically called prior to aws api calls if you have your role arn in your ~/.aws/config file? I know the awscli does this, but I was wondering if this sdk does",
  "id": "576459892a4cd63745ea5ebd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2016-06-17T20:11:53.794Z",
  "text": "hello. does anyone know if assume-role is automatically called prior to aws api calls if you have your role arn in your ~/.aws/config file? I know the awscli does this, but I was wondering if this sdk does",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"freefood89\" class=\"mention\">@freefood89</span> the SDK does not support the ~/.aws/config. <span data-link-type=\"issue\" data-issue=\"384\" class=\"issue\">#384</span>, tracks this feature request. Loading of assume role for requests would be included with, or related to 384 being resolved. The SDK does have a way to assume a role using the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/stscreds/#AssumeRoleProvider\" rel=\"nofollow\" target=\"_blank\" class=\"link\">stscreds.AssumeRoleProvider</a>. ",
  "id": "57645b4d2a4cd63745ea5f6c",
  "issues": [
   {
    "number": "384"
   }
  ],
  "mentions": [
   {
    "screenName": "freefood89",
    "userId": "5625becc16b6c7089cb7966f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2016-06-17T20:19:25.549Z",
  "text": "Hi @freefood89 the SDK does not support the ~/.aws/config. #384, tracks this feature request. Loading of assume role for requests would be included with, or related to 384 being resolved. The SDK does have a way to assume a role using the [stscreds.AssumeRoleProvider](http://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/stscreds/#AssumeRoleProvider). ",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/stscreds/#AssumeRoleProvider"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/freefood89",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1236436?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1236436?v=4&s=60",
   "displayName": "Rentaro Matsukata",
   "gv": "4",
   "id": "5625becc16b6c7089cb7966f",
   "url": "/freefood89",
   "username": "freefood89",
   "v": 3
  },
  "html": "thanks. I was wondering whether docker&#39;s aws log driver was able to auto assume role, but I think you answered my question ",
  "id": "57645b756577f032450c1415",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-06-17T20:20:05.705Z",
  "text": "thanks. I was wondering whether docker's aws log driver was able to auto assume role, but I think you answered my question ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"jjeffery\" class=\"mention\">@jjeffery</span>, thank you for reaching out to us. The &quot;api-2.json&quot; are given to us by the service teams. MechanicalTurk has not yet given the SDKs their model to generate the <code>api-2.json</code> file. It may be best to reach out to the service team asking for support in the SDKs, <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=11\" rel=\"nofollow\" target=\"_blank\" class=\"link\">mturk forum</a>",
  "id": "57645bb0a82a6b0079a6929e",
  "issues": [],
  "mentions": [
   {
    "screenName": "jjeffery",
    "userId": "55b9c0e40fc9f982beab7dcc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2016-06-17T20:21:04.964Z",
  "text": "Hello @jjeffery, thank you for reaching out to us. The \"api-2.json\" are given to us by the service teams. MechanicalTurk has not yet given the SDKs their model to generate the `api-2.json` file. It may be best to reach out to the service team asking for support in the SDKs, [mturk forum](https://forums.aws.amazon.com/forum.jspa?forumID=11)",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=11"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"Misfit-John\" class=\"mention\">@Misfit-John</span>, What error are you getting with DynamoDB connection? It might be best to open a issue up with us on the Github page, and can track answering your question better.",
  "id": "57645bdb4227fdc9229802fc",
  "issues": [],
  "mentions": [
   {
    "screenName": "Misfit-John",
    "userId": "5655830116b6c7089cbc181e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-06-17T20:21:47.592Z",
  "text": "Hi @Misfit-John, What error are you getting with DynamoDB connection? It might be best to open a issue up with us on the Github page, and can track answering your question better.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"freefood89\" class=\"mention\">@freefood89</span> , let us know if you have any other questions or feedback, thanks",
  "id": "57645c8df0528c4c5bba016a",
  "issues": [],
  "mentions": [
   {
    "screenName": "freefood89",
    "userId": "5625becc16b6c7089cb7966f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-06-17T20:24:45.545Z",
  "text": "@freefood89 , let us know if you have any other questions or feedback, thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/freefood89",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1236436?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1236436?v=4&s=60",
   "displayName": "Rentaro Matsukata",
   "gv": "4",
   "id": "5625becc16b6c7089cb7966f",
   "url": "/freefood89",
   "username": "freefood89",
   "v": 3
  },
  "html": "thanks!",
  "id": "57645ecc2a4cd63745ea60b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-06-17T20:34:20.831Z",
  "text": "thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jjeffery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/458924?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/458924?v=4&s=60",
   "displayName": "John Jeffery",
   "gv": "4",
   "id": "55b9c0e40fc9f982beab7dcc",
   "url": "/jjeffery",
   "username": "jjeffery",
   "v": 9
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"xibs\" class=\"mention\">@xibs</span>. I have not posted on the mturk forum, but I did have a go at building my own &quot;api-2.json&quot; and associated &quot;doc-2.json&quot; for Mechanical Turk. It covers a very small subset of the available operations. Just when I thought I was having some success, I realised that the signature algorithm for Mechanical Turk is different. (Deja Vu back to when I was trying to get Simple DB to work).",
  "id": "5765ce08a82a6b0079a6e084",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibs",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2016-06-18T22:41:12.071Z",
  "text": "Thanks @xibs. I have not posted on the mturk forum, but I did have a go at building my own \"api-2.json\" and associated \"doc-2.json\" for Mechanical Turk. It covers a very small subset of the available operations. Just when I thought I was having some success, I realised that the signature algorithm for Mechanical Turk is different. (Deja Vu back to when I was trying to get Simple DB to work).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jjeffery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/458924?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/458924?v=4&s=60",
   "displayName": "John Jeffery",
   "gv": "4",
   "id": "55b9c0e40fc9f982beab7dcc",
   "url": "/jjeffery",
   "username": "jjeffery",
   "v": 9
  },
  "html": "My thinking now is that Mechanical Turk is just a bit too different at this time, and that shoe-horning it into the existing aws-go-sdk is not going to result in  an attractive PR. I think I&#39;ll have a go at building a SOAP client, focussing on the few API calls that I need to implement for my day job.",
  "id": "5765cf00f0528c4c5bba4f81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-06-18T22:45:20.038Z",
  "text": "My thinking now is that Mechanical Turk is just a bit too different at this time, and that shoe-horning it into the existing aws-go-sdk is not going to result in  an attractive PR. I think I'll have a go at building a SOAP client, focussing on the few API calls that I need to implement for my day job.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jjeffery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/458924?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/458924?v=4&s=60",
   "displayName": "John Jeffery",
   "gv": "4",
   "id": "55b9c0e40fc9f982beab7dcc",
   "url": "/jjeffery",
   "username": "jjeffery",
   "v": 9
  },
  "html": "Just in case anyone else is interested in Mechanical Turk with Go, I have something working at github.com/jjeffery/mechturk. After much trial and error I eventually went with the SOAP/WSDL interface, which is not a walk in the park with Go. I used gowsdl (github.com/hooklift/gowsdl) to generate some code from the WSDL, and it did a pretty good job. After that though there was a fair bit of hacking with the auto-generated code to get it working nicely with Mech Turk. Not ideal, I know. There is scope for forking gowsdl code and modifying it specifically for  AWS Mechanical Turk, but that&#39;s not something I&#39;m planning to do at this time. I ended up using the SOAP/WSDL interface over the REST interface because I could hack the Java CLI enough to get it to dump the XML contents of the requests and responses. From there it was simple enough to get the Go code to produce similiar. With what I know know I could probably have gone with REST, but now that it is working I guess it will just stay as it is for now.",
  "id": "576776f0bd67400679db17c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-06-20T04:54:08.925Z",
  "text": "Just in case anyone else is interested in Mechanical Turk with Go, I have something working at github.com/jjeffery/mechturk. After much trial and error I eventually went with the SOAP/WSDL interface, which is not a walk in the park with Go. I used gowsdl (github.com/hooklift/gowsdl) to generate some code from the WSDL, and it did a pretty good job. After that though there was a fair bit of hacking with the auto-generated code to get it working nicely with Mech Turk. Not ideal, I know. There is scope for forking gowsdl code and modifying it specifically for  AWS Mechanical Turk, but that's not something I'm planning to do at this time. I ended up using the SOAP/WSDL interface over the REST interface because I could hack the Java CLI enough to get it to dump the XML contents of the requests and responses. From there it was simple enough to get the Go code to produce similiar. With what I know know I could probably have gone with REST, but now that it is working I guess it will just stay as it is for now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/johnzeng",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14085587?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14085587?v=4&s=60",
   "displayName": "Zengda",
   "gv": "4",
   "id": "5655830116b6c7089cbc181e",
   "url": "/johnzeng",
   "username": "johnzeng",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I checked it looks like that the sdk need to set a credential whenever you connect to dynamodb, event if you are connecting to a local dynamodb.  But I guss this shouldn&#39;t be a bug",
  "id": "5772702c1ac8bd1a4d7d5215",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-06-28T12:40:12.901Z",
  "text": "@jasdel I checked it looks like that the sdk need to set a credential whenever you connect to dynamodb, event if you are connecting to a local dynamodb.  But I guss this shouldn't be a bug",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Correct <span data-link-type=\"mention\" data-screen-name=\"Misfit-John\" class=\"mention\">@Misfit-John</span> local dynamoDB does require some form of credentials, but these do not need to be valid credential. Since local dynamoDB will not validate them, but still requires they are present. If your app will be used in both local and remote dynamodb environments I suggest using env variables instead of static credentials as it will make the switch easier",
  "id": "5772acd8265214c1308de927",
  "issues": [],
  "mentions": [
   {
    "screenName": "Misfit-John",
    "userId": "5655830116b6c7089cbc181e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-06-28T16:59:04.273Z",
  "text": "Correct @Misfit-John local dynamoDB does require some form of credentials, but these do not need to be valid credential. Since local dynamoDB will not validate them, but still requires they are present. If your app will be used in both local and remote dynamodb environments I suggest using env variables instead of static credentials as it will make the switch easier",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/fantyz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/167806?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/167806?v=3&s=60",
   "displayName": "Kasper Middelboe Petersen",
   "gv": "3",
   "id": "577a4ab7c2f0db084a21562c",
   "url": "/fantyz",
   "username": "fantyz",
   "v": 2
  },
  "html": "I&#39;m trying to debug an issue with Kinesis where GetRecords takes a very, very long time to return (5+ minutes, some cases even 30+ minutes) causing the iterator to stop functioning. This has lead me to turn on debugging in SDK. I haven&#39;t been able to properly catch the errors with debugging on yet, but I&#39;m seeing a lot of <code>Validate Response kinesis/GetRecords failed, will retry, error UnknownError: unknown error</code> (as part of a 400 response from Kinesis to the SDKs request)  errors and I&#39;m wondering how to get any closer to what these are about? Turning on response body printing would explode my logs as its downloading a 400ish MB/minute with the GetRecords.",
  "id": "577a81b26463856209705a28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-04T15:33:06.686Z",
  "text": "I'm trying to debug an issue with Kinesis where GetRecords takes a very, very long time to return (5+ minutes, some cases even 30+ minutes) causing the iterator to stop functioning. This has lead me to turn on debugging in SDK. I haven't been able to properly catch the errors with debugging on yet, but I'm seeing a lot of `Validate Response kinesis/GetRecords failed, will retry, error UnknownError: unknown error` (as part of a 400 response from Kinesis to the SDKs request)  errors and I'm wondering how to get any closer to what these are about? Turning on response body printing would explode my logs as its downloading a 400ish MB/minute with the GetRecords.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/fantyz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/167806?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/167806?v=3&s=60",
   "displayName": "Kasper Middelboe Petersen",
   "gv": "3",
   "id": "577a4ab7c2f0db084a21562c",
   "url": "/fantyz",
   "username": "fantyz",
   "v": 2
  },
  "html": "I&#39;m getting a bunch of rate exceeded errors also - I suspect these are caused by the <code>UnknownError: unknown</code> retried in rapid succession",
  "id": "577b667469ed53d81431feeb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2016-07-05T07:49:08.385Z",
  "text": "I'm getting a bunch of rate exceeded errors also - I suspect these are caused by the `UnknownError: unknown ` retried in rapid succession",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/fantyz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/167806?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/167806?v=3&s=60",
   "displayName": "Kasper Middelboe Petersen",
   "gv": "3",
   "id": "577a4ab7c2f0db084a21562c",
   "url": "/fantyz",
   "username": "fantyz",
   "v": 2
  },
  "html": "Turns out the <code>UnknownError: unknown</code> is rate exceeded exceptions as well. Apparently <code>aws.LogDebugWithRequestErrors</code> is not sufficient to show this on its own.",
  "id": "577b96db64638562097e9c4b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2016-07-05T11:15:39.374Z",
  "text": "Turns out the `UnknownError: unknown` is rate exceeded exceptions as well. Apparently `aws.LogDebugWithRequestErrors` is not sufficient to show this on its own.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"fantyz\" class=\"mention\">@fantyz</span> thanks for contacting us. The <code>Validate Response</code> failure generally means the content received didn&#39;t match the expected checksum. The <code>UnknownError</code> looks like the error value isn&#39;t getting set correct. Try the <code>aws.LogDebugWithHTTPBody</code> log level it will echo the response body and http headers to the logger. This might help identify why the request is failing and retrying.",
  "id": "577c47644e50bf894a20eb6e",
  "issues": [],
  "mentions": [
   {
    "screenName": "fantyz",
    "userId": "577a4ab7c2f0db084a21562c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-05T23:48:52.157Z",
  "text": "Hi @fantyz thanks for contacting us. The `Validate Response` failure generally means the content received didn't match the expected checksum. The `UnknownError` looks like the error value isn't getting set correct. Try the `aws.LogDebugWithHTTPBody` log level it will echo the response body and http headers to the logger. This might help identify why the request is failing and retrying.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Its possible the SDK isn&#39;t parsing the error response correctly",
  "id": "577c47764e50bf894a20eb9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-05T23:49:10.240Z",
  "text": "Its possible the SDK isn't parsing the error response correctly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "would you mind pasting a error response body with the <code>aws.LogDebugWithHTTPBody</code> log level set?",
  "id": "577c47adc6b33f904a8d6f14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-05T23:50:05.538Z",
  "text": "would you mind pasting a error response body with the `aws.LogDebugWithHTTPBody` log level set?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-06T06:47:47.919Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/fantyz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/167806?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/167806?v=3&s=60",
   "displayName": "Kasper Middelboe Petersen",
   "gv": "3",
   "id": "577a4ab7c2f0db084a21562c",
   "url": "/fantyz",
   "username": "fantyz",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>, sure:<pre><code>Jul <span class=\"number\">06</span> <span class=\"number\">08</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> pipeline.<span class=\"string\">log:</span>  <span class=\"number\">2016</span><span class=\"regexp\">/07/</span><span class=\"number\">06</span> <span class=\"number\">06</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> <span class=\"string\">DEBUG:</span> Response kinesis/GetRecords <span class=\"string\">Details:</span>\nJul <span class=\"number\">06</span> <span class=\"number\">08</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> pipeline.<span class=\"string\">log:</span>  ---[ RESPONSE ]--------------------------------------\nJul <span class=\"number\">06</span> <span class=\"number\">08</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> pipeline.<span class=\"string\">log:</span>  HTTP/<span class=\"number\">1.1</span> <span class=\"number\">400</span> Bad Request \nJul <span class=\"number\">06</span> <span class=\"number\">08</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> pipeline.<span class=\"string\">log:</span>  <span class=\"string\">Connection:</span> close \nJul <span class=\"number\">06</span> <span class=\"number\">08</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> pipeline.<span class=\"string\">log:</span>  Content-<span class=\"string\">Length:</span> <span class=\"number\">166</span> \nJul <span class=\"number\">06</span> <span class=\"number\">08</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> pipeline.<span class=\"string\">log:</span>  Content-<span class=\"string\">Type:</span> application/x-amz-json-<span class=\"number\">1.1</span> \nJul <span class=\"number\">06</span> <span class=\"number\">08</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> pipeline.<span class=\"string\">log:</span>  <span class=\"string\">Date:</span> Wed, <span class=\"number\">06</span> Jul <span class=\"number\">2016</span> <span class=\"number\">06</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> GMT \nJul <span class=\"number\">06</span> <span class=\"number\">08</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> pipeline.<span class=\"string\">log:</span>  <span class=\"string\">Server:</span> Apache-Coyote/<span class=\"number\">1.1</span> \nJul <span class=\"number\">06</span> <span class=\"number\">08</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> pipeline.<span class=\"string\">log:</span>  X-Amz-Id-<span class=\"number\">2</span>: <span class=\"number\">0</span>VV1qhb/Mbu5QdghBgyjRnQ3AxmpDe4nex6th08XJW5IOOTOHdbn1buT8uXG0H73oaEaWya96AmvJwE5P8eDglCOdHHmc376 \nJul <span class=\"number\">06</span> <span class=\"number\">08</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> pipeline.<span class=\"string\">log:</span>  X-Amzn-<span class=\"string\">Requestid:</span> d3c857cb-<span class=\"number\">93</span>ca-<span class=\"number\">2</span>b93-<span class=\"number\">9</span>c3e-fef3babd8af1 \nJul <span class=\"number\">06</span> <span class=\"number\">08</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> pipeline.<span class=\"string\">log:</span>  {<span class=\"string\">\"__type\"</span>:<span class=\"string\">\"ProvisionedThroughputExceededException\"</span>,<span class=\"string\">\"message\"</span>:<span class=\"string\">\"Rate exceeded for shard shardId-000000000003 in stream brim-prod-analytics under account xxx.\"</span>}\nJul <span class=\"number\">06</span> <span class=\"number\">08</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> pipeline.<span class=\"string\">log:</span>  -----------------------------------------------------\nJul <span class=\"number\">06</span> <span class=\"number\">08</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> pipeline.<span class=\"string\">log:</span>  <span class=\"number\">2016</span><span class=\"regexp\">/07/</span><span class=\"number\">06</span> <span class=\"number\">06</span>:<span class=\"number\">36</span>:<span class=\"number\">40</span> <span class=\"string\">DEBUG:</span> Validate Response kinesis/GetRecords failed, will retry, error <span class=\"string\">UnknownError:</span> unknown error</code></pre>",
  "id": "577ca92e64f940856a1c4b58",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-06T06:46:06.596Z",
  "text": "@jasdel, sure:\n```\nJul 06 08:36:40 pipeline.log:  2016/07/06 06:36:40 DEBUG: Response kinesis/GetRecords Details:\nJul 06 08:36:40 pipeline.log:  ---[ RESPONSE ]--------------------------------------\nJul 06 08:36:40 pipeline.log:  HTTP/1.1 400 Bad Request \nJul 06 08:36:40 pipeline.log:  Connection: close \nJul 06 08:36:40 pipeline.log:  Content-Length: 166 \nJul 06 08:36:40 pipeline.log:  Content-Type: application/x-amz-json-1.1 \nJul 06 08:36:40 pipeline.log:  Date: Wed, 06 Jul 2016 06:36:40 GMT \nJul 06 08:36:40 pipeline.log:  Server: Apache-Coyote/1.1 \nJul 06 08:36:40 pipeline.log:  X-Amz-Id-2: 0VV1qhb/Mbu5QdghBgyjRnQ3AxmpDe4nex6th08XJW5IOOTOHdbn1buT8uXG0H73oaEaWya96AmvJwE5P8eDglCOdHHmc376 \nJul 06 08:36:40 pipeline.log:  X-Amzn-Requestid: d3c857cb-93ca-2b93-9c3e-fef3babd8af1 \nJul 06 08:36:40 pipeline.log:  {\"__type\":\"ProvisionedThroughputExceededException\",\"message\":\"Rate exceeded for shard shardId-000000000003 in stream brim-prod-analytics under account xxx.\"}\nJul 06 08:36:40 pipeline.log:  -----------------------------------------------------\nJul 06 08:36:40 pipeline.log:  2016/07/06 06:36:40 DEBUG: Validate Response kinesis/GetRecords failed, will retry, error UnknownError: unknown error\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/fantyz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/167806?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/167806?v=3&s=60",
   "displayName": "Kasper Middelboe Petersen",
   "gv": "3",
   "id": "577a4ab7c2f0db084a21562c",
   "url": "/fantyz",
   "username": "fantyz",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>, can I get you to take a look at <span data-link-type=\"issue\" data-issue=\"301\" class=\"issue\">#301</span> for me? I don&#39;t have permissions to re-open the issue myself",
  "id": "577ca963c6b33f904a927f71",
  "issues": [
   {
    "number": "301"
   }
  ],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2016-07-06T06:46:59.201Z",
  "text": "@jasdel, can I get you to take a look at #301 for me? I don't have permissions to re-open the issue myself",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for the snip <span data-link-type=\"mention\" data-screen-name=\"fantyz\" class=\"mention\">@fantyz</span> seeing the output is very helpful. It looks like the error unmarshaler in the SDK isn&#39;t extracting the exception correctly from the response body. When you see cases like this does the SDK retry the request many times?",
  "id": "577d2b00c9b49c1d6fb8257a",
  "issues": [],
  "mentions": [
   {
    "screenName": "fantyz",
    "userId": "577a4ab7c2f0db084a21562c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-06T16:00:00.880Z",
  "text": "Thanks for the snip @fantyz seeing the output is very helpful. It looks like the error unmarshaler in the SDK isn't extracting the exception correctly from the response body. When you see cases like this does the SDK retry the request many times?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Though its odd because that error is the format expected by the SDK for the JSONRPC protocol kinesis uses.",
  "id": "577d2b9959cfbd4c5e2b57f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-06T16:02:33.954Z",
  "text": "Though its odd because that error is the format expected by the SDK for the JSONRPC protocol kinesis uses.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/fantyz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/167806?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/167806?v=3&s=60",
   "displayName": "Kasper Middelboe Petersen",
   "gv": "3",
   "id": "577a4ab7c2f0db084a21562c",
   "url": "/fantyz",
   "username": "fantyz",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> the ones I&#39;ve noticed has come in 3 unknown errors that are silently retried (with seemingly no delay in between?) before the fourth occurrence makes <code>GetRecords</code> return with the correct <code>ThroughputExceededException</code> error",
  "id": "577dfd32064f828707cf31b0",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-07T06:56:50.535Z",
  "text": "@jasdel the ones I've noticed has come in 3 unknown errors that are silently retried (with seemingly no delay in between?) before the fourth occurrence makes `GetRecords` return with the correct `ThroughputExceededException` error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/fantyz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/167806?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/167806?v=3&s=60",
   "displayName": "Kasper Middelboe Petersen",
   "gv": "3",
   "id": "577a4ab7c2f0db084a21562c",
   "url": "/fantyz",
   "username": "fantyz",
   "v": 2
  },
  "html": "It would be nice to have it default to retrying, especially, <code>ThroughputExceededException</code>errors with a delay.",
  "id": "577e015c59cfbd4c5e3774b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-07T07:14:36.904Z",
  "text": "It would be nice to have it default to retrying, especially, `ThroughputExceededException`errors with a delay.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/fantyz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/167806?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/167806?v=3&s=60",
   "displayName": "Kasper Middelboe Petersen",
   "gv": "3",
   "id": "577a4ab7c2f0db084a21562c",
   "url": "/fantyz",
   "username": "fantyz",
   "v": 2
  },
  "html": "I&#39;m also seeing <code>Unmarshal Response kinesis/GetRecords failed, not retrying, error SerializationError: failed decoding JSON RPC response</code>followed by <code>caused by: read tcp 172.31.141.229:39182-&gt;54.239.22.11:443: read: connection reset by peer</code>. Aren&#39;t these thing something that should be automatically retried?",
  "id": "577e020cc9b49c1d6fc40f6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-07T07:17:32.023Z",
  "text": "I'm also seeing `Unmarshal Response kinesis/GetRecords failed, not retrying, error SerializationError: failed decoding JSON RPC response`followed by `caused by: read tcp 172.31.141.229:39182->54.239.22.11:443: read: connection reset by peer`. Aren't these thing something that should be automatically retried?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "the JSON <code>SerializationError</code> error implies that the body response provided by the server was invalid, or incorrect. are you seeing this error on multiple occurrences?   Also  updated the <span data-link-type=\"issue\" data-issue=\"301\" class=\"issue\">#301</span> issue",
  "id": "577e8ded1ca34a944eb78313",
  "issues": [
   {
    "number": "301"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-07T17:14:21.691Z",
  "text": "the JSON `SerializationError` error implies that the body response provided by the server was invalid, or incorrect. are you seeing this error on multiple occurrences?   Also  updated the #301 issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/fantyz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/167806?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/167806?v=3&s=60",
   "displayName": "Kasper Middelboe Petersen",
   "gv": "3",
   "id": "577a4ab7c2f0db084a21562c",
   "url": "/fantyz",
   "username": "fantyz",
   "v": 2
  },
  "html": "Yea, we see a handful of these. I had planned to do retrying in the application until i realized that the SDK has such functionality already. I&#39;m not sure I understand why an error like that is not retried when its caused by the network connection being reset (as opposed to a broken service sending gibberish)",
  "id": "577ec8febdafd191072e1aca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-07T21:26:22.157Z",
  "text": "Yea, we see a handful of these. I had planned to do retrying in the application until i realized that the SDK has such functionality already. I'm not sure I understand why an error like that is not retried when its caused by the network connection being reset (as opposed to a broken service sending gibberish)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Correct, the SDK doesn&#39;t generically retry failed connection resets once the initial response headers have been received. This is due to the SDK not having enough information to know if a request can be retried. It could be destructive for the SDK to retry arbitrary requests, that completed successfully server side, but the client failed to retrieve the content.  This is why the SDK doesn&#39;t automatically retry connection reset errors.",
  "id": "577eee3b59cfbd4c5e441e35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-08T00:05:15.001Z",
  "text": "Correct, the SDK doesn't generically retry failed connection resets once the initial response headers have been received. This is due to the SDK not having enough information to know if a request can be retried. It could be destructive for the SDK to retry arbitrary requests, that completed successfully server side, but the client failed to retrieve the content.  This is why the SDK doesn't automatically retry connection reset errors.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/fantyz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/167806?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/167806?v=3&s=60",
   "displayName": "Kasper Middelboe Petersen",
   "gv": "3",
   "id": "577a4ab7c2f0db084a21562c",
   "url": "/fantyz",
   "username": "fantyz",
   "v": 2
  },
  "html": " Ahh, that makes sense! ",
  "id": "577f4aa9b79455146f657c35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-08T06:39:37.813Z",
  "text": " Ahh, that makes sense! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/fantyz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/167806?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/167806?v=3&s=60",
   "displayName": "Kasper Middelboe Petersen",
   "gv": "3",
   "id": "577a4ab7c2f0db084a21562c",
   "url": "/fantyz",
   "username": "fantyz",
   "v": 2
  },
  "html": "Can I easily get the SDK to retry these for me in this case where its a pure read operation and there is no risk involved in retrying? Or would it be easier to do that in my client?",
  "id": "577f4ae8bdafd1910733ad51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-08T06:40:40.435Z",
  "text": "Can I easily get the SDK to retry these for me in this case where its a pure read operation and there is no risk involved in retrying? Or would it be easier to do that in my client?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I&#39;d suggest doing the retry work in your client to ensure you&#39;re able to easily update the SDK in the future. The simplest way to do this in the  <code>request.Handler</code>",
  "id": "577fd68cbdafd191073b24cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-08T16:36:28.217Z",
  "text": "I'd suggest doing the retry work in your client to ensure you're able to easily update the SDK in the future. The simplest way to do this in the  `request.Handler`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "specifically adding  a handler to the end of the <code>AfterRetry</code> handler. You can use this handler to set <code>request#Request.Retryable</code> true for <code>GetRecords</code> when the error code is <code>SerializationError</code>.",
  "id": "577fd8e51ca34a944ec797d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-08T16:46:29.763Z",
  "text": "specifically adding  a handler to the end of the `AfterRetry` handler. You can use this handler to set `request#Request.Retryable` true for `GetRecords` when the error code is `SerializationError`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-11T08:01:59.422Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/athempel_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H_bigger.jpg",
   "displayName": "Adrian Hempel",
   "id": "578350b0c2f0db084a226897",
   "url": "/athempel_twitter",
   "username": "athempel_twitter"
  },
  "html": "In the last few days, I&#39;ve been having trouble with the AWS SDK for Go failing in DNS resolution of endpoint names, e.g. <code>RequestError: send request failed\ncaused by: Post https://logs.ap-southeast-1.amazonaws.com/: dial tcp: lookup logs.ap-southeast-1.amazonaws.com: no such host</code>",
  "id": "57835153064f8287070c134e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-11T07:57:07.486Z",
  "text": "In the last few days, I've been having trouble with the AWS SDK for Go failing in DNS resolution of endpoint names, e.g. `RequestError: send request failed\ncaused by: Post https://logs.ap-southeast-1.amazonaws.com/: dial tcp: lookup logs.ap-southeast-1.amazonaws.com: no such host`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2016-07-11T08:01:06.837Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/athempel_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H_bigger.jpg",
   "displayName": "Adrian Hempel",
   "id": "578350b0c2f0db084a226897",
   "url": "/athempel_twitter",
   "username": "athempel_twitter"
  },
  "html": "It was working fine before then. I&#39;ve tried on different machines, networks, and with different DNS servers. I&#39;m running on OS X.",
  "id": "57835183bdafd191075fc411",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-11T07:57:55.765Z",
  "text": "It was working fine before then. I've tried on different machines, networks, and with different DNS servers. I'm running on OS X.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/athempel_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H_bigger.jpg",
   "displayName": "Adrian Hempel",
   "id": "578350b0c2f0db084a226897",
   "url": "/athempel_twitter",
   "username": "athempel_twitter"
  },
  "html": "It seems to intermittently affect all services and all regions.",
  "id": "578351abc9b49c1d6f003023",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-11T07:58:35.514Z",
  "text": "It seems to intermittently affect all services and all regions.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/athempel_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H_bigger.jpg",
   "displayName": "Adrian Hempel",
   "id": "578350b0c2f0db084a226897",
   "url": "/athempel_twitter",
   "username": "athempel_twitter"
  },
  "html": "Anyone else having this problem? Anyone know of a solution?",
  "id": "5783542bc9b49c1d6f0053e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-11T08:09:15.788Z",
  "text": "Anyone else having this problem? Anyone know of a solution?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"athempel_twitter\" class=\"mention\">@athempel_twitter</span> I suggest trying the <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=138\" rel=\"nofollow\" target=\"_blank\" class=\"link\">CloudWatch Logs</a> forum. They should be able to help you or give insight on any DNS issue. ",
  "id": "578459bcc9b49c1d6f0d240f",
  "issues": [],
  "mentions": [
   {
    "screenName": "athempel_twitter",
    "userId": "578350b0c2f0db084a226897",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-12T02:45:16.047Z",
  "text": "@athempel_twitter I suggest trying the [CloudWatch Logs](https://forums.aws.amazon.com/forum.jspa?forumID=138) forum. They should be able to help you or give insight on any DNS issue. ",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=138"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "The AWS SDK for Go uses Go std dns lookup system, which defers to the OS&#39;s method for looking up hostnames. Is it possible that you&#39;re intermittently loosing network connection when request are being made. Or some misconfigured routing on your local machine?",
  "id": "57845a50b79455146f9bcb59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-12T02:47:44.250Z",
  "text": "The AWS SDK for Go uses Go std dns lookup system, which defers to the OS's method for looking up hostnames. Is it possible that you're intermittently loosing network connection when request are being made. Or some misconfigured routing on your local machine?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/athempel_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H_bigger.jpg",
   "displayName": "Adrian Hempel",
   "id": "578350b0c2f0db084a226897",
   "url": "/athempel_twitter",
   "username": "athempel_twitter"
  },
  "html": "Thanks Jason. It&#39;s not just CloudWatch Logs. It&#39;s affecting all services.",
  "id": "57846a55c9b49c1d6f0dbea6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-12T03:56:05.528Z",
  "text": "Thanks Jason. It's not just CloudWatch Logs. It's affecting all services.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/athempel_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H_bigger.jpg",
   "displayName": "Adrian Hempel",
   "id": "578350b0c2f0db084a226897",
   "url": "/athempel_twitter",
   "username": "athempel_twitter"
  },
  "html": "I&#39;ve just tried on Ubuntu and it works fine. It only seems to be a problem on OS X.",
  "id": "57861104064f8287072e2f06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-13T09:59:32.366Z",
  "text": "I've just tried on Ubuntu and it works fine. It only seems to be a problem on OS X.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/simathur",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5669765?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5669765?v=3&s=60",
   "displayName": "Siddharth Mathur",
   "gv": "3",
   "id": "55cc12010fc9f982bead380d",
   "url": "/simathur",
   "username": "simathur",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"athempel_twitter\" class=\"mention\">@athempel_twitter</span> and <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> : DNS issues may occur if you are cross-compiling. native DNS clients/subsystems may not be used . Please use Go compiled on Mac OS X for Mac OS X deployments (e.g see <a href=\"https://github.com/inconshreveable/gonative\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/inconshreveable/gonative</a>) ",
  "id": "5786221fb79455146fb0f1bf",
  "issues": [],
  "mentions": [
   {
    "screenName": "athempel_twitter",
    "userId": "578350b0c2f0db084a226897",
    "userIds": []
   },
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2016-07-13T11:12:31.004Z",
  "text": "@athempel_twitter and @jasdel : DNS issues may occur if you are cross-compiling. native DNS clients/subsystems may not be used . Please use Go compiled on Mac OS X for Mac OS X deployments (e.g see https://github.com/inconshreveable/gonative) ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/inconshreveable/gonative"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-07-13T14:22:59.972Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/athempel_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H_bigger.jpg",
   "displayName": "Adrian Hempel",
   "id": "578350b0c2f0db084a226897",
   "url": "/athempel_twitter",
   "username": "athempel_twitter"
  },
  "html": "Thanks Siddharth. I&#39;m not cross-compiling. I&#39;m using the golang package installed by homebrew to compile on OS X for OS X. I have seen reports of Go&#39;s built-in DNS resolver being problematic on OS X, so I suspect you&#39;re right about it not using the native resolver for some reason. I will try the binary distribution from golang.org.",
  "id": "57864e9d8423d08424146da8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-13T14:22:21.527Z",
  "text": "Thanks Siddharth. I'm not cross-compiling. I'm using the golang package installed by homebrew to compile on OS X for OS X. I have seen reports of Go's built-in DNS resolver being problematic on OS X, so I suspect you're right about it not using the native resolver for some reason. I will try the binary distribution from golang.org.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/athempel_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H_bigger.jpg",
   "displayName": "Adrian Hempel",
   "id": "578350b0c2f0db084a226897",
   "url": "/athempel_twitter",
   "username": "athempel_twitter"
  },
  "html": "Still no joy, with a clean build by the official golang binary distribution.",
  "id": "57865114e4375c9212c38c5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-13T14:32:52.033Z",
  "text": "Still no joy, with a clean build by the official golang binary distribution.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/athempel_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H_bigger.jpg",
   "displayName": "Adrian Hempel",
   "id": "578350b0c2f0db084a226897",
   "url": "/athempel_twitter",
   "username": "athempel_twitter"
  },
  "html": "Progress! I was able to force it to use either Go&#39;s built-in resolver, or the cgo interface to the native resolver, and only the latter exhibits the problem (which is the opposite to what I was expecting). Details under the <em>Name Resolution</em> section at <a href=\"https://golang.org/pkg/net/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://golang.org/pkg/net/</a>",
  "id": "578654ef3cb52e8b249cf57b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-13T14:49:19.799Z",
  "text": "Progress! I was able to force it to use either Go's built-in resolver, or the cgo interface to the native resolver, and only the latter exhibits the problem (which is the opposite to what I was expecting). Details under the *Name Resolution* section at https://golang.org/pkg/net/",
  "unread": false,
  "urls": [
   {
    "url": "https://golang.org/pkg/net/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/athempel_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H_bigger.jpg",
   "displayName": "Adrian Hempel",
   "id": "578350b0c2f0db084a226897",
   "url": "/athempel_twitter",
   "username": "athempel_twitter"
  },
  "html": "OK, I&#39;ve worked out the problem. Using the built-in resolver still failed occasionally, but with a more helpful error message. It was running out of file descriptors (My implementation is heavily parallel, a design I may need to revisit). I was able to resolve the problem for both resolvers by using <code>ulimit -n</code> to set a higher limit.",
  "id": "578657629f79ee4f2b958256",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-13T14:59:46.202Z",
  "text": "OK, I've worked out the problem. Using the built-in resolver still failed occasionally, but with a more helpful error message. It was running out of file descriptors (My implementation is heavily parallel, a design I may need to revisit). I was able to resolve the problem for both resolvers by using `ulimit -n` to set a higher limit.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"athempel_twitter\" class=\"mention\">@athempel_twitter</span> glad you identified the dns issue. If you&#39;re app is using the S3 service client in the SDK you might need to verify that your app is closing the <code>Body</code> returned from GetObject&#39;s output. These Body fields in the output are the same as the Body in a http.Response and need to be closed or they will lean socket handles.",
  "id": "57868249196179690ec0d41c",
  "issues": [],
  "mentions": [
   {
    "screenName": "athempel_twitter",
    "userId": "578350b0c2f0db084a226897",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-13T18:02:49.291Z",
  "text": "@athempel_twitter glad you identified the dns issue. If you're app is using the S3 service client in the SDK you might need to verify that your app is closing the `Body` returned from GetObject's output. These Body fields in the output are the same as the Body in a http.Response and need to be closed or they will lean socket handles.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/grepory",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/356446?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/356446?v=3&s=60",
   "displayName": "Greg Poirier",
   "gv": "3",
   "id": "5786a359c2f0db084a22da04",
   "url": "/grepory",
   "username": "grepory",
   "v": 1
  },
  "html": "Hey friends. I opened a PR for adding taskRoleArn to ecs.TaskDefinition. I think it&#39;s a reasonably straightforward change?",
  "id": "5786a38a914c51592bff12db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-13T20:24:42.624Z",
  "text": "Hey friends. I opened a PR for adding taskRoleArn to ecs.TaskDefinition. I think it's a reasonably straightforward change?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/grepory",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/356446?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/356446?v=3&s=60",
   "displayName": "Greg Poirier",
   "gv": "3",
   "id": "5786a359c2f0db084a22da04",
   "url": "/grepory",
   "username": "grepory",
   "v": 1
  },
  "html": "Also, I just noticed that it just shows up there! That&#39;s pretty nice.",
  "id": "5786a3dbd11cd28812079037",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-13T20:26:03.486Z",
  "text": "Also, I just noticed that it just shows up there! That's pretty nice.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/tantalic",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/88573?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/88573?v=3&s=60",
   "displayName": "Kevin Stock",
   "gv": "3",
   "id": "5786ec7bc2f0db084a22e2a8",
   "url": "/tantalic",
   "username": "tantalic",
   "v": 1
  },
  "html": "Had anyone used the Mechanical Turk API from go? Looks like it&#39;s not supported :/",
  "id": "5786ed7ad11cd288120b018d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-14T01:40:10.252Z",
  "text": "Had anyone used the Mechanical Turk API from go? Looks like it's not supported :/",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/athempel_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/721141680447959040/tgQs-y8H_bigger.jpg",
   "displayName": "Adrian Hempel",
   "id": "578350b0c2f0db084a226897",
   "url": "/athempel_twitter",
   "username": "athempel_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Thanks for the tip, but I&#39;m not performing any S3 GetObject operations.",
  "id": "578728018423d084241fd371",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-14T05:49:53.039Z",
  "text": "@jasdel Thanks for the tip, but I'm not performing any S3 GetObject operations.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"tantalic\" class=\"mention\">@tantalic</span>, correct the AWS SDK for Go does not support the Mechanical Turk APIs. It looks like there are a few community driven libraries out there, but I have not had the chance to use any of them.",
  "id": "578803f3d11cd288121916e6",
  "issues": [],
  "mentions": [
   {
    "screenName": "tantalic",
    "userId": "5786ec7bc2f0db084a22e2a8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-14T21:28:19.642Z",
  "text": "Hi @tantalic, correct the AWS SDK for Go does not support the Mechanical Turk APIs. It looks like there are a few community driven libraries out there, but I have not had the chance to use any of them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jjeffery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/458924?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/458924?v=4&s=60",
   "displayName": "John Jeffery",
   "gv": "4",
   "id": "55b9c0e40fc9f982beab7dcc",
   "url": "/jjeffery",
   "username": "jjeffery",
   "v": 9
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"tantalic\" class=\"mention\">@tantalic</span>, I&#39;m using one I developed at github.com/jjeffery/mechturk. Happy to accept bug reports and PRs.",
  "id": "5788186d3cb52e8b24b4785c",
  "issues": [],
  "mentions": [
   {
    "screenName": "tantalic",
    "userId": "5786ec7bc2f0db084a22e2a8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-14T22:55:41.597Z",
  "text": "Hi @tantalic, I'm using one I developed at github.com/jjeffery/mechturk. Happy to accept bug reports and PRs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akbarahmed",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/833560?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/833560?v=4&s=60",
   "displayName": "Akbar Ahmed",
   "gv": "4",
   "id": "56abf4f9e610378809beebed",
   "url": "/akbarahmed",
   "username": "akbarahmed",
   "v": 8
  },
  "html": "Is there anyway to use ec2 DescribeAvailabilityZones to get a list of all availability zones in a single request? If not, is the only way to get all AZs to loop through the regions to create separate sessions and then send a DescribeAvailabilityZones() request per region? The filter has no affect when I use a filter with a different region-name.",
  "id": "578b194ee4375c9212f7c21d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-17T05:36:14.896Z",
  "text": "Is there anyway to use ec2 DescribeAvailabilityZones to get a list of all availability zones in a single request? If not, is the only way to get all AZs to loop through the regions to create separate sessions and then send a DescribeAvailabilityZones() request per region? The filter has no affect when I use a filter with a different region-name.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "hi <span data-link-type=\"mention\" data-screen-name=\"akbarahmed\" class=\"mention\">@akbarahmed</span> Correct the <code>DescribeAvailabilityZones</code> API operation is specific to the region it was called at. If you&#39;re not calling the API concurrently you could update the session, but it would still require creating a new service client per region. The SDK doesn&#39;t yet publish the ability enumerate known regions automatically",
  "id": "578d6ebc75045f8767f481a4",
  "issues": [],
  "mentions": [
   {
    "screenName": "akbarahmed",
    "userId": "56abf4f9e610378809beebed",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-19T00:05:16.820Z",
  "text": "hi @akbarahmed Correct the `DescribeAvailabilityZones` API operation is specific to the region it was called at. If you're not calling the API concurrently you could update the session, but it would still require creating a new service client per region. The SDK doesn't yet publish the ability enumerate known regions automatically",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/akbarahmed",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/833560?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/833560?v=4&s=60",
   "displayName": "Akbar Ahmed",
   "gv": "4",
   "id": "56abf4f9e610378809beebed",
   "url": "/akbarahmed",
   "username": "akbarahmed",
   "v": 8
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Thanks for the reply. The solution I went with: I am calling <code>DescribeRegions</code> with a session to my local region to get all regions. Then I loop through the regions to create a session to each region, which I&#39;m storing in a map Then I can loop through the sessions and call <code>DescribeAvailabilityZones</code> on each region to get a list of all AZs per region.",
  "id": "578f118a9f35137e67e39267",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-20T05:52:10.622Z",
  "text": "Thanks @jasdel Thanks for the reply. The solution I went with: I am calling `DescribeRegions` with a session to my local region to get all regions. Then I loop through the regions to create a session to each region, which I'm storing in a map Then I can loop through the sessions and call `DescribeAvailabilityZones` on each region to get a list of all AZs per region.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/goller",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1922921?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1922921?v=4&s=60",
   "displayName": "Chris Goller",
   "gv": "4",
   "id": "578fca48c2f0db084a23e6c7",
   "url": "/goller",
   "username": "goller",
   "v": 1
  },
  "html": "Hey there, is there an API to get the information about instance types like in this link: <a href=\"https://aws.amazon.com/ec2/instance-types/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://aws.amazon.com/ec2/instance-types/</a> ?  I&#39;m interested in programmatically getting the memory of the various instance types.",
  "id": "578fca8816487c5e516746b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-20T19:01:28.989Z",
  "text": "Hey there, is there an API to get the information about instance types like in this link: https://aws.amazon.com/ec2/instance-types/ ?  I'm interested in programmatically getting the memory of the various instance types.",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/ec2/instance-types/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/BrendanVolheim_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/715971956269395968/WWsHSsIn.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/715971956269395968/WWsHSsIn_bigger.jpg",
   "displayName": "Brendan Volheim",
   "id": "578feab3c2f0db084a23eba4",
   "url": "/BrendanVolheim_twitter",
   "username": "BrendanVolheim_twitter"
  },
  "html": "Hi everyone! Is there a way to get the response metadata when doing a DescribeInstances call? I&#39;m looking for things like the request ID and other request information. I seem to be only getting the reservations.",
  "id": "578feb4b2d04e058519df02b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-20T21:21:15.940Z",
  "text": "Hi everyone! Is there a way to get the response metadata when doing a DescribeInstances call? I'm looking for things like the request ID and other request information. I seem to be only getting the reservations.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"akbarahmed\" class=\"mention\">@akbarahmed</span> one optimization you can do if you&#39;re not making the describe calls concurrently is to use the same Session value, change the <code>Session.Config.Region</code> value for each target region, and only create a new service client per region.  This will ensure Session doesn&#39;t need to load the configuration each iteration.  Creating a service client is much lighter than creating a session.",
  "id": "57927204959ee82b3e3c0067",
  "issues": [],
  "mentions": [
   {
    "screenName": "akbarahmed",
    "userId": "56abf4f9e610378809beebed",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-22T19:20:36.606Z",
  "text": "Hi @akbarahmed one optimization you can do if you're not making the describe calls concurrently is to use the same Session value, change the `Session.Config.Region` value for each target region, and only create a new service client per region.  This will ensure Session doesn't need to load the configuration each iteration.  Creating a service client is much lighter than creating a session.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-22T19:24:34.341Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"BrendanVolheim_twitter\" class=\"mention\">@BrendanVolheim_twitter</span>, thank you for reaching out to us. If you call <code>DescribeInstancesRequest</code> that&#39;ll return a <code>request.Request</code> object. Once <code>Send</code> is called the fields will be populated on the object itself. You can grab the <code>requestID</code> there. What other types of information are you looking for?",
  "id": "579272e567c448730ee45798",
  "issues": [],
  "mentions": [
   {
    "screenName": "BrendanVolheim_twitter",
    "userId": "578feab3c2f0db084a23eba4",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-22T19:24:21.497Z",
  "text": "Hello @BrendanVolheim_twitter, thank you for reaching out to us. If you call `DescribeInstancesRequest` that'll return a `request.Request` object. Once `Send` is called the fields will be populated on the object itself. You can grab the `requestID` there. What other types of information are you looking for?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"goller\" class=\"mention\">@goller</span> , EC2 does not have an API to retrieve the information you&#39;re looking for. I suggest posting on the <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=30\" rel=\"nofollow\" target=\"_blank\" class=\"link\">AWS EC2 forums</a> with this request, and it will help let EC2 know what features to prioritize.",
  "id": "579274401d2852c843726ef8",
  "issues": [],
  "mentions": [
   {
    "screenName": "goller",
    "userId": "578fca48c2f0db084a23e6c7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-22T19:30:08.825Z",
  "text": "Hi @goller , EC2 does not have an API to retrieve the information you're looking for. I suggest posting on the [AWS EC2 forums](https://forums.aws.amazon.com/forum.jspa?forumID=30) with this request, and it will help let EC2 know what features to prioritize.",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=30"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"goller\" class=\"mention\">@goller</span> for autospotting I am using the data compiled by the ec2instances.info project, which is quite good ",
  "id": "579274f59d9e974a7f650240",
  "issues": [],
  "mentions": [
   {
    "screenName": "goller",
    "userId": "578fca48c2f0db084a23e6c7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-22T19:33:09.148Z",
  "text": "@goller for autospotting I am using the data compiled by the ec2instances.info project, which is quite good ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"goller\" class=\"mention\">@goller</span>, have a look at <a href=\"https://github.com/cristim/autospotting/blob/master/agent/autospotting/json_instance.go\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/cristim/autospotting/blob/master/agent/autospotting/json_instance.go</a>",
  "id": "57927d88683f0a5c4dcaa084",
  "issues": [],
  "mentions": [
   {
    "screenName": "goller",
    "userId": "578fca48c2f0db084a23e6c7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-22T20:09:44.135Z",
  "text": "@goller, have a look at https://github.com/cristim/autospotting/blob/master/agent/autospotting/json_instance.go",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/cristim/autospotting/blob/master/agent/autospotting/json_instance.go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I use this as URL: <a href=\"https://raw.githubusercontent.com/cristim/ec2instances.info/master/www/instances.json\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://raw.githubusercontent.com/cristim/ec2instances.info/master/www/instances.json</a>, I just forked their repo in order to protect my stuff from changes on their side after they once changed the format and my code started to fail parsing it",
  "id": "57927e3e683f0a5c4dcaa08d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-22T20:12:46.728Z",
  "text": "I use this as URL: https://raw.githubusercontent.com/cristim/ec2instances.info/master/www/instances.json, I just forked their repo in order to protect my stuff from changes on their side after they once changed the format and my code started to fail parsing it",
  "unread": false,
  "urls": [
   {
    "url": "https://raw.githubusercontent.com/cristim/ec2instances.info/master/www/instances.json"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-07-23T00:52:56.544Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/Sjeanpierre",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/673382?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/673382?v=3&s=60",
   "displayName": "Stevenson Jean-Pierre",
   "gv": "3",
   "id": "54fa8ae215522ed4b3dced35",
   "url": "/Sjeanpierre",
   "username": "Sjeanpierre",
   "v": 1
  },
  "html": "hey guys",
  "id": "5792bfe3b92e27447f9d7d5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-23T00:52:51.915Z",
  "text": "hey guys",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/Sjeanpierre",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/673382?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/673382?v=3&s=60",
   "displayName": "Stevenson Jean-Pierre",
   "gv": "3",
   "id": "54fa8ae215522ed4b3dced35",
   "url": "/Sjeanpierre",
   "username": "Sjeanpierre",
   "v": 1
  },
  "html": "I&#39;ve been looking thru the documentation trying to find out what the filter format is for ec2 filtering and I cant seem to make sense of it",
  "id": "5792c003b92e27447f9d7d80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-23T00:53:23.180Z",
  "text": "I've been looking thru the documentation trying to find out what the filter format is for ec2 filtering and I cant seem to make sense of it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/Sjeanpierre",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/673382?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/673382?v=3&s=60",
   "displayName": "Stevenson Jean-Pierre",
   "gv": "3",
   "id": "54fa8ae215522ed4b3dced35",
   "url": "/Sjeanpierre",
   "username": "Sjeanpierre",
   "v": 1
  },
  "html": "I want to filter by instance tags",
  "id": "5792c01032bd01d843a69a83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-23T00:53:36.208Z",
  "text": "I want to filter by instance tags",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/Sjeanpierre",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/673382?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/673382?v=3&s=60",
   "displayName": "Stevenson Jean-Pierre",
   "gv": "3",
   "id": "54fa8ae215522ed4b3dced35",
   "url": "/Sjeanpierre",
   "username": "Sjeanpierre",
   "v": 1
  },
  "html": "can anyone link me to an example of doing this?",
  "id": "5792c01ab92e27447f9d7da8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-23T00:53:46.358Z",
  "text": "can anyone link me to an example of doing this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/Sjeanpierre",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/673382?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/673382?v=3&s=60",
   "displayName": "Stevenson Jean-Pierre",
   "gv": "3",
   "id": "54fa8ae215522ed4b3dced35",
   "url": "/Sjeanpierre",
   "username": "Sjeanpierre",
   "v": 1
  },
  "html": "I&#39;ve done it in the past using Goamz but the syntax has since changed ",
  "id": "5792c03ab92e27447f9d7dd5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-23T00:54:18.394Z",
  "text": "I've done it in the past using Goamz but the syntax has since changed ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "for _, tag := range inst.Tags {<br>            if <em>tag.Key == filterTagName &amp;&amp; </em>tag.Value == filterValue {...}} ",
  "id": "5793072d1d2852c84377314c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-23T05:57:01.583Z",
  "text": "for _, tag := range inst.Tags {\n\t\t\tif *tag.Key == filterTagName && *tag.Value == filterValue {...}} ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/renier",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/139994?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/139994?v=4&s=60",
   "displayName": "Renier Morales",
   "gv": "4",
   "id": "540891cb163965c9bc2029c2",
   "url": "/renier",
   "username": "renier",
   "v": 10
  },
  "html": "hey, so apparently to use a service in aws-sdk-go, you need to open a session to STS/IAM, is that so? Is there a way someone can point me to where I can use my aws keys directly to access S3 through aws-sdk-go?",
  "id": "5797e8ac37c95e2446b85f15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-26T22:48:12.782Z",
  "text": "hey, so apparently to use a service in aws-sdk-go, you need to open a session to STS/IAM, is that so? Is there a way someone can point me to where I can use my aws keys directly to access S3 through aws-sdk-go?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-26T23:21:07.931Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/renier",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/139994?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/139994?v=4&s=60",
   "displayName": "Renier Morales",
   "gv": "4",
   "id": "540891cb163965c9bc2029c2",
   "url": "/renier",
   "username": "renier",
   "v": 10
  },
  "html": "never mind. it seems that is the way of things in the terraform aws provider, but not in aws-sdk-go itself. will look more at that level.",
  "id": "5797f05893148c6b21e0e9c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-26T23:20:56.253Z",
  "text": "never mind. it seems that is the way of things in the terraform aws provider, but not in aws-sdk-go itself. will look more at that level.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"renier\" class=\"mention\">@renier</span> check out the SDK&#39;s wiki for <a href=\"https://github.com/aws/aws-sdk-go/wiki/configuring-sdk#specifying-credentials\" rel=\"nofollow\" target=\"_blank\" class=\"link\">setting up credentials</a>, it should point you in the direction you&#39;re looking to go.",
  "id": "5798403a93148c6b21e16c7f",
  "issues": [],
  "mentions": [
   {
    "screenName": "renier",
    "userId": "540891cb163965c9bc2029c2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-27T05:01:46.344Z",
  "text": "Hi @renier check out the SDK's wiki for [setting up credentials](https://github.com/aws/aws-sdk-go/wiki/configuring-sdk#specifying-credentials), it should point you in the direction you're looking to go.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/wiki/configuring-sdk#specifying-credentials"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "has something changed with KMS?",
  "id": "579b9b6d07d2d2396e2bcfab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-07-29T18:07:41.282Z",
  "text": "has something changed with KMS?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"justinoue\" class=\"mention\">@justinoue</span>, what issues are you seeing? And what SDK version are you using?",
  "id": "579b9bb69639024416a6ddf3",
  "issues": [],
  "mentions": [
   {
    "screenName": "justinoue",
    "userId": "55f190010fc9f982beb04203",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 5,
  "sent": "2016-07-29T18:08:54.136Z",
  "text": "Hello @justinoue, what issues are you seeing? And what SDK version are you using?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "I&#39;m still getting to the bottom of the issue",
  "id": "579b9bc2f1da4f376e18a430",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-07-29T18:09:06.172Z",
  "text": "I'm still getting to the bottom of the issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "tbh i wrote this code quite a while ago, let me collect my thoughts",
  "id": "579b9bd7cdc68c4904ade48f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-07-29T18:09:27.935Z",
  "text": "tbh i wrote this code quite a while ago, let me collect my thoughts",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "No worries! As far as I know kms has not been changed",
  "id": "579b9bf8f1da4f376e18a4c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2016-07-29T18:10:00.853Z",
  "text": "No worries! As far as I know kms has not been changed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Recently, at least",
  "id": "579b9c10f1da4f376e18a4f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2016-07-29T18:10:24.690Z",
  "text": "Recently, at least",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "it would seem that  i&#39;m getting different results from GenerateDataKey",
  "id": "579b9d5be56d253804194b6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2016-07-29T18:15:55.586Z",
  "text": "it would seem that  i'm getting different results from GenerateDataKey",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "im getting InvalidCiphertextExceptions for anything new im trying to decrypt",
  "id": "579ba15079f759713751d118",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2016-07-29T18:32:48.878Z",
  "text": "im getting InvalidCiphertextExceptions for anything new im trying to decrypt",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hrm, I can call Decrypt without any issues. Mind posting some sample code?",
  "id": "579ba54779f759713751dc53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2016-07-29T18:49:43.700Z",
  "text": "Hrm, I can call Decrypt without any issues. Mind posting some sample code?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "sure",
  "id": "579ba564e56d253804195eb8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2016-07-29T18:50:12.165Z",
  "text": "sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "<pre><code><span class=\"keyword\">func</span> kmsEncrypt(text <span class=\"typename\">string</span>, context_key <span class=\"typename\">string</span>, context_value <span class=\"typename\">string</span>) <span class=\"typename\">string</span> {\n    data_key := generateDataKey(kmsClient(), context_key, context_value)\n    plaintext := []<span class=\"typename\">byte</span>(text)\n\n    block, err := aes.NewCipher(data_key.Plaintext)\n    <span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n        <span class=\"built_in\">panic</span>(err)\n    }\n\n    ciphertext := <span class=\"built_in\">make</span>([]<span class=\"typename\">byte</span>, aes.BlockSize+<span class=\"built_in\">len</span>(plaintext))\n    iv := ciphertext[:aes.BlockSize]\n    <span class=\"keyword\">if</span> _, err := io.ReadFull(rand.Reader, iv); err != <span class=\"constant\">nil</span> {\n        <span class=\"built_in\">panic</span>(err)\n    }\n\n    stream := cipher.NewCFBEncrypter(block, iv)\n    stream.XORKeyStream(ciphertext[aes.BlockSize:], plaintext)\n\n    final_cipher := <span class=\"built_in\">append</span>(data_key.CiphertextBlob, ciphertext...)\n\n    <span class=\"keyword\">return</span> base64.URLEncoding.EncodeToString(final_cipher)\n}\n\n<span class=\"keyword\">func</span> kmsDecrypt(encrypted <span class=\"typename\">string</span>, context_key <span class=\"typename\">string</span>, context_value <span class=\"typename\">string</span>) <span class=\"typename\">string</span> {\n    final_cipher, _ := base64.URLEncoding.DecodeString(encrypted)\n    ciphertext_blob := final_cipher[:<span class=\"number\">204</span>]\n    ciphertext := final_cipher[<span class=\"number\">204</span>:]\n\n    key := decryptDataKey(kmsClient(), ciphertext_blob, context_key, context_value)\n\n    block, err := aes.NewCipher(key.Plaintext)\n    <span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n        <span class=\"built_in\">panic</span>(err)\n    }\n\n    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(ciphertext) &lt; aes.BlockSize {\n        <span class=\"built_in\">panic</span>(<span class=\"string\">\"ciphertext too short\"</span>)\n    }\n    iv := ciphertext[:aes.BlockSize]\n    ciphertext = ciphertext[aes.BlockSize:]\n\n    stream := cipher.NewCFBDecrypter(block, iv)\n\n    stream.XORKeyStream(ciphertext, ciphertext)\n\n    <span class=\"keyword\">return</span> fmt.Sprintf(<span class=\"string\">\"%s\"</span>, ciphertext)\n}</code></pre>",
  "id": "579ba574f1da4f376e18be84",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2016-07-29T18:50:28.490Z",
  "text": "```\nfunc kmsEncrypt(text string, context_key string, context_value string) string {\n\tdata_key := generateDataKey(kmsClient(), context_key, context_value)\n\tplaintext := []byte(text)\n\n\tblock, err := aes.NewCipher(data_key.Plaintext)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tciphertext := make([]byte, aes.BlockSize+len(plaintext))\n\tiv := ciphertext[:aes.BlockSize]\n\tif _, err := io.ReadFull(rand.Reader, iv); err != nil {\n\t\tpanic(err)\n\t}\n\n\tstream := cipher.NewCFBEncrypter(block, iv)\n\tstream.XORKeyStream(ciphertext[aes.BlockSize:], plaintext)\n\n\tfinal_cipher := append(data_key.CiphertextBlob, ciphertext...)\n\n\treturn base64.URLEncoding.EncodeToString(final_cipher)\n}\n\nfunc kmsDecrypt(encrypted string, context_key string, context_value string) string {\n\tfinal_cipher, _ := base64.URLEncoding.DecodeString(encrypted)\n\tciphertext_blob := final_cipher[:204]\n\tciphertext := final_cipher[204:]\n\n\tkey := decryptDataKey(kmsClient(), ciphertext_blob, context_key, context_value)\n\n\tblock, err := aes.NewCipher(key.Plaintext)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tif len(ciphertext) < aes.BlockSize {\n\t\tpanic(\"ciphertext too short\")\n\t}\n\tiv := ciphertext[:aes.BlockSize]\n\tciphertext = ciphertext[aes.BlockSize:]\n\n\tstream := cipher.NewCFBDecrypter(block, iv)\n\n\tstream.XORKeyStream(ciphertext, ciphertext)\n\n\treturn fmt.Sprintf(\"%s\", ciphertext)\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "<pre><code>func generateDataKey(kmsc *kms.KMS, context_key <span class=\"built_in\">string</span>, context_value <span class=\"built_in\">string</span>) *kms.GenerateDataKeyOutput {\n    params := &amp;kms.GenerateDataKeyInput{\n        KeyId: aws.<span class=\"built_in\">String</span>(AppConfig.KeyAlias),\n        EncryptionContext: map[<span class=\"built_in\">string</span>]*<span class=\"built_in\">string</span>{\n            context_key: aws.<span class=\"built_in\">String</span>(context_value),\n        },\n        KeySpec: aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"AES_256\"</span>),\n    }\n\n    resp, <span class=\"built_in\">err</span> := kmsc.GenerateDataKey(params)\n\n    <span class=\"keyword\">if</span> <span class=\"built_in\">err</span> != nil {\n        panic(<span class=\"built_in\">err</span>)\n    }\n\n    return resp\n}</code></pre>",
  "id": "579ba658e56d2538041960fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2016-07-29T18:54:16.404Z",
  "text": "```\nfunc generateDataKey(kmsc *kms.KMS, context_key string, context_value string) *kms.GenerateDataKeyOutput {\n\tparams := &kms.GenerateDataKeyInput{\n\t\tKeyId: aws.String(AppConfig.KeyAlias),\n\t\tEncryptionContext: map[string]*string{\n\t\t\tcontext_key: aws.String(context_value),\n\t\t},\n\t\tKeySpec: aws.String(\"AES_256\"),\n\t}\n\n\tresp, err := kmsc.GenerateDataKey(params)\n\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\treturn resp\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "that should be all the relevant code i think",
  "id": "579ba67ee56d25380419614f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2016-07-29T18:54:54.849Z",
  "text": "that should be all the relevant code i think",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "it seems like kmsEncrypt is returning different results than it used to",
  "id": "579ba8a47fd9f73e16eac6e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:04:04.009Z",
  "text": "it seems like kmsEncrypt is returning different results than it used to",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "<pre><code><span class=\"keyword\">func</span> decryptDataKey(kmsc *kms.KMS, ciphertext_blob []<span class=\"typename\">byte</span>, context_key <span class=\"typename\">string</span>, context_value <span class=\"typename\">string</span>) *kms.DecryptOutput {\n    params := &amp;kms.DecryptInput{\n        CiphertextBlob: []<span class=\"typename\">byte</span>(ciphertext_blob),\n        EncryptionContext: <span class=\"keyword\">map</span>[<span class=\"typename\">string</span>]*<span class=\"typename\">string</span>{\n            context_key: aws.String(context_value),\n        },\n    }\n    resp, err := kmsc.Decrypt(params)\n\n    <span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n        <span class=\"built_in\">panic</span>(err)\n    }\n\n    <span class=\"keyword\">return</span> resp\n}</code></pre>",
  "id": "579ba9149639024416a7016c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:05:56.135Z",
  "text": "```\nfunc decryptDataKey(kmsc *kms.KMS, ciphertext_blob []byte, context_key string, context_value string) *kms.DecryptOutput {\n\tparams := &kms.DecryptInput{\n\t\tCiphertextBlob: []byte(ciphertext_blob),\n\t\tEncryptionContext: map[string]*string{\n\t\t\tcontext_key: aws.String(context_value),\n\t\t},\n\t}\n\tresp, err := kmsc.Decrypt(params)\n\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\treturn resp\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "And what is the error being returned?",
  "id": "579ba9fe79f759713751e86b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:09:50.567Z",
  "text": "And what is the error being returned?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "InvalidCipherTextException",
  "id": "579baa0e9684847b373c6503",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:10:06.693Z",
  "text": "InvalidCipherTextException",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "did the length/behavior of  CiphertextBlob change?",
  "id": "579baa58cdc68c4904ae074d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:11:20.305Z",
  "text": "did the length/behavior of  CiphertextBlob change?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Naw, it should be fine. Are you sure the encryption content is exactly what was used when calling <code>GenerateDataKey</code>? ",
  "id": "579baa949684847b373c65f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:12:20.437Z",
  "text": "Naw, it should be fine. Are you sure the encryption content is exactly what was used when calling `GenerateDataKey`? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "i cant imagine why it wouldn&#39;t be. this code hasnt changed since march",
  "id": "579baab679f759713751ea2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:12:54.528Z",
  "text": "i cant imagine why it wouldn't be. this code hasnt changed since march",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hrm, okay, let me take a quick look at my code. I am pretty sure it is doing the same thing",
  "id": "579baacdcdc68c4904ae085c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:13:17.327Z",
  "text": "Hrm, okay, let me take a quick look at my code. I am pretty sure it is doing the same thing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "ok",
  "id": "579baad29684847b373c665f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:13:22.040Z",
  "text": "ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "thank you",
  "id": "579baad779f759713751ea62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:13:27.623Z",
  "text": "thank you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "fwiw, in the past, this string &quot;ZatskFR-Z5l4nVZ4AefIcDfDCufxKeBszhvTtveH&quot; was encrypted to:<br>CiAAuzOyIVblDkmTGXilKRhBsrzcaurPgl2w3xs-f0n2xxKnAQEBAwB4ALszsiFW5Q5Jkxl4pSkYQbK83Grqz4JdsN8bPn9J9scAAAB-MHwGCSqGSIb3DQEHBqBvMG0CAQAwaAYJKoZIhvcNAQcBMB4GCWCGSAFlAwQBLjARBAy_Fp7BR-A12HY_s34CARCAO6WIIeePUlTkOhK2kZ8AYSKw8begsppLT46sziQPKTG8OP1IVyDuac8GsS1RmL-CDlHoKZPJy7PAWJtunjiVDa2KM1JyVPRwG7vXzUcMroQrByn4tpFntgPNvIKQWo2RhwPsWYCyQGmVAYk099Gie3gk0PQ=",
  "id": "579bad0307d2d2396e2bfb5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:22:43.164Z",
  "text": "fwiw, in the past, this string \"ZatskFR-Z5l4nVZ4AefIcDfDCufxKeBszhvTtveH\" was encrypted to:\nCiAAuzOyIVblDkmTGXilKRhBsrzcaurPgl2w3xs-f0n2xxKnAQEBAwB4ALszsiFW5Q5Jkxl4pSkYQbK83Grqz4JdsN8bPn9J9scAAAB-MHwGCSqGSIb3DQEHBqBvMG0CAQAwaAYJKoZIhvcNAQcBMB4GCWCGSAFlAwQBLjARBAy_Fp7BR-A12HY_s34CARCAO6WIIeePUlTkOhK2kZ8AYSKw8begsppLT46sziQPKTG8OP1IVyDuac8GsS1RmL-CDlHoKZPJy7PAWJtunjiVDa2KM1JyVPRwG7vXzUcMroQrByn4tpFntgPNvIKQWo2RhwPsWYCyQGmVAYk099Gie3gk0PQ=",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "now its",
  "id": "579bad0b9684847b373c6b5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:22:51.441Z",
  "text": "now its",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "AQEDAHgAuzOyIVblDkmTGXilKRhBsrzcaurPgl2w3xs-f0n2xwAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDIXWOKGXvsXcWXyRBgIBEIA7bASc8dCyCRRNFb0IqZ7YE7E3VJvBvU6ia-9Nyf8kYtSzWUhR1RJYk1R4FupglbqyEa6F1VpkTgpdEK7B00sA8WW_mLDlDu-pdzsRmp1-rTI6p6IlNt8fWv1Z6egWt5qD6DcOHk4i32wSeF-jQX709B8wtw==",
  "id": "579bad149639024416a709f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:23:00.620Z",
  "text": "AQEDAHgAuzOyIVblDkmTGXilKRhBsrzcaurPgl2w3xs-f0n2xwAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDIXWOKGXvsXcWXyRBgIBEIA7bASc8dCyCRRNFb0IqZ7YE7E3VJvBvU6ia-9Nyf8kYtSzWUhR1RJYk1R4FupglbqyEa6F1VpkTgpdEK7B00sA8WW_mLDlDu-pdzsRmp1-rTI6p6IlNt8fWv1Z6egWt5qD6DcOHk4i32wSeF-jQX709B8wtw==\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Oh, interesting. The internals of KMS may have changed. I can reach out to them and see. Are you trying to decrypt old data?",
  "id": "579bad2d79f759713751ef95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:23:25.766Z",
  "text": "Oh, interesting. The internals of KMS may have changed. I can reach out to them and see. Are you trying to decrypt old data?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "my decrypt still works on the original encryption, not the new one",
  "id": "579bad30cdc68c4904ae0dd1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:23:28.797Z",
  "text": "my decrypt still works on the original encryption, not the new one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "old data seems to decrypt fine",
  "id": "579bad389684847b373c6bcf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:23:36.792Z",
  "text": "old data seems to decrypt fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "thank god",
  "id": "579bad3c9684847b373c6bdd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:23:40.744Z",
  "text": "thank god",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "any new data i encrypt is the problem, i cant decrypt it",
  "id": "579bad489684847b373c6bf3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:23:52.382Z",
  "text": "any new data i encrypt is the problem, i cant decrypt it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Oh, that sounds like an issue with either the Encryption Context being different or the CiphertextBlob",
  "id": "579bad6fe56d2538041970a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:24:31.788Z",
  "text": "Oh, that sounds like an issue with either the Encryption Context being different or the CiphertextBlob",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "I am going to copy your code and try to run it. My example is still working fine",
  "id": "579bad8079f759713751f049",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:24:48.152Z",
  "text": "I am going to copy your code and try to run it. My example is still working fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "thanks",
  "id": "579bad869684847b373c6c90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:24:54.475Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Can you print the length of the ciphertext blob when encrypting?",
  "id": "579baec9f1da4f376e18d4e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:30:17.066Z",
  "text": "Can you print the length of the ciphertext blob when encrypting?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "I am curious if it is no longer 204 bytes",
  "id": "579baedd9684847b373c6fa5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:30:37.562Z",
  "text": "I am curious if it is no longer 204 bytes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"justinoue\" class=\"mention\">@justinoue</span>  ... a keystream must xor with the SAME keystream for both encrypt and decrypt.",
  "id": "579baee579f759713751f360",
  "issues": [],
  "mentions": [
   {
    "screenName": "justinoue",
    "userId": "55f190010fc9f982beb04203",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:30:45.703Z",
  "text": "@justinoue  ... a keystream must xor with the SAME keystream for both encrypt and decrypt.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Yea, I don&#39;t think that&#39;s the issue here though. He is getting an exception from KMS",
  "id": "579baf0d7fd9f73e16ead56b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:31:25.692Z",
  "text": "Yea, I don't think that's the issue here though. He is getting an exception from KMS",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Oh nvm, you may be right",
  "id": "579baf1ce56d2538041974b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:31:40.303Z",
  "text": "Oh nvm, you may be right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "I see what you&#39;re saying",
  "id": "579baf207fd9f73e16ead57c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:31:44.660Z",
  "text": "I see what you're saying",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "try NewCFBEncrypter or NewCFBDecrypter on both.  ie... stream cipher is a pseudo one-time-pad.",
  "id": "579baf269684847b373c702e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:31:50.918Z",
  "text": "try NewCFBEncrypter or NewCFBDecrypter on both.  ie... stream cipher is a pseudo one-time-pad.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "thats it. it&#39;s not 204 bytes anymore",
  "id": "579baf439639024416a70ea1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:32:19.258Z",
  "text": "thats it. it's not 204 bytes anymore",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "i haven&#39;t actually tried to write code though (i just kind of noticed the conversation.. )",
  "id": "579baf4479f759713751f42f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:32:20.976Z",
  "text": "i haven't actually tried to write code though (i just kind of noticed the conversation.. )",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Yea, I figured that was the issue",
  "id": "579baf4e9684847b373c708e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:32:30.636Z",
  "text": "Yea, I figured that was the issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "it&#39;s 167 bytes",
  "id": "579baf56e56d2538041974f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:32:38.230Z",
  "text": "it's 167 bytes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "cool!",
  "id": "579baf5cf1da4f376e18d65a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:32:44.650Z",
  "text": "cool!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Weird. I wonder why they changed that",
  "id": "579baf5de56d253804197516",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-07-29T19:32:45.586Z",
  "text": "Weird. I wonder why they changed that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "oh boy, how do i fix this",
  "id": "579baf5ef1da4f376e18d65e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:32:46.223Z",
  "text": "oh boy, how do i fix this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Let me reach out to them first",
  "id": "579baf63f1da4f376e18d678",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:32:51.917Z",
  "text": "Let me reach out to them first",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "to see why that is",
  "id": "579baf669639024416a70ef4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:32:54.230Z",
  "text": "to see why that is",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "that would be very helpful. thanks",
  "id": "579baf6d9684847b373c7106",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:33:01.748Z",
  "text": "that would be very helpful. thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "i prefer AES256-CTR (might eventually use GCM).  if you have random iv and key, and using xor with plaintext, it&#39;s a reasonably standard mode ... and you can easily range request back out of the ciphertext.  (stupendously useful in conjunction with data at rest + http)",
  "id": "579baff607d2d2396e2c01c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:35:18.965Z",
  "text": "i prefer AES256-CTR (might eventually use GCM).  if you have random iv and key, and using xor with plaintext, it's a reasonably standard mode ... and you can easily range request back out of the ciphertext.  (stupendously useful in conjunction with data at rest + http)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "there&#39;s a decent amount of data already encrypted with this scheme. i&#39;ll have to migrate it along with any new scheme. what a headache.",
  "id": "579bb025e56d2538041976d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:36:05.936Z",
  "text": "there's a decent amount of data already encrypted with this scheme. i'll have to migrate it along with any new scheme. what a headache.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "though anything xored with a keystream... watch out for the ciphertext being unauthenticated.",
  "id": "579bb0319639024416a71072",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:36:17.503Z",
  "text": "though anything xored with a keystream... watch out for the ciphertext being unauthenticated.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "yup.  if you can at least make it compatible and keep marching for now, that&#39;ll be good.",
  "id": "579bb042cdc68c4904ae142e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:36:34.758Z",
  "text": "yup.  if you can at least make it compatible and keep marching for now, that'll be good.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "try 204, catch, try 167 :cry: ",
  "id": "579bb05b07d2d2396e2c02be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:36:59.454Z",
  "text": "try 204, catch, try 167 :cry: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "stream cipher gotcha:   (kStream xor grumpyCat.jpg) xor (grumpyCat.jpg xor happyCat.jpg)",
  "id": "579bb077e56d25380419777a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:37:27.833Z",
  "text": "stream cipher gotcha:   (kStream xor grumpyCat.jpg) xor (grumpyCat.jpg xor happyCat.jpg)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "hmm",
  "id": "579bb0ae07d2d2396e2c03ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:38:22.436Z",
  "text": "hmm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKey.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKey.html</a> says <code>CiphertextBlob</code> can be 1 to 6144 bytes",
  "id": "579bb0f3f1da4f376e18da45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:39:31.618Z",
  "text": "https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKey.html says `CiphertextBlob` can be 1 to 6144 bytes",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKey.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "I would suggest storing that size somewhere and check when retrieving that if a size can be found",
  "id": "579bb12af1da4f376e18daf8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:40:26.925Z",
  "text": "I would suggest storing that size somewhere and check when retrieving that if a size can be found",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "if not use 204",
  "id": "579bb12ecdc68c4904ae1701",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:40:30.307Z",
  "text": "if not use 204",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "i wonder if im doing anything different",
  "id": "579bb156e56d253804197a64",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-07-29T19:41:10.928Z",
  "text": "i wonder if im doing anything different",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "weird",
  "id": "579bb157e56d253804197a66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-29T19:41:11.744Z",
  "text": "weird",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "you can at least decrypt existing keys and encrypt/decrypt keys now?",
  "id": "579bb16e79f759713751fa09",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-29T19:41:34.759Z",
  "text": "you can at least decrypt existing keys and encrypt/decrypt keys now?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "existing stuff works fine, thankfully. newly excrypted stuff wont decrypt",
  "id": "579bb180e56d253804197ad2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-29T19:41:52.243Z",
  "text": "existing stuff works fine, thankfully. newly excrypted stuff wont decrypt",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "so i gotta fix up decrypt",
  "id": "579bb1879639024416a714a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-07-29T19:41:59.511Z",
  "text": "so i gotta fix up decrypt",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"justinoue\" class=\"mention\">@justinoue</span> - Once you get it working, we would love to have a example for using <code>kms</code> data keys. So if you want to submit a PR that&#39;d be wonderful!",
  "id": "579bb1f907d2d2396e2c07d2",
  "issues": [],
  "mentions": [
   {
    "screenName": "justinoue",
    "userId": "55f190010fc9f982beb04203",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-29T19:43:53.107Z",
  "text": "@justinoue - Once you get it working, we would love to have a example for using `kms` data keys. So if you want to submit a PR that'd be wonderful!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/justinoue",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7965150?v=3&s=60",
   "displayName": "Justin Ouellette",
   "gv": "3",
   "id": "55f190010fc9f982beb04203",
   "url": "/justinoue",
   "username": "justinoue",
   "v": 1
  },
  "html": "can do",
  "id": "579bb21579f759713751fc14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-29T19:44:21.712Z",
  "text": "can do",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-29T19:46:19.670Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "i&#39;m doing something sort of similar.  i&#39;m encrypting large ciphertexts with a random key (aes256-ctr), and encrypting keys by xoring a mac with an iv over the 256bit keys, but using sha256-ctr so you can use passphrases.",
  "id": "579bb221e56d253804197c92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-29T19:44:33.615Z",
  "text": "i'm doing something sort of similar.  i'm encrypting large ciphertexts with a random key (aes256-ctr), and encrypting keys by xoring a mac with an iv over the 256bit keys, but using sha256-ctr so you can use passphrases.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "(err sha256 for one block.. same structure as ctr conceptually, so you can think clearly about what you are doing)",
  "id": "579bb2479684847b373c7956",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-07-29T19:45:11.653Z",
  "text": "(err sha256 for one block.. same structure as ctr conceptually, so you can think clearly about what you are doing)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "but all that really matters about the keystream is that it&#39;s consistent.  ;-)",
  "id": "579bb2a79639024416a71785",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-07-29T19:46:47.041Z",
  "text": "but all that really matters about the keystream is that it's consistent.  ;-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-07-29T20:40:16.764Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/rfielding",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/89911?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/89911?v=3&s=60",
   "displayName": "Robert Fielding",
   "gv": "3",
   "id": "564f3d4a16b6c7089cbb7b5a",
   "url": "/rfielding",
   "username": "rfielding",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"justinoue\" class=\"mention\">@justinoue</span> here is how you would decrypt your new data (presuming that old data decrypts, and you encrypted new data with that function):  xor the keystream using NewCFBEncrypter to recover the plaintext, and xor the keystream using NewCFBDecrypter to migrate it to the new scheme consistently.",
  "id": "579bbf0e79f75971375222b2",
  "issues": [],
  "mentions": [
   {
    "screenName": "justinoue",
    "userId": "55f190010fc9f982beb04203",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-07-29T20:39:42.031Z",
  "text": "@justinoue here is how you would decrypt your new data (presuming that old data decrypts, and you encrypted new data with that function):  xor the keystream using NewCFBEncrypter to recover the plaintext, and xor the keystream using NewCFBDecrypter to migrate it to the new scheme consistently.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "Hello :) I have a question relating to using s3.GetObject and passing along the Conditional Headers.",
  "id": "57a89a8fbc688a133905ee97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-08-08T14:43:27.613Z",
  "text": "Hello :) I have a question relating to using s3.GetObject and passing along the Conditional Headers.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "If it&#39;s successful, how do you find that out? Do you just assume it was if there is no error and the body length is zero?",
  "id": "57a89aa8bc688a133905eeb6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-08-08T14:43:52.050Z",
  "text": "If it's successful, how do you find that out? Do you just assume it was if there is no error and the body length is zero?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "I can&#39;t find a way to see the StatusCode of 304",
  "id": "57a89ab646610f173948af14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-08-08T14:44:06.965Z",
  "text": "I can't find a way to see the StatusCode of 304",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-08T16:16:20.135Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"itsjamie\" class=\"mention\">@itsjamie</span>, I am a little lost to what you mean on successful. If you pass in the conditional headers, the response should be 200 upon success.",
  "id": "57a8b02bf7f11a7936ac7322",
  "issues": [],
  "mentions": [
   {
    "screenName": "itsjamie",
    "userId": "5514c25b15522ed4b3dde685",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-08-08T16:15:39.317Z",
  "text": "Hello @itsjamie, I am a little lost to what you mean on successful. If you pass in the conditional headers, the response should be 200 upon success.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Further checking the <code>request.Request.Error</code> for <code>nil</code> should be a success. Also, what is it that you are trying to do that requires knowledge of the status codes?",
  "id": "57a8b0d4ff82b9fc7e6c10c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-08-08T16:18:28.137Z",
  "text": "Further checking the `request.Request.Error` for `nil` should be a success. Also, what is it that you are trying to do that requires knowledge of the status codes?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "I&#39;m trying to detect the difference between a request that matches the conditional headers, and therefore doesn&#39;t return content, which normally responds with a HTTP 304 Not Modified.",
  "id": "57a8b102d7087a017fa2d8a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-08-08T16:19:14.515Z",
  "text": "I'm trying to detect the difference between a request that matches the conditional headers, and therefore doesn't return content, which normally responds with a HTTP 304 Not Modified.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "I have some code right now on v1.2.1 that actually outputs an error from GetObject",
  "id": "57a8b113613cc1803670e828",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-08-08T16:19:31.155Z",
  "text": "I have some code right now on v1.2.1 that actually outputs an error from GetObject",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "I found a commit between v1.2.1 and v1.3.1 that changes it so that a Body content length of zero doesn&#39;t return an error.",
  "id": "57a8b138f7f11a7936ac7646",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-08-08T16:20:08.745Z",
  "text": "I found a commit between v1.2.1 and v1.3.1 that changes it so that a Body content length of zero doesn't return an error.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "So, I guess I could check for <code>err == nil &amp;&amp; len(resp.Body) == 0</code>",
  "id": "57a8b175d7087a017fa2d9e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-08-08T16:21:09.945Z",
  "text": "So, I guess I could check for `err == nil && len(resp.Body) == 0`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> Essentially, when passing the conditional headers on v1.2.1, if they matched the error printed out as <code>304NotModified: 304 Not Modified\\n\\tstatus code: 304, request id: 581342B0893B53AC\\n</code> in our logs.",
  "id": "57a8b265613cc1803670ec40",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2016-08-08T16:25:09.980Z",
  "text": "@xibz Essentially, when passing the conditional headers on v1.2.1, if they matched the error printed out as `304NotModified: 304 Not Modified\\n\\tstatus code: 304, request id: 581342B0893B53AC\\n` in our logs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Yea, I see the issue here. Okay, let me do a little research on the commit that squashed that error",
  "id": "57a8b292f7f11a7936ac79e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-08-08T16:25:54.299Z",
  "text": "Yea, I see the issue here. Okay, let me do a little research on the commit that squashed that error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "Yeah, I used this to find all the commits. <a href=\"https://github.com/aws/aws-sdk-go/compare/v1.2.1...v1.3.1\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/compare/v1.2.1...v1.3.1</a>",
  "id": "57a8b2d046610f173948f907",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-08-08T16:26:56.539Z",
  "text": "Yeah, I used this to find all the commits. https://github.com/aws/aws-sdk-go/compare/v1.2.1...v1.3.1",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/compare/v1.2.1...v1.3.1"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "<span data-link-type=\"commit\" data-commit-sha=\"1664dc43ec558f311f930db1eb549021689fcabd\" data-commit-repo=\"aws/aws-sdk-go\" class=\"commit\">aws/aws-sdk-go@1664dc4</span>",
  "id": "57a8b2fbbc688a1339063ab9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-08-08T16:27:39.149Z",
  "text": "https://github.com/aws/aws-sdk-go/commit/1664dc43ec558f311f930db1eb549021689fcabd",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "This is the commit where I found the code that I believe was causing the empty body to be considered an error.",
  "id": "57a8b2fbf7f11a7936ac7b26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-08-08T16:27:39.315Z",
  "text": "This is the commit where I found the code that I believe was causing the empty body to be considered an error.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "So it should be changed in v1.3.1 and not be output as an error, but now I&#39;ve found an issue in our code, where we always respond with HTTP 200, even if the users conditional request which we proxy on through to S3 was successful.",
  "id": "57a8b334ff82b9fc7e6c17e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-08-08T16:28:36.555Z",
  "text": "So it should be changed in v1.3.1 and not be output as an error, but now I've found an issue in our code, where we always respond with HTTP 200, even if the users conditional request which we proxy on through to S3 was successful.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-08T16:30:38.894Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "So I&#39;m trying to determine given the information we have available in the <code>s3.GetObjectOutput</code> how to detect that the conditional headers were matched, and therefore we should respond with a 304.. I&#39;m thinking it&#39;s if the output body has no content. Since that is what caused the error in the first place.",
  "id": "57a8b3a616b0696856a39c33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-08-08T16:30:30.762Z",
  "text": "So I'm trying to determine given the information we have available in the `s3.GetObjectOutput` how to detect that the conditional headers were matched, and therefore we should respond with a 304.. I'm thinking it's if the output body has no content. Since that is what caused the error in the first place.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"itsjamie\" class=\"mention\">@itsjamie</span> i&#39;m trying to reproduce this locally. So I understand the issue correctly are you expecting to get a 304 not modified error when the content has not been modified, or a 200 OK response with an empty body? ",
  "id": "57a8b4bff7f11a7936ac7f16",
  "issues": [],
  "mentions": [
   {
    "screenName": "itsjamie",
    "userId": "5514c25b15522ed4b3dde685",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2016-08-08T16:35:11.822Z",
  "text": "Hi @itsjamie i'm trying to reproduce this locally. So I understand the issue correctly are you expecting to get a 304 not modified error when the content has not been modified, or a 200 OK response with an empty body? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "Either is ok. I just need to know the behaviour I need to check to determine what to respond with. It looks like the behaviour changed with the commit I linked.",
  "id": "57a8b538ff82b9fc7e6c1df0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-08-08T16:37:12.439Z",
  "text": "Either is ok. I just need to know the behaviour I need to check to determine what to respond with. It looks like the behaviour changed with the commit I linked.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "NotModified should be the expected result. Are you seeing a case where no error is being returned?  We had a bug, that the change linked, that fixed a situation where the error code would be &quot;&quot; instead of populated.  This change fixed that issue, making sure all errors always contain a result.",
  "id": "57a8b6eeae838f6f568e0e2d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-08-08T16:44:30.627Z",
  "text": "NotModified should be the expected result. Are you seeing a case where no error is being returned?  We had a bug, that the change linked, that fixed a situation where the error code would be \"\" instead of populated.  This change fixed that issue, making sure all errors always contain a result.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<pre><code class=\"sh\">NotModified: Not Modified\nstatus code: <span class=\"number\">304</span>, request id: &lt;reqid&gt;</code></pre>",
  "id": "57a8b70ad7087a017fa2e9bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-08-08T16:44:58.499Z",
  "text": "```sh\nNotModified: Not Modified\nstatus code: 304, request id: <reqid>\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "would be expected message and error code",
  "id": "57a8b712613cc1803670f9a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-08-08T16:45:06.029Z",
  "text": "would be expected message and error code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I used <code>IfModifiedSince</code> in my experiment",
  "id": "57a8b73bae838f6f568e0ecf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-08-08T16:45:47.335Z",
  "text": "I used `IfModifiedSince` in my experiment",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "Ok, so I should receive an error if the request matches the conditional. Then I need to upgrade the interface and see if it&#39;s 304 myself.",
  "id": "57a8b7f546610f173949061f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-08-08T16:48:53.347Z",
  "text": "Ok, so I should receive an error if the request matches the conditional. Then I need to upgrade the interface and see if it's 304 myself.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Thanks!",
  "id": "57a8b800ae838f6f568e10df",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-08-08T16:49:04.162Z",
  "text": "@jasdel Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Correct, you should expect an error if any of the conditionals aren&#39;t met. 200 ok should only be returned if the contents of the object are being returned.",
  "id": "57a8b968613cc1803671012b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-08-08T16:55:04.131Z",
  "text": "Correct, you should expect an error if any of the conditionals aren't met. 200 ok should only be returned if the contents of the object are being returned.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> It is a little weird in regards to the Etag conditionals like If-None-Match, where you&#39;re supplying an Etag saying, if it doesn&#39;t match this, give me content. I never really considered it an error to receive the 304 Not Modified. But if you consider the normal code path to have content always then I get it.",
  "id": "57a8c3df16b0696856a3cb7e",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2016-08-08T17:39:43.650Z",
  "text": "@jasdel It is a little weird in regards to the Etag conditionals like If-None-Match, where you're supplying an Etag saying, if it doesn't match this, give me content. I never really considered it an error to receive the 304 Not Modified. But if you consider the normal code path to have content always then I get it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-08T17:41:16.299Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/itsjamie",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1956521?v=4&s=60",
   "displayName": "Jamie Stackhouse",
   "gv": "4",
   "id": "5514c25b15522ed4b3dde685",
   "url": "/itsjamie",
   "username": "itsjamie",
   "v": 14
  },
  "html": "Ended up with this.. <pre><code class=\"go\"><span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n        <span class=\"keyword\">if</span> reqData, ok := err.(awserr.RequestFailure); ok {\n            <span class=\"keyword\">switch</span> reqData.StatusCode() {\n            <span class=\"keyword\">case</span> http.StatusNotModified:\n                setHeaders(c, output)\n                c.Writer.WriteHeader(http.StatusNotModified)\n                <span class=\"keyword\">return</span>\n            <span class=\"keyword\">default</span>:\n                c.AbortWithError(http.StatusInternalServerError, err)\n            }\n}</code></pre>",
  "id": "57a8c41ad7087a017fa30e36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-08-08T17:40:42.917Z",
  "text": "Ended up with this.. \n\n```go\nif err != nil {\n\t\tif reqData, ok := err.(awserr.RequestFailure); ok {\n\t\t\tswitch reqData.StatusCode() {\n\t\t\tcase http.StatusNotModified:\n\t\t\t\tsetHeaders(c, output)\n\t\t\t\tc.Writer.WriteHeader(http.StatusNotModified)\n\t\t\t\treturn\n\t\t\tdefault:\n\t\t\t\tc.AbortWithError(http.StatusInternalServerError, err)\n\t\t\t}\n}\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I think the normal code path would be any case where the GetObject returns the contents of the Object from S3.  In any case where content is not returned an error value should be present. In the case of a conditional error the error returned should match which ever conditional triggered the no content to be returned (other than actual errors of course)",
  "id": "57a8d596d7087a017fa34002",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-08-08T18:55:18.499Z",
  "text": "I think the normal code path would be any case where the GetObject returns the contents of the Object from S3.  In any case where content is not returned an error value should be present. In the case of a conditional error the error returned should match which ever conditional triggered the no content to be returned (other than actual errors of course)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I noticed a strange behavior with LaunchConfiguration on EC2-Classic, one of my user&#39;s configuration seems to have the AssociatePublicIpAddress non-nil, which as far as I can understand the docs should only be the case on VPC environments ",
  "id": "57ace1d6f157d5c0119f63fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-08-11T20:36:38.732Z",
  "text": "I noticed a strange behavior with LaunchConfiguration on EC2-Classic, one of my user's configuration seems to have the AssociatePublicIpAddress non-nil, which as far as I can understand the docs should only be the case on VPC environments ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I don&#39;t have access to his AWS account so I can&#39;t provide many details, it&#39;s just activating a code path in my software that should only be hit in  case it&#39;s non-nil and I expected that on VPC only",
  "id": "57ace2432332080b695257ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-08-11T20:38:27.152Z",
  "text": "I don't have access to his AWS account so I can't provide many details, it's just activating a code path in my software that should only be hit in  case it's non-nil and I expected that on VPC only",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "hi <span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> I suggest asking on the <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=30\" rel=\"nofollow\" target=\"_blank\" class=\"link\">AWS EC2 forums</a>",
  "id": "57ae4146a00c6adb45e20962",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-08-12T21:36:05.999Z",
  "text": "hi @cristim I suggest asking on the [AWS EC2 forums](https://forums.aws.amazon.com/forum.jspa?forumID=30)",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=30"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/pivotal-topher-bullock",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1895900?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1895900?v=3&s=60",
   "displayName": "Topher Bullock",
   "gv": "3",
   "id": "57b46e3f40f3a6eec05ff177",
   "url": "/pivotal-topher-bullock",
   "username": "pivotal-topher-bullock"
  },
  "html": "Hello! Is there any way to deduce the partition and account number given a set of credentials??",
  "id": "57b46ec38d93113d5f03e345",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-08-17T14:03:47.582Z",
  "text": "Hello! Is there any way to deduce the partition and account number given a set of credentials??",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"pivotal-topher-bullock\" class=\"mention\">@pivotal-topher-bullock</span> The Account number can be parsed from the Arn of any of the resources ",
  "id": "57b60ea1187885ef4f5b2f6b",
  "issues": [],
  "mentions": [
   {
    "screenName": "pivotal-topher-bullock",
    "userId": "57b46e3f40f3a6eec05ff177",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-08-18T19:38:09.664Z",
  "text": "@pivotal-topher-bullock The Account number can be parsed from the Arn of any of the resources ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "What do you mean by partition? ",
  "id": "57b60ec2ed79c5ee4f19744b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-08-18T19:38:42.710Z",
  "text": "What do you mean by partition? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"pivotal-topher-bullock\" class=\"mention\">@pivotal-topher-bullock</span>, are you talking about the credentials stored in the credentials file? Because if so, there is no way to know what the account number from that. You can&#39;t really extract anything from a set of credentials, as far as I know. ",
  "id": "57b61038b64a3a016f493bb9",
  "issues": [],
  "mentions": [
   {
    "screenName": "pivotal-topher-bullock",
    "userId": "57b46e3f40f3a6eec05ff177",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-08-18T19:44:56.572Z",
  "text": "Hello @pivotal-topher-bullock, are you talking about the credentials stored in the credentials file? Because if so, there is no way to know what the account number from that. You can't really extract anything from a set of credentials, as far as I know. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "What is it you are trying to do?",
  "id": "57b6103db64a3a016f493bca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-08-18T19:45:01.529Z",
  "text": "What is it you are trying to do?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/pivotal-topher-bullock",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1895900?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1895900?v=3&s=60",
   "displayName": "Topher Bullock",
   "gv": "3",
   "id": "57b46e3f40f3a6eec05ff177",
   "url": "/pivotal-topher-bullock",
   "username": "pivotal-topher-bullock"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> We were trying to determine the components of ARN without having to get a resource first.",
  "id": "57b6215c5ffbca3e3cf312f6",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2016-08-18T20:58:04.023Z",
  "text": "@cristim We were trying to determine the components of ARN without having to get a resource first.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/pivotal-topher-bullock",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1895900?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1895900?v=3&s=60",
   "displayName": "Topher Bullock",
   "gv": "3",
   "id": "57b46e3f40f3a6eec05ff177",
   "url": "/pivotal-topher-bullock",
   "username": "pivotal-topher-bullock"
  },
  "html": "Partition and account number are the 2 variables we needed to read to build arns : <code>arn:partition:service:region:account-id:resource</code>",
  "id": "57b62182cd00bdff6e5ebcee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-08-18T20:58:42.661Z",
  "text": "Partition and account number are the 2 variables we needed to read to build arns : `arn:partition:service:region:account-id:resource`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/pivotal-topher-bullock",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1895900?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1895900?v=3&s=60",
   "displayName": "Topher Bullock",
   "gv": "3",
   "id": "57b46e3f40f3a6eec05ff177",
   "url": "/pivotal-topher-bullock",
   "username": "pivotal-topher-bullock"
  },
  "html": "The partition for standard AWS regions is <code>aws</code>, but for others it can be <code>aws-*</code> eg the China partition is <code>aws-cn</code>",
  "id": "57b621e7ed79c5ee4f19c529",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-08-18T21:00:23.008Z",
  "text": "The partition for standard AWS regions is `aws`, but for others it can be `aws-*` eg the China partition is `aws-cn`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/pivotal-topher-bullock",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1895900?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1895900?v=3&s=60",
   "displayName": "Topher Bullock",
   "gv": "3",
   "id": "57b46e3f40f3a6eec05ff177",
   "url": "/pivotal-topher-bullock",
   "username": "pivotal-topher-bullock"
  },
  "html": "We were looking for a way to do this without relying on reading some arbitrary resource&#39;s ARN , but settled on that as it seems impossible to do any other way.  We&#39;re using IAM&#39;s GetAccountAuthorizationDetails, since we needed to read managed policies anyhow.",
  "id": "57b6226dcd00bdff6e5ec147",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-08-18T21:02:37.751Z",
  "text": "We were looking for a way to do this without relying on reading some arbitrary resource's ARN , but settled on that as it seems impossible to do any other way.  We're using IAM's GetAccountAuthorizationDetails, since we needed to read managed policies anyhow.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/pivotal-topher-bullock",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1895900?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1895900?v=3&s=60",
   "displayName": "Topher Bullock",
   "gv": "3",
   "id": "57b46e3f40f3a6eec05ff177",
   "url": "/pivotal-topher-bullock",
   "username": "pivotal-topher-bullock"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> ^",
  "id": "57b6228c5ffbca3e3cf31799",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2016-08-18T21:03:08.544Z",
  "text": "@xibz ^",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/petruisfan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4135621?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4135621?v=3&s=60",
   "displayName": "Petru Isfan",
   "gv": "3",
   "id": "56247bc016b6c7089cb775dd",
   "url": "/petruisfan",
   "username": "petruisfan",
   "v": 3
  },
  "html": "Hey guys! I see no ReceiveMessageBulk method. Is this not supported? ",
  "id": "57bd95b0b64a3a016f61df6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-08-24T12:40:16.176Z",
  "text": "Hey guys! I see no ReceiveMessageBulk method. Is this not supported? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/petruisfan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4135621?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4135621?v=3&s=60",
   "displayName": "Petru Isfan",
   "gv": "3",
   "id": "56247bc016b6c7089cb775dd",
   "url": "/petruisfan",
   "username": "petruisfan",
   "v": 3
  },
  "html": "oh, I think this is probably not in the aws API at all... aws cli doesn&#39;t have it either ",
  "id": "57bd95f487f779f06923ab8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-08-24T12:41:24.967Z",
  "text": "oh, I think this is probably not in the aws API at all... aws cli doesn't have it either ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/petruisfan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4135621?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4135621?v=3&s=60",
   "displayName": "Petru Isfan",
   "gv": "3",
   "id": "56247bc016b6c7089cb775dd",
   "url": "/petruisfan",
   "username": "petruisfan",
   "v": 3
  },
  "html": "it&#39;s strange that send and delete have Batch, while receive doesn&#39;t",
  "id": "57bd962d5ffbca3e3c0b42cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-08-24T12:42:21.580Z",
  "text": "it's strange that send and delete have Batch, while receive doesn't",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/kkfaisal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12808921?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12808921?v=3&s=60",
   "displayName": "kkfaisal",
   "gv": "3",
   "id": "56f0e94d85d51f252aba1cea",
   "url": "/kkfaisal",
   "username": "kkfaisal",
   "v": 1
  },
  "html": "Hi ..",
  "id": "57c3cbd8e353af447b39bce0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-08-29T05:44:56.471Z",
  "text": "Hi ..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/kkfaisal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12808921?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12808921?v=3&s=60",
   "displayName": "kkfaisal",
   "gv": "3",
   "id": "56f0e94d85d51f252aba1cea",
   "url": "/kkfaisal",
   "username": "kkfaisal",
   "v": 1
  },
  "html": "<em>Golang AWS SDK</em> I Can&#39;t find options to query Redshift in AWS SDK ... I&#39;m  missing something or SDK is not supposed to be used to query Redshift ",
  "id": "57c3cc44f6fe00361e09e923",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-08-29T05:46:44.069Z",
  "text": "*Golang AWS SDK* I Can't find options to query Redshift in AWS SDK ... I'm  missing something or SDK is not supposed to be used to query Redshift ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-08-29T09:14:07.124Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jjeffery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/458924?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/458924?v=4&s=60",
   "displayName": "John Jeffery",
   "gv": "4",
   "id": "55b9c0e40fc9f982beab7dcc",
   "url": "/jjeffery",
   "username": "jjeffery",
   "v": 9
  },
  "html": "",
  "id": "57c3fca642e3827921825f2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-08-29T09:13:10.717Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jjeffery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/458924?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/458924?v=4&s=60",
   "displayName": "John Jeffery",
   "gv": "4",
   "id": "55b9c0e40fc9f982beab7dcc",
   "url": "/jjeffery",
   "username": "jjeffery",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kkfaisal\" class=\"mention\">@kkfaisal</span>  I think you use the PostgreSQL client library to query Redshift. See <a href=\"https://github.com/lib/pq\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/lib/pq</a>.",
  "id": "57c3fccb2a7bd0e9205b500d",
  "issues": [],
  "mentions": [
   {
    "screenName": "kkfaisal",
    "userId": "56f0e94d85d51f252aba1cea",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2016-08-29T09:13:47.590Z",
  "text": "@kkfaisal  I think you use the PostgreSQL client library to query Redshift. See https://github.com/lib/pq.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/lib/pq"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": " Hello <span data-link-type=\"mention\" data-screen-name=\"petruisfan\" class=\"mention\">@petruisfan</span>, what is it that you are trying to do? And what service is this for?",
  "id": "57c46a9689fabaea6bd32d71",
  "issues": [],
  "mentions": [
   {
    "screenName": "petruisfan",
    "userId": "56247bc016b6c7089cb775dd",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-08-29T17:02:14.541Z",
  "text": " Hello @petruisfan, what is it that you are trying to do? And what service is this for?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"kkfaisal\" class=\"mention\">@kkfaisal</span>, using a POSTGres client is the current way of doing queries to the service.",
  "id": "57c46c6fca24c06c6384270b",
  "issues": [],
  "mentions": [
   {
    "screenName": "kkfaisal",
    "userId": "56f0e94d85d51f252aba1cea",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-08-29T17:10:07.583Z",
  "text": "Hello @kkfaisal, using a POSTGres client is the current way of doing queries to the service.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Xe",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/529003?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/529003?v=4&s=60",
   "displayName": "Christine Dodrill",
   "gv": "4",
   "id": "546beea3db8155e6700d5fbc",
   "url": "/Xe",
   "username": "Xe",
   "v": 18
  },
  "html": "Is there a human-readable example of how to use kinesis in the aws go SDK?",
  "id": "57c49a4c4023dec56c276471",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-08-29T20:25:48.844Z",
  "text": "Is there a human-readable example of how to use kinesis in the aws go SDK?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Xe\" class=\"mention\">@Xe</span> - All hand written examples are in the examples folder, but I believe we do not have a kinesis example. We are always willing to take PRs of examples though! What is it that you are trying to do?",
  "id": "57c4a3f9ca24c06c6384e392",
  "issues": [],
  "mentions": [
   {
    "screenName": "Xe",
    "userId": "546beea3db8155e6700d5fbc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-08-29T21:07:05.106Z",
  "text": "@Xe - All hand written examples are in the examples folder, but I believe we do not have a kinesis example. We are always willing to take PRs of examples though! What is it that you are trying to do?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/MiguelMoll",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/643960?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/643960?v=3&s=60",
   "displayName": "Miguel Moll",
   "gv": "3",
   "id": "5508318015522ed4b3dd62fc",
   "url": "/MiguelMoll",
   "username": "MiguelMoll",
   "v": 3
  },
  "html": "I&#39;ve noticed some ECR apis include the text: <code>This operation is used by the Amazon ECR proxy, and it is not intended\nfor general use by customers. Use the docker CLI to pull, tag, and push images.</code><br>Guess I&#39;m a little confused by the &quot;general use by customers&quot; part. If I want to push images via an API, it should be ok to use ECR api, right? I don&#39;t see that as a general use if that makes sense.",
  "id": "57c5dc224023dec56c2b2736",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-08-30T19:18:58.078Z",
  "text": "I've noticed some ECR apis include the text: ```This operation is used by the Amazon ECR proxy, and it is not intended\nfor general use by customers. Use the docker CLI to pull, tag, and push images.```\nGuess I'm a little confused by the \"general use by customers\" part. If I want to push images via an API, it should be ok to use ECR api, right? I don't see that as a general use if that makes sense.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/gc2dec",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3611098?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3611098?v=3&s=60",
   "displayName": "Gourab Chowdhury",
   "gv": "3",
   "id": "5501dd9915522ed4b3dd2e3b",
   "url": "/gc2dec",
   "username": "gc2dec",
   "v": 1
  },
  "html": "Hi I am trying to run an EC2 t1 micro instance using golang. After running the code I can see the instance is up but I am getting a response from svc.DescribeInstances(params) : &quot;Missing region: couldn&#39;t find the region configuration&quot;",
  "id": "57cd5bb3ff95228007afd201",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-09-05T11:49:07.814Z",
  "text": "Hi I am trying to run an EC2 t1 micro instance using golang. After running the code I can see the instance is up but I am getting a response from svc.DescribeInstances(params) : \"Missing region: couldn't find the region configuration\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/gc2dec",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3611098?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3611098?v=3&s=60",
   "displayName": "Gourab Chowdhury",
   "gv": "3",
   "id": "5501dd9915522ed4b3dd2e3b",
   "url": "/gc2dec",
   "username": "gc2dec",
   "v": 1
  },
  "html": "How to solve this issue?",
  "id": "57cd5bbf861faa7f07b94a13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-09-05T11:49:19.872Z",
  "text": "How to solve this issue?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"gc2dec\" class=\"mention\">@gc2dec</span>, to do this you just need to set the <code>Region</code> in the config. ",
  "id": "57ceee601baa312a6bdb6a28",
  "issues": [],
  "mentions": [
   {
    "screenName": "gc2dec",
    "userId": "5501dd9915522ed4b3dd2e3b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-09-06T16:27:12.007Z",
  "text": "Hello @gc2dec, to do this you just need to set the `Region` in the config. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-09-06T16:28:28.731Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<pre><code class=\"go\">svc := ec2.New(session.New(&amp;aws.Config {\n    Region: aws.String(<span class=\"string\">\"us-east-1\"</span>),\n}))</code></pre>",
  "id": "57ceee9efe284f6c302c995f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-09-06T16:28:14.443Z",
  "text": "```go\nsvc := ec2.New(session.New(&aws.Config {\n    Region: aws.String(\"us-east-1\"),\n}))\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/robparrott",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/970026?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/970026?v=3&s=60",
   "displayName": "Rob Parrott",
   "gv": "3",
   "id": "57d2c74740f3a6eec06463c7",
   "url": "/robparrott",
   "username": "robparrott"
  },
  "html": "Question on the Go API. I&#39;m trying to modify a project &quot;goofys&quot; that present S3 as a FUSE mount, and want to enable server-side encryption, in this case SSE-S3.",
  "id": "57d2c7888cd0681e7bfb1b70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-09-09T14:30:32.225Z",
  "text": "Question on the Go API. I'm trying to modify a project \"goofys\" that present S3 as a FUSE mount, and want to enable server-side encryption, in this case SSE-S3.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/robparrott",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/970026?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/970026?v=3&s=60",
   "displayName": "Rob Parrott",
   "gv": "3",
   "id": "57d2c74740f3a6eec06463c7",
   "url": "/robparrott",
   "username": "robparrott"
  },
  "html": "I&#39;m using the API as described here, but do not seem to be able to get the header &quot;x-amz-server-side-encryption&quot; set to anything, let alone the needed &quot;AES256&quot; value.",
  "id": "57d2c7c13f7260fe4bdfe7ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-09-09T14:31:29.534Z",
  "text": "I'm using the API as described here, but do not seem to be able to get the header \"x-amz-server-side-encryption\" set to anything, let alone the needed \"AES256\" value.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/robparrott",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/970026?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/970026?v=3&s=60",
   "displayName": "Rob Parrott",
   "gv": "3",
   "id": "57d2c74740f3a6eec06463c7",
   "url": "/robparrott",
   "username": "robparrott"
  },
  "html": "Code is here: (please hold) ....",
  "id": "57d2c8021aacfaf84b045e9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-09-09T14:32:34.842Z",
  "text": "Code is here: (please hold) ....",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/robparrott",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/970026?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/970026?v=3&s=60",
   "displayName": "Rob Parrott",
   "gv": "3",
   "id": "57d2c74740f3a6eec06463c7",
   "url": "/robparrott",
   "username": "robparrott"
  },
  "html": "<a href=\"https://github.com/pegacloud/goofys/blob/feature/sse-s3/internal/goofys.go#L533\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/pegacloud/goofys/blob/feature/sse-s3/internal/goofys.go#L533</a>",
  "id": "57d2c936af75d5187be55c82",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-09-09T14:37:42.060Z",
  "text": "https://github.com/pegacloud/goofys/blob/feature/sse-s3/internal/goofys.go#L533",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pegacloud/goofys/blob/feature/sse-s3/internal/goofys.go#L533"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/g/u/The_Jew_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/723481133527252992/IqYDVD35.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/723481133527252992/IqYDVD35_bigger.jpg",
   "displayName": "David K",
   "id": "57d2a49f40f3a6eec0645dd7",
   "url": "/The_Jew_twitter",
   "username": "The_Jew_twitter"
  },
  "html": "Is there any way to access the cost explorer forecasts using the API? I would like to be able to see my project spending for at least the current month, if not the upcoming month or two.",
  "id": "57d2d7cf3d16fa4f03982cfc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-09-09T15:39:59.286Z",
  "text": "Is there any way to access the cost explorer forecasts using the API? I would like to be able to see my project spending for at least the current month, if not the upcoming month or two.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"The_Jew_twitter\" class=\"mention\">@The_Jew_twitter</span>, no SDK currently supports cost forecasting. You can reach out to the <a href=\"https://forums.aws.amazon.com/index.jspa\" rel=\"nofollow\" target=\"_blank\" class=\"link\">forums</a> and ask them to provide the SDKs with the necessary APIs for us to implement this.",
  "id": "57d6ed37cba69fe73509073d",
  "issues": [],
  "mentions": [
   {
    "screenName": "The_Jew_twitter",
    "userId": "57d2a49f40f3a6eec0645dd7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-09-12T18:00:23.132Z",
  "text": "@The_Jew_twitter, no SDK currently supports cost forecasting. You can reach out to the [forums](https://forums.aws.amazon.com/index.jspa) and ask them to provide the SDKs with the necessary APIs for us to implement this.",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/index.jspa"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-09-12T18:12:53.977Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"robparrott\" class=\"mention\">@robparrott</span> - I am unsure of how the whole <code>goofys</code> api works. Perhaps try writing a simple go program that just deals with SSE and see if that works. I&#39;ve look at the code you&#39;ve provided, but nothing strikes me as odd.",
  "id": "57d6f00983c1556511be8862",
  "issues": [],
  "mentions": [
   {
    "screenName": "robparrott",
    "userId": "57d2c74740f3a6eec06463c7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-09-12T18:12:25.327Z",
  "text": "@robparrott - I am unsure of how the whole `goofys` api works. Perhaps try writing a simple go program that just deals with SSE and see if that works. I've look at the code you've provided, but nothing strikes me as odd.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/padlar_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/2167916362/hSGLoABg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/2167916362/hSGLoABg_bigger",
   "displayName": "Sunil Shivanand",
   "id": "57da8d9440f3a6eec06561eb",
   "url": "/padlar_twitter",
   "username": "padlar_twitter"
  },
  "html": "Question on Go SNS testing - We are using sns push notifications to ios devices. we have registered endpoints under application and push the notifications individually to the endpoints. In order to test  this setup end to end, I was thinking of pushing notification to a sqs queue and verifying that the message shows up in the q and the contents match. my question is, is there a way to subscribe to the q from sns application? Only way I can make this work is to subscribe the q to an sns topic.",
  "id": "57da8e8327a8458f7f190c5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2016-09-15T12:05:23.571Z",
  "text": "Question on Go SNS testing - We are using sns push notifications to ios devices. we have registered endpoints under application and push the notifications individually to the endpoints. In order to test  this setup end to end, I was thinking of pushing notification to a sqs queue and verifying that the message shows up in the q and the contents match. my question is, is there a way to subscribe to the q from sns application? Only way I can make this work is to subscribe the q to an sns topic.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"padlar_twitter\" class=\"mention\">@padlar_twitter</span> I&#39;m taking a look into this, but I think a topic is needed, <a href=\"http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqssubscribe.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqssubscribe.html</a>",
  "id": "57db2d8527a8458f7f1b8756",
  "issues": [],
  "mentions": [
   {
    "screenName": "padlar_twitter",
    "userId": "57da8d9440f3a6eec06561eb",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-09-15T23:23:49.473Z",
  "text": "@padlar_twitter I'm taking a look into this, but I think a topic is needed, http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqssubscribe.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqssubscribe.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/mbowBC",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/21036732?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/21036732?v=3&s=60",
   "displayName": "Michael Bow",
   "gv": "3",
   "id": "57dbf84840f3a6eec0659839",
   "url": "/mbowBC",
   "username": "mbowBC"
  },
  "html": "Is there a equivalent  go sdk command for aws s3 sync s3://xxx .",
  "id": "57dbf8a2aabc89857fa9b787",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-09-16T13:50:26.296Z",
  "text": "Is there a equivalent  go sdk command for aws s3 sync s3://xxx .",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "hi <span data-link-type=\"mention\" data-screen-name=\"mbowBC\" class=\"mention\">@mbowBC</span> The SDK does not have this feature.  I think something like this would make sense as a helper on top of the SDK&#39;s S3 API. Please feel free to create a github issue, and we could discuss further how this could be implemented on top of the SDK.",
  "id": "57dc213d27a8458f7f1ec144",
  "issues": [],
  "mentions": [
   {
    "screenName": "mbowBC",
    "userId": "57dbf84840f3a6eec0659839",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-09-16T16:43:41.661Z",
  "text": "hi @mbowBC The SDK does not have this feature.  I think something like this would make sense as a helper on top of the SDK's S3 API. Please feel free to create a github issue, and we could discuss further how this could be implemented on top of the SDK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/sourabhbhagat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7384893?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7384893?v=3&s=60",
   "displayName": "Sourabh",
   "gv": "3",
   "id": "57bc374240f3a6eec060e3cf",
   "url": "/sourabhbhagat",
   "username": "sourabhbhagat",
   "v": 2
  },
  "html": "How to access files in Private bucket ? ",
  "id": "57e605e587fa803c5ee79eb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-09-24T04:49:41.990Z",
  "text": "How to access files in Private bucket ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/chazSmi_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/767429955617689600/pgTsjPzb.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/767429955617689600/pgTsjPzb_bigger.jpg",
   "displayName": "Charlie Smith",
   "id": "57e7ab7240f3a6eec06738e4",
   "url": "/chazSmi_twitter",
   "username": "chazSmi_twitter"
  },
  "html": "Is there anyway to mock parts of the SDK for local development?",
  "id": "57e7abfc57bec07c30f22c78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-09-25T10:50:36.619Z",
  "text": "Is there anyway to mock parts of the SDK for local development?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sourabhbhagat\" class=\"mention\">@sourabhbhagat</span> Check out the API documentation for the <a href=\"https://docs.aws.amazon.com/sdk-for-go/v1/developerguide/making-requests.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">SDK&#39;s service APIs</a>. Specifically the S3 service docs give examples on getting objects from <a href=\"https://docs.aws.amazon.com/sdk-for-go/v1/developerguide/common-examples.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">s3 buckets</a>.",
  "id": "57e97d4b76d85b087dabd5c6",
  "issues": [],
  "mentions": [
   {
    "screenName": "sourabhbhagat",
    "userId": "57bc374240f3a6eec060e3cf",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-09-26T19:55:55.005Z",
  "text": "@sourabhbhagat Check out the API documentation for the [SDK's service APIs](https://docs.aws.amazon.com/sdk-for-go/v1/developerguide/making-requests.html). Specifically the S3 service docs give examples on getting objects from [s3 buckets](https://docs.aws.amazon.com/sdk-for-go/v1/developerguide/common-examples.html).",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/v1/developerguide/making-requests.html"
   },
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/v1/developerguide/common-examples.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"chazSmi_twitter\" class=\"mention\">@chazSmi_twitter</span>  There are a few ways that you can mock out the SDK for local testing. Each SDK service client also provides a <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3iface/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">generated interface</a> that you can use instead of the service client. Using embedded mock types for tests to replace the functionality of the API during testing.",
  "id": "57e97dcb857ab70f7d42ff50",
  "issues": [],
  "mentions": [
   {
    "screenName": "chazSmi_twitter",
    "userId": "57e7ab7240f3a6eec06738e4",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2016-09-26T19:58:03.075Z",
  "text": "@chazSmi_twitter  There are a few ways that you can mock out the SDK for local testing. Each SDK service client also provides a [generated interface](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3iface/) that you can use instead of the service client. Using embedded mock types for tests to replace the functionality of the API during testing.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3iface/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/zbintliff",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7526039?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7526039?v=4&s=60",
   "displayName": "Zach Bintliff",
   "gv": "4",
   "id": "57ed613640f3a6eec06811db",
   "url": "/zbintliff",
   "username": "zbintliff",
   "v": 9
  },
  "html": "hey where to we report incorrect documentation?",
  "id": "57ed61440ff4ef7a50efa233",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-09-29T18:45:24.531Z",
  "text": "hey where to we report incorrect documentation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/zbintliff",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7526039?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7526039?v=4&s=60",
   "displayName": "Zach Bintliff",
   "gv": "4",
   "id": "57ed613640f3a6eec06811db",
   "url": "/zbintliff",
   "username": "zbintliff",
   "v": 9
  },
  "html": "Basically for DescribeChangeSetOutput the valid values of <code>Status</code> are incomplete. Ruby docs do have complete oens though: <a href=\"http://docs.aws.amazon.com/sdkforruby/api/Aws/CloudFormation/Types/DescribeChangeSetOutput.html#status-instance_method\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdkforruby/api/Aws/CloudFormation/Types/DescribeChangeSetOutput.html#status-instance_method</a>",
  "id": "57ed618a16c3736220137335",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2016-09-29T18:46:34.113Z",
  "text": "Basically for DescribeChangeSetOutput the valid values of `Status` are incomplete. Ruby docs do have complete oens though: http://docs.aws.amazon.com/sdkforruby/api/Aws/CloudFormation/Types/DescribeChangeSetOutput.html#status-instance_method",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdkforruby/api/Aws/CloudFormation/Types/DescribeChangeSetOutput.html#status-instance_method"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"zbintliff\" class=\"mention\">@zbintliff</span>, it looks like the docs did not get updated with the last release. They should be up to date on the next release.",
  "id": "57ed63f4be5dec755007de81",
  "issues": [],
  "mentions": [
   {
    "screenName": "zbintliff",
    "userId": "57ed613640f3a6eec06811db",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2016-09-29T18:56:52.825Z",
  "text": "Hello @zbintliff, it looks like the docs did not get updated with the last release. They should be up to date on the next release.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arjun-ajith",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17119918?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17119918?v=3&s=60",
   "displayName": "arjun-ajith",
   "gv": "3",
   "id": "57f3352dd73408ce4f2b991a",
   "url": "/arjun-ajith",
   "username": "arjun-ajith"
  },
  "html": "Hey all.. I was trying to insert some data to dynamodb using the instructions from <a href=\"https://gitter.im/aws/aws-sdk-go/archives/2015/08/13\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gitter.im/aws/aws-sdk-go/archives/2015/08/13</a> posted by <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> . But I have a struct array inside my struct. I am getting an error &quot;ValidationException: One or more parameter values were invalid: Missing the key. Any idea?",
  "id": "57f3372d29403a416fc44417",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-04T04:59:25.083Z",
  "text": "Hey all.. I was trying to insert some data to dynamodb using the instructions from https://gitter.im/aws/aws-sdk-go/archives/2015/08/13 posted by @jasdel . But I have a struct array inside my struct. I am getting an error \"ValidationException: One or more parameter values were invalid: Missing the key. Any idea?",
  "unread": false,
  "urls": [
   {
    "url": "https://gitter.im/aws/aws-sdk-go/archives/2015/08/13"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/rumanhassan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=60",
   "displayName": "rumanhassan",
   "gv": "3",
   "id": "55be631a0fc9f982beabe207",
   "url": "/rumanhassan",
   "username": "rumanhassan",
   "v": 4
  },
  "html": "Hi All<br>I am using aws-go-sdk to interact with AWS services. I need to  find what actual REST API being hit to AWS when i use CreateBucket, PutBucketPolicy etc.. api function from SDK. Any help/suggestion is appreciated. ",
  "id": "57f5600c91d6af115230ed75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-05T20:18:20.753Z",
  "text": "Hi All \nI am using aws-go-sdk to interact with AWS services. I need to  find what actual REST API being hit to AWS when i use CreateBucket, PutBucketPolicy etc.. api function from SDK. Any help/suggestion is appreciated. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"arjun-ajith\" class=\"mention\">@arjun-ajith</span> if you have a small code example that you can share it would help in identifying the issue you&#39;re experiencing.  Also I recommend using Marshal instead of Convert. The ConvertToX and ConvertFromX functions were deprecated in favor of the MarshalX and UnmarshalX. the new functions have more consistent functionality, and do not depend on JSON marshaling",
  "id": "57f580b3d45d7f0f526719a8",
  "issues": [],
  "mentions": [
   {
    "screenName": "arjun-ajith",
    "userId": "57f3352dd73408ce4f2b991a",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-05T22:37:39.523Z",
  "text": "Hi @arjun-ajith if you have a small code example that you can share it would help in identifying the issue you're experiencing.  Also I recommend using Marshal instead of Convert. The ConvertToX and ConvertFromX functions were deprecated in favor of the MarshalX and UnmarshalX. the new functions have more consistent functionality, and do not depend on JSON marshaling",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"rumanhassan\" class=\"mention\">@rumanhassan</span> The function name that your code would call is the same as the API operation name. So the s3#S3.CreateBucket method is the same as the AWS S3 CreateBucket API operation. Is this what you were looking for?",
  "id": "57f580f391d6af11523167d7",
  "issues": [],
  "mentions": [
   {
    "screenName": "rumanhassan",
    "userId": "55be631a0fc9f982beabe207",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-05T22:38:43.388Z",
  "text": "@rumanhassan The function name that your code would call is the same as the API operation name. So the s3#S3.CreateBucket method is the same as the AWS S3 CreateBucket API operation. Is this what you were looking for?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jjeffery",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/458924?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/458924?v=4&s=60",
   "displayName": "John Jeffery",
   "gv": "4",
   "id": "55b9c0e40fc9f982beab7dcc",
   "url": "/jjeffery",
   "username": "jjeffery",
   "v": 9
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"rumanhassan\" class=\"mention\">@rumanhassan</span> it sounds like you are interested in the S3 REST API, which is documented at <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AmazonS3/latest/API/</a> . For example, the REST API for CreateBucket is described at <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUT.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUT.html</a>",
  "id": "57f5949c8b26e33e7d2e72c9",
  "issues": [],
  "mentions": [
   {
    "screenName": "rumanhassan",
    "userId": "55be631a0fc9f982beabe207",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2016-10-06T00:02:36.728Z",
  "text": "Hi @rumanhassan it sounds like you are interested in the S3 REST API, which is documented at http://docs.aws.amazon.com/AmazonS3/latest/API/ . For example, the REST API for CreateBucket is described at http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUT.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/"
   },
   {
    "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUT.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/rumanhassan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=60",
   "displayName": "rumanhassan",
   "gv": "3",
   "id": "55be631a0fc9f982beabe207",
   "url": "/rumanhassan",
   "username": "rumanhassan",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>  <span data-link-type=\"mention\" data-screen-name=\"jjeffery\" class=\"mention\">@jjeffery</span>  Thanks I was looking for this only...",
  "id": "57f5c9af0ec6f9457da66c5d",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   },
   {
    "screenName": "jjeffery",
    "userId": "55b9c0e40fc9f982beab7dcc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2016-10-06T03:49:03.172Z",
  "text": "@jasdel  @jjeffery  Thanks I was looking for this only...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/rumanhassan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=60",
   "displayName": "rumanhassan",
   "gv": "3",
   "id": "55be631a0fc9f982beabe207",
   "url": "/rumanhassan",
   "username": "rumanhassan",
   "v": 4
  },
  "html": "HI All<br>Another quick question,  Since I am using Go SDK, for accessing  bucket will the sdk use &quot;virtual-hosted-style&quot; URL or &quot;path-style&quot; URL. reference: <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro</a>",
  "id": "57f653e468f560d80ce15ec7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-06T13:38:44.623Z",
  "text": "HI All\nAnother quick question,  Since I am using Go SDK, for accessing  bucket will the sdk use \"virtual-hosted-style\" URL or \"path-style\" URL. reference: http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/rumanhassan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=60",
   "displayName": "rumanhassan",
   "gv": "3",
   "id": "55be631a0fc9f982beabe207",
   "url": "/rumanhassan",
   "username": "rumanhassan",
   "v": 4
  },
  "html": "Is there a way to set the log level in Go-Sdk, so that when ever i trigger an action the actual REST API for it will get log...",
  "id": "57f66b1684f1db061489ed1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-06T15:17:42.103Z",
  "text": "Is there a way to set the log level in Go-Sdk, so that when ever i trigger an action the actual REST API for it will get log...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"rumanhassan\" class=\"mention\">@rumanhassan</span> The SDK will default to virual hosted style, but you can switch to path style by setting the <code>aws#Config.S3ForcePathStyle</code> field to true when creating the S3 service client.",
  "id": "57f6b96fa7c618cd26ed3380",
  "issues": [],
  "mentions": [
   {
    "screenName": "rumanhassan",
    "userId": "55be631a0fc9f982beabe207",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-06T20:51:59.219Z",
  "text": "@rumanhassan The SDK will default to virual hosted style, but you can switch to path style by setting the `aws#Config.S3ForcePathStyle` field to true when creating the S3 service client.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/rumanhassan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=60",
   "displayName": "rumanhassan",
   "gv": "3",
   "id": "55be631a0fc9f982beabe207",
   "url": "/rumanhassan",
   "username": "rumanhassan",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>  thanks. And all API calls will be over HTTPS?",
  "id": "57f6ba170aa72e3c5bde32ff",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-06T20:54:47.715Z",
  "text": "@jasdel  thanks. And all API calls will be over HTTPS?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "correct the SDK defaults to HTTPS. you can disable this functionality if needed by setting <code>aws#Config.DisableSSL</code>",
  "id": "57f6bcce0aa72e3c5bde4239",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-06T21:06:22.608Z",
  "text": "correct the SDK defaults to HTTPS. you can disable this functionality if needed by setting `aws#Config.DisableSSL`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/rumanhassan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=60",
   "displayName": "rumanhassan",
   "gv": "3",
   "id": "55be631a0fc9f982beabe207",
   "url": "/rumanhassan",
   "username": "rumanhassan",
   "v": 4
  },
  "html": "thanks",
  "id": "57f6bce8d6251fd1269a43a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-06T21:06:48.143Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arvin4u123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22670117?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22670117?v=3&s=60",
   "displayName": "arvin4u123",
   "gv": "3",
   "id": "57f6d535d73408ce4f2c668c",
   "url": "/arvin4u123",
   "username": "arvin4u123"
  },
  "html": "Is there any way i can validate if a folder exist in S3 bucket via go SDK? ",
  "id": "57f6d55f68f560d80ce3b1d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-10-06T22:51:11.085Z",
  "text": "Is there any way i can validate if a folder exist in S3 bucket via go SDK? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"arvin4u123\" class=\"mention\">@arvin4u123</span> you can use <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#ListObjectsInput\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><code>ListObjects</code></a> to see if the specific path exists. In S3 there are no folders, just objects with a <code>key</code> name. The concept of folders are simulated using <code>/</code> separators in the object&#39;s key name. Using the <code>Prefix</code> field in <code>ListObjects</code> will let you get a list of objects back that match that prefix. Setting <code>MaxKeys</code> to 1 you can use to just know if at least one object exists at that path.",
  "id": "57f6e89a84f1db06148be954",
  "issues": [],
  "mentions": [
   {
    "screenName": "arvin4u123",
    "userId": "57f6d535d73408ce4f2c668c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-07T00:13:14.942Z",
  "text": "@arvin4u123 you can use [`ListObjects`](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#ListObjectsInput) to see if the specific path exists. In S3 there are no folders, just objects with a `key` name. The concept of folders are simulated using `/` separators in the object's key name. Using the `Prefix` field in `ListObjects` will let you get a list of objects back that match that prefix. Setting `MaxKeys` to 1 you can use to just know if at least one object exists at that path.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#ListObjectsInput"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arvin4u123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22670117?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22670117?v=3&s=60",
   "displayName": "arvin4u123",
   "gv": "3",
   "id": "57f6d535d73408ce4f2c668c",
   "url": "/arvin4u123",
   "username": "arvin4u123"
  },
  "html": "Thanks  <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> , one more quick question that is there a quick way to validate an object if it exist or not at a particular path (not the main bucket) ? ",
  "id": "57f7d5210aa72e3c5be22113",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-07T17:02:25.167Z",
  "text": "Thanks  @jasdel , one more quick question that is there a quick way to validate an object if it exist or not at a particular path (not the main bucket) ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"arvin4u123\" class=\"mention\">@arvin4u123</span> you could do <code>HeadObject</code> with the <code>Key</code> set to the object&#39;s key. That will return information about the object if it exists.  A NotFound error will be returned if the object doesn&#39;t exist at that bucket and key",
  "id": "57f7d5e40aa72e3c5be225d7",
  "issues": [],
  "mentions": [
   {
    "screenName": "arvin4u123",
    "userId": "57f6d535d73408ce4f2c668c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-07T17:05:40.101Z",
  "text": "@arvin4u123 you could do `HeadObject` with the `Key` set to the object's key. That will return information about the object if it exists.  A NotFound error will be returned if the object doesn't exist at that bucket and key",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/arvin4u123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22670117?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22670117?v=3&s=60",
   "displayName": "arvin4u123",
   "gv": "3",
   "id": "57f6d535d73408ce4f2c668c",
   "url": "/arvin4u123",
   "username": "arvin4u123"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> , thanks again for your reply, i have used that when checking the existence of the same under BUCKET but couldn&#39;t find a way to add the {{Prefix}} in {{HeadObject}}",
  "id": "57f7d6b5a7c618cd26f107d8",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-07T17:09:09.125Z",
  "text": "@jasdel , thanks again for your reply, i have used that when checking the existence of the same under BUCKET but couldn't find a way to add the {{Prefix}} in {{HeadObject}}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "glad to help. Yeah for HeadObject the <code>Key</code> field is what you&#39;re looking for",
  "id": "57f7d87b84f1db06148f3dbf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-07T17:16:43.428Z",
  "text": "glad to help. Yeah for HeadObject the `Key` field is what you're looking for",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/rumanhassan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=60",
   "displayName": "rumanhassan",
   "gv": "3",
   "id": "55be631a0fc9f982beabe207",
   "url": "/rumanhassan",
   "username": "rumanhassan",
   "v": 4
  },
  "html": "Hi All<br>I want to find the inactive files in a bucket, is there an APi to get the status of a file in a bucket?",
  "id": "57fc2b1468f560d80cf442cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-10-10T23:58:12.762Z",
  "text": "Hi All\nI want to find the inactive files in a bucket, is there an APi to get the status of a file in a bucket?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "i&#39;m trying to trace through the code but can&#39;t find it, what is the default retry count if you are just using the default config",
  "id": "57fd51f2a7c618cd26023bae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-11T20:56:18.617Z",
  "text": "i'm trying to trace through the code but can't find it, what is the default retry count if you are just using the default config",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "ok, i see, it looks like it&#39;s 3",
  "id": "57fd52ae4fde7203142b9fe3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-11T20:59:26.993Z",
  "text": "ok, i see, it looks like it's 3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/sourabhbhagat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7384893?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7384893?v=3&s=60",
   "displayName": "Sourabh",
   "gv": "3",
   "id": "57bc374240f3a6eec060e3cf",
   "url": "/sourabhbhagat",
   "username": "sourabhbhagat",
   "v": 2
  },
  "html": "Is there a way to make signed url expiration time to be more than 1 week ? ",
  "id": "57fdc8fd68f560d80cf9fc82",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-12T05:24:13.343Z",
  "text": "Is there a way to make signed url expiration time to be more than 1 week ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/jasonshaev",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1988962?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1988962?v=3&s=60",
   "displayName": "jasonshaev",
   "gv": "3",
   "id": "562fb84116b6c7089cb87656",
   "url": "/jasonshaev",
   "username": "jasonshaev",
   "v": 1
  },
  "html": "Has anyone used CognitoIdentityCredentials for authing requests via the go sdk? A la  <a href=\"https://github.com/aws/aws-sdk-mobile-analytics-js#usage\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-mobile-analytics-js#usage</a>",
  "id": "57fea40e8eaaaea3668e540c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-12T20:58:54.854Z",
  "text": "Has anyone used CognitoIdentityCredentials for authing requests via the go sdk? A la  https://github.com/aws/aws-sdk-mobile-analytics-js#usage",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-mobile-analytics-js#usage"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"rumanhassan\" class=\"mention\">@rumanhassan</span> is <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.HeadBucket\" rel=\"nofollow\" target=\"_blank\" class=\"link\">HeadBucket</a> what you&#39;re looking for?",
  "id": "57febebf891a530163051b28",
  "issues": [],
  "mentions": [
   {
    "screenName": "rumanhassan",
    "userId": "55be631a0fc9f982beabe207",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-12T22:52:47.469Z",
  "text": "@rumanhassan is [HeadBucket](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.HeadBucket) what you're looking for?",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.HeadBucket"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jdonboch\" class=\"mention\">@jdonboch</span> Correct the SDK will default to <code>3</code>, but you can change this by setting the <code>Config.MaxRetries</code> parameter.",
  "id": "57febee1891a530163051b7c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jdonboch",
    "userId": "55a6c1285e0d51bd787b7c3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-12T22:53:21.061Z",
  "text": "@jdonboch Correct the SDK will default to `3`, but you can change this by setting the `Config.MaxRetries` parameter.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sourabhbhagat\" class=\"mention\">@sourabhbhagat</span> 1 week is the maximum that a request can be signed for, <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html</a>",
  "id": "57fec06a78bd0d0363baa03b",
  "issues": [],
  "mentions": [
   {
    "screenName": "sourabhbhagat",
    "userId": "57bc374240f3a6eec060e3cf",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-12T22:59:54.728Z",
  "text": "@sourabhbhagat 1 week is the maximum that a request can be signed for, http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/sourabhbhagat",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7384893?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7384893?v=3&s=60",
   "displayName": "Sourabh",
   "gv": "3",
   "id": "57bc374240f3a6eec060e3cf",
   "url": "/sourabhbhagat",
   "username": "sourabhbhagat",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I am working on project in which each use has profile picture and I am storing the images in private S3 bucket for security purpose. But  signed url expires in 1 week. I read that AWS Signature Version 2 doesn&#39;t have any issues of expiration, but it is not implemented yet in aws-sdk-go. Any idea to solve this problem ? thanks",
  "id": "57ff19991cc4cda456476d3e",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-13T05:20:25.507Z",
  "text": "@jasdel I am working on project in which each use has profile picture and I am storing the images in private S3 bucket for security purpose. But  signed url expires in 1 week. I read that AWS Signature Version 2 doesn't have any issues of expiration, but it is not implemented yet in aws-sdk-go. Any idea to solve this problem ? thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for the clarification <span data-link-type=\"mention\" data-screen-name=\"sourabhbhagat\" class=\"mention\">@sourabhbhagat</span>. Is the purpose of the private bucket and signing of the URL to prevent someone discovering other user profile pictures?",
  "id": "57ffdba08eaaaea36692b0dd",
  "issues": [],
  "mentions": [
   {
    "screenName": "sourabhbhagat",
    "userId": "57bc374240f3a6eec060e3cf",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-13T19:08:16.486Z",
  "text": "Thanks for the clarification @sourabhbhagat. Is the purpose of the private bucket and signing of the URL to prevent someone discovering other user profile pictures?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "A signed URL lasting more than a week reduces the benefit of the signature. If you&#39;re just looking for a way to keep a bucket private but expose some Objects under a prefix inside of the bucket Cloudfront might be what you&#39;re looking for. It can serve content within your private bucket based on a prefix, and those files will be fronted by Cloudfront&#39;s CDN",
  "id": "57ffdc2a78bd0d0363bea2cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-13T19:10:34.989Z",
  "text": "A signed URL lasting more than a week reduces the benefit of the signature. If you're just looking for a way to keep a bucket private but expose some Objects under a prefix inside of the bucket Cloudfront might be what you're looking for. It can serve content within your private bucket based on a prefix, and those files will be fronted by Cloudfront's CDN",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ingojaeckel",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/143597?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/143597?v=4&s=60",
   "displayName": "Ingo",
   "gv": "4",
   "id": "55f1e34f0fc9f982beb04d1c",
   "url": "/ingojaeckel",
   "username": "ingojaeckel",
   "v": 5
  },
  "html": "Good evening! Quick question about using the RunInstances function to launch instances within a VPC.",
  "id": "580456681cc4cda45658db19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-17T04:41:12.271Z",
  "text": "Good evening! Quick question about using the RunInstances function to launch instances within a VPC.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-10-17T04:41:54.748Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ingojaeckel",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/143597?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/143597?v=4&s=60",
   "displayName": "Ingo",
   "gv": "4",
   "id": "55f1e34f0fc9f982beb04d1c",
   "url": "/ingojaeckel",
   "username": "ingojaeckel",
   "v": 5
  },
  "html": "I am using the following code to start a new instance:<pre><code><span class=\"rule\"><span class=\"attribute\">in </span>:<span class=\"value\">= &amp;ec2.RunInstancesInput{\n    ImageId:          aws.<span class=\"function\">String</span>(r.AmiID),\n    MinCount:         aws.<span class=\"function\">Int64</span>(r.Count),\n    MaxCount:         aws.<span class=\"function\">Int64</span>(r.Count),\n    InstanceType:     aws.<span class=\"function\">String</span>(r.InstanceType),\n    SecurityGroupIds: []*string{aws.<span class=\"function\">String</span>(r.SecurityGroupID)},\n    SubnetId:         aws.<span class=\"function\">String</span>(r.SubnetID),\n}\n\nresp, err := svc.<span class=\"function\">RunInstances</span>(in)</span></span></code></pre>",
  "id": "5804567a78bd0d0363ccffb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-17T04:41:30.227Z",
  "text": "I am using the following code to start a new instance:\n\t\n\tin := &ec2.RunInstancesInput{\n\t\tImageId:          aws.String(r.AmiID),\n\t\tMinCount:         aws.Int64(r.Count),\n\t\tMaxCount:         aws.Int64(r.Count),\n\t\tInstanceType:     aws.String(r.InstanceType),\n\t\tSecurityGroupIds: []*string{aws.String(r.SecurityGroupID)},\n\t\tSubnetId:         aws.String(r.SubnetID),\n\t}\n\n\tresp, err := svc.RunInstances(in)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ingojaeckel",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/143597?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/143597?v=4&s=60",
   "displayName": "Ingo",
   "gv": "4",
   "id": "55f1e34f0fc9f982beb04d1c",
   "url": "/ingojaeckel",
   "username": "ingojaeckel",
   "v": 5
  },
  "html": "but this fails at runtime with the error message: 2016/10/17 04:23:58 InvalidParameterCombination: The parameter groupName cannot be used with the parameter subnet",
  "id": "580456b7891a530163172c1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-17T04:42:31.712Z",
  "text": "but this fails at runtime with the error message: 2016/10/17 04:23:58 InvalidParameterCombination: The parameter groupName cannot be used with the parameter subnet",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ingojaeckel",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/143597?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/143597?v=4&s=60",
   "displayName": "Ingo",
   "gv": "4",
   "id": "55f1e34f0fc9f982beb04d1c",
   "url": "/ingojaeckel",
   "username": "ingojaeckel",
   "v": 5
  },
  "html": "SubnetId is the id of the public subnet of my VPC",
  "id": "580456d0614116a2568d8e01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-17T04:42:56.260Z",
  "text": "SubnetId is the id of the public subnet of my VPC",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ingojaeckel",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/143597?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/143597?v=4&s=60",
   "displayName": "Ingo",
   "gv": "4",
   "id": "55f1e34f0fc9f982beb04d1c",
   "url": "/ingojaeckel",
   "username": "ingojaeckel",
   "v": 5
  },
  "html": "Security Group ID is an existing security group",
  "id": "580456dc614116a2568d8e36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-17T04:43:08.998Z",
  "text": "Security Group ID is an existing security group",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ingojaeckel",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/143597?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/143597?v=4&s=60",
   "displayName": "Ingo",
   "gv": "4",
   "id": "55f1e34f0fc9f982beb04d1c",
   "url": "/ingojaeckel",
   "username": "ingojaeckel",
   "v": 5
  },
  "html": "am I missing any VPC related attributes on RunInstancesInput?",
  "id": "580456f97972c5734210f610",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-17T04:43:37.301Z",
  "text": "am I missing any VPC related attributes on RunInstancesInput?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ingojaeckel",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/143597?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/143597?v=4&s=60",
   "displayName": "Ingo",
   "gv": "4",
   "id": "55f1e34f0fc9f982beb04d1c",
   "url": "/ingojaeckel",
   "username": "ingojaeckel",
   "v": 5
  },
  "html": "I am scanning the docs on <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/</a> but can&#39;t find what I am looking for..",
  "id": "5804572a891a530163172d74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-17T04:44:26.248Z",
  "text": "I am scanning the docs on https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/ but can't find what I am looking for..",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "hey, this may be more of a golang question but why is there an empty anonymous struct in each API struct?<pre><code>_ <span class=\"keyword\">struct</span>{} `<span class=\"class\"><span class=\"keyword\">type</span>:\"<span class=\"title\">structure</span>\"`</span></code></pre>",
  "id": "58056d17b17b667961ce5845",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-10-18T00:30:15.908Z",
  "text": "hey, this may be more of a golang question but why is there an empty anonymous struct in each API struct?\n```\n_ struct{} `type:\"structure\"`\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jdonboch\" class=\"mention\">@jdonboch</span> The empty struct is used by the SDK&#39;s marshaler as a place to store metadata about how to marshal the type. Some struct types have extra marshaling requirements that will be added to the struct tag metadata.",
  "id": "58067b2680020cc608f11e4e",
  "issues": [],
  "mentions": [
   {
    "screenName": "jdonboch",
    "userId": "55a6c1285e0d51bd787b7c3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-18T19:42:30.567Z",
  "text": "@jdonboch The empty struct is used by the SDK's marshaler as a place to store metadata about how to marshal the type. Some struct types have extra marshaling requirements that will be added to the struct tag metadata.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ingojaeckel\" class=\"mention\">@ingojaeckel</span> I suggest asking you questing on the <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=30\" rel=\"nofollow\" target=\"_blank\" class=\"link\">AWS EC2 Forums</a>. They will be able to get you the fastest response. And there may of been other users who experienced this issue before. ",
  "id": "58067b952189c68f42fb132e",
  "issues": [],
  "mentions": [
   {
    "screenName": "ingojaeckel",
    "userId": "55f1e34f0fc9f982beb04d1c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-18T19:44:21.934Z",
  "text": "@ingojaeckel I suggest asking you questing on the [AWS EC2 Forums](https://forums.aws.amazon.com/forum.jspa?forumID=30). They will be able to get you the fastest response. And there may of been other users who experienced this issue before. ",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=30"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/theanalyst",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1433152?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1433152?v=4&s=60",
   "displayName": "Abhishek L",
   "gv": "4",
   "id": "54b89f27db8155e6700ebb9e",
   "url": "/theanalyst",
   "username": "theanalyst",
   "v": 6
  },
  "html": "I&#39;m trying to use aws-sdk-go for another S3 Like implementation, but I&#39;m seeing that requests do not actually get sent at all and fail saying InvalidURI: [..] and returns a 400, but the server actually never sees the request at all ",
  "id": "58088aa3b17b667961db0e69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-20T09:13:07.834Z",
  "text": "I'm trying to use aws-sdk-go for another S3 Like implementation, but I'm seeing that requests do not actually get sent at all and fail saying InvalidURI: [..] and returns a 400, but the server actually never sees the request at all ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/theanalyst",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1433152?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1433152?v=4&s=60",
   "displayName": "Abhishek L",
   "gv": "4",
   "id": "54b89f27db8155e6700ebb9e",
   "url": "/theanalyst",
   "username": "theanalyst",
   "v": 6
  },
  "html": "this is the error log I&#39;m seeing, <a href=\"https://gist.github.com/theanalyst/02208b2390978524688c44d5e756b330\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/theanalyst/02208b2390978524688c44d5e756b330</a>",
  "id": "58088b6eb827179842dc2deb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-20T09:16:30.375Z",
  "text": "this is the error log I'm seeing, https://gist.github.com/theanalyst/02208b2390978524688c44d5e756b330",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/theanalyst/02208b2390978524688c44d5e756b330"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"theanalyst\" class=\"mention\">@theanalyst</span>  If you have a code example that might help with this issue. From the log provided, it looks like the request is being created correctly. It is possible that the S3 like implementation you&#39;re using doesn&#39;t correctly handle the host + path in the HTTP header. Some HTTP server libraries incorrectly error out when the HTTP header contains the scheme, host and path. aka <code>PUT http://foobar.localhost:8000/ HTTP/1.1</code>.",
  "id": "5808fb978d2babbd088ef727",
  "issues": [],
  "mentions": [
   {
    "screenName": "theanalyst",
    "userId": "54b89f27db8155e6700ebb9e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2016-10-20T17:15:03.949Z",
  "text": "@theanalyst  If you have a code example that might help with this issue. From the log provided, it looks like the request is being created correctly. It is possible that the S3 like implementation you're using doesn't correctly handle the host + path in the HTTP header. Some HTTP server libraries incorrectly error out when the HTTP header contains the scheme, host and path. aka `PUT http://foobar.localhost:8000/ HTTP/1.1`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/theanalyst",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1433152?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1433152?v=4&s=60",
   "displayName": "Abhishek L",
   "gv": "4",
   "id": "54b89f27db8155e6700ebb9e",
   "url": "/theanalyst",
   "username": "theanalyst",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thanks! , yeah it was basically server not handling absolute urls ",
  "id": "5809cffc80020cc608fe359d",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2016-10-21T08:21:16.525Z",
  "text": "@jasdel thanks! , yeah it was basically server not handling absolute urls ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"theanalyst\" class=\"mention\">@theanalyst</span> thanks for the update. The SDK internally uses the <code>url.URL.Opaque</code> field when building the request to prevent the <code>http.Client</code> from changing escaping of request after the SDK built it (because it would break the request&#39;s signature).  The side effect of this is that  it can cause the HTTP request to be sent with absolute URL in the HTTP header instead of just path.",
  "id": "580a5cb7b6fc192f562ae650",
  "issues": [],
  "mentions": [
   {
    "screenName": "theanalyst",
    "userId": "54b89f27db8155e6700ebb9e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2016-10-21T18:21:43.666Z",
  "text": "@theanalyst thanks for the update. The SDK internally uses the `url.URL.Opaque` field when building the request to prevent the `http.Client` from changing escaping of request after the SDK built it (because it would break the request's signature).  The side effect of this is that  it can cause the HTTP request to be sent with absolute URL in the HTTP header instead of just path.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/toonsevrin",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5507199?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5507199?v=4&s=60",
   "displayName": "Toon Sevrin",
   "gv": "4",
   "id": "57291768c43b8c601971020c",
   "url": "/toonsevrin",
   "username": "toonsevrin",
   "v": 7
  },
  "html": "can&#39;t use updateExpression: aws.String(&quot;SET lvl = lvl + :val&quot;)  when &quot;lvl&quot; does not exist. How do I make it default lvl to 0?",
  "id": "580bad875af5969e7eeeb29c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-22T18:18:47.974Z",
  "text": "can't use updateExpression: aws.String(\"SET lvl = lvl + :val\")  when \"lvl\" does not exist. How do I make it default lvl to 0?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-10-23T02:54:37.825Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/mburbidg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2295149?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2295149?v=3&s=60",
   "displayName": "mburbidg",
   "gv": "3",
   "id": "580c262fd73408ce4f3023e6",
   "url": "/mburbidg",
   "username": "mburbidg",
   "v": 1
  },
  "html": "Does the Golang AWS SDK do retries by default when making S3 requests?",
  "id": "580c265256121b9c7eaf13c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-23T02:54:10.646Z",
  "text": "Does the Golang AWS SDK do retries by default when making S3 requests?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"toonsevrin\" class=\"mention\">@toonsevrin</span> I think you need to also set the <code>ExpressionAttributeValues</code> with the value of the <code>lvl</code> field that you have in the update expression.",
  "id": "580e3b509aea834129eaa77f",
  "issues": [],
  "mentions": [
   {
    "screenName": "toonsevrin",
    "userId": "57291768c43b8c601971020c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-24T16:48:16.379Z",
  "text": "@toonsevrin I think you need to also set the `ExpressionAttributeValues` with the value of the `lvl` field that you have in the update expression.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mburbidg\" class=\"mention\">@mburbidg</span> yes, the SDK will default to 3 retries making the request. The SDK&#39;s S3 client will not retry things like S3.GetObject&#39;s body response if the connection breaks after the initial response has been received.  The <code>s3manager.Downloader</code> does provide this capability though.",
  "id": "580e3be99095105f69012fb2",
  "issues": [],
  "mentions": [
   {
    "screenName": "mburbidg",
    "userId": "580c262fd73408ce4f3023e6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2016-10-24T16:50:49.323Z",
  "text": "@mburbidg yes, the SDK will default to 3 retries making the request. The SDK's S3 client will not retry things like S3.GetObject's body response if the connection breaks after the initial response has been received.  The `s3manager.Downloader` does provide this capability though.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/seanchann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7686068?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7686068?v=3&s=60",
   "displayName": "seanchann.zhou",
   "gv": "3",
   "id": "569c68b0e610378809bcd2de",
   "url": "/seanchann",
   "username": "seanchann",
   "v": 4
  },
  "html": "hi, I not found any close function in dynamodb interface, have any destory func need to call when shutdown",
  "id": "580efbbd52bb2d111d05e2f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-25T06:29:17.644Z",
  "text": "hi, I not found any close function in dynamodb interface, have any destory func need to call when shutdown",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"seanchann\" class=\"mention\">@seanchann</span> - Do you mean something to clean up the connection? If so, we do not have a method that finalizes the operation, because all that is handled by the SDK.",
  "id": "580f94645a1cfa016e47edaf",
  "issues": [],
  "mentions": [
   {
    "screenName": "seanchann",
    "userId": "569c68b0e610378809bcd2de",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-10-25T17:20:36.365Z",
  "text": "@seanchann - Do you mean something to clean up the connection? If so, we do not have a method that finalizes the operation, because all that is handled by the SDK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Also, that service is RESTful so no need to clean up or close any connections",
  "id": "580f9905482c168b22b6a5d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-10-25T17:40:21.641Z",
  "text": "Also, that service is RESTful so no need to clean up or close any connections",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/seanchann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7686068?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7686068?v=3&s=60",
   "displayName": "seanchann.zhou",
   "gv": "3",
   "id": "569c68b0e610378809bcd2de",
   "url": "/seanchann",
   "username": "seanchann",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span>  thanks",
  "id": "58100c128ed1c0ff5c2ca00b",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2016-10-26T01:51:14.869Z",
  "text": "@xibz  thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/mhlias",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10437665?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10437665?v=3&s=60",
   "displayName": "mhlias",
   "gv": "3",
   "id": "5810845bd73408ce4f30f075",
   "url": "/mhlias",
   "username": "mhlias"
  },
  "html": "Hello",
  "id": "58108461c3569a036e1e282b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-10-26T10:24:33.929Z",
  "text": "Hello",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-10-26T10:25:01.794Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/mhlias",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10437665?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10437665?v=3&s=60",
   "displayName": "mhlias",
   "gv": "3",
   "id": "5810845bd73408ce4f30f075",
   "url": "/mhlias",
   "username": "mhlias"
  },
  "html": "facing some weird issue with <code>directconnect.New(sess)</code>",
  "id": "581084760a2d07ff11903437",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-10-26T10:24:54.850Z",
  "text": "facing some weird issue with `directconnect.New(sess)`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/mhlias",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10437665?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10437665?v=3&s=60",
   "displayName": "mhlias",
   "gv": "3",
   "id": "5810845bd73408ce4f30f075",
   "url": "/mhlias",
   "username": "mhlias"
  },
  "html": "getting error: <code>cannot use sess (variable of type *github.com/hashicorp/terraform/vendor/github.com/aws/aws-sdk-go/aws/session.Session) as github.com/aws/aws-sdk-go/aws/client.ConfigProvider value in argument to directconnect.New: wrong type for method ClientConfig</code>",
  "id": "581084d2c3569a036e1e2a99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-10-26T10:26:26.695Z",
  "text": "getting error: `cannot use sess (variable of type *github.com/hashicorp/terraform/vendor/github.com/aws/aws-sdk-go/aws/session.Session) as github.com/aws/aws-sdk-go/aws/client.ConfigProvider value in argument to directconnect.New: wrong type for method ClientConfig`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/mhlias",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10437665?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10437665?v=3&s=60",
   "displayName": "mhlias",
   "gv": "3",
   "id": "5810845bd73408ce4f30f075",
   "url": "/mhlias",
   "username": "mhlias"
  },
  "html": "which is what I provide to all other services.New and seem to be fine",
  "id": "581084ea0e25dbfa1162a350",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-10-26T10:26:50.898Z",
  "text": "which is what I provide to all other services.New and seem to be fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/mhlias",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10437665?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10437665?v=3&s=60",
   "displayName": "mhlias",
   "gv": "3",
   "id": "5810845bd73408ce4f30f075",
   "url": "/mhlias",
   "username": "mhlias"
  },
  "html": "any ideas ?",
  "id": "581084f7806316005dc0450d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-10-26T10:27:03.709Z",
  "text": "any ideas ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/mhlias",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10437665?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10437665?v=3&s=60",
   "displayName": "mhlias",
   "gv": "3",
   "id": "5810845bd73408ce4f30f075",
   "url": "/mhlias",
   "username": "mhlias"
  },
  "html": "upgrading to latest SDK seems to have fixed it",
  "id": "5810c4f55a1cfa016e4be240",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-10-26T15:00:05.134Z",
  "text": "upgrading to latest SDK seems to have fixed it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mhlias\" class=\"mention\">@mhlias</span> glad that fixed. Its possible there was an old cached version of the SDK in your <code>$GOPATH/pkg</code> folder specifically since it looks like the terraform vendoring of the SDK was conflicting. If it happens again and getting the last version of the sdk doesn&#39;t work or you don&#39;t want to I think you could do a <code>go clean github.com/aws/aws-sdk-go</code> Or alternatively delete the contents in your <code>$GOPATH/pkg/&lt;platform&gt;</code> folder.",
  "id": "5810e63e0e25dbfa11649646",
  "issues": [],
  "mentions": [
   {
    "screenName": "mhlias",
    "userId": "5810845bd73408ce4f30f075",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2016-10-26T17:22:06.954Z",
  "text": "@mhlias glad that fixed. Its possible there was an old cached version of the SDK in your `$GOPATH/pkg` folder specifically since it looks like the terraform vendoring of the SDK was conflicting. If it happens again and getting the last version of the sdk doesn't work or you don't want to I think you could do a `go clean github.com/aws/aws-sdk-go` Or alternatively delete the contents in your `$GOPATH/pkg/<platform>` folder.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "hello here",
  "id": "5810f04d8ed1c0ff5c30344e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-10-26T18:05:01.832Z",
  "text": "hello here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "I used aws sdk for Go to download s3 bucket ..... but it seems that it is very slow when I compare it to aws cli ",
  "id": "5810f0878ed1c0ff5c3035bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-10-26T18:05:59.453Z",
  "text": "I used aws sdk for Go to download s3 bucket ..... but it seems that it is very slow when I compare it to aws cli ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "Looking for some suggestions here",
  "id": "5810f0920a2d07ff11925312",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-10-26T18:06:10.270Z",
  "text": "Looking for some suggestions here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sushilkm\" class=\"mention\">@sushilkm</span> was the object a large object? The SDK has a <code>s3manager.Downloader</code> that improves the download of large files by downloading chunks in parallel",
  "id": "5810f10a806316005dc289b1",
  "issues": [],
  "mentions": [
   {
    "screenName": "sushilkm",
    "userId": "5810f044d73408ce4f310a6e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-10-26T18:08:10.591Z",
  "text": "@sushilkm was the object a large object? The SDK has a `s3manager.Downloader` that improves the download of large files by downloading chunks in parallel",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "In addition which API operation were you using with the SDK vs the CLI?",
  "id": "5810f12783a2008d22d74da9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-10-26T18:08:39.684Z",
  "text": "In addition which API operation were you using with the SDK vs the CLI?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I was trying to download content of a bucket .... it has got a lot of files and folders .... and I tried to use s3manager.Downloader.Download to download them ....",
  "id": "5810f1840e25dbfa1164cee8",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-10-26T18:10:12.487Z",
  "text": "@jasdel I was trying to download content of a bucket .... it has got a lot of files and folders .... and I tried to use s3manager.Downloader.Download to download them ....",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "i found that if I use aws cli then it takes only around 9-10 secs but with the go code it is taking around a minute so there must be something either I wrote wrong or may be I am not following best practices",
  "id": "5810f1c10a2d07ff119259ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-10-26T18:11:13.574Z",
  "text": "i found that if I use aws cli then it takes only around 9-10 secs but with the go code it is taking around a minute so there must be something either I wrote wrong or may be I am not following best practices",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Ok that makes sense. were you using the CLI&#39;s sync command?  The SDK doe not have this functionality yet. We do have <span data-link-type=\"issue\" data-issue=\"853\" class=\"issue\">#853</span> which is a feature request for this functionality. To implement this with the Go SDK you could  implement the ListObjects command with delegating to parallel workers using the s3 download manager",
  "id": "5810f20b83a2008d22d75274",
  "issues": [
   {
    "number": "853"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-10-26T18:12:27.990Z",
  "text": "Ok that makes sense. were you using the CLI's sync command?  The SDK doe not have this functionality yet. We do have #853 which is a feature request for this functionality. To implement this with the Go SDK you could  implement the ListObjects command with delegating to parallel workers using the s3 download manager",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "so do you mean cli downloads the files in parallel and what I am doing is a serial effort",
  "id": "5810f2860a2d07ff119261f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-10-26T18:14:30.498Z",
  "text": "so do you mean cli downloads the files in parallel and what I am doing is a serial effort",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I think that is the case. If you have a small code sample you can share I probably can give more specific pointers. The best way to use the Go SDK to do parallel downloads are to call <code>ListObjects</code> in a goroutine that will send the objects into a channel. N number of download workers will read from the channel downloading the files in parallel.",
  "id": "5810f3565a1cfa016e4cd9b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-10-26T18:17:58.765Z",
  "text": "I think that is the case. If you have a small code sample you can share I probably can give more specific pointers. The best way to use the Go SDK to do parallel downloads are to call `ListObjects` in a goroutine that will send the objects into a channel. N number of download workers will read from the channel downloading the files in parallel.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> this is what I am trying to do ..... <a href=\"https://gist.github.com/sushilkm/5d42100c7346b442099a5a1121cd9d00\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/sushilkm/5d42100c7346b442099a5a1121cd9d00</a>",
  "id": "5810f3cb0a2d07ff11926918",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2016-10-26T18:19:55.496Z",
  "text": "@jasdel this is what I am trying to do ..... https://gist.github.com/sushilkm/5d42100c7346b442099a5a1121cd9d00",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/sushilkm/5d42100c7346b442099a5a1121cd9d00"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for the code sample. This is good. to optimize this you could send the items in the <code>ListObjects</code>&#39;s <code>resp.Contents</code> into a channel. Then have N number of workers that read from the channel. Basically the body of your for loop would be the worker that reads from the channel populated by the objects found with <code>ListObjects</code>",
  "id": "5810f46a5a1cfa016e4cdf1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-10-26T18:22:34.858Z",
  "text": "Thanks for the code sample. This is good. to optimize this you could send the items in the `ListObjects`'s `resp.Contents` into a channel. Then have N number of workers that read from the channel. Basically the body of your for loop would be the worker that reads from the channel populated by the objects found with `ListObjects`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "sounds interesting :smile: ",
  "id": "5810f4870e25dbfa1164dde5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-10-26T18:23:03.541Z",
  "text": "sounds interesting :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "When all <code>resp.Contents</code> have been added to the channel. the code should close the channel. This way the workers know when all items are finished.",
  "id": "5810f4a583a2008d22d7600b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-10-26T18:23:33.432Z",
  "text": "When all `resp.Contents` have been added to the channel. the code should close the channel. This way the workers know when all items are finished.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I thought there was an example of this somewhere, i&#39;ll look for it",
  "id": "5810f4bb8ed1c0ff5c304af4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-10-26T18:23:55.848Z",
  "text": "I thought there was an example of this somewhere, i'll look for it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "ok, thanks for the suggestion would try to implement that :smile: ",
  "id": "5810f4c95a1cfa016e4ce051",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-10-26T18:24:09.204Z",
  "text": "ok, thanks for the suggestion would try to implement that :smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "great, let us know if you have any additional questions, or we can give more pointers",
  "id": "5810f625806316005dc2a81f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-10-26T18:29:57.809Z",
  "text": "great, let us know if you have any additional questions, or we can give more pointers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "sure thanks ",
  "id": "5810fbd0806316005dc2c39b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-10-26T18:54:08.459Z",
  "text": "sure thanks ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "WoW you know what my updated code now does it in 4 secs",
  "id": "5810fcfc83a2008d22d789a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-10-26T18:59:08.978Z",
  "text": "WoW you know what my updated code now does it in 4 secs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> this is my updated code .... <a href=\"https://gist.github.com/sushilkm/c404d0658755682ff9f71ebcad736065\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/sushilkm/c404d0658755682ff9f71ebcad736065</a>",
  "id": "5810fdfb5a1cfa016e4d0fe7",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2016-10-26T19:03:23.101Z",
  "text": "@jasdel this is my updated code .... https://gist.github.com/sushilkm/c404d0658755682ff9f71ebcad736065",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/sushilkm/c404d0658755682ff9f71ebcad736065"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Great!  doing the request in parallel should greatly improve the throughput",
  "id": "5811038e482c168b22bbb607",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-10-26T19:27:10.632Z",
  "text": "Great!  doing the request in parallel should greatly improve the throughput",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/grit-mad",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4062684?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4062684?v=3&s=60",
   "displayName": "grit_mad",
   "gv": "3",
   "id": "58152842d73408ce4f31bbf6",
   "url": "/grit-mad",
   "username": "grit-mad"
  },
  "html": "Hello all, I&#39;m facing this issue  &quot;./listofinstances.go:15: multiple-value session.NewSession() in single-value context&quot; running the default code in the documentation",
  "id": "581528818ed1c0ff5c41c46d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-10-29T22:53:53.970Z",
  "text": "Hello all, I'm facing this issue  \"./listofinstances.go:15: multiple-value session.NewSession() in single-value context\" running the default code in the documentation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/grit-mad",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4062684?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4062684?v=3&s=60",
   "displayName": "grit_mad",
   "gv": "3",
   "id": "58152842d73408ce4f31bbf6",
   "url": "/grit-mad",
   "username": "grit-mad"
  },
  "html": "<p>package main</p><p>import (<br>    &quot;fmt&quot;</p><pre><code><span class=\"string\">\"github.com/aws/aws-sdk-go/aws\"</span>\n<span class=\"string\">\"github.com/aws/aws-sdk-go/aws/session\"</span>\n<span class=\"string\">\"github.com/aws/aws-sdk-go/service/ec2\"</span></code></pre><p>)</p><p>func main() {<br>    // Create an EC2 service object in the &quot;us-west-2&quot; region<br>    // Note that you can also configure your region globally by<br>    // exporting the AWS_REGION environment variable<br>    svc := ec2.New(session.NewSession(), &amp;aws.Config{Region: aws.String(&quot;us-west-2&quot;)})</p><pre><code><span class=\"comment\">// Call the DescribeInstances Operation</span>\nresp, err := svc.DescribeInstances(<span class=\"constant\">nil</span>)\n<span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n    <span class=\"built_in\">panic</span>(err)\n}\n\n<span class=\"comment\">// resp has all of the response data, pull out instance IDs:</span>\nfmt.Println(<span class=\"string\">\"&gt; Number of reservation sets: \"</span>, <span class=\"built_in\">len</span>(resp.Reservations))\n<span class=\"keyword\">for</span> idx, res := <span class=\"keyword\">range</span> resp.Reservations {\n    fmt.Println(<span class=\"string\">\"  &gt; Number of instances: \"</span>, <span class=\"built_in\">len</span>(res.Instances))\n    <span class=\"keyword\">for</span> _, inst := <span class=\"keyword\">range</span> resp.Reservations[idx].Instances {\n        fmt.Println(<span class=\"string\">\"    - Instance ID: \"</span>, *inst.InstanceId)\n    }\n}</code></pre><p>}</p>",
  "id": "581528a7482c168b22cd40e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-10-29T22:54:31.007Z",
  "text": "package main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/aws/aws-sdk-go/aws\"\n\t\"github.com/aws/aws-sdk-go/aws/session\"\n\t\"github.com/aws/aws-sdk-go/service/ec2\"\n)\n\nfunc main() {\n\t// Create an EC2 service object in the \"us-west-2\" region\n\t// Note that you can also configure your region globally by\n\t// exporting the AWS_REGION environment variable\n\tsvc := ec2.New(session.NewSession(), &aws.Config{Region: aws.String(\"us-west-2\")})\n\n\t// Call the DescribeInstances Operation\n\tresp, err := svc.DescribeInstances(nil)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// resp has all of the response data, pull out instance IDs:\n\tfmt.Println(\"> Number of reservation sets: \", len(resp.Reservations))\n\tfor idx, res := range resp.Reservations {\n\t\tfmt.Println(\"  > Number of instances: \", len(res.Instances))\n\t\tfor _, inst := range resp.Reservations[idx].Instances {\n\t\t\tfmt.Println(\"    - Instance ID: \", *inst.InstanceId)\n\t\t}\n\t}\n}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"grit-mad\" class=\"mention\">@grit-mad</span>, <code>session.NewSession</code> returns a <code>Session</code> and an <code>error</code>. <pre><code class=\"go\">sess, err := session.NewSession()</code></pre>",
  "id": "58176af95a1cfa016e683e34",
  "issues": [],
  "mentions": [
   {
    "screenName": "grit-mad",
    "userId": "58152842d73408ce4f31bbf6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-31T16:02:01.877Z",
  "text": "Hello @grit-mad, `session.NewSession` returns a `Session` and an `error`. \n\n```go\nsess, err := session.NewSession()\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Then pass that into your client ",
  "id": "58176b065a1cfa016e683e5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-31T16:02:14.154Z",
  "text": "Then pass that into your client ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-10-31T17:33:18.061Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for letting us know <span data-link-type=\"mention\" data-screen-name=\"grit-mad\" class=\"mention\">@grit-mad</span>  the README.md file was incorrect. I&#39;ve updated the example and now states how to correctly use <code>NewSession</code> in <span data-link-type=\"issue\" data-issue=\"919\" class=\"issue\">#919</span>.",
  "id": "58178043c3569a036e3c1403",
  "issues": [
   {
    "number": "919"
   }
  ],
  "mentions": [
   {
    "screenName": "grit-mad",
    "userId": "58152842d73408ce4f31bbf6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2016-10-31T17:32:51.367Z",
  "text": "Thanks for letting us know @grit-mad  the README.md file was incorrect. I've updated the example and now states how to correctly use `NewSession` in #919.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/mhlias",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10437665?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10437665?v=3&s=60",
   "displayName": "mhlias",
   "gv": "3",
   "id": "5810845bd73408ce4f30f075",
   "url": "/mhlias",
   "username": "mhlias"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> seem to still having the same issue after cleaning up pkg for aws-sdk-go",
  "id": "581872629411972d60ae7e78",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2016-11-01T10:45:54.297Z",
  "text": "@jasdel seem to still having the same issue after cleaning up pkg for aws-sdk-go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/nmarlow",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3429922?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3429922?v=3&s=60",
   "displayName": "nmarlow",
   "gv": "3",
   "id": "5818c0f5d73408ce4f32892b",
   "url": "/nmarlow",
   "username": "nmarlow"
  },
  "html": "Hello, I&#39;m looking to track the history of a pipeline execution. In this case I may have custom actions for each stage. It appears that I could log  PipelineExecutionId when each custom action is fired. My questions: (1) is that a good way to track the history of a pipeline execution and (2) how do I get at PipelineExecutionId?",
  "id": "5818c1ab806316005de5cf4d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2016-11-01T16:24:11.456Z",
  "text": "Hello, I'm looking to track the history of a pipeline execution. In this case I may have custom actions for each stage. It appears that I could log  PipelineExecutionId when each custom action is fired. My questions: (1) is that a good way to track the history of a pipeline execution and (2) how do I get at PipelineExecutionId?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/rumanhassan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7890944?v=3&s=60",
   "displayName": "rumanhassan",
   "gv": "3",
   "id": "55be631a0fc9f982beabe207",
   "url": "/rumanhassan",
   "username": "rumanhassan",
   "v": 4
  },
  "html": "Hi<br>Is there an API to get the aws regions location info? like latitude and longitude for all regions",
  "id": "5818d1ff27c3e02625ed0b15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-11-01T17:33:51.376Z",
  "text": "Hi\nIs there an API to get the aws regions location info? like latitude and longitude for all regions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/grit-mad",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4062684?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4062684?v=3&s=60",
   "displayName": "grit_mad",
   "gv": "3",
   "id": "58152842d73408ce4f31bbf6",
   "url": "/grit-mad",
   "username": "grit-mad"
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> and <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ",
  "id": "581961f8806316005de93705",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   },
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2016-11-02T03:48:08.521Z",
  "text": "Thanks @xibz and @jasdel ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/artkamrj_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
   "displayName": "Aarthi K",
   "id": "58199d75d73408ce4f32f416",
   "url": "/artkamrj_twitter",
   "username": "artkamrj_twitter"
  },
  "html": "Hi.. I can&#39;t find the package for transactions. Is there no golang wrapper for transactions?",
  "id": "58199db627c3e02625f0f177",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-11-02T08:03:02.074Z",
  "text": "Hi.. I can't find the package for transactions. Is there no golang wrapper for transactions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/artkamrj_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_3_normal.png?s=60",
   "displayName": "Aarthi K",
   "id": "58199d75d73408ce4f32f416",
   "url": "/artkamrj_twitter",
   "username": "artkamrj_twitter"
  },
  "html": "I mean dynamodb transactions",
  "id": "58199e4e9411972d60b4f309",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2016-11-02T08:05:34.970Z",
  "text": "I mean dynamodb transactions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"nmarlow\" class=\"mention\">@nmarlow</span> - It may be  a good idea to reach out to the service&#39;s <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=197\" rel=\"nofollow\" target=\"_blank\" class=\"link\">forums</a> and ask there. While we can give you some recommendations, they would be the ones to ask. ",
  "id": "581a1c5383a2008d2203f75b",
  "issues": [],
  "mentions": [
   {
    "screenName": "nmarlow",
    "userId": "5818c0f5d73408ce4f32892b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-11-02T17:03:15.754Z",
  "text": "@nmarlow - It may be  a good idea to reach out to the service's [forums](https://forums.aws.amazon.com/forum.jspa?forumID=197) and ask there. While we can give you some recommendations, they would be the ones to ask. ",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=197"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"rumanhassan\" class=\"mention\">@rumanhassan</span> - As far as I know, no. What is it that you are trying to do?",
  "id": "581a1c810e25dbfa118f2c1d",
  "issues": [],
  "mentions": [
   {
    "screenName": "rumanhassan",
    "userId": "55be631a0fc9f982beabe207",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-11-02T17:04:01.136Z",
  "text": "@rumanhassan - As far as I know, no. What is it that you are trying to do?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"artkamrj_twitter\" class=\"mention\">@artkamrj_twitter</span> - Currently there is no go wrapper for transactions. We have added it as a feature request",
  "id": "581a1cdecde075e65611fa12",
  "issues": [],
  "mentions": [
   {
    "screenName": "artkamrj_twitter",
    "userId": "58199d75d73408ce4f32f416",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-11-02T17:05:34.340Z",
  "text": "@artkamrj_twitter - Currently there is no go wrapper for transactions. We have added it as a feature request",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/danapsimer",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/134839?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/134839?v=4&s=60",
   "displayName": "Dana P'Simer",
   "gv": "4",
   "id": "563e1fa016b6c7089cb9d427",
   "url": "/danapsimer",
   "username": "danapsimer",
   "v": 3
  },
  "html": "hi, is concurrent access to the client object allowed?",
  "id": "581b57c76cb72076302fa0b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-11-03T15:29:11.059Z",
  "text": "hi, is concurrent access to the client object allowed?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"danapsimer\" class=\"mention\">@danapsimer</span> yeah you can definitely use the clients concurrently. The best pattern is to create a session once, hand it off to the service clients&#39; <code>New</code> function, and then share those service clients as needed. Its important to not that clients are safe to share for read. If you need to update or change a client&#39;s config a new client needs to be created.",
  "id": "581b818f6cb720763030b3c3",
  "issues": [],
  "mentions": [
   {
    "screenName": "danapsimer",
    "userId": "563e1fa016b6c7089cb9d427",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-11-03T18:27:27.403Z",
  "text": "@danapsimer yeah you can definitely use the clients concurrently. The best pattern is to create a session once, hand it off to the service clients' `New` function, and then share those service clients as needed. Its important to not that clients are safe to share for read. If you need to update or change a client's config a new client needs to be created.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/mantzas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/605434?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/605434?v=4&s=60",
   "displayName": "Sotirios Mantziaris",
   "gv": "4",
   "id": "54d4a0bfdb8155e6700f852d",
   "url": "/mantzas",
   "username": "mantzas",
   "v": 15
  },
  "html": "hi,",
  "id": "581c639345c9e3eb43f867aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-11-04T10:31:47.934Z",
  "text": "hi,",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/mantzas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/605434?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/605434?v=4&s=60",
   "displayName": "Sotirios Mantziaris",
   "gv": "4",
   "id": "54d4a0bfdb8155e6700f852d",
   "url": "/mantzas",
   "username": "mantzas",
   "v": 15
  },
  "html": "I am looking for a way to start a instance in another availability zone using the Go SDK and ec2.StartInstances. how can i accomplish this because i am getting a lot  of  InsufficientInstanceCapacity errors",
  "id": "581c63eae462097a300914fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-11-04T10:33:14.640Z",
  "text": "I am looking for a way to start a instance in another availability zone using the Go SDK and ec2.StartInstances. how can i accomplish this because i am getting a lot  of  InsufficientInstanceCapacity errors",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/twiggg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11304084?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11304084?v=3&s=60",
   "displayName": "twiggg",
   "gv": "3",
   "id": "581ccacfd73408ce4f33aa93",
   "url": "/twiggg",
   "username": "twiggg"
  },
  "html": "Hi there, I am new to AWS and getting started with DynamoDB. I drafted a new project locally with an in-memory db that I created, just for simple usage. I understand that dynamoDB design makes it quite restrictive about the queries we can process on a table ... so I am starting with a users table, with id as a hash key and email as sort key ... therefore I could insert new users with id and email unicity for quite a low cost (losing analytics about creation date etc) ... GetItem by id (hashkey) should be quite simple, but how to query for an item with email=&quot;<a href=\"mailto:target@email.com\" rel=\"nofollow\">target@email.com</a>&quot; filter ? Can you confirm the sort key is the one on which the primary index is built ?",
  "id": "581ccbe5e097df75756eca61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-11-04T17:56:53.267Z",
  "text": "Hi there, I am new to AWS and getting started with DynamoDB. I drafted a new project locally with an in-memory db that I created, just for simple usage. I understand that dynamoDB design makes it quite restrictive about the queries we can process on a table ... so I am starting with a users table, with id as a hash key and email as sort key ... therefore I could insert new users with id and email unicity for quite a low cost (losing analytics about creation date etc) ... GetItem by id (hashkey) should be quite simple, but how to query for an item with email=\"target@email.com\" filter ? Can you confirm the sort key is the one on which the primary index is built ?",
  "unread": false,
  "urls": [
   {
    "url": "mailto:target@email.com"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/twiggg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11304084?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11304084?v=3&s=60",
   "displayName": "twiggg",
   "gv": "3",
   "id": "581ccacfd73408ce4f33aa93",
   "url": "/twiggg",
   "username": "twiggg"
  },
  "html": "and what about the case of a composite primary key ? is this a hash key + an object for the sort key? could I store a sort key like []string{&quot;user&quot;, &quot;country&quot;, &quot;admin&quot;, &quot;username&quot;} to easily query by country or account type without having to set those as separate attributes or create new indexes or expensive queries?",
  "id": "581cccad6cb720763037a735",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-11-04T18:00:13.140Z",
  "text": "and what about the case of a composite primary key ? is this a hash key + an object for the sort key? could I store a sort key like []string{\"user\", \"country\", \"admin\", \"username\"} to easily query by country or account type without having to set those as separate attributes or create new indexes or expensive queries?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mantzas\" class=\"mention\">@mantzas</span> you can achieve that by specifying a subnet from that availability zone",
  "id": "581cef042d4796175f455729",
  "issues": [],
  "mentions": [
   {
    "screenName": "mantzas",
    "userId": "54d4a0bfdb8155e6700f852d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2016-11-04T20:26:44.067Z",
  "text": "@mantzas you can achieve that by specifying a subnet from that availability zone",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/mantzas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/605434?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/605434?v=4&s=60",
   "displayName": "Sotirios Mantziaris",
   "gv": "4",
   "id": "54d4a0bfdb8155e6700f852d",
   "url": "/mantzas",
   "username": "mantzas",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> Can you be a little more specific? Is there a  &quot;property&quot; in the payload of ec2.StartInstances that i have to fill? ",
  "id": "58202611c2f2cf7275dc6882",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2016-11-07T06:58:25.422Z",
  "text": "@cristim Can you be a little more specific? Is there a  \"property\" in the payload of ec2.StartInstances that i have to fill? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/sevenfourk",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/75213?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/75213?v=4&s=60",
   "displayName": "sevenfourk",
   "gv": "4",
   "id": "56ca15fde610378809c2a76f",
   "url": "/sevenfourk",
   "username": "sevenfourk",
   "v": 33
  },
  "html": "guys,  I haven&#39;t gotten a chance to dig in aws sdk go codebase, but do we limit metrics data for 14 days?  I&#39;m asking regarding the Grafana datasource plug-in which using AWS SDK Go, and I&#39;m getting data for only 14 days.  But the cloudwatch console has data more than that, at least 4-5 months,  I think.",
  "id": "58204b3731c5cbef43c64269",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-11-07T09:36:55.460Z",
  "text": "guys,  I haven't gotten a chance to dig in aws sdk go codebase, but do we limit metrics data for 14 days?  I'm asking regarding the Grafana datasource plug-in which using AWS SDK Go, and I'm getting data for only 14 days.  But the cloudwatch console has data more than that, at least 4-5 months,  I think.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/sevenfourk",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/75213?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/75213?v=4&s=60",
   "displayName": "sevenfourk",
   "gv": "4",
   "id": "56ca15fde610378809c2a76f",
   "url": "/sevenfourk",
   "username": "sevenfourk",
   "v": 33
  },
  "html": "following this: <a href=\"https://aws.amazon.com/cloudwatch/faqs/#monitoring\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://aws.amazon.com/cloudwatch/faqs/#monitoring</a> actually",
  "id": "58204c4f31c5cbef43c647b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2016-11-07T09:41:35.589Z",
  "text": "following this: https://aws.amazon.com/cloudwatch/faqs/#monitoring actually",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/cloudwatch/faqs/#monitoring"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/vishalkuo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7549938?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7549938?v=3&s=60",
   "displayName": "Vishal Kuo",
   "gv": "3",
   "id": "55db92390fc9f982beae7866",
   "url": "/vishalkuo",
   "username": "vishalkuo",
   "v": 1
  },
  "html": "Does anyone know if there&#39;s an implementation of the SQS Queue poller in go similar to the one in ruby <a href=\"http://docs.aws.amazon.com/sdkforruby/api/Aws/SQS/QueuePoller.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdkforruby/api/Aws/SQS/QueuePoller.html</a> ?",
  "id": "5828efede462097a30454aa6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2016-11-13T22:57:49.884Z",
  "text": "Does anyone know if there's an implementation of the SQS Queue poller in go similar to the one in ruby http://docs.aws.amazon.com/sdkforruby/api/Aws/SQS/QueuePoller.html ?",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdkforruby/api/Aws/SQS/QueuePoller.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "HI <span data-link-type=\"mention\" data-screen-name=\"vishalkuo\" class=\"mention\">@vishalkuo</span> Is there  a specific functionality from the Ruby&#39;s poller that you&#39;re looking for? I think the AWS SDK for Go&#39;s  poll functionality is similar. With the <code>ReceiveMessage</code> API operation you can do both single and batch polls, Along with support for long polling. Though unlike the Ruby&#39;s Block/Yield pattern the SDK&#39;s response will be a slice of messages that your code would iterate over. Once the response is received your code would need to call <code>ReceiveMessage</code> again to poll for more messages. <a href=\"https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/worker/job_message_queue.go#L42-L97\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Here</a> is a an example of how this can be done.",
  "id": "582a005645c9e3eb433952f6",
  "issues": [],
  "mentions": [
   {
    "screenName": "vishalkuo",
    "userId": "55db92390fc9f982beae7866",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2016-11-14T18:20:06.397Z",
  "text": "HI @vishalkuo Is there  a specific functionality from the Ruby's poller that you're looking for? I think the AWS SDK for Go's  poll functionality is similar. With the `ReceiveMessage` API operation you can do both single and batch polls, Along with support for long polling. Though unlike the Ruby's Block/Yield pattern the SDK's response will be a slice of messages that your code would iterate over. Once the response is received your code would need to call `ReceiveMessage` again to poll for more messages. [Here](https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/worker/job_message_queue.go#L42-L97) is a an example of how this can be done.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/worker/job_message_queue.go#L42-L97"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "is there a list of all APIs which expect to be paginated to return the full output? ",
  "id": "5830977ac6c4993013c223df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-11-19T18:18:34.877Z",
  "text": "is there a list of all APIs which expect to be paginated to return the full output? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "i&#39;m thinking that perhaps paginated APIs could be exposed through a channel which would internally retrieve the objects page by page",
  "id": "583098b8df9f0f6e7f576f95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-11-19T18:23:52.519Z",
  "text": "i'm thinking that perhaps paginated APIs could be exposed through a channel which would internally retrieve the objects page by page",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/seanchann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7686068?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7686068?v=3&s=60",
   "displayName": "seanchann.zhou",
   "gv": "3",
   "id": "569c68b0e610378809bcd2de",
   "url": "/seanchann",
   "username": "seanchann",
   "v": 4
  },
  "html": "how to skip items from scanoutput . it like as mysql func",
  "id": "5832ec14b563b5516c4857c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-11-21T12:44:04.813Z",
  "text": "how to skip items from scanoutput . it like as mysql func",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/sangameshb15",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7532463?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7532463?v=3&s=60",
   "displayName": "sangameshb15",
   "gv": "3",
   "id": "5833f00cd73408ce4f37c0ab",
   "url": "/sangameshb15",
   "username": "sangameshb15"
  },
  "html": "<p>I am trying to generate presigned url for s3 upload. Below is my code</p><p>`creds := credentials.NewStaticCredentials(&quot;awsAccessKey&quot;, &quot;awsSecretKey&quot;, &quot;awsRegion&quot;)</p><p>svc := s3.New(&amp;aws.Config{</p><pre><code>Region:   aws.<span class=\"function\"><span class=\"title\">String</span><span class=\"params\">(<span class=\"string\">\"awsRegion\"</span>)</span></span>,\nCredentials:creds,</code></pre><p>})<br>req, _ := svc.PutObjectRequest(&amp;s3.PutObjectInput{<br>    Bucket: aws.String(&quot;awsBucket&quot;),<br>    Key:    aws.String(&quot;abc.jpg&quot;),<br>})<br>urlstr, err := req.Presign(time.Minute <em> 10)<br>log.Println(&quot;The URL is:&quot;, urlstr, &quot; err:&quot;, err)`<br>But I am getting below error:<br>cannot use aws.Config literal (type </em>aws.Config) as type client.ConfigProvider in argument to s3.New:</p><p>*aws.Config does not implement client.ConfigProvider (missing ClientConfig method)</p>",
  "id": "5833f126c790e0ec56177442",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-11-22T07:17:58.041Z",
  "text": "I am trying to generate presigned url for s3 upload. Below is my code\n\n`creds := credentials.NewStaticCredentials(\"awsAccessKey\", \"awsSecretKey\", \"awsRegion\")\n\nsvc := s3.New(&aws.Config{\n\n\tRegion:   aws.String(\"awsRegion\"),\n\tCredentials:creds,\n})\nreq, _ := svc.PutObjectRequest(&s3.PutObjectInput{\n\tBucket: aws.String(\"awsBucket\"),\n\tKey:    aws.String(\"abc.jpg\"),\n})\nurlstr, err := req.Presign(time.Minute * 10)\nlog.Println(\"The URL is:\", urlstr, \" err:\", err)`\nBut I am getting below error:\ncannot use aws.Config literal (type *aws.Config) as type client.ConfigProvider in argument to s3.New:\n\n*aws.Config does not implement client.ConfigProvider (missing ClientConfig method)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/alessandropietrobelli",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2904793?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2904793?v=4&s=60",
   "displayName": "Alessandro Pietrobelli",
   "gv": "4",
   "id": "55eee06f0fc9f982beb00214",
   "removed": true,
   "url": "/alessandropietrobelli",
   "username": "alessandropietrobelli",
   "v": 8
  },
  "html": "hi all",
  "id": "583470afcc0ea2cf7781185d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-11-22T16:22:07.158Z",
  "text": "hi all",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/alessandropietrobelli",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2904793?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2904793?v=4&s=60",
   "displayName": "Alessandro Pietrobelli",
   "gv": "4",
   "id": "55eee06f0fc9f982beb00214",
   "removed": true,
   "url": "/alessandropietrobelli",
   "username": "alessandropietrobelli",
   "v": 8
  },
  "html": "I\u2019m wondering if there\u2019s a way to configure dynamically IAM policies allow cognito users to access on their own s3 bucket/folder",
  "id": "583471079a5479d0484a4534",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-11-22T16:23:35.957Z",
  "text": "I\u2019m wondering if there\u2019s a way to configure dynamically IAM policies allow cognito users to access on their own s3 bucket/folder",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/alessandropietrobelli",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2904793?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2904793?v=4&s=60",
   "displayName": "Alessandro Pietrobelli",
   "gv": "4",
   "id": "55eee06f0fc9f982beb00214",
   "removed": true,
   "url": "/alessandropietrobelli",
   "username": "alessandropietrobelli",
   "v": 8
  },
  "html": "but instead using the identity id that is pretty unreadable",
  "id": "5834712bbc17b2e75600e8a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-11-22T16:24:11.239Z",
  "text": "but instead using the identity id that is pretty unreadable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/alessandropietrobelli",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2904793?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2904793?v=4&s=60",
   "displayName": "Alessandro Pietrobelli",
   "gv": "4",
   "id": "55eee06f0fc9f982beb00214",
   "removed": true,
   "url": "/alessandropietrobelli",
   "username": "alessandropietrobelli",
   "v": 8
  },
  "html": "using something like a key stored on the dataset",
  "id": "58347154b07a1fd3482a45ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-11-22T16:24:52.800Z",
  "text": "using something like a key stored on the dataset",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/ganeshgj",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23630819?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23630819?v=3&s=60",
   "displayName": "ganeshgj",
   "gv": "3",
   "id": "58353095d73408ce4f380233",
   "url": "/ganeshgj",
   "username": "ganeshgj"
  },
  "html": "Hi All, How can i find out all the AWS Services supported by Golang?",
  "id": "583530d2b07a1fd3482e73d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-11-23T06:01:54.087Z",
  "text": "Hi All, How can i find out all the AWS Services supported by Golang?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xring",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7193733?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7193733?v=4&s=60",
   "displayName": "Jin Fu Xie",
   "gv": "4",
   "id": "5502389015522ed4b3dd3208",
   "url": "/xring",
   "username": "xring",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ganeshgj\" class=\"mention\">@ganeshgj</span> I think you can found here <a href=\"https://github.com/aws/aws-sdk-go/tree/master/service\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/tree/master/service</a>",
  "id": "58354e08b07a1fd3482ef95d",
  "issues": [],
  "mentions": [
   {
    "screenName": "ganeshgj",
    "userId": "58353095d73408ce4f380233",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-11-23T08:06:32.870Z",
  "text": "@ganeshgj I think you can found here https://github.com/aws/aws-sdk-go/tree/master/service",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/tree/master/service"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2016-11-23T08:11:30.207Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xring",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7193733?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7193733?v=4&s=60",
   "displayName": "Jin Fu Xie",
   "gv": "4",
   "id": "5502389015522ed4b3dd3208",
   "url": "/xring",
   "username": "xring",
   "v": 19
  },
  "html": "<p>Hi guys, I&#39;m using Golang SDK to create a new bucket:</p><pre><code><span class=\"tag\">result</span>, <span class=\"rule\"><span class=\"attribute\">err </span>:<span class=\"value\">= client.<span class=\"function\">CreateBucket</span>(&amp;s3.CreateBucketInput{\n        Bucket: aws.<span class=\"function\">String</span>(<span class=\"string\">\"test\"</span>),\n })</span></span></code></pre><p>when make a <code>PUT</code> request, this config will be added:</p><pre><code><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"title\">CreateBucketConfiguration</span>&gt;</span><span class=\"tag\">&lt;<span class=\"title\">LocationConstraint</span>&gt;</span>REGION<span class=\"tag\">&lt;/<span class=\"title\">LocationConstraint</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"title\">CreateBucketConfiguration</span>&gt;</span></span></code></pre><p>and the <code>REGION</code> is set while create the <code>client</code>, if I want to use an <code>endpoint</code> in <code>LocationConstraint</code> parameter, what should I do?</p>",
  "id": "58354f239a5479d0484ee886",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-11-23T08:11:15.207Z",
  "text": "Hi guys, I'm using Golang SDK to create a new bucket:\n```\nresult, err := client.CreateBucket(&s3.CreateBucketInput{\n        Bucket: aws.String(\"test\"),\n })\n```\nwhen make a `PUT` request, this config will be added:\n```\n<CreateBucketConfiguration><LocationConstraint>REGION</LocationConstraint></CreateBucketConfiguration>\n```\nand the `REGION` is set while create the `client`, if I want to use an `endpoint` in `LocationConstraint` parameter, what should I do?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/seanchann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7686068?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7686068?v=3&s=60",
   "displayName": "seanchann.zhou",
   "gv": "3",
   "id": "569c68b0e610378809bcd2de",
   "url": "/seanchann",
   "username": "seanchann",
   "v": 4
  },
  "html": "dynamodb query  or scan  ignore null field  in AttributeValue ",
  "id": "583693ba7f83e6c977288291",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-11-24T07:16:10.174Z",
  "text": "dynamodb query  or scan  ignore null field  in AttributeValue ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/seanchann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7686068?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7686068?v=3&s=60",
   "displayName": "seanchann.zhou",
   "gv": "3",
   "id": "569c68b0e610378809bcd2de",
   "url": "/seanchann",
   "username": "seanchann",
   "v": 4
  },
  "html": "how to do it.",
  "id": "583693c5bc17b2e7560c815c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-11-24T07:16:21.551Z",
  "text": "how to do it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/luciferous",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/24509?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/24509?v=4&s=60",
   "displayName": "Neuman Vong",
   "gv": "4",
   "id": "558c3bc215522ed4b3e2c83a",
   "url": "/luciferous",
   "username": "luciferous",
   "v": 27
  },
  "html": "anyone know what the caching behavior is for s3 client?",
  "id": "583cdb848d65e3830eb13a1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-11-29T01:36:04.863Z",
  "text": "anyone know what the caching behavior is for s3 client?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/udhos",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2634722?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2634722?v=4&s=60",
   "displayName": "udhos",
   "gv": "4",
   "id": "54985c0ddb8155e6700e2132",
   "url": "/udhos",
   "username": "udhos",
   "v": 16
  },
  "html": "what is the api for checking if a file exists in s3 with golang?",
  "id": "583dbc288d65e3830eb62b42",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-11-29T17:34:32.890Z",
  "text": "what is the api for checking if a file exists in s3 with golang?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/michaelraines",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/348420?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/348420?v=3&s=60",
   "displayName": "Michael Raines",
   "gv": "3",
   "id": "5824bbd0d73408ce4f350572",
   "url": "/michaelraines",
   "username": "michaelraines",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"udhos\" class=\"mention\">@udhos</span> is the intent to retrieve the file if it exists or purely to check that it exists?",
  "id": "583dc4641dec193f1406075b",
  "issues": [],
  "mentions": [
   {
    "screenName": "udhos",
    "userId": "54985c0ddb8155e6700e2132",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-11-29T18:09:40.687Z",
  "text": "@udhos is the intent to retrieve the file if it exists or purely to check that it exists?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/udhos",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2634722?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2634722?v=4&s=60",
   "displayName": "udhos",
   "gv": "4",
   "id": "54985c0ddb8155e6700e2132",
   "url": "/udhos",
   "username": "udhos",
   "v": 16
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"michaelraines\" class=\"mention\">@michaelraines</span> only check it exists",
  "id": "583dc76d8d65e3830eb6724e",
  "issues": [],
  "mentions": [
   {
    "screenName": "michaelraines",
    "userId": "5824bbd0d73408ce4f350572",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2016-11-29T18:22:37.629Z",
  "text": "@michaelraines only check it exists",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/michaelraines",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/348420?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/348420?v=3&s=60",
   "displayName": "Michael Raines",
   "gv": "3",
   "id": "5824bbd0d73408ce4f350572",
   "url": "/michaelraines",
   "username": "michaelraines",
   "v": 1
  },
  "html": "Since there isn&#39;t a boolean type API that I can think of that just flags if something exists, your lowest overhead would likely be to utilize the <code>ObjectHead</code> API. This will return only the object header if it exists and the normal error codes <code>NoSuchKey</code> if the object doesn&#39;t exist.",
  "id": "583dc84a8d65e3830eb677f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-11-29T18:26:18.758Z",
  "text": "Since there isn't a boolean type API that I can think of that just flags if something exists, your lowest overhead would likely be to utilize the `ObjectHead` API. This will return only the object header if it exists and the normal error codes `NoSuchKey` if the object doesn't exist.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/udhos",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2634722?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2634722?v=4&s=60",
   "displayName": "udhos",
   "gv": "4",
   "id": "54985c0ddb8155e6700e2132",
   "url": "/udhos",
   "username": "udhos",
   "v": 16
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"michaelraines\" class=\"mention\">@michaelraines</span> nil error means it exists, right?",
  "id": "583dc888444b3778766fe0f6",
  "issues": [],
  "mentions": [
   {
    "screenName": "michaelraines",
    "userId": "5824bbd0d73408ce4f350572",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2016-11-29T18:27:20.388Z",
  "text": "@michaelraines nil error means it exists, right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/michaelraines",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/348420?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/348420?v=3&s=60",
   "displayName": "Michael Raines",
   "gv": "3",
   "id": "5824bbd0d73408ce4f350572",
   "url": "/michaelraines",
   "username": "michaelraines",
   "v": 1
  },
  "html": "Correct, but also a non nil error doesn&#39;t implicitly mean that it doesn&#39;t exist.",
  "id": "583dc8bf73abd79c55b078c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-11-29T18:28:15.221Z",
  "text": "Correct, but also a non nil error doesn't implicitly mean that it doesn't exist.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/michaelraines",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/348420?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/348420?v=3&s=60",
   "displayName": "Michael Raines",
   "gv": "3",
   "id": "5824bbd0d73408ce4f350572",
   "url": "/michaelraines",
   "username": "michaelraines",
   "v": 1
  },
  "html": "Hope that&#39;s helpful.",
  "id": "583dc8de8d65e3830eb67c86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-11-29T18:28:46.630Z",
  "text": "Hope that's helpful.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/udhos",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2634722?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2634722?v=4&s=60",
   "displayName": "udhos",
   "gv": "4",
   "id": "54985c0ddb8155e6700e2132",
   "url": "/udhos",
   "username": "udhos",
   "v": 16
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"michaelraines\" class=\"mention\">@michaelraines</span> that&#39;s a great pointer. thanks a lot!",
  "id": "583dc8f216207f7b0ebef36d",
  "issues": [],
  "mentions": [
   {
    "screenName": "michaelraines",
    "userId": "5824bbd0d73408ce4f350572",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2016-11-29T18:29:06.571Z",
  "text": "@michaelraines that's a great pointer. thanks a lot!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jexxers",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/21365193?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/21365193?v=4&s=60",
   "displayName": "Jessica Leung",
   "gv": "4",
   "id": "584a104cd73408ce4f3bc795",
   "url": "/jexxers",
   "username": "jexxers",
   "v": 2
  },
  "html": "Hello!  Anybody here?",
  "id": "584a10700da034021b88be15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-12-09T02:01:20.059Z",
  "text": "Hello!  Anybody here?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/udhos",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2634722?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2634722?v=4&s=60",
   "displayName": "udhos",
   "gv": "4",
   "id": "54985c0ddb8155e6700e2132",
   "url": "/udhos",
   "username": "udhos",
   "v": 16
  },
  "html": "hi",
  "id": "584ade510da034021b8cd1b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-12-09T16:39:45.345Z",
  "text": "hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"jleungwp\" class=\"mention\">@jleungwp</span>  , welcome. Let us know if you have any questions, or feedback",
  "id": "584b5ae9f666c5a138f362cc",
  "issues": [],
  "mentions": [
   {
    "screenName": "jleungwp",
    "userId": "584a104cd73408ce4f3bc795",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2016-12-10T01:31:21.827Z",
  "text": "Hi @jleungwp  , welcome. Let us know if you have any questions, or feedback",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/daidokoro",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=60",
   "displayName": "Shaun Remekie",
   "gv": "4",
   "id": "584f0023d73408ce4f3c94c8",
   "url": "/daidokoro",
   "username": "daidokoro",
   "v": 11
  },
  "html": "Hi Guys, does anyone know where I can find an example of listing all buckets in S3 using the Go SDK, my bucket has thousands of objects, so the initial ListObject method is truncated",
  "id": "584f007428d755bf14f810b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-12T19:54:28.113Z",
  "text": "Hi Guys, does anyone know where I can find an example of listing all buckets in S3 using the Go SDK, my bucket has thousands of objects, so the initial ListObject method is truncated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/daidokoro",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=60",
   "displayName": "Shaun Remekie",
   "gv": "4",
   "id": "584f0023d73408ce4f3c94c8",
   "url": "/daidokoro",
   "username": "daidokoro",
   "v": 11
  },
  "html": "to a 100",
  "id": "584f0085be9d43bc63503a96",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-12T19:54:45.051Z",
  "text": "to a 100",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/daidokoro",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=60",
   "displayName": "Shaun Remekie",
   "gv": "4",
   "id": "584f0023d73408ce4f3c94c8",
   "url": "/daidokoro",
   "username": "daidokoro",
   "v": 11
  },
  "html": "*1000",
  "id": "584f0087c29531ac5d54da91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-12T19:54:47.688Z",
  "text": "*1000",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/udhos",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2634722?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2634722?v=4&s=60",
   "displayName": "udhos",
   "gv": "4",
   "id": "54985c0ddb8155e6700e2132",
   "url": "/udhos",
   "username": "udhos",
   "v": 16
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"daidokoro\" class=\"mention\">@daidokoro</span>  look for s3dirList here: <a href=\"https://github.com/udhos/jazigo/blob/master/store/s3.go\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/udhos/jazigo/blob/master/store/s3.go</a>",
  "id": "584f0347b4ffd59e381ce0c0",
  "issues": [],
  "mentions": [
   {
    "screenName": "daidokoro",
    "userId": "584f0023d73408ce4f3c94c8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-12T20:06:31.918Z",
  "text": "@daidokoro  look for s3dirList here: https://github.com/udhos/jazigo/blob/master/store/s3.go",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/udhos/jazigo/blob/master/store/s3.go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/daidokoro",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=60",
   "displayName": "Shaun Remekie",
   "gv": "4",
   "id": "584f0023d73408ce4f3c94c8",
   "url": "/daidokoro",
   "username": "daidokoro",
   "v": 11
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"udhos\" class=\"mention\">@udhos</span> Thanks alot, exactly what i&#39;m looking for! ^_^",
  "id": "584f0697aeb49008047d3691",
  "issues": [],
  "mentions": [
   {
    "screenName": "udhos",
    "userId": "54985c0ddb8155e6700e2132",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-12T20:20:39.362Z",
  "text": "@udhos Thanks alot, exactly what i'm looking for! ^_^",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/santoshaitha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=60",
   "displayName": "sanait",
   "gv": "3",
   "id": "56783dbb16b6c7089cbfc65f",
   "url": "/santoshaitha",
   "username": "santoshaitha",
   "v": 1
  },
  "html": "Hi Guys, any one know how to delete the cloudtrail object in s3 bucket which is default created by AWS",
  "id": "584f3e3dc29531ac5d565d7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-13T00:18:05.213Z",
  "text": "Hi Guys, any one know how to delete the cloudtrail object in s3 bucket which is default created by AWS",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/santoshaitha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=60",
   "displayName": "sanait",
   "gv": "3",
   "id": "56783dbb16b6c7089cbfc65f",
   "url": "/santoshaitha",
   "username": "santoshaitha",
   "v": 1
  },
  "html": "ex:cloudtrails/AWSLogs/{userId}/CloudTrail",
  "id": "584f3e63bb7d528222ee29e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-13T00:18:43.059Z",
  "text": "ex:cloudtrails/AWSLogs/{userId}/CloudTrail",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/santoshaitha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=60",
   "displayName": "sanait",
   "gv": "3",
   "id": "56783dbb16b6c7089cbfc65f",
   "url": "/santoshaitha",
   "username": "santoshaitha",
   "v": 1
  },
  "html": "i want to delete these thr Go API then delete the bucket finally",
  "id": "584f3e74b4ffd59e381e4a90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-13T00:19:00.062Z",
  "text": "i want to delete these thr Go API then delete the bucket finally",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/santoshaitha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=60",
   "displayName": "sanait",
   "gv": "3",
   "id": "56783dbb16b6c7089cbfc65f",
   "url": "/santoshaitha",
   "username": "santoshaitha",
   "v": 1
  },
  "html": "I am not able to delete these three objects in S3 which are created by AWS . ",
  "id": "584f3f0fc29531ac5d566138",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-13T00:21:35.182Z",
  "text": "I am not able to delete these three objects in S3 which are created by AWS . ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/santoshaitha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=60",
   "displayName": "sanait",
   "gv": "3",
   "id": "56783dbb16b6c7089cbfc65f",
   "url": "/santoshaitha",
   "username": "santoshaitha",
   "v": 1
  },
  "html": "cloudtrails/AWSLogs/{userId}",
  "id": "584f3f110da034021ba09ee1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-13T00:21:37.648Z",
  "text": "cloudtrails/AWSLogs/{userId}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/santoshaitha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=60",
   "displayName": "sanait",
   "gv": "3",
   "id": "56783dbb16b6c7089cbfc65f",
   "url": "/santoshaitha",
   "username": "santoshaitha",
   "v": 1
  },
  "html": "cloudtrails/AWSLogs",
  "id": "584f3f1328d755bf14f966ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-13T00:21:39.596Z",
  "text": "cloudtrails/AWSLogs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/santoshaitha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=60",
   "displayName": "sanait",
   "gv": "3",
   "id": "56783dbb16b6c7089cbfc65f",
   "url": "/santoshaitha",
   "username": "santoshaitha",
   "v": 1
  },
  "html": "cloudtrails",
  "id": "584f3f1628d755bf14f966b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-13T00:21:42.127Z",
  "text": "cloudtrails",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/santoshaitha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=60",
   "displayName": "sanait",
   "gv": "3",
   "id": "56783dbb16b6c7089cbfc65f",
   "url": "/santoshaitha",
   "username": "santoshaitha",
   "v": 1
  },
  "html": "so getting error from deleteS3Bucket as bucket is not empty",
  "id": "584f3f29f666c5a1380551e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-13T00:22:01.420Z",
  "text": "so getting error from deleteS3Bucket as bucket is not empty",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/santoshaitha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=60",
   "displayName": "sanait",
   "gv": "3",
   "id": "56783dbb16b6c7089cbfc65f",
   "url": "/santoshaitha",
   "username": "santoshaitha",
   "v": 1
  },
  "html": "can anyone suggest on above query?",
  "id": "5850161928d755bf14fdae9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-13T15:39:05.118Z",
  "text": "can anyone suggest on above query?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/santoshaitha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=60",
   "displayName": "sanait",
   "gv": "3",
   "id": "56783dbb16b6c7089cbfc65f",
   "url": "/santoshaitha",
   "username": "santoshaitha",
   "v": 1
  },
  "html": "Hi Guys, Does DeleteObjects as any restrctions about no of Objects?",
  "id": "5850502728d755bf14ff48ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-13T19:46:47.230Z",
  "text": "Hi Guys, Does DeleteObjects as any restrctions about no of Objects?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/santoshaitha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=60",
   "displayName": "sanait",
   "gv": "3",
   "id": "56783dbb16b6c7089cbfc65f",
   "url": "/santoshaitha",
   "username": "santoshaitha",
   "v": 1
  },
  "html": "When i am trying to delete Objects of 5997 getting below error ",
  "id": "585050807a58ca60554ad565",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-13T19:48:16.949Z",
  "text": "When i am trying to delete Objects of 5997 getting below error ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/santoshaitha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14897795?v=3&s=60",
   "displayName": "sanait",
   "gv": "3",
   "id": "56783dbb16b6c7089cbfc65f",
   "url": "/santoshaitha",
   "username": "santoshaitha",
   "v": 1
  },
  "html": "Delete S3 Objects fail: MalformedXML: The XML you provided was not well-formed or did not validate against our published schema\\n\\tstatus code: 400",
  "id": "5850508128d755bf14ff4b18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-12-13T19:48:17.406Z",
  "text": "Delete S3 Objects fail: MalformedXML: The XML you provided was not well-formed or did not validate against our published schema\\n\\tstatus code: 400",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"santoshaitha\" class=\"mention\">@santoshaitha</span> are you still looking for how to delete the objects? what error are you getting when trying to delete the objects explicitly? You might  need to do a ListObjects with the given prefix, and iterate over the list deleting all Objects with that prefix.",
  "id": "5851a5c1058ca96737485be3",
  "issues": [],
  "mentions": [
   {
    "screenName": "santoshaitha",
    "userId": "56783dbb16b6c7089cbfc65f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-14T20:04:17.668Z",
  "text": "@santoshaitha are you still looking for how to delete the objects? what error are you getting when trying to delete the objects explicitly? You might  need to do a ListObjects with the given prefix, and iterate over the list deleting all Objects with that prefix.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"santoshaitha\" class=\"mention\">@santoshaitha</span> There is a limit with DeleteObjects, it is 1000 objects per call to DeleteObjects. <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/DeletingObjects.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AmazonS3/latest/dev/DeletingObjects.html</a>  you should be able to call it with a slice of your list until all objects have been deleted",
  "id": "5851a66afb22792b3b63da81",
  "issues": [],
  "mentions": [
   {
    "screenName": "santoshaitha",
    "userId": "56783dbb16b6c7089cbfc65f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-14T20:07:06.634Z",
  "text": "@santoshaitha There is a limit with DeleteObjects, it is 1000 objects per call to DeleteObjects. http://docs.aws.amazon.com/AmazonS3/latest/dev/DeletingObjects.html  you should be able to call it with a slice of your list until all objects have been deleted",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AmazonS3/latest/dev/DeletingObjects.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi All if you&#39;re using the AWS SDK for SDK v1.6.3 and Route53 there is a bug where some Route53 API requests would fail with a <code>SerializationError</code>. I&#39;ve corrected the issue, and verified Route53 works correctly in release <a href=\"https://github.com/aws/aws-sdk-go/releases/tag/v1.6.4\" rel=\"nofollow\" target=\"_blank\" class=\"link\">v1.6.4</a>. Sorry for any confusions, headaches the bug may of caused.",
  "id": "58533119e7bdfe4e295ce40d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-16T00:11:05.427Z",
  "text": "Hi All if you're using the AWS SDK for SDK v1.6.3 and Route53 there is a bug where some Route53 API requests would fail with a `SerializationError`. I've corrected the issue, and verified Route53 works correctly in release [v1.6.4](https://github.com/aws/aws-sdk-go/releases/tag/v1.6.4). Sorry for any confusions, headaches the bug may of caused.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/releases/tag/v1.6.4"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "Is it me or do people find the SDK docs difficult to work with? <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/s3/</a>",
  "id": "58535098af6b364a29bb0313",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-12-16T02:25:28.382Z",
  "text": "Is it me or do people find the SDK docs difficult to work with? http://docs.aws.amazon.com/sdk-for-go/api/service/s3/",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "Took me hours to work out I needed <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.PutObject\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.PutObject</a>",
  "id": "585350dcfb22792b3b6d03bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-12-16T02:26:36.375Z",
  "text": "Took me hours to work out I needed http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.PutObject",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.PutObject"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "And the example is not a <em>real working example</em>",
  "id": "585350ed589f411830edfe95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-12-16T02:26:53.850Z",
  "text": "And the example is not a _real working example_",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "For example, how to I get the package name? godoc -http=:6060 <a href=\"http://github.com/aws/aws-sdk-go/service/s3\" rel=\"nofollow\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/service/s3</a>",
  "id": "585351b50730ce6937ceef0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-12-16T02:30:13.603Z",
  "text": "For example, how to I get the package name? godoc -http=:6060 github.com/aws/aws-sdk-go/service/s3",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/aws/aws-sdk-go/service/s3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/rajnmithun_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/3486621912/7096b0918852826550f1cbb229d3170d.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/3486621912/7096b0918852826550f1cbb229d3170d_bigger.png",
   "displayName": "Mithun Raj",
   "id": "5843c754d73408ce4f3a94f7",
   "url": "/rajnmithun_twitter",
   "username": "rajnmithun_twitter"
  },
  "html": "I am trying to run EMR hadoop streaming but I get a error<br>&quot;__type&quot;:&quot;ValidationException&quot;,&quot;message&quot;:&quot;Instance type &#39;null&#39; is not supported.\u201d<br>even when I am setting InstanceType but this only happens when I set InstanceCount more than 1",
  "id": "585378dd0730ce6937cf96d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2016-12-16T05:17:17.375Z",
  "text": "I am trying to run EMR hadoop streaming but I get a error\n\"__type\":\"ValidationException\",\"message\":\"Instance type 'null' is not supported.\u201d\neven when I am setting InstanceType but this only happens when I set InstanceCount more than 1",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span> I&#39;d be glad to help. Were you able to import the <code>s3</code> package? here is a simple example of using the S3 API to list a objects in a bucket. <a href=\"https://github.com/aws/aws-sdk-go/blob/master/example/service/s3/listObjects/listObjects.go\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/blob/master/example/service/s3/listObjects/listObjects.go</a>",
  "id": "5854200ec5a4e0233b92d33a",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-12-16T17:10:38.280Z",
  "text": "Hi @kaihendry I'd be glad to help. Were you able to import the `s3` package? here is a simple example of using the S3 API to list a objects in a bucket. https://github.com/aws/aws-sdk-go/blob/master/example/service/s3/listObjects/listObjects.go",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/blob/master/example/service/s3/listObjects/listObjects.go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "The SDK&#39;s docs also has a few examples, <a href=\"https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/common-examples.html#s3\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/common-examples.html#s3</a> focused on the S3 client.",
  "id": "5854203b589f411830f24169",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-12-16T17:11:23.585Z",
  "text": "The SDK's docs also has a few examples, https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/common-examples.html#s3 focused on the S3 client.",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/common-examples.html#s3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Let us know if you&#39;re still running into complications, andy feedback is great to help us improve the documentation, and examples",
  "id": "58542056c5a4e0233b92d4bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-12-16T17:11:50.594Z",
  "text": "Let us know if you're still running into complications, andy feedback is great to help us improve the documentation, and examples",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"rajnmithun_twitter\" class=\"mention\">@rajnmithun_twitter</span> would you mind creating a github issue for the issue you&#39;re experiencing.  If we have a small code sample that might help too. In addition could you set the <code>LogLevel</code> on your <code>aws.Config</code> for the service to <code>aws.LogDebugWithHTTPBody</code> this will help inspect the message that is being sent.",
  "id": "585420df0730ce6937d31d77",
  "issues": [],
  "mentions": [
   {
    "screenName": "rajnmithun_twitter",
    "userId": "5843c754d73408ce4f3a94f7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-12-16T17:14:07.640Z",
  "text": "Hi @rajnmithun_twitter would you mind creating a github issue for the issue you're experiencing.  If we have a small code sample that might help too. In addition could you set the `LogLevel` on your `aws.Config` for the service to `aws.LogDebugWithHTTPBody` this will help inspect the message that is being sent.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "Hey guys, I want to sanity check something, I see if you invoke an S3.PutObject directly via the AWS CLI or via the REST API, there is an md5-content header you can specify to ensure that the file you are uploading is the same one AWS received... I don&#39;t see this exposed (or maybe I am just missing it) in the PutObjectInput struct: <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#PutObjectInput\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#PutObjectInput</a>",
  "id": "5859a6ade7bdfe4e297bff3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-12-20T21:46:21.978Z",
  "text": "Hey guys, I want to sanity check something, I see if you invoke an S3.PutObject directly via the AWS CLI or via the REST API, there is an md5-content header you can specify to ensure that the file you are uploading is the same one AWS received... I don't see this exposed (or maybe I am just missing it) in the PutObjectInput struct: https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#PutObjectInput",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#PutObjectInput"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "is this something the SDK does automatically or something that just isn&#39;t exposed for Go users?",
  "id": "5859a6c5c5a4e0233bad89f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-12-20T21:46:45.375Z",
  "text": "is this something the SDK does automatically or something that just isn't exposed for Go users?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-12-20T21:54:39.684Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jdonboch\" class=\"mention\">@jdonboch</span> No you&#39;re not missing it the <code>content-md5</code> header is not modeled by S3 API. You can manually add it to the request by setting the header.<pre><code class=\"go\">req, out := svc.PutObjectRequest(&amp;s3.PutObjectInput{\n    Bucket: aws.String(<span class=\"string\">\"mybucket\"</span>),\n    Key: aws.String(<span class=\"string\">\"myKey\"</span>),\n    Body: fileBody,\n})\nreq.HTTPRequest.Header.Set(<span class=\"string\">\"Content-MD5\"</span>, md5Val)\nerr := req.Send()</code></pre>",
  "id": "5859a866058ca96737706689",
  "issues": [],
  "mentions": [
   {
    "screenName": "jdonboch",
    "userId": "55a6c1285e0d51bd787b7c3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-20T21:53:42.934Z",
  "text": "@jdonboch No you're not missing it the `content-md5` header is not modeled by S3 API. You can manually add it to the request by setting the header.\n```go\nreq, out := svc.PutObjectRequest(&s3.PutObjectInput{\n    Bucket: aws.String(\"mybucket\"),\n    Key: aws.String(\"myKey\"),\n    Body: fileBody,\n})\nreq.HTTPRequest.Header.Set(\"Content-MD5\", md5Val)\nerr := req.Send()\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html</a>",
  "id": "5859a875058ca967377066b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-12-20T21:53:57.437Z",
  "text": "http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "ah, interesting, i have never used the request structs for the API, didn&#39;t think about that",
  "id": "5859a8b2c02c1a395991bd75",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-12-20T21:54:58.434Z",
  "text": "ah, interesting, i have never used the request structs for the API, didn't think about that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "With the SDK any customizations that are needed per request, the <code>Request</code> type is the best way to add them.",
  "id": "5859a8f9c895451b75ff5226",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-12-20T21:56:09.493Z",
  "text": "With the SDK any customizations that are needed per request, the `Request` type is the best way to add them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "that helps a lot, thanks <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ",
  "id": "5859a9a8c895451b75ff5592",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2016-12-20T21:59:04.006Z",
  "text": "that helps a lot, thanks @jasdel ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "glad to,  let us know if you have any other questions or feedback.",
  "id": "5859ab317a3f79ef5d7f9b60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2016-12-20T22:05:37.568Z",
  "text": "glad to,  let us know if you have any other questions or feedback.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/voyalab",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20912207?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20912207?v=3&s=60",
   "displayName": "Jakir Patel",
   "gv": "3",
   "id": "585a293ad73408ce4f3e7205",
   "url": "/voyalab",
   "username": "voyalab",
   "v": 4
  },
  "html": "Hello I am using KOPS for creating Kubernete cluster and its creating IAM role and IAM instance profile. But my account is not having IAMFullAccess and I am facing error on KOPS. Which permission should I have for my AWS account?",
  "id": "585a2994058ca9673772ddb1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-12-21T07:04:52.165Z",
  "text": "Hello I am using KOPS for creating Kubernete cluster and its creating IAM role and IAM instance profile. But my account is not having IAMFullAccess and I am facing error on KOPS. Which permission should I have for my AWS account?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/steveritter",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9370268?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9370268?v=3&s=60",
   "displayName": "Steve Ritter",
   "gv": "3",
   "id": "585c0618d73408ce4f3ec6e5",
   "url": "/steveritter",
   "username": "steveritter"
  },
  "html": "Does anyone here have experience with the Rekognition API&#39;s?  I am getting a 400 back with vague information about which param is &quot;malformed&quot;.",
  "id": "585c064e058ca967377d1b38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-12-22T16:58:54.973Z",
  "text": "Does anyone here have experience with the Rekognition API's?  I am getting a 400 back with vague information about which param is \"malformed\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/c4milo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/41681?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/41681?v=3&s=60",
   "displayName": "Camilo Aguilar",
   "gv": "3",
   "id": "529c6abbed5ab0b3bf04d42e",
   "url": "/c4milo",
   "username": "c4milo",
   "v": 7
  },
  "html": "Hi there, what&#39;s the recommended way of terminating an EC2 instance that has an EBS volume attached? ",
  "id": "585c4fd3af6b364a29e731ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-12-22T22:12:35.170Z",
  "text": "Hi there, what's the recommended way of terminating an EC2 instance that has an EBS volume attached? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/c4milo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/41681?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/41681?v=3&s=60",
   "displayName": "Camilo Aguilar",
   "gv": "3",
   "id": "529c6abbed5ab0b3bf04d42e",
   "url": "/c4milo",
   "username": "c4milo",
   "v": 7
  },
  "html": "ah nvm",
  "id": "585c4febc02c1a3959a055c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-12-22T22:12:59.936Z",
  "text": "ah nvm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/c4milo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/41681?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/41681?v=3&s=60",
   "displayName": "Camilo Aguilar",
   "gv": "3",
   "id": "529c6abbed5ab0b3bf04d42e",
   "url": "/c4milo",
   "username": "c4milo",
   "v": 7
  },
  "html": "I think I figured it out ",
  "id": "585c4ff0c02c1a3959a055e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2016-12-22T22:13:04.580Z",
  "text": "I think I figured it out ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-12-29T07:58:42.001Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/thamsy",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17267782?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17267782?v=3&s=60",
   "displayName": "thamsy",
   "gv": "3",
   "id": "5864c1b3d73408ce4f3fef84",
   "url": "/thamsy",
   "username": "thamsy",
   "v": 1
  },
  "html": "<p>Hi does anyone know how to make a uploaded file public programatically with golang?</p><pre><code class=\"go\">params := &amp;s3.PutObjectInput{\n        Bucket:    aws.String(bucket),\n        Key:       aws.String(filepath),\n        Body:      bytes.NewReader(file),\n    }</code></pre><p>what other properties do I have to include?</p>",
  "id": "5864c21e058ca96737a2b066",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-12-29T07:58:22.925Z",
  "text": "Hi does anyone know how to make a uploaded file public programatically with golang?\n```go\nparams := &s3.PutObjectInput{\n\t\tBucket:    aws.String(bucket),\n\t\tKey:       aws.String(filepath),\n\t\tBody:      bytes.NewReader(file),\n\t}\n```\nwhat other properties do I have to include?",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/guregodevo",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3090575?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3090575?v=3&s=60",
   "displayName": "Gregory Desvaux",
   "gv": "3",
   "id": "58658e41d73408ce4f401303",
   "url": "/guregodevo",
   "username": "guregodevo"
  },
  "html": "Hi there, I am trying to send a POST to API Gateway with Golang. Does the AWS SDK support that? ",
  "id": "58658e927a3f79ef5db62fa2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2016-12-29T22:30:42.962Z",
  "text": "Hi there, I am trying to send a POST to API Gateway with Golang. Does the AWS SDK support that? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"steveritter\" class=\"mention\">@steveritter</span> - Can you provide a code snippet?",
  "id": "586590e8058ca96737a691da",
  "issues": [],
  "mentions": [
   {
    "screenName": "steveritter",
    "userId": "585c0618d73408ce4f3ec6e5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2016-12-29T22:40:40.076Z",
  "text": "@steveritter - Can you provide a code snippet?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2016-12-29T22:41:58.520Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"thamsy\" class=\"mention\">@thamsy</span> - You can set the ACL to public read and that should allow anyone to read that object.<pre><code class=\"go\">params := &amp;s3.PutObjectInput{\n        ACL: aws.String(s3.ObjectCannedACLPublicRead),\n        Bucket:    aws.String(bucket),\n        Key:       aws.String(filepath),\n        Body:      bytes.NewReader(file),\n    }</code></pre>",
  "id": "58659108c02c1a3959c8579c",
  "issues": [],
  "mentions": [
   {
    "screenName": "thamsy",
    "userId": "5864c1b3d73408ce4f3fef84",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2016-12-29T22:41:12.465Z",
  "text": "@thamsy - You can set the ACL to public read and that should allow anyone to read that object.\n\n```go\nparams := &s3.PutObjectInput{\n        ACL: aws.String(s3.ObjectCannedACLPublicRead),\n        Bucket:    aws.String(bucket),\n        Key:       aws.String(filepath),\n        Body:      bytes.NewReader(file),\n    }\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guregodevo\" class=\"mention\">@guregodevo</span> - What operation are you trying to call? ",
  "id": "586591f5af6b364a290d9a18",
  "issues": [],
  "mentions": [
   {
    "screenName": "guregodevo",
    "userId": "58658e41d73408ce4f401303",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-29T22:45:09.924Z",
  "text": "@guregodevo - What operation are you trying to call? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/guregodevo",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3090575?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3090575?v=3&s=60",
   "displayName": "Gregory Desvaux",
   "gv": "3",
   "id": "58658e41d73408ce4f401303",
   "url": "/guregodevo",
   "username": "guregodevo"
  },
  "html": "I want to POST data to an API Gateway (with AWS authorization)",
  "id": "5865985d058ca96737a6bc4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2016-12-29T23:12:29.879Z",
  "text": "I want to POST data to an API Gateway (with AWS authorization)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guregodevo\" class=\"mention\">@guregodevo</span> - I&#39;m not sure what you are trying to do. Do you have a doc link or an SDK that does what you are describing? This is the only <a href=\"http://docs.aws.amazon.com/apigateway/latest/developerguide/use-custom-authorizer.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">thing</a> I could find which kind of matched to what you are talking about. I couldn&#39;t find anything regarding authorization and posting to API Gateway",
  "id": "58659a3e7a3f79ef5db66e16",
  "issues": [],
  "mentions": [
   {
    "screenName": "guregodevo",
    "userId": "58658e41d73408ce4f401303",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2016-12-29T23:20:30.188Z",
  "text": "@guregodevo - I'm not sure what you are trying to do. Do you have a doc link or an SDK that does what you are describing? This is the only [thing](http://docs.aws.amazon.com/apigateway/latest/developerguide/use-custom-authorizer.html) I could find which kind of matched to what you are talking about. I couldn't find anything regarding authorization and posting to API Gateway",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/apigateway/latest/developerguide/use-custom-authorizer.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/guregodevo",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3090575?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3090575?v=3&s=60",
   "displayName": "Gregory Desvaux",
   "gv": "3",
   "id": "58658e41d73408ce4f401303",
   "url": "/guregodevo",
   "username": "guregodevo"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> yes I will probably have to check custom authorization. Actually I was trying to solve AWS authorization with AWS signature. I can do it with Postman like <a href=\"http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-use-postman-to-call-api.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this</a> and I tried <a href=\"https://github.com/smartystreets/go-aws-auth\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this</a> ",
  "id": "58659d61058ca96737a6d1ca",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2016-12-29T23:33:53.274Z",
  "text": "@xibz yes I will probably have to check custom authorization. Actually I was trying to solve AWS authorization with AWS signature. I can do it with Postman like [this](http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-use-postman-to-call-api.html) and I tried [this](https://github.com/smartystreets/go-aws-auth) \n",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-use-postman-to-call-api.html"
   },
   {
    "url": "https://github.com/smartystreets/go-aws-auth"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/guregodevo",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3090575?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3090575?v=3&s=60",
   "displayName": "Gregory Desvaux",
   "gv": "3",
   "id": "58658e41d73408ce4f401303",
   "url": "/guregodevo",
   "username": "guregodevo"
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span><br><code>`` var jsonStr = []byte(</code>{&quot;url&quot;:&quot;<code>+url+</code>&quot;}`)<br>       req, err := http.NewRequest(&quot;POST&quot;, proxy.GatewayUrl, bytes.NewBuffer(jsonStr))<br>       req.Header.Set(&quot;Content-Type&quot;, &quot;application/json&quot;)</p><pre><code>   <span class=\"string\">client :</span>= &amp;http.Client{}\n   awsauth.Sign(req, proxy.Auth)  <span class=\"comment\">// Automatically chooses the best signing mechanism for the service</span>\n   l4g.Debug(<span class=\"string\">\"%+v\"</span>, req)\n   resp, <span class=\"string\">err :</span>= client.Do(req)</code></pre><p>```<br>I didn&#39;t work so I was wondering if we could sign request using SDK Go </p>",
  "id": "58659dbac02c1a3959c894c6",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2016-12-29T23:35:22.834Z",
  "text": "@xibz \n``` var jsonStr = []byte(`{\"url\":\"`+url+`\"}`)\n       req, err := http.NewRequest(\"POST\", proxy.GatewayUrl, bytes.NewBuffer(jsonStr))\n       req.Header.Set(\"Content-Type\", \"application/json\")\n\n       client := &http.Client{}\n       awsauth.Sign(req, proxy.Auth)  // Automatically chooses the best signing mechanism for the service\n       l4g.Debug(\"%+v\", req)\n       resp, err := client.Do(req)\n```\nI didn't work so I was wondering if we could sign request using SDK Go \n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"guregodevo\" class=\"mention\">@guregodevo</span> - The SDK does have a signing package you can use. We only support v4 signing. That should be fine with <code>service/apigateway</code>. Please take a look at <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/signer/v4/\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><code>github.com/aws/aws-sdk-go/aws/signer/v4</code></a>.",
  "id": "586695df0730ce69372874b2",
  "issues": [],
  "mentions": [
   {
    "screenName": "guregodevo",
    "userId": "58658e41d73408ce4f401303",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2016-12-30T17:14:07.179Z",
  "text": "@guregodevo - The SDK does have a signing package you can use. We only support v4 signing. That should be fine with `service/apigateway`. Please take a look at [`github.com/aws/aws-sdk-go/aws/signer/v4`](http://docs.aws.amazon.com/sdk-for-go/api/aws/signer/v4/).",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/signer/v4/"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-01-03T21:21:01.100Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "are there any known issues with golang 1.8 beta2?",
  "id": "586c15b461e516c1578fc92d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-03T21:20:52.881Z",
  "text": "are there any known issues with golang 1.8 beta2?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "2017/01/03 21:01:52 main.go:98: RequestError: send request failed<br>caused by: Post <a href=\"https://ec2.us-east-1.amazonaws.com/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://ec2.us-east-1.amazonaws.com/</a>: tls: failed to parse certificate from server: asn1: structure error: tags don&#39;t match (4 vs {class:0 tag:16 length:1293 isCompound:true}) {optional:false explicit:false application:false defaultValue:&lt;nil&gt; tag:&lt;nil&gt; stringType:0 timeType:0 set:false omitEmpty:false} RawContent <span data-link-type=\"mention\" data-screen-name=\"4\" class=\"mention\">@4</span>",
  "id": "586c15dd96a565f844079a9a",
  "issues": [],
  "mentions": [
   {
    "screenName": "4",
    "userId": "5764ee0ec2f0db084a1e914c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-03T21:21:33.664Z",
  "text": "2017/01/03 21:01:52 main.go:98: RequestError: send request failed\ncaused by: Post https://ec2.us-east-1.amazonaws.com/: tls: failed to parse certificate from server: asn1: structure error: tags don't match (4 vs {class:0 tag:16 length:1293 isCompound:true}) {optional:false explicit:false application:false defaultValue:<nil> tag:<nil> stringType:0 timeType:0 set:false omitEmpty:false} RawContent @4",
  "unread": false,
  "urls": [
   {
    "url": "https://ec2.us-east-1.amazonaws.com/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> - First I&#39;ve heard of it. I wonder if this is a Golang bug. Can you reproduce this in 1.8 beta1?",
  "id": "586c1c12c895451b75509ce2",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-03T21:48:02.829Z",
  "text": "@cristim - First I've heard of it. I wonder if this is a Golang bug. Can you reproduce this in 1.8 beta1?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> I&#39;ll give it a try tomorrow",
  "id": "586c1c77c895451b75509fd0",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-01-03T21:49:43.160Z",
  "text": "@xibz I'll give it a try tomorrow",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "hello here",
  "id": "586d70419d4cc4fc5378428a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-04T21:59:29.629Z",
  "text": "hello here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "I was trying to use golang library",
  "id": "586d7055058ca96737cbc398",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-04T21:59:49.691Z",
  "text": "I was trying to use golang library",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "and i wanted to use the same to download contents of a bucket",
  "id": "586d70617a3f79ef5dd85dc4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-04T22:00:01.405Z",
  "text": "and i wanted to use the same to download contents of a bucket",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "however I am now stuck with a problem that ListObjects method can only return a maximum of 1000 objects",
  "id": "586d70909d4cc4fc537845cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-04T22:00:48.016Z",
  "text": "however I am now stuck with a problem that ListObjects method can only return a maximum of 1000 objects",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "so I am wondering if there are more than 1000 objects whats the workaround for this",
  "id": "586d70aaaf6b364a292faff4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-04T22:01:14.351Z",
  "text": "so I am wondering if there are more than 1000 objects whats the workaround for this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "any suggestions are welcome",
  "id": "586d7105af6b364a292fb1e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-04T22:02:45.784Z",
  "text": "any suggestions are welcome",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "it seems i can use the parameter marker but not sure, if anyone has any examples, please share",
  "id": "586d72a4c02c1a3959e9f5fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-04T22:09:40.906Z",
  "text": "it seems i can use the parameter marker but not sure, if anyone has any examples, please share",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"sushilkm\" class=\"mention\">@sushilkm</span>, when you call <code>ListObjects</code> the output contains the next marker. So, when you call <code>ListObjects</code> again, just set the marker to use the next marker. That should continue where you left off. If you are still running into issues, please let me know and I can come up with a quick example",
  "id": "586d76229d4cc4fc537860bf",
  "issues": [],
  "mentions": [
   {
    "screenName": "sushilkm",
    "userId": "5810f044d73408ce4f310a6e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-04T22:24:34.413Z",
  "text": "Hello @sushilkm, when you call `ListObjects` the output contains the next marker. So, when you call `ListObjects` again, just set the marker to use the next marker. That should continue where you left off. If you are still running into issues, please let me know and I can come up with a quick example",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> I tried this <a href=\"https://gist.github.com/sushilkm/e8cdfa5db96aed6d8abf06ef2cc2b0df\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://gist.github.com/sushilkm/e8cdfa5db96aed6d8abf06ef2cc2b0df</a>, but it does not makes a difference",
  "id": "586d772cc895451b75577a42",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-04T22:29:00.797Z",
  "text": "@xibz I tried this https://gist.github.com/sushilkm/e8cdfa5db96aed6d8abf06ef2cc2b0df, but it does not makes a difference",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/sushilkm/e8cdfa5db96aed6d8abf06ef2cc2b0df"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "do you want to suggest if i did something wrong",
  "id": "586d773a9e6f00e74af9177e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-04T22:29:14.348Z",
  "text": "do you want to suggest if i did something wrong",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-01-04T22:33:23.298Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<pre><code class=\"go\">    resp, err := mySession.ListObjects(params)\n    fmt.Println(<span class=\"string\">\"Number of objects found: \"</span>, <span class=\"built_in\">len</span>(resp.Contents), <span class=\"string\">\" any more objects left: \"</span>, *resp.IsTruncated)\n    params.Marker = resp.NextMarker\n    resp, err = mySession.ListObjects(params)\n    fmt.Println(<span class=\"string\">\"Number of objects found: \"</span>, <span class=\"built_in\">len</span>(resp.Contents), <span class=\"string\">\" any more objects left: \"</span>, *resp.IsTruncated)</code></pre>See if that works",
  "id": "586d7819af6b364a292fd023",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-04T22:32:57.142Z",
  "text": "```go\n\tresp, err := mySession.ListObjects(params)\n\tfmt.Println(\"Number of objects found: \", len(resp.Contents), \" any more objects left: \", *resp.IsTruncated)\n\tparams.Marker = resp.NextMarker\n\tresp, err = mySession.ListObjects(params)\n\tfmt.Println(\"Number of objects found: \", len(resp.Contents), \" any more objects left: \", *resp.IsTruncated)\n```\nSee if that works",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "nopes it is still the same thing",
  "id": "586d7874c02c1a3959ea0e99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-04T22:34:28.842Z",
  "text": "nopes it is still the same thing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Really? And what is the value of <code>IsTruncated</code>?",
  "id": "586d78869e6f00e74af91d1e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-04T22:34:46.120Z",
  "text": "Really? And what is the value of `IsTruncated`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "true",
  "id": "586d7898c895451b755780aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-01-04T22:35:04.473Z",
  "text": "true",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "ok i also printed nextmarker",
  "id": "586d78ae058ca96737cbed6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-04T22:35:26.369Z",
  "text": "ok i also printed nextmarker",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "result is <code>Number of objects found:  1000  any more objects left:  true  next-marker:  &lt;nil&gt;\nNumber of objects found:  1000  any more objects left:  true</code>",
  "id": "586d78b4af6b364a292fd27d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-04T22:35:32.979Z",
  "text": "result is ```Number of objects found:  1000  any more objects left:  true  next-marker:  <nil>\nNumber of objects found:  1000  any more objects left:  true```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "<code>Number of objects found:  1000  any more objects left:  true  next-marker:  &lt;nil&gt;\nNumber of objects found:  1000  any more objects left:  true</code>",
  "id": "586d78c8aa6be0472f0aaa2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-04T22:35:52.149Z",
  "text": "```Number of objects found:  1000  any more objects left:  true  next-marker:  <nil>\nNumber of objects found:  1000  any more objects left:  true```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "oops i wanted to do multiple lines ",
  "id": "586d78d79d4cc4fc53786f17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-04T22:36:07.978Z",
  "text": "oops i wanted to do multiple lines ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "so problem is nextmarker is nil",
  "id": "586d78efaa6be0472f0aaaf1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-04T22:36:31.262Z",
  "text": "so problem is nextmarker is nil",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "i updated first print statement as<br><code>fmt.Println(&quot;Number of objects found: &quot;, len(resp.Contents), &quot; any more objects left: &quot;, *resp.IsTruncated, &quot; next-marker: &quot;, resp.NextMarker)</code>",
  "id": "586d7911058ca96737cbf0f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-04T22:37:05.843Z",
  "text": "i updated first print statement as \n```\tfmt.Println(\"Number of objects found: \", len(resp.Contents), \" any more objects left: \", *resp.IsTruncated, \" next-marker: \", resp.NextMarker)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<pre><code class=\"go\">    <span class=\"comment\">// When response is truncated (the IsTruncated element value in the response</span>\n    <span class=\"comment\">// is true), you can use the key name in this field as marker in the subsequent</span>\n    <span class=\"comment\">// request to get next set of objects. Amazon S3 lists objects in alphabetical</span>\n    <span class=\"comment\">// order Note: This element is returned only if you have delimiter request parameter</span>\n    <span class=\"comment\">// specified. If response does not include the NextMaker and it is truncated,</span>\n    <span class=\"comment\">// you can use the value of the last Key in the response as the marker in the</span>\n    <span class=\"comment\">// subsequent request to get the next set of object keys.</span></code></pre>",
  "id": "586d7919058ca96737cbf14a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-04T22:37:13.538Z",
  "text": "```go\n    // When response is truncated (the IsTruncated element value in the response\n    // is true), you can use the key name in this field as marker in the subsequent\n    // request to get next set of objects. Amazon S3 lists objects in alphabetical\n    // order Note: This element is returned only if you have delimiter request parameter\n    // specified. If response does not include the NextMaker and it is truncated,\n    // you can use the value of the last Key in the response as the marker in the\n    // subsequent request to get the next set of object keys.\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "So, if next marker is nil, just use the last key that was returned in the objects array",
  "id": "586d792baf6b364a292fd409",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-04T22:37:31.211Z",
  "text": "So, if next marker is nil, just use the last key that was returned in the objects array",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "okies let me see that",
  "id": "586d79479d4cc4fc537870bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-04T22:37:59.239Z",
  "text": "okies let me see that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "cool thanks <span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> this seem to work",
  "id": "586d79d47a3f79ef5dd88e65",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-04T22:40:20.340Z",
  "text": "cool thanks @xibz this seem to work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Yep, np. If all else fails, documentation :p. If you have any additional questions, please feel free to reach out",
  "id": "586d79f69e6f00e74af92352",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-04T22:40:54.706Z",
  "text": "Yep, np. If all else fails, documentation :p. If you have any additional questions, please feel free to reach out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sushilkm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4608788?v=4&s=60",
   "displayName": "Sushil Kumar",
   "gv": "4",
   "id": "5810f044d73408ce4f310a6e",
   "url": "/sushilkm",
   "username": "sushilkm",
   "v": 5
  },
  "html": "sure thanks and thanks for the documentation pointer :P",
  "id": "586d7a13aa6be0472f0ab337",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-04T22:41:23.959Z",
  "text": "sure thanks and thanks for the documentation pointer :P",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/EdwinRor",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8451465?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8451465?v=3&s=60",
   "displayName": "EdwinRor",
   "gv": "3",
   "id": "586dda40d73408ce4f41569b",
   "url": "/EdwinRor",
   "username": "EdwinRor"
  },
  "html": "Any idea on how to unmarshal []*s3.Bucket -- newbie",
  "id": "586ddb05c02c1a3959eb910e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-05T05:35:01.392Z",
  "text": "Any idea on how to unmarshal []*s3.Bucket -- newbie",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"EdwinRor\" class=\"mention\">@EdwinRor</span> , I am little confused on what you mean on how to unmarshal. What operation are you trying to call?",
  "id": "586eb1edda229f8d5beb1cf0",
  "issues": [],
  "mentions": [
   {
    "screenName": "EdwinRor",
    "userId": "586dda40d73408ce4f41569b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-05T20:51:57.535Z",
  "text": "Hello @EdwinRor , I am little confused on what you mean on how to unmarshal. What operation are you trying to call?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/thomasv314",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/584675?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/584675?v=4&s=60",
   "displayName": "Thomas Vendetta",
   "gv": "4",
   "id": "57334109c43b8c60197248ce",
   "url": "/thomasv314",
   "username": "thomasv314",
   "v": 6
  },
  "html": "<p>Hiya, I&#39;m trying to debug a TLS error I&#39;m getting when I execute a go binary that uses the S3 go sdk:</p><p>2017-01-06T15:08:20.488Z    db243104-d421-11e6-8a0a-4d439ef4e5c8<br>RequestError: send request failed caused by: Put <a href=\"https://thomas-v-sandb0x.s3.amazonaws.com/test-collection-profile.json\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://thomas-v-sandb0x.s3.amazonaws.com/test-collection-profile.json</a>:<br>tls: failed to parse certificate from server: asn1: structure error:<br>tags don&#39;t match (4 vs {class:0 tag:16 length:1090 isCompound:true}) {optional:false explicit:false application:false defaultValue:&lt;nil&gt; tag:&lt;nil&gt; stringType:0 timeType:0 set:false omitEmpty:false} RawContent <span data-link-type=\"mention\" data-screen-name=\"4\" class=\"mention\">@4</span></p><p>Has anyone ever seen anything like this before?</p>",
  "id": "586fb364af6b364a293a3b18",
  "issues": [],
  "mentions": [
   {
    "screenName": "4",
    "userId": "5764ee0ec2f0db084a1e914c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-06T15:10:28.670Z",
  "text": "Hiya, I'm trying to debug a TLS error I'm getting when I execute a go binary that uses the S3 go sdk:\n\n2017-01-06T15:08:20.488Z\tdb243104-d421-11e6-8a0a-4d439ef4e5c8\t\nRequestError: send request failed caused by: Put https://thomas-v-sandb0x.s3.amazonaws.com/test-collection-profile.json:\ntls: failed to parse certificate from server: asn1: structure error: \ntags don't match (4 vs {class:0 tag:16 length:1090 isCompound:true}) {optional:false explicit:false application:false defaultValue:<nil> tag:<nil> stringType:0 timeType:0 set:false omitEmpty:false} RawContent @4\n\nHas anyone ever seen anything like this before?",
  "unread": false,
  "urls": [
   {
    "url": "https://thomas-v-sandb0x.s3.amazonaws.com/test-collection-profile.json"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AmitKumarDas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2794362?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2794362?v=4&s=60",
   "displayName": "Amit Kumar Das",
   "gv": "4",
   "id": "5811a2d6d73408ce4f312721",
   "url": "/AmitKumarDas",
   "username": "AmitKumarDas",
   "v": 11
  },
  "html": "Does aws-sdk-go implement features related to EBS APIs ?",
  "id": "5870cf07da229f8d5bf52cf5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-07T11:20:39.048Z",
  "text": "Does aws-sdk-go implement features related to EBS APIs ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/AmitKumarDas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2794362?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2794362?v=4&s=60",
   "displayName": "Amit Kumar Das",
   "gv": "4",
   "id": "5811a2d6d73408ce4f312721",
   "url": "/AmitKumarDas",
   "username": "AmitKumarDas",
   "v": 11
  },
  "html": "Can anyone point me to any documentation related to EBS APIs",
  "id": "5870cf1b7a3f79ef5de8aee5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-07T11:20:59.340Z",
  "text": "Can anyone point me to any documentation related to EBS APIs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/zunigag85_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/624408652556808192/wTMTc_nT.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/624408652556808192/wTMTc_nT_bigger.jpg",
   "displayName": "Guillermo Zuniga",
   "id": "5875249ed73408ce4f42961b",
   "url": "/zunigag85_twitter",
   "username": "zunigag85_twitter"
  },
  "html": "Hi, I am new to amazon polly api...what address do I send REST request to?  Or am I on the wrong chat room?",
  "id": "587527bb61fac5a03dbf41f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-10T18:28:11.896Z",
  "text": "Hi, I am new to amazon polly api...what address do I send REST request to?  Or am I on the wrong chat room?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/fsenart",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/515714?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/515714?v=4&s=60",
   "displayName": "Farzad Senart",
   "gv": "4",
   "id": "529c6b6eed5ab0b3bf04d622",
   "url": "/fsenart",
   "username": "fsenart",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> FYI <code>ls: failed to parse certificate from server: asn1: structure error: ...</code> seems resolved with go1.8rc1.",
  "id": "58757806cbcb28177052d641",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-11T00:10:46.909Z",
  "text": "@xibz FYI `ls: failed to parse certificate from server: asn1: structure error: ...` seems resolved with go1.8rc1.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "is there an example of creating a session by passing the key and secrete programmatically?",
  "id": "5878f09ddec171b811e5669f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-13T15:22:05.919Z",
  "text": "is there an example of creating a session by passing the key and secrete programmatically?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-01-13T21:45:14.168Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/fsenart",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/515714?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/515714?v=4&s=60",
   "displayName": "Farzad Senart",
   "gv": "4",
   "id": "529c6b6eed5ab0b3bf04d622",
   "url": "/fsenart",
   "username": "fsenart",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dishmael\" class=\"mention\">@dishmael</span> is <a href=\"https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#hard-coded-credentials-in-an-application-not-recommended\" rel=\"nofollow\" target=\"_blank\" class=\"link\">this</a> what you need? <pre><code><span class=\"comment\">//</span>\n<span class=\"comment\">// Warning: Do not embed credentials inside an application. Use this method only for testing purposes.</span>\n<span class=\"comment\">//</span>\nsess, err <span class=\"value\">:= session.<span class=\"function\">NewSession</span>(&amp;aws.Config{\n    Region:      aws.<span class=\"function\">String</span>(<span class=\"string\">\"us-west-2\"</span>),\n    Credentials: credentials.<span class=\"function\">NewStaticCredentials</span>(<span class=\"string\">\"AKID\"</span>, <span class=\"string\">\"SECRET_KEY\"</span>, <span class=\"string\">\"TOKEN\"</span>),\n})</span></code></pre>",
  "id": "58794a4ce836bf70103f2bba",
  "issues": [],
  "mentions": [
   {
    "screenName": "dishmael",
    "userId": "5878f078d73408ce4f43502d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-13T21:44:44.497Z",
  "text": "@dishmael is [this](https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#hard-coded-credentials-in-an-application-not-recommended) what you need? \n```\n//\n// Warning: Do not embed credentials inside an application. Use this method only for testing purposes.\n//\nsess, err := session.NewSession(&aws.Config{\n    Region:      aws.String(\"us-west-2\"),\n    Credentials: credentials.NewStaticCredentials(\"AKID\", \"SECRET_KEY\", \"TOKEN\"),\n})\n```",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#hard-coded-credentials-in-an-application-not-recommended"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/supershal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6110931?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6110931?v=4&s=60",
   "displayName": "Shalin Patel",
   "gv": "4",
   "id": "587eb90dd73408ce4f443dc3",
   "url": "/supershal",
   "username": "supershal",
   "v": 3
  },
  "html": "hi",
  "id": "587eb912074f7be763e3bffa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-18T00:38:42.880Z",
  "text": "hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/supershal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6110931?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6110931?v=4&s=60",
   "displayName": "Shalin Patel",
   "gv": "4",
   "id": "587eb90dd73408ce4f443dc3",
   "url": "/supershal",
   "username": "supershal",
   "v": 3
  },
  "html": "I am using aws sdk for Golang. what API i can use to get instances attached to the elastic load balancer?",
  "id": "587eb935873d96e16d801b32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-18T00:39:17.177Z",
  "text": "I am using aws sdk for Golang. what API i can use to get instances attached to the elastic load balancer?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/supershal",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6110931?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6110931?v=4&s=60",
   "displayName": "Shalin Patel",
   "gv": "4",
   "id": "587eb90dd73408ce4f443dc3",
   "url": "/supershal",
   "username": "supershal",
   "v": 3
  },
  "html": "referring to <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/elbv2/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/elbv2/</a> ",
  "id": "587eb95a873d96e16d801ba3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-18T00:39:54.294Z",
  "text": "referring to https://docs.aws.amazon.com/sdk-for-go/api/service/elbv2/ ",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/elbv2/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/polds",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=60",
   "displayName": "Peter Olds",
   "gv": "4",
   "id": "529c6f27ed5ab0b3bf04e078",
   "url": "/polds",
   "username": "polds",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"supershal\" class=\"mention\">@supershal</span> <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/elbv2/#ELBV2.DescribeLoadBalancers\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/elbv2/#ELBV2.DescribeLoadBalancers</a>",
  "id": "587ecc2b300f220a66fe930e",
  "issues": [],
  "mentions": [
   {
    "screenName": "supershal",
    "userId": "587eb90dd73408ce4f443dc3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-18T02:00:11.906Z",
  "text": "@supershal http://docs.aws.amazon.com/sdk-for-go/api/service/elbv2/#ELBV2.DescribeLoadBalancers",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/elbv2/#ELBV2.DescribeLoadBalancers"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/polds",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=60",
   "displayName": "Peter Olds",
   "gv": "4",
   "id": "529c6f27ed5ab0b3bf04e078",
   "url": "/polds",
   "username": "polds",
   "v": 8
  },
  "html": "actually I might be lying",
  "id": "587ecc50873d96e16d807148",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-18T02:00:48.858Z",
  "text": "actually I might be lying",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/polds",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=60",
   "displayName": "Peter Olds",
   "gv": "4",
   "id": "529c6f27ed5ab0b3bf04e078",
   "url": "/polds",
   "username": "polds",
   "v": 8
  },
  "html": "actually, no that\u2019s right. It\u2019s got an Instances object ",
  "id": "587eccb1dcb66e4f7678339a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-18T02:02:25.934Z",
  "text": "actually, no that\u2019s right. It\u2019s got an Instances object ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/mar-io",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2257839?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2257839?v=3&s=60",
   "displayName": "Mario Harvey",
   "gv": "3",
   "id": "56b144ece610378809bf93d2",
   "url": "/mar-io",
   "username": "mar-io",
   "v": 5
  },
  "html": "hi -- does anyone have experience returning the value of tag by searching or filtering on the key and only returning that value?",
  "id": "587f00f1300f220a66ff6ea6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-18T05:45:21.148Z",
  "text": "hi -- does anyone have experience returning the value of tag by searching or filtering on the key and only returning that value?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/mar-io",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2257839?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2257839?v=3&s=60",
   "displayName": "Mario Harvey",
   "gv": "3",
   "id": "56b144ece610378809bf93d2",
   "url": "/mar-io",
   "username": "mar-io",
   "v": 5
  },
  "html": "i know how to filter on a tag and value but what I want is to just return the value for a tag",
  "id": "587f0136cbcb281770837b7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-18T05:46:30.968Z",
  "text": "i know how to filter on a tag and value but what I want is to just return the value for a tag",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mooredwightd",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20306849?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20306849?v=4&s=60",
   "displayName": "mooredwightd",
   "gv": "4",
   "id": "587f8f4ad73408ce4f44622e",
   "url": "/mooredwightd",
   "username": "mooredwightd",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mar-io\" class=\"mention\">@mar-io</span> for clarification, a DynamoDb tag or a Go Struct tag?",
  "id": "587f8f8de836bf70105d5c35",
  "issues": [],
  "mentions": [
   {
    "screenName": "mar-io",
    "userId": "56b144ece610378809bf93d2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-18T15:53:49.263Z",
  "text": "@mar-io for clarification, a DynamoDb tag or a Go Struct tag?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/mar-io",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2257839?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2257839?v=3&s=60",
   "displayName": "Mario Harvey",
   "gv": "3",
   "id": "56b144ece610378809bf93d2",
   "url": "/mar-io",
   "username": "mar-io",
   "v": 5
  },
  "html": "I&#39;m trying to get the value of an ec2 instance tag only using the key so for example...if the ec2 instance has a tag:environment=prod...i want to just filter on Name: tag:environment and get the value &quot;prod&quot;. ",
  "id": "587f95e4dcb66e4f767c543f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-18T16:20:52.875Z",
  "text": "I'm trying to get the value of an ec2 instance tag only using the key so for example...if the ec2 instance has a tag:environment=prod...i want to just filter on Name: tag:environment and get the value \"prod\". ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/boddumanohar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9148277?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9148277?v=4&s=60",
   "displayName": "Manohar Reddy",
   "gv": "4",
   "id": "57e6a73340f3a6eec0671c26",
   "url": "/boddumanohar",
   "username": "boddumanohar",
   "v": 36
  },
  "html": "hello, I am using <code>aws-sdk-go</code> I am following  a tutorial.In that my import statement has showed <code>github.com/aws/aws-sdk-go/service/s3</code> when I try to <code>go get</code> it , it shows an error. Pls help me solve this problem if any else has faced the same issue ",
  "id": "587fc8aa300f220a6603f223",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-18T19:57:30.157Z",
  "text": "hello, I am using `aws-sdk-go` I am following  a tutorial.In that my import statement has showed `github.com/aws/aws-sdk-go/service/s3` when I try to `go get` it , it shows an error. Pls help me solve this problem if any else has faced the same issue ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/boddumanohar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9148277?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9148277?v=4&s=60",
   "displayName": "Manohar Reddy",
   "gv": "4",
   "id": "57e6a73340f3a6eec0671c26",
   "url": "/boddumanohar",
   "username": "boddumanohar",
   "v": 36
  },
  "html": "sorry my mistake. Now the error is gone.",
  "id": "587fca5adcb66e4f767da6fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-18T20:04:42.867Z",
  "text": "sorry my mistake. Now the error is gone.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-01-19T16:28:09.824Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I&#39;m having issues deleting objects from a versioned bucket",
  "id": "5880e90861e516c157918fd1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-19T16:27:52.154Z",
  "text": "I'm having issues deleting objects from a versioned bucket",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<a href=\"https://play.golang.org/p/Z9DbBBKpUC\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://play.golang.org/p/Z9DbBBKpUC</a>",
  "id": "5880e958d99b1dd03d30ab0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-19T16:29:12.377Z",
  "text": "https://play.golang.org/p/Z9DbBBKpUC",
  "unread": false,
  "urls": [
   {
    "url": "https://play.golang.org/p/Z9DbBBKpUC"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "go run cleans3.go --bucket=my-logs-bucket --region=us-east-1 --purge_old_versions=true --noop=false",
  "id": "5880e974d99b1dd03d30ab17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-19T16:29:40.997Z",
  "text": "go run cleans3.go --bucket=my-logs-bucket --region=us-east-1 --purge_old_versions=true --noop=false",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "it appears to delete them, at least I get no errors and S3 returns a response with the version ID, but the objects don&#39;t get deleted",
  "id": "5880e9ad96a565f8440985fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-19T16:30:37.006Z",
  "text": "it appears to delete them, at least I get no errors and S3 returns a response with the version ID, but the objects don't get deleted",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/aravindc26",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1547801?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1547801?v=3&s=60",
   "displayName": "Aravind Chintalapalli",
   "gv": "3",
   "id": "56093b250fc9f982beb21231",
   "url": "/aravindc26",
   "username": "aravindc26",
   "v": 3
  },
  "html": "Hi,<br>How do I find the endpoint of s3 object, given the object key ?",
  "id": "5881d8216c1635643c52a924",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-20T09:28:01.157Z",
  "text": "Hi,\nHow do I find the endpoint of s3 object, given the object key ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ror6ax",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=60",
   "displayName": "Gregory Reshetniak",
   "gv": "4",
   "id": "578cd803c2f0db084a238013",
   "url": "/ror6ax",
   "username": "ror6ax",
   "v": 23
  },
  "html": "Hi there",
  "id": "58821d1a519afee26b8e94e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T14:22:18.166Z",
  "text": "Hi there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ror6ax",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=60",
   "displayName": "Gregory Reshetniak",
   "gv": "4",
   "id": "578cd803c2f0db084a238013",
   "url": "/ror6ax",
   "username": "ror6ax",
   "v": 23
  },
  "html": "I&#39;m looking for a way to use endpoint-url respected by go sdk",
  "id": "58821d34519afee26b8e953e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T14:22:44.418Z",
  "text": "I'm looking for a way to use endpoint-url respected by go sdk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ror6ax",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=60",
   "displayName": "Gregory Reshetniak",
   "gv": "4",
   "id": "578cd803c2f0db084a238013",
   "url": "/ror6ax",
   "username": "ror6ax",
   "v": 23
  },
  "html": "works in cli, but I can&#39;t find a way to point Vault to non-AWS endpoints",
  "id": "58821d59519afee26b8e9637",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T14:23:21.909Z",
  "text": "works in cli, but I can't find a way to point Vault to non-AWS endpoints",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ror6ax",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=60",
   "displayName": "Gregory Reshetniak",
   "gv": "4",
   "id": "578cd803c2f0db084a238013",
   "url": "/ror6ax",
   "username": "ror6ax",
   "v": 23
  },
  "html": "I suppose I&#39;m not the first to use aws clones, like Eucalyptus",
  "id": "58821d746c1635643c543efa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T14:23:48.742Z",
  "text": "I suppose I'm not the first to use aws clones, like Eucalyptus",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ror6ax",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=60",
   "displayName": "Gregory Reshetniak",
   "gv": "4",
   "id": "578cd803c2f0db084a238013",
   "url": "/ror6ax",
   "username": "ror6ax",
   "v": 23
  },
  "html": "there is a method in Vault",
  "id": "58821dc2300f220a661062bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T14:25:06.494Z",
  "text": "there is a method in Vault",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ror6ax",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=60",
   "displayName": "Gregory Reshetniak",
   "gv": "4",
   "id": "578cd803c2f0db084a238013",
   "url": "/ror6ax",
   "username": "ror6ax",
   "v": 23
  },
  "html": "<pre><code><span class=\"comment\">// getClientConfig creates a aws-sdk-go config, which is used to create client</span>\n<span class=\"comment\">// that can interact with AWS API. This builds credentials in the following</span>\n<span class=\"comment\">// order of preference:</span>\n<span class=\"comment\">//</span>\n<span class=\"comment\">// * Static credentials from 'config/client'</span>\n<span class=\"comment\">// * Environment variables</span>\n<span class=\"comment\">// * Instance metadata role</span></code></pre>",
  "id": "58821dcb11e7a7f61dc05bca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T14:25:15.373Z",
  "text": "```\n// getClientConfig creates a aws-sdk-go config, which is used to create client\n// that can interact with AWS API. This builds credentials in the following\n// order of preference:\n//\n// * Static credentials from 'config/client'\n// * Environment variables\n// * Instance metadata role\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ror6ax",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=60",
   "displayName": "Gregory Reshetniak",
   "gv": "4",
   "id": "578cd803c2f0db084a238013",
   "url": "/ror6ax",
   "username": "ror6ax",
   "v": 23
  },
  "html": "does this mean there is a way to set endpoint\\s in config file?",
  "id": "58821e13519afee26b8e9b19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T14:26:27.781Z",
  "text": "does this mean there is a way to set endpoint\\s in config file?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ror6ax",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=60",
   "displayName": "Gregory Reshetniak",
   "gv": "4",
   "id": "578cd803c2f0db084a238013",
   "url": "/ror6ax",
   "username": "ror6ax",
   "v": 23
  },
  "html": "<pre><code>        endpoint := aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"\"</span>)\n        <span class=\"keyword\">if</span> config != nil {\n                <span class=\"comment\">// Override the default endpoint with the configured endpoint.</span>\n                <span class=\"keyword\">if</span> config.Endpoint != <span class=\"string\">\"\"</span> {\n                        endpoint = aws.<span class=\"built_in\">String</span>(config.Endpoint)</code></pre>",
  "id": "58821e2411e7a7f61dc05ecc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T14:26:44.491Z",
  "text": "```\n        endpoint := aws.String(\"\")\n        if config != nil {\n                // Override the default endpoint with the configured endpoint.\n                if config.Endpoint != \"\" {\n                        endpoint = aws.String(config.Endpoint)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-01-20T14:39:46.522Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ror6ax",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2385157?v=4&s=60",
   "displayName": "Gregory Reshetniak",
   "gv": "4",
   "id": "578cd803c2f0db084a238013",
   "url": "/ror6ax",
   "username": "ror6ax",
   "v": 23
  },
  "html": "I&#39;ve tried to set  endpoint := &quot;<a href=\"http://myeucalyptusurl\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://myeucalyptusurl</a>&quot; but it seems to have no effect",
  "id": "58822131dcb66e4f768aadaa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T14:39:45.154Z",
  "text": "I've tried to set  endpoint := \"http://myeucalyptusurl\" but it seems to have no effect",
  "unread": false,
  "urls": [
   {
    "url": "http://myeucalyptusurl"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"ror6ax\" class=\"mention\">@ror6ax</span>  I updated the issue <span data-link-type=\"issue\" data-issue=\"1048\" class=\"issue\">#1048</span> with feedback on using a custom endpoint with the SDK.",
  "id": "58824c74d43728124e81792c",
  "issues": [
   {
    "number": "1048"
   }
  ],
  "mentions": [
   {
    "screenName": "ror6ax",
    "userId": "578cd803c2f0db084a238013",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T17:44:20.568Z",
  "text": "Hi @ror6ax  I updated the issue #1048 with feedback on using a custom endpoint with the SDK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span>  If you try to do a <code>GET</code> on one of the objects that are supposed to be deleted to you get the object&#39;s contents or a 404? after running the code you linked?",
  "id": "58824fc7cbcb28177096030c",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T17:58:31.098Z",
  "text": "Hi @cristim  If you try to do a `GET` on one of the objects that are supposed to be deleted to you get the object's contents or a 404? after running the code you linked?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "In addition do you get the correct content if  requesting the latest (current) version of the object?",
  "id": "58824fdf074f7be763f72e0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T17:58:55.669Z",
  "text": "In addition do you get the correct content if  requesting the latest (current) version of the object?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I&#39;ll have a look, I suspect it might be because all the keys start with a / character ",
  "id": "588250d2dcb66e4f768bdb7c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T18:02:58.385Z",
  "text": "@jasdel I'll have a look, I suspect it might be because all the keys start with a / character ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> After reviewing the code you linked, I think the issue is because while the code does pass in a list of markers, DeleteObject is also called on the object&#39;s original version ID. Instead of using the delete markers passed in what if you use the <code>DeleteObjectOutput</code>&#39;s <code>VersionId</code> as the maker to pass in to <code>cleanDeletionMarkers</code>.",
  "id": "588250fdcbcb281770960ada",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T18:03:41.076Z",
  "text": "@cristim After reviewing the code you linked, I think the issue is because while the code does pass in a list of markers, DeleteObject is also called on the object's original version ID. Instead of using the delete markers passed in what if you use the `DeleteObjectOutput`'s `VersionId` as the maker to pass in to `cleanDeletionMarkers`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Ah that might be possible, the SDK by default will clean out extra  slashes and leading slashes are one I think. You can set <a href=\"https://github.com/aws/aws-sdk-go/blob/master/aws/config.go#L191-L202\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><code>aws.Config. DisableRestProtocolURICleaning</code></a>",
  "id": "5882517e519afee26b8fd543",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T18:05:50.650Z",
  "text": "Ah that might be possible, the SDK by default will clean out extra  slashes and leading slashes are one I think. You can set [`aws.Config. DisableRestProtocolURICleaning`](https://github.com/aws/aws-sdk-go/blob/master/aws/config.go#L191-L202)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/blob/master/aws/config.go#L191-L202"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "i would of expected errors because object not found if the slash was the issue though",
  "id": "588251a2cbcb281770960dd0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-20T18:06:26.009Z",
  "text": "i would of expected errors because object not found if the slash was the issue though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "I cannot seem to get the SDK to work, not sure what I am doing wrong<pre><code><span class=\"rule\"><span class=\"attribute\">creds </span>:<span class=\"value\">= credentials.<span class=\"function\">NewStaticCredentials</span>(<span class=\"string\">\"AKID\"</span>, <span class=\"string\">\"SECRET_KEY\"</span>, <span class=\"string\">\"\"</span>)\nsession := session.<span class=\"function\">New</span>( &amp;aws.Config { Region: aws.<span class=\"function\">String</span>(<span class=\"string\">\"us-east-1\"</span>), Credentials: creds } )\n\nsvc := sqs.<span class=\"function\">New</span>(session)                                                       \n\nqURL := <span class=\"string\">\"sqs_demo\"</span>                                                            \n\nresult, err := svc.<span class=\"function\">ReceiveMessage</span>(&amp;sqs.ReceiveMessageInput{                   \n    AttributeNames: []*string{                                                  \n        aws.<span class=\"function\">String</span>(sqs.MessageSystemAttributeNameSentTimestamp),                  \n    },                                                                          \n    MessageAttributeNames: []*string{                                           \n        aws.<span class=\"function\">String</span>(sqs.QueueAttributeNameAll),                                    \n    },                                                                          \n    QueueUrl:            &amp;qURL,                                                 \n    MaxNumberOfMessages: aws.<span class=\"function\">Int64</span>(<span class=\"number\">1</span>),                                          \n    VisibilityTimeout:   aws.<span class=\"function\">Int64</span>(<span class=\"number\">0</span>),                                          \n    WaitTimeSeconds:     aws.<span class=\"function\">Int64</span>(<span class=\"number\">0</span>),                                          \n})                                                                            \n\nif err != nil {                                                               \n    fmt.<span class=\"function\">Println</span>(<span class=\"string\">\"Error\"</span>, err)                                                   \n    return\n}</span></span></code></pre>",
  "id": "588690e6e836bf701081de47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-23T23:25:26.089Z",
  "text": "I cannot seem to get the SDK to work, not sure what I am doing wrong\n```\ncreds := credentials.NewStaticCredentials(\"AKID\", \"SECRET_KEY\", \"\")\nsession := session.New( &aws.Config { Region: aws.String(\"us-east-1\"), Credentials: creds } )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nsvc := sqs.New(session)                                                       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nqURL := \"sqs_demo\"                                                            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nresult, err := svc.ReceiveMessage(&sqs.ReceiveMessageInput{                   \n\tAttributeNames: []*string{                                                  \n\t\taws.String(sqs.MessageSystemAttributeNameSentTimestamp),                  \n\t},                                                                          \n\tMessageAttributeNames: []*string{                                           \n\t\taws.String(sqs.QueueAttributeNameAll),                                    \n\t},                                                                          \n\tQueueUrl:            &qURL,                                                 \n\tMaxNumberOfMessages: aws.Int64(1),                                          \n\tVisibilityTimeout:   aws.Int64(0),                                          \n\tWaitTimeSeconds:     aws.Int64(0),                                          \n})                                                                            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nif err != nil {                                                               \n\tfmt.Println(\"Error\", err)                                                   \n\treturn\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "anyone?",
  "id": "588690efd43728124e96a779",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-23T23:25:35.892Z",
  "text": "anyone?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"dishmael\" class=\"mention\">@dishmael</span> what error are you seeing? is it not returning any messages or an error?.  is qURL&#39;s value <code>sqs_demo</code>. If so that might be the issue. The qURL must be a full URL not just the queue name",
  "id": "58869265cbcb281770a967a0",
  "issues": [],
  "mentions": [
   {
    "screenName": "dishmael",
    "userId": "5878f078d73408ce4f43502d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-23T23:31:49.457Z",
  "text": "Hi @dishmael what error are you seeing? is it not returning any messages or an error?.  is qURL's value `sqs_demo`. If so that might be the issue. The qURL must be a full URL not just the queue name",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/serkansahin",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9954851?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9954851?v=3&s=60",
   "displayName": "Serkan",
   "gv": "3",
   "id": "5887287ad73408ce4f45a664",
   "url": "/serkansahin",
   "username": "serkansahin"
  },
  "html": "<p>Hi everyone, I&#39;m having a trouble with Route53... Am trying to add a new Record Set in an existing Hosted Zone but I always get an &quot;InvalidInput&quot; error..I read many times the docs (API/SDK even CLI !) and I can&#39;t figure it out  why it&#39;s not working :/ If someone can help me it would be nice thanks ! </p><pre><code>func addRecordSets(m *route53.Route53, rec <span class=\"built_in\">string</span>, domain <span class=\"built_in\">string</span>, rdata <span class=\"built_in\">string</span>) bool {\n    fqdn := rec + <span class=\"string\">\".\"</span> + domain\n    params := &amp;route53.ChangeResourceRecordSetsInput{\n            ChangeBatch: &amp;route53.ChangeBatch{\n                Changes: []*route53.Change{\n                        {\n                            Action: aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"UPSERT\"</span>),\n                            ResourceRecordSet: &amp;route53.ResourceRecordSet{\n                                    Name: aws.<span class=\"built_in\">String</span>(fqdn),\n                                    Type: aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"CNAME\"</span>),\n                                    TTL: aws.Int64(<span class=\"number\">300</span>),\n                                    Region: aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"eu-west-1\"</span>),\n                                    AliasTarget: &amp;route53.AliasTarget{\n                                        DNSName: aws.<span class=\"built_in\">String</span>(domain),\n                                        EvaluateTargetHealth: aws.Bool(<span class=\"literal\">true</span>),\n                                        HostedZoneId: aws.<span class=\"built_in\">String</span>(ResourceId),\n                                    },\n                                    ResourceRecords: []*route53.ResourceRecord{\n                                        {Value: aws.<span class=\"built_in\">String</span>(rdata),},\n                                    },\n                                },\n                    },\n                },\n            },\n            HostedZoneId: aws.<span class=\"built_in\">String</span>(ResourceId),\n        }\n    fmt.Println(params)\n    resp, <span class=\"built_in\">err</span> := m.ChangeResourceRecordSets(params)\n    <span class=\"keyword\">if</span> <span class=\"built_in\">err</span> != nil {\n        fmt.Println(<span class=\"built_in\">err</span>)\n        return <span class=\"literal\">false</span>\n    }\n    fmt.Println(resp)\n    return <span class=\"literal\">true</span>\n}</code></pre><p><code>{\n  ChangeBatch: {\n    Changes: [{\n        Action: &quot;UPSERT&quot;,\n        ResourceRecordSet: {\n          AliasTarget: {\n            DNSName: &quot;totoland.io.&quot;,\n            EvaluateTargetHealth: true,\n            HostedZoneId: &quot;Z8S5W8QVO2E1O&quot;\n          },\n          Name: &quot;toto.totoland.io.&quot;,\n          Region: &quot;eu-west-1&quot;,\n          ResourceRecords: [{\n              Value: &quot;192.168.40.95&quot;\n            }],\n          TTL: 300,\n          Type: &quot;CNAME&quot;\n        }\n      }]\n  },\n  HostedZoneId: &quot;Z8S5W8QVO2E1O&quot;\n}</code> </p>",
  "id": "588729a2e836bf701084a28d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-24T10:17:06.031Z",
  "text": "Hi everyone, I'm having a trouble with Route53... Am trying to add a new Record Set in an existing Hosted Zone but I always get an \"InvalidInput\" error..I read many times the docs (API/SDK even CLI !) and I can't figure it out  why it's not working :/ If someone can help me it would be nice thanks ! \n\n```\nfunc addRecordSets(m *route53.Route53, rec string, domain string, rdata string) bool {\n\tfqdn := rec + \".\" + domain\n\tparams := &route53.ChangeResourceRecordSetsInput{\n\t\t\tChangeBatch: &route53.ChangeBatch{\n\t\t\t\tChanges: []*route53.Change{\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tAction: aws.String(\"UPSERT\"),\n\t\t\t\t\t\t\tResourceRecordSet: &route53.ResourceRecordSet{\n\t\t\t\t\t\t\t\t\tName: aws.String(fqdn),\n\t\t\t\t\t\t\t\t\tType: aws.String(\"CNAME\"),\n\t\t\t\t\t\t\t\t\tTTL: aws.Int64(300),\n\t\t\t\t\t\t\t\t\tRegion: aws.String(\"eu-west-1\"),\n\t\t\t\t\t\t\t\t\tAliasTarget: &route53.AliasTarget{\n\t\t\t\t\t\t\t\t\t\tDNSName: aws.String(domain),\n\t\t\t\t\t\t\t\t\t\tEvaluateTargetHealth: aws.Bool(true),\n\t\t\t\t\t\t\t\t\t\tHostedZoneId: aws.String(ResourceId),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tResourceRecords: []*route53.ResourceRecord{\n\t\t\t\t\t\t\t\t\t\t{Value: aws.String(rdata),},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tHostedZoneId: aws.String(ResourceId),\n\t\t}\n\tfmt.Println(params)\n\tresp, err := m.ChangeResourceRecordSets(params)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn false\n\t}\n\tfmt.Println(resp)\n\treturn true\n}\n```\n`{\n  ChangeBatch: {\n    Changes: [{\n        Action: \"UPSERT\",\n        ResourceRecordSet: {\n          AliasTarget: {\n            DNSName: \"totoland.io.\",\n            EvaluateTargetHealth: true,\n            HostedZoneId: \"Z8S5W8QVO2E1O\"\n          },\n          Name: \"toto.totoland.io.\",\n          Region: \"eu-west-1\",\n          ResourceRecords: [{\n              Value: \"192.168.40.95\"\n            }],\n          TTL: 300,\n          Type: \"CNAME\"\n        }\n      }]\n  },\n  HostedZoneId: \"Z8S5W8QVO2E1O\"\n}` ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/serkansahin",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9954851?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9954851?v=3&s=60",
   "displayName": "Serkan",
   "gv": "3",
   "id": "5887287ad73408ce4f45a664",
   "url": "/serkansahin",
   "username": "serkansahin"
  },
  "html": "Okeyyy guys It&#39;s working now ^^&#39; !",
  "id": "58872d1fe836bf701084b6b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-24T10:31:59.538Z",
  "text": "Okeyyy guys It's working now ^^' !",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> well, I feel stupid - yep, it needs to be a real URL, not the endpoint - sigh - thanks!",
  "id": "58875297c0de6f017fe52c69",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-24T13:11:51.397Z",
  "text": "@jasdel well, I feel stupid - yep, it needs to be a real URL, not the endpoint - sigh - thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/gbougeard",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/728814?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/728814?v=4&s=60",
   "displayName": "Greg BOUGEARD",
   "gv": "4",
   "id": "54b6a644db8155e6700ea7bf",
   "url": "/gbougeard",
   "username": "gbougeard",
   "v": 8
  },
  "html": "Hi, I have a little trouble with <code>autoscaling.WaitUntilGroupInService</code> .  I maybe  not using it as I should but its result is not what I expected. I created an ASG with a minSize &gt;0 and then called <code>WaitUntilGroupInService</code>. The wait is very short (quasi instant).  After that I called a DescribeASG to get the instances popped in my ASG but the instances list is empty. What could I have missed?",
  "id": "58878d6d11e7a7f61ddc3194",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-24T17:22:53.076Z",
  "text": "Hi, I have a little trouble with `autoscaling.WaitUntilGroupInService` .  I maybe  not using it as I should but its result is not what I expected. I created an ASG with a minSize >0 and then called `WaitUntilGroupInService`. The wait is very short (quasi instant).  After that I called a DescribeASG to get the instances popped in my ASG but the instances list is empty. What could I have missed?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/daidokoro",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=60",
   "displayName": "Shaun Remekie",
   "gv": "4",
   "id": "584f0023d73408ce4f3c94c8",
   "url": "/daidokoro",
   "username": "daidokoro",
   "v": 11
  },
  "html": "<p>I&#39;m trying to use the Go SDK. My AWS credentials file has mulitple profiles, some of which are actually Switch Roles. For example:</p><pre><code>[myprofile]\nrole_arn = <span class=\"symbol\">arn:</span><span class=\"symbol\">aws:</span><span class=\"symbol\">iam:</span><span class=\"symbol\">:</span><span class=\"number\">1234567890</span><span class=\"symbol\">:role/someaccount</span>\nsource_profile = anotherprofile</code></pre><p>This works fine with the aws cli and boto3, but the Go SDK returns an error on these profiles.</p><pre><code>NoCredentialProvidersno valid providers <span class=\"keyword\">in</span> chain. Deprecated.\n For verbose messaging see aws<span class=\"class\">.Config</span><span class=\"class\">.CredentialsChainVerboseErrors</span></code></pre><p>I was wondering if anyone has any examples of implementing switchroles for AWS Credentials files with this kind of setup.</p><p>Thanks in advance ^_^</p>",
  "id": "5889e126c19662f153921870",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-01-26T11:44:38.120Z",
  "text": "I'm trying to use the Go SDK. My AWS credentials file has mulitple profiles, some of which are actually Switch Roles. For example:\n\n```\n[myprofile]\nrole_arn = arn:aws:iam::1234567890:role/someaccount\nsource_profile = anotherprofile\n```\n\nThis works fine with the aws cli and boto3, but the Go SDK returns an error on these profiles.\n\n```\nNoCredentialProvidersno valid providers in chain. Deprecated.\n For verbose messaging see aws.Config.CredentialsChainVerboseErrors\n```\n\nI was wondering if anyone has any examples of implementing switchroles for AWS Credentials files with this kind of setup.\n\nThanks in advance ^_^",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi All, I wanted to give a heads up that if you update to Go 1.8 you may also need to update AWS SDK for Go to at least v1.6.4. More details can be found at <a href=\"https://aws.amazon.com/blogs/developer/aws-sdk-for-go-update-needed-for-go-1-8/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://aws.amazon.com/blogs/developer/aws-sdk-for-go-update-needed-for-go-1-8/</a>  A fix was made in 1.8rc2 that addresses the issue for most use cases, but an outstanding case exists for S3 PUT API operations without a body that will fail. (e.g CopyObject)",
  "id": "588a730dc0f28dd86249e7c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-26T22:07:09.386Z",
  "text": "Hi All, I wanted to give a heads up that if you update to Go 1.8 you may also need to update AWS SDK for Go to at least v1.6.4. More details can be found at https://aws.amazon.com/blogs/developer/aws-sdk-for-go-update-needed-for-go-1-8/  A fix was made in 1.8rc2 that addresses the issue for most use cases, but an outstanding case exists for S3 PUT API operations without a body that will fail. (e.g CopyObject)",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/blogs/developer/aws-sdk-for-go-update-needed-for-go-1-8/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Sorry v1.6.3 is the minimum version to prevent any request issues with Go 1.8",
  "id": "588a77865309d6b358720d4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-26T22:26:14.740Z",
  "text": "Sorry v1.6.3 is the minimum version to prevent any request issues with Go 1.8",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/polds",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=60",
   "displayName": "Peter Olds",
   "gv": "4",
   "id": "529c6f27ed5ab0b3bf04e078",
   "url": "/polds",
   "username": "polds",
   "v": 8
  },
  "html": "are any of the <code>awserr.Code()</code>\u2019s stored as constants anywhere like <code>ResourceNotFoundException</code>?",
  "id": "588a7c3bc0f28dd8624a18bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-26T22:46:19.952Z",
  "text": "are any of the `awserr.Code()`\u2019s stored as constants anywhere like `ResourceNotFoundException`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"polds\" class=\"mention\">@polds</span> Not at the moment, Codes are documented in the doc string of error messages for most of the APIs. We do have the outstanding issue <span data-link-type=\"issue\" data-issue=\"394\" class=\"issue\">#394</span> which looks at improving this use case. ",
  "id": "588a7f54dcb66e4f76b71e30",
  "issues": [
   {
    "number": "394"
   }
  ],
  "mentions": [
   {
    "screenName": "polds",
    "userId": "529c6f27ed5ab0b3bf04e078",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-26T22:59:32.291Z",
  "text": "@polds Not at the moment, Codes are documented in the doc string of error messages for most of the APIs. We do have the outstanding issue #394 which looks at improving this use case. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/polds",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=60",
   "displayName": "Peter Olds",
   "gv": "4",
   "id": "529c6f27ed5ab0b3bf04e078",
   "url": "/polds",
   "username": "polds",
   "v": 8
  },
  "html": "gotcha, Just spent the better part of two hours wondering why something wasn\u2019t triggering that error. It was because we were comparing <code>ResourceNotFoundExeption</code> (missing the <code>c</code>). lol",
  "id": "588a80481e4d4bd9629a57b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-26T23:03:36.873Z",
  "text": "gotcha, Just spent the better part of two hours wondering why something wasn\u2019t triggering that error. It was because we were comparing `ResourceNotFoundExeption` (missing the `c`). lol",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Ugh thanks for the feedback, thats really good to know. one of our goals is to improve this experience, because dealing with strings isn&#39;t the best. ",
  "id": "588a807bcd69d9b15829c0fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-26T23:04:27.458Z",
  "text": "Ugh thanks for the feedback, thats really good to know. one of our goals is to improve this experience, because dealing with strings isn't the best. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Please feel free to update <span data-link-type=\"issue\" data-issue=\"394\" class=\"issue\">#394</span> and give you&#39;re feedback, this will help us schedule the work in our backlog",
  "id": "588a80c11e4d4bd9629a5964",
  "issues": [
   {
    "number": "394"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-26T23:05:37.016Z",
  "text": "Please feel free to update #394 and give you're feedback, this will help us schedule the work in our backlog",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/polds",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=60",
   "displayName": "Peter Olds",
   "gv": "4",
   "id": "529c6f27ed5ab0b3bf04e078",
   "url": "/polds",
   "username": "polds",
   "v": 8
  },
  "html": "will do",
  "id": "588a81045309d6b35872390e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-26T23:06:44.883Z",
  "text": "will do",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "thanks!",
  "id": "588a8139fba5bfea0692c936",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-26T23:07:37.436Z",
  "text": "thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/raphael",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/36822?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/36822?v=4&s=60",
   "displayName": "Rapha\u00ebl Simon",
   "gv": "4",
   "id": "54935b6adb8155e6700e0d9b",
   "url": "/raphael",
   "username": "raphael",
   "v": 9
  },
  "html": "hello all, I&#39;m trying to figure out the best way to count the number of shards in a given stream. It seems that the only way is to call <code>DescribeStream</code> in a loop until <code>HasMoreShards</code> is false and then tally the count of <code>Shard</code> objects, is that correct? Given that I don&#39;t care about the properties of each shard that seems rather inefficient (understood it&#39;s not a SDK issue, but an API one).",
  "id": "588bb10b1e4d4bd9629fb73c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-27T20:43:55.278Z",
  "text": "hello all, I'm trying to figure out the best way to count the number of shards in a given stream. It seems that the only way is to call `DescribeStream` in a loop until `HasMoreShards` is false and then tally the count of `Shard` objects, is that correct? Given that I don't care about the properties of each shard that seems rather inefficient (understood it's not a SDK issue, but an API one).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-01-29T12:26:26.454Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/daidokoro",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=60",
   "displayName": "Shaun Remekie",
   "gv": "4",
   "id": "584f0023d73408ce4f3c94c8",
   "url": "/daidokoro",
   "username": "daidokoro",
   "v": 11
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"daidokoro\" class=\"mention\">@daidokoro</span> </p><p> I managed to solve but in case anyone else runs in to this. When using multiple profiles with RoleARNs in your aws credentials file. These need to be configured in .aws/config. </p><p>For example:</p><pre><code><span class=\"title\">[profile default]</span>\n<span class=\"setting\">aws_secret_access_key = <span class=\"value\">&lt;somekey&gt;</span></span>\n<span class=\"setting\">aws_access_key_id = <span class=\"value\">&lt;somekey&gt;</span></span>\n\n<span class=\"title\">[profile someprofile]</span>\n<span class=\"setting\">role_arn = <span class=\"value\">arn:aws:iam::<span class=\"number\">1234567890</span>:role/aRole</span></span>\n<span class=\"setting\">source_profile = <span class=\"value\">default</span></span></code></pre><p>For the Go SDK to detect and assume the roles your session call needs to have SharedConfigEnable enabled. For example:</p><pre><code><span class=\"func\"><span class=\"keyword\">func</span> <span class=\"title\">awsSession</span><span class=\"params\">()</span></span> (*session.<span class=\"type\">Session</span>, error) {\n\n    sess, err := session.<span class=\"type\">NewSessionWithOptions</span>(session.<span class=\"type\">Options</span>{\n        <span class=\"type\">Config</span>:            aws.<span class=\"type\">Config</span>{<span class=\"type\">Region</span>: aws.<span class=\"type\">String</span>(<span class=\"string\">\"eu-west-1\"</span>)},\n        <span class=\"type\">Profile</span>:           <span class=\"string\">\"someprofile\"</span>,\n        <span class=\"type\">SharedConfigState</span>: session.<span class=\"type\">SharedConfigEnable</span>,  <span class=\"comment\">//Note SharedConfigEnable</span>\n    })\n\n    <span class=\"keyword\">if</span> err != <span class=\"built_in\">nil</span> {\n        log.<span class=\"type\">Fatal</span>(<span class=\"string\">\"Failed establishing AWS session \"</span>, err)\n        <span class=\"keyword\">return</span> &amp;session.<span class=\"type\">Session</span>{}, err\n    }\n    <span class=\"keyword\">return</span> sess, <span class=\"built_in\">nil</span>\n}</code></pre><p>^_^</p>",
  "id": "588ddd33c0f28dd862587520",
  "issues": [],
  "mentions": [
   {
    "screenName": "daidokoro",
    "userId": "584f0023d73408ce4f3c94c8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-01-29T12:16:51.504Z",
  "text": "@daidokoro \n\n I managed to solve but in case anyone else runs in to this. When using multiple profiles with RoleARNs in your aws credentials file. These need to be configured in .aws/config. \n\nFor example:\n\n```\n[profile default]\naws_secret_access_key = <somekey>\naws_access_key_id = <somekey>\n\n[profile someprofile]\nrole_arn = arn:aws:iam::1234567890:role/aRole\nsource_profile = default\n```\n\nFor the Go SDK to detect and assume the roles your session call needs to have SharedConfigEnable enabled. For example:\n\n```\nfunc awsSession() (*session.Session, error) {\n\n\tsess, err := session.NewSessionWithOptions(session.Options{\n\t\tConfig:            aws.Config{Region: aws.String(\"eu-west-1\")},\n\t\tProfile:           \"someprofile\",\n\t\tSharedConfigState: session.SharedConfigEnable,  //Note SharedConfigEnable\n\t})\n\n\tif err != nil {\n\t\tlog.Fatal(\"Failed establishing AWS session \", err)\n\t\treturn &session.Session{}, err\n\t}\n\treturn sess, nil\n}\n```\n\n^_^",
  "unread": false,
  "urls": [],
  "v": 6
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/pmyjavec",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/315096?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/315096?v=4&s=60",
   "displayName": "Paul Myjavec",
   "gv": "4",
   "id": "57d57d8340f3a6eec064adcb",
   "url": "/pmyjavec",
   "username": "pmyjavec",
   "v": 5
  },
  "html": "Hey all, what would be the easiest way to get a list of the longest running instances for a region? ",
  "id": "588f104bdcb66e4f76ca6f2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-30T10:07:07.033Z",
  "text": "Hey all, what would be the easiest way to get a list of the longest running instances for a region? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/pmyjavec",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/315096?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/315096?v=4&s=60",
   "displayName": "Paul Myjavec",
   "gv": "4",
   "id": "57d57d8340f3a6eec064adcb",
   "url": "/pmyjavec",
   "username": "pmyjavec",
   "v": 5
  },
  "html": "Is there a sort function somewhere? ",
  "id": "588f105d1e4d4bd962ae9d1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-30T10:07:25.768Z",
  "text": "Is there a sort function somewhere? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/vijaygurunanee_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/731868203073343489/Q1J7AEJ4.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/731868203073343489/Q1J7AEJ4_bigger.jpg",
   "displayName": "vijay gurunanee",
   "id": "588f1aa1d73408ce4f46ea91",
   "url": "/vijaygurunanee_twitter",
   "username": "vijaygurunanee_twitter"
  },
  "html": "Hi",
  "id": "588f1aaedcb66e4f76cab1dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-30T10:51:26.902Z",
  "text": "Hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/vijaygurunanee_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/731868203073343489/Q1J7AEJ4.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/731868203073343489/Q1J7AEJ4_bigger.jpg",
   "displayName": "vijay gurunanee",
   "id": "588f1aa1d73408ce4f46ea91",
   "url": "/vijaygurunanee_twitter",
   "username": "vijaygurunanee_twitter"
  },
  "html": "i am trying to upload a file to s3 bucket and i am not the owner",
  "id": "588f1acb2ff29dec0653db55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-30T10:51:55.143Z",
  "text": "i am trying to upload a file to s3 bucket and i am not the owner",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/vijaygurunanee_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/731868203073343489/Q1J7AEJ4.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/731868203073343489/Q1J7AEJ4_bigger.jpg",
   "displayName": "vijay gurunanee",
   "id": "588f1aa1d73408ce4f46ea91",
   "url": "/vijaygurunanee_twitter",
   "username": "vijaygurunanee_twitter"
  },
  "html": "now i want to grant full access to bucketowner",
  "id": "588f1adee836bf7010aba777",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-30T10:52:14.043Z",
  "text": "now i want to grant full access to bucketowner",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/vijaygurunanee_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/731868203073343489/Q1J7AEJ4.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/731868203073343489/Q1J7AEJ4_bigger.jpg",
   "displayName": "vijay gurunanee",
   "id": "588f1aa1d73408ce4f46ea91",
   "url": "/vijaygurunanee_twitter",
   "username": "vijaygurunanee_twitter"
  },
  "html": "i am not sure what i need to do",
  "id": "588f1aea5309d6b358861473",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-30T10:52:26.763Z",
  "text": "i am not sure what i need to do",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/vijaygurunanee_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/731868203073343489/Q1J7AEJ4.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/731868203073343489/Q1J7AEJ4_bigger.jpg",
   "displayName": "vijay gurunanee",
   "id": "588f1aa1d73408ce4f46ea91",
   "url": "/vijaygurunanee_twitter",
   "username": "vijaygurunanee_twitter"
  },
  "html": "i am using aws sdk in golang",
  "id": "588f1af31e4d4bd962aedea0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-30T10:52:35.282Z",
  "text": "i am using aws sdk in golang",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/vijaygurunanee_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/731868203073343489/Q1J7AEJ4.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/731868203073343489/Q1J7AEJ4_bigger.jpg",
   "displayName": "vijay gurunanee",
   "id": "588f1aa1d73408ce4f46ea91",
   "url": "/vijaygurunanee_twitter",
   "username": "vijaygurunanee_twitter"
  },
  "html": "i want to pass &quot;bucket-owner-full-control&quot;",
  "id": "588f1afa2ff29dec0653dd14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-30T10:52:42.328Z",
  "text": "i want to pass \"bucket-owner-full-control\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/vijaygurunanee_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/731868203073343489/Q1J7AEJ4.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/731868203073343489/Q1J7AEJ4_bigger.jpg",
   "displayName": "vijay gurunanee",
   "id": "588f1aa1d73408ce4f46ea91",
   "url": "/vijaygurunanee_twitter",
   "username": "vijaygurunanee_twitter"
  },
  "html": "but where to pass that thing?",
  "id": "588f1b004c04e9a44e4a433c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-30T10:52:48.582Z",
  "text": "but where to pass that thing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/polds",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=60",
   "displayName": "Peter Olds",
   "gv": "4",
   "id": "529c6f27ed5ab0b3bf04e078",
   "url": "/polds",
   "username": "polds",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"vijaygurunanee_twitter\" class=\"mention\">@vijaygurunanee_twitter</span> Under the <code>PutObjectInput</code> <a href=\"http://here\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#PutObjectInput</a> there is a <code>PutObjectInput.GrantFullControl</code> which is a <code>*string</code> which looks like it\u2019d take an AWS Account ID",
  "id": "588f64d42ff29dec06559785",
  "issues": [],
  "mentions": [
   {
    "screenName": "vijaygurunanee_twitter",
    "userId": "588f1aa1d73408ce4f46ea91",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-30T16:07:48.151Z",
  "text": "@vijaygurunanee_twitter Under the `PutObjectInput` [http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#PutObjectInput](here) there is a `PutObjectInput.GrantFullControl` which is a `*string` which looks like it\u2019d take an AWS Account ID",
  "unread": false,
  "urls": [
   {
    "url": "http://here"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/polds",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=60",
   "displayName": "Peter Olds",
   "gv": "4",
   "id": "529c6f27ed5ab0b3bf04e078",
   "url": "/polds",
   "username": "polds",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"pmyjavec\" class=\"mention\">@pmyjavec</span> I\u2019m not aware of an included aws sort function, but I would use the <code>DescribeInstancesPages</code> Paginator, maintain a slice of instances and implement the builtin sort interface <a href=\"https://golang.org/pkg/sort/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://golang.org/pkg/sort/</a> their <code>SortKeys</code> example is really easy to follow",
  "id": "588f697edcb66e4f76cc92b6",
  "issues": [],
  "mentions": [
   {
    "screenName": "pmyjavec",
    "userId": "57d57d8340f3a6eec064adcb",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-01-30T16:27:42.491Z",
  "text": "@pmyjavec I\u2019m not aware of an included aws sort function, but I would use the `DescribeInstancesPages` Paginator, maintain a slice of instances and implement the builtin sort interface https://golang.org/pkg/sort/ their `SortKeys` example is really easy to follow",
  "unread": false,
  "urls": [
   {
    "url": "https://golang.org/pkg/sort/"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-01-30T18:38:23.935Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/tleyden",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/296876?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/296876?v=4&s=60",
   "displayName": "Traun Leyden",
   "gv": "4",
   "id": "54d9047615522ed4b3dbce0e",
   "url": "/tleyden",
   "username": "tleyden",
   "v": 27
  },
  "html": "<p>I&#39;m a bit confused about this:</p><pre><code><span class=\"class\"><span class=\"keyword\">type</span> <span class=\"title\">DescribeStackResourceInput</span> <span class=\"title\">struct</span> {</span>\n       <span class=\"comment\">// The logical name of the resource as specified in the template.</span>\n       <span class=\"comment\">//</span>\n       <span class=\"comment\">// Default: There is no default value.</span>\n       <span class=\"comment\">//</span>\n       <span class=\"comment\">// LogicalResourceId is a required field</span>\n       <span class=\"type\">LogicalResourceId</span> *string `<span class=\"class\"><span class=\"keyword\">type</span>:</span><span class=\"string\">\"string\"</span> required:<span class=\"string\">\"true\"</span>`\n\n       <span class=\"type\">StackName</span> *string `<span class=\"class\"><span class=\"keyword\">type</span>:</span><span class=\"string\">\"string\"</span> required:<span class=\"string\">\"true\"</span>`\n\n    ...\n}</code></pre><p>I only have the <code>StackName</code>, but from these comments it sounds like I must pass the <code>LogicalResourceId</code>.  OTOH, in the cli docs (<a href=\"http://docs.aws.amazon.com/cli/latest/reference/cloudformation/describe-stack-resource.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/cli/latest/reference/cloudformation/describe-stack-resource.html</a>) it does not state that <code>--logical-resource-id</code> is required</p>",
  "id": "588f866afba5bfea06a9226d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-01-30T18:31:06.680Z",
  "text": "I'm a bit confused about this:\n\n```\ntype DescribeStackResourceInput struct {\n       // The logical name of the resource as specified in the template.\n       //\n       // Default: There is no default value.\n       //\n       // LogicalResourceId is a required field\n       LogicalResourceId *string `type:\"string\" required:\"true\"`\n\n       StackName *string `type:\"string\" required:\"true\"`\n\n\t...\n}\n```\n\nI only have the `StackName`, but from these comments it sounds like I must pass the `LogicalResourceId`.  OTOH, in the cli docs (http://docs.aws.amazon.com/cli/latest/reference/cloudformation/describe-stack-resource.html) it does not state that `--logical-resource-id ` is required",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/cli/latest/reference/cloudformation/describe-stack-resource.html"
   }
  ],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/pmyjavec",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/315096?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/315096?v=4&s=60",
   "displayName": "Paul Myjavec",
   "gv": "4",
   "id": "57d57d8340f3a6eec064adcb",
   "url": "/pmyjavec",
   "username": "pmyjavec",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"polds\" class=\"mention\">@polds</span>, ty",
  "id": "588fd35f4c04e9a44e4e7f1a",
  "issues": [],
  "mentions": [
   {
    "screenName": "polds",
    "userId": "529c6f27ed5ab0b3bf04e078",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-01-30T23:59:27.588Z",
  "text": "@polds, ty",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/tleyden",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/296876?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/296876?v=4&s=60",
   "displayName": "Traun Leyden",
   "gv": "4",
   "id": "54d9047615522ed4b3dbce0e",
   "url": "/tleyden",
   "username": "tleyden",
   "v": 27
  },
  "html": "I&#39;m trying to use <code>goautomock</code> to generate Testify mocks for aws-go-sdk .. if someone already created something like this I&#39;d be curious to hear about it.  (details here: <span data-link-type=\"issue\" data-issue=\"3\" data-issue-repo=\"ernesto-jimenez/goautomock\" class=\"issue\">ernesto-jimenez/goautomock#3</span>)",
  "id": "588fd4151e4d4bd962b35890",
  "issues": [
   {
    "number": "3",
    "repo": "ernesto-jimenez/goautomock"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-01-31T00:02:29.758Z",
  "text": "I'm trying to use `goautomock` to generate Testify mocks for aws-go-sdk .. if someone already created something like this I'd be curious to hear about it.  (details here: https://github.com/ernesto-jimenez/goautomock/issues/3)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/pmyjavec",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/315096?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/315096?v=4&s=60",
   "displayName": "Paul Myjavec",
   "gv": "4",
   "id": "57d57d8340f3a6eec064adcb",
   "url": "/pmyjavec",
   "username": "pmyjavec",
   "v": 5
  },
  "html": "Is there anyway to just get a list of   instances for a region without the instances being dropped into &quot;Reservations&quot; ?",
  "id": "58900b804c04e9a44e4f6ce9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-31T03:58:56.215Z",
  "text": "Is there anyway to just get a list of   instances for a region without the instances being dropped into \"Reservations\" ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-01-31T19:43:16.541Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/slatunje",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2518656?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2518656?v=4&s=60",
   "displayName": "Sylvester La-Tunje",
   "gv": "4",
   "id": "55ba51b20fc9f982beab8eaa",
   "url": "/slatunje",
   "username": "slatunje",
   "v": 5
  },
  "html": "<p>SQS. Is there a way to get the totals messages in the queue?</p><p>so that I can scale up or scale down the number of worker to allocate to handle messages</p>",
  "id": "5890e8724c04e9a44e54264f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-31T19:41:38.026Z",
  "text": "SQS. Is there a way to get the totals messages in the queue?\n\nso that I can scale up or scale down the number of worker to allocate to handle messages",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"slatunje\" class=\"mention\">@slatunje</span> - I don&#39;t know of any way to get the total number, besides iterating through the queues yourself.</p><p><span data-link-type=\"mention\" data-screen-name=\"pmyjavec\" class=\"mention\">@pmyjavec</span> - Can you explain what you mean by &quot;Reservations&quot;?</p><p><span data-link-type=\"mention\" data-screen-name=\"tleyden\" class=\"mention\">@tleyden</span> - Your first question regarding <code>LogicalResourceId</code>, the <code>cli</code> states that <code>LogicalResourceId</code> is required. If you look at the parameters at the very top the <code>[&lt;parameter&gt;]</code> is an optional one.</p>",
  "id": "5890f6641e4d4bd962b9b1cb",
  "issues": [],
  "mentions": [
   {
    "screenName": "slatunje",
    "userId": "55ba51b20fc9f982beab8eaa",
    "userIds": []
   },
   {
    "screenName": "pmyjavec",
    "userId": "57d57d8340f3a6eec064adcb",
    "userIds": []
   },
   {
    "screenName": "tleyden",
    "userId": "54d9047615522ed4b3dbce0e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-01-31T20:41:08.481Z",
  "text": "@slatunje - I don't know of any way to get the total number, besides iterating through the queues yourself.\n\n@pmyjavec - Can you explain what you mean by \"Reservations\"?\n\n@tleyden - Your first question regarding `LogicalResourceId`, the `cli` states that `LogicalResourceId` is required. If you look at the parameters at the very top the `[<parameter>]` is an optional one.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/tleyden",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/296876?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/296876?v=4&s=60",
   "displayName": "Traun Leyden",
   "gv": "4",
   "id": "54d9047615522ed4b3dbce0e",
   "url": "/tleyden",
   "username": "tleyden",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> ok thanks.  Actually looks like what was happening is that I meant to look at the api for <code>DescribeStackResourcesInput</code> (plural), and accidentally ended up on <code>DescribeStackResourceInput</code>.  The former only requires a <code>StackName</code>, which makes sense since it will just dump all the resources, whereas the latter also wants a resource ID.",
  "id": "5890ff544c04e9a44e54c268",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-01-31T21:19:16.632Z",
  "text": "@xibz ok thanks.  Actually looks like what was happening is that I meant to look at the api for `DescribeStackResourcesInput` (plural), and accidentally ended up on `DescribeStackResourceInput`.  The former only requires a `StackName`, which makes sense since it will just dump all the resources, whereas the latter also wants a resource ID.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"tleyden\" class=\"mention\">@tleyden</span> - I hate when that happens X)",
  "id": "589107a21e4d4bd962ba21c4",
  "issues": [],
  "mentions": [
   {
    "screenName": "tleyden",
    "userId": "54d9047615522ed4b3dbce0e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-01-31T21:54:42.606Z",
  "text": "@tleyden - I hate when that happens X)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/pmyjavec",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/315096?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/315096?v=4&s=60",
   "displayName": "Paul Myjavec",
   "gv": "4",
   "id": "57d57d8340f3a6eec064adcb",
   "url": "/pmyjavec",
   "username": "pmyjavec",
   "v": 5
  },
  "html": "Hey all, what&#39;s the recommended way to aggregate data from multiple regions ? My current thinking would be manage a bunch of sessions, one for each region and iterate, just wondering if there is a more elegant solution available ? ",
  "id": "58915d25fba5bfea06b35385",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-02-01T03:59:33.637Z",
  "text": "Hey all, what's the recommended way to aggregate data from multiple regions ? My current thinking would be manage a bunch of sessions, one for each region and iterate, just wondering if there is a more elegant solution available ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/polds",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=60",
   "displayName": "Peter Olds",
   "gv": "4",
   "id": "529c6f27ed5ab0b3bf04e078",
   "url": "/polds",
   "username": "polds",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"slatunje\" class=\"mention\">@slatunje</span> I\u2019m pretty sure CloudWatch has events for SQS queue size which you could set up an alarm for specific thresholds that emit SNS messages. You won\u2019t have precise numbers but you\u2019ll know that thresholds have been crossed",
  "id": "5891f3f4dcb66e4f76d9ebf1",
  "issues": [],
  "mentions": [
   {
    "screenName": "slatunje",
    "userId": "55ba51b20fc9f982beab8eaa",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-02-01T14:43:00.959Z",
  "text": "@slatunje I\u2019m pretty sure CloudWatch has events for SQS queue size which you could set up an alarm for specific thresholds that emit SNS messages. You won\u2019t have precise numbers but you\u2019ll know that thresholds have been crossed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"pmyjavec\" class=\"mention\">@pmyjavec</span> - Yes, I think that may be the best way, currently. I can&#39;t think of another way of doing this",
  "id": "589275af1e4d4bd962c25a78",
  "issues": [],
  "mentions": [
   {
    "screenName": "pmyjavec",
    "userId": "57d57d8340f3a6eec064adcb",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-02-01T23:56:31.950Z",
  "text": "@pmyjavec - Yes, I think that may be the best way, currently. I can't think of another way of doing this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/andy-miracl",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/19795429?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/19795429?v=4&s=60",
   "displayName": "andy-miracl",
   "gv": "4",
   "id": "58950b0dd73408ce4f47f79c",
   "url": "/andy-miracl",
   "username": "andy-miracl",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"pmyjavec\" class=\"mention\">@pmyjavec</span> I have written utility functions to parallelise multi-region calls and aggregate the results",
  "id": "58950b5da5805a273e0f5af0",
  "issues": [],
  "mentions": [
   {
    "screenName": "pmyjavec",
    "userId": "57d57d8340f3a6eec064adcb",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-02-03T22:59:41.377Z",
  "text": "@pmyjavec I have written utility functions to parallelise multi-region calls and aggregate the results",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/andy-miracl",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/19795429?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/19795429?v=4&s=60",
   "displayName": "andy-miracl",
   "gv": "4",
   "id": "58950b0dd73408ce4f47f79c",
   "url": "/andy-miracl",
   "username": "andy-miracl",
   "v": 2
  },
  "html": "I have a question about the EC2 session. Do we need to close it somehow when we have finished with it?",
  "id": "58950bbf1319d8183eec610b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-02-03T23:01:19.996Z",
  "text": "I have a question about the EC2 session. Do we need to close it somehow when we have finished with it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/andy-miracl",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/19795429?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/19795429?v=4&s=60",
   "displayName": "andy-miracl",
   "gv": "4",
   "id": "58950b0dd73408ce4f47f79c",
   "url": "/andy-miracl",
   "username": "andy-miracl",
   "v": 2
  },
  "html": "In particular, I am writing an http server to display instance information on a webpage. Each request comes in on a separate goroutine. Can I use the same session concurrently? Im assuming I cannot, so I am currently spinning up anew session per request. If I do this how do I ensure that the session is closed when I have finished with it?",
  "id": "58950c30ca6c6eb449420114",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-02-03T23:03:12.738Z",
  "text": "In particular, I am writing an http server to display instance information on a webpage. Each request comes in on a separate goroutine. Can I use the same session concurrently? Im assuming I cannot, so I am currently spinning up anew session per request. If I do this how do I ensure that the session is closed when I have finished with it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/polds",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=60",
   "displayName": "Peter Olds",
   "gv": "4",
   "id": "529c6f27ed5ab0b3bf04e078",
   "url": "/polds",
   "username": "polds",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"andy-miracl\" class=\"mention\">@andy-miracl</span> sharing sessions is both allowed and encouraged providing you\u2019re not needing to change credentials or regions. ",
  "id": "589623413f5ec4d0075669a1",
  "issues": [],
  "mentions": [
   {
    "screenName": "andy-miracl",
    "userId": "58950b0dd73408ce4f47f79c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-02-04T18:53:53.108Z",
  "text": "@andy-miracl sharing sessions is both allowed and encouraged providing you\u2019re not needing to change credentials or regions. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/polds",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=60",
   "displayName": "Peter Olds",
   "gv": "4",
   "id": "529c6f27ed5ab0b3bf04e078",
   "url": "/polds",
   "username": "polds",
   "v": 8
  },
  "html": "<p>First few paragraphs here <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/session/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/aws/session/</a></p><p> Sessions can be shared across all service clients that share the same base configuration. The Session is built from the SDK&#39;s default configuration and request handlers.</p><p>Sessions should be cached when possible, because creating a new Session will load all configuration values from the environment, and config files each time the Session is created. Sharing the Session value across all of your service clients will ensure the configuration is loaded the fewest number of times possible.</p><p>Concurrency</p><p>Sessions are safe to use concurrently as long as the Session is not being modified. The SDK will not modify the Session once the Session has been created. Creating service clients concurrently from a shared Session is safe.</p>",
  "id": "5896237a3bcc9b3b25dc5a23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-02-04T18:54:50.969Z",
  "text": "First few paragraphs here http://docs.aws.amazon.com/sdk-for-go/api/aws/session/\n\n Sessions can be shared across all service clients that share the same base configuration. The Session is built from the SDK's default configuration and request handlers.\n\nSessions should be cached when possible, because creating a new Session will load all configuration values from the environment, and config files each time the Session is created. Sharing the Session value across all of your service clients will ensure the configuration is loaded the fewest number of times possible.\n\nConcurrency\n\nSessions are safe to use concurrently as long as the Session is not being modified. The SDK will not modify the Session once the Session has been created. Creating service clients concurrently from a shared Session is safe.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/session/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/mantzas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/605434?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/605434?v=4&s=60",
   "displayName": "Sotirios Mantziaris",
   "gv": "4",
   "id": "54d4a0bfdb8155e6700f852d",
   "url": "/mantzas",
   "username": "mantzas",
   "v": 15
  },
  "html": "hi, i create a file in s3 with text content &quot;1&quot; using  PutObject. When reading the file the buffer returned is empty. do i miss something?",
  "id": "589c805fde50490822a832ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-02-09T14:44:47.817Z",
  "text": "hi, i create a file in s3 with text content \"1\" using  PutObject. When reading the file the buffer returned is empty. do i miss something?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mantzas\" class=\"mention\">@mantzas</span> - can you provide a small code snippet? That&#39;ll give us all the necessary information to see what&#39;s going on :)",
  "id": "589cb7ff1465c46a56434db1",
  "issues": [],
  "mentions": [
   {
    "screenName": "mantzas",
    "userId": "54d4a0bfdb8155e6700f852d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-02-09T18:42:07.750Z",
  "text": "@mantzas - can you provide a small code snippet? That'll give us all the necessary information to see what's going on :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "Hey folks. Can somebody tell me please if there is like a recommended way of parsing cloudformation stack template files? I&#39;m using this guys template formatter <a href=\"https://github.com/crewjam/go-cloudformation/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/crewjam/go-cloudformation/</a> but is there no office aws parser around? ",
  "id": "589d8ebcaa800ee52c7856b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-02-10T09:58:20.792Z",
  "text": "Hey folks. Can somebody tell me please if there is like a recommended way of parsing cloudformation stack template files? I'm using this guys template formatter https://github.com/crewjam/go-cloudformation/ but is there no office aws parser around? ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/crewjam/go-cloudformation/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "And after this, of course I still have to construct the actual request struct. At this point I only just loaded stuff from a json file. ",
  "id": "589d8ef01465c46a56478b57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-02-10T09:59:12.530Z",
  "text": "And after this, of course I still have to construct the actual request struct. At this point I only just loaded stuff from a json file. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "And by office I meany official. :-:-)",
  "id": "589d8f2fde50490822adb0d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-02-10T10:00:15.842Z",
  "text": "And by office I meany official. :-:-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "Never mind. The template is actually passed as an aws.String. I misunderstood the doc. ",
  "id": "589dda1421d548df2cf011f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-02-10T15:19:48.548Z",
  "text": "Never mind. The template is actually passed as an aws.String. I misunderstood the doc. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": " <span data-link-type=\"mention\" data-screen-name=\"Skarlso\" class=\"mention\">@Skarlso</span> Glad you found what you were looking for. Correct the template field is just a string value. The SDK does not provide a feature to build the templates from Go types directly. There is the experimental and not activity being developed package <code>github.com/awslabs/aws-cfn-go-template</code> that provides basic functionality converting Go types to CloudFormation Templates, but I&#39;m not sure how it compares to go-cloudformation package you linked.",
  "id": "589df563aa800ee52c7ad7a0",
  "issues": [],
  "mentions": [
   {
    "screenName": "Skarlso",
    "userId": "5753d59cc43b8c601976d39e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-02-10T17:16:19.849Z",
  "text": " @Skarlso Glad you found what you were looking for. Correct the template field is just a string value. The SDK does not provide a feature to build the templates from Go types directly. There is the experimental and not activity being developed package `github.com/awslabs/aws-cfn-go-template` that provides basic functionality converting Go types to CloudFormation Templates, but I'm not sure how it compares to go-cloudformation package you linked.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello all, the AWS SDK for Go just published a <a href=\"https://aws.amazon.com/blogs/developer/using-the-aws-sdk-for-go-encryption-client/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">blog</a> about using the s3crypto package. Please let me know what you guys think!",
  "id": "589e5c6f6b2d8dd5522b2e81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-02-11T00:35:59.330Z",
  "text": "Hello all, the AWS SDK for Go just published a [blog](https://aws.amazon.com/blogs/developer/using-the-aws-sdk-for-go-encryption-client/) about using the s3crypto package. Please let me know what you guys think!",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/blogs/developer/using-the-aws-sdk-for-go-encryption-client/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> hey thanks! I&#39;m cool with that. I sort of thought that the input structure is a struct which represents the whole template. But than realised it&#39;s not. :-D",
  "id": "589eae39aa800ee52c7e60d2",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-02-11T06:24:57.652Z",
  "text": "@jasdel hey thanks! I'm cool with that. I sort of thought that the input structure is a struct which represents the whole template. But than realised it's not. :-D",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> looks good too me. :-)",
  "id": "589eae5200c00c3d4f23b992",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-02-11T06:25:22.064Z",
  "text": "@xibz looks good too me. :-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/polds",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=60",
   "displayName": "Peter Olds",
   "gv": "4",
   "id": "529c6f27ed5ab0b3bf04e078",
   "url": "/polds",
   "username": "polds",
   "v": 8
  },
  "html": "I\u2019ve got a Dynamo table that has an attribute called <code>token</code> which appears to be a reserved keyword, but I\u2019m trying to do a Query with the ProjectionExpression set to <code>token</code> and its failing. I tried substituting it with an ExpressionAttributeName and that throws \u201cQuery key condition not supported\u201d. Any thoughts are appreciated. Here\u2019s my query:<pre><code>&amp;dynamodb.<span class=\"type\">QueryInput</span>{\n        <span class=\"type\">TableName</span>:              aws.<span class=\"type\">String</span>(\u201cmyTable<span class=\"string\">\"),\n        KeyConditionExpression: aws.String(\"</span>#primary = :<span class=\"keyword\">val</span><span class=\"string\">\"),\n        ExpressionAttributeValues: map[string]*dynamodb.AttributeValue{\n            \"</span>:<span class=\"keyword\">val</span><span class=\"string\">\":  {N: aws.String(\u201c1\"</span>)},\n        },\n        <span class=\"type\">ExpressionAttributeNames</span>: map[<span class=\"built_in\">string</span>]*<span class=\"built_in\">string</span>{\n            <span class=\"string\">\"#primary\"</span>: aws.<span class=\"type\">String</span>(\u201cid<span class=\"string\">\"),\n            \"</span>#tkn<span class=\"string\">\":     aws.String(\"</span>token<span class=\"string\">\"),\n        },\n        ProjectionExpression: aws.String(\"</span>#tkn<span class=\"string\">\"),\n    }</span></code></pre>",
  "id": "58a1cecc238b1dae57038084",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-02-13T15:20:44.163Z",
  "text": "I\u2019ve got a Dynamo table that has an attribute called `token` which appears to be a reserved keyword, but I\u2019m trying to do a Query with the ProjectionExpression set to `token` and its failing. I tried substituting it with an ExpressionAttributeName and that throws \u201cQuery key condition not supported\u201d. Any thoughts are appreciated. Here\u2019s my query:\n```\n&dynamodb.QueryInput{\n\t\tTableName:              aws.String(\u201cmyTable\"),\n\t\tKeyConditionExpression: aws.String(\"#primary = :val\"),\n\t\tExpressionAttributeValues: map[string]*dynamodb.AttributeValue{\n\t\t\t\":val\":  {N: aws.String(\u201c1\")},\n\t\t},\n\t\tExpressionAttributeNames: map[string]*string{\n\t\t\t\"#primary\": aws.String(\u201cid\"),\n\t\t\t\"#tkn\":     aws.String(\"token\"),\n\t\t},\n\t\tProjectionExpression: aws.String(\"#tkn\"),\n\t}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/polds",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2372558?v=4&s=60",
   "displayName": "Peter Olds",
   "gv": "4",
   "id": "529c6f27ed5ab0b3bf04e078",
   "url": "/polds",
   "username": "polds",
   "v": 8
  },
  "html": "Nevermind. The <code>ExpressionAttributeNames</code> works fine. I was doing something else that was breaking things. Got it working now.",
  "id": "58a1d25c21d548df2c02e19a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-02-13T15:35:56.435Z",
  "text": "Nevermind. The `ExpressionAttributeNames` works fine. I was doing something else that was breaking things. Got it working now.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/praveen_kaizen_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/713402331446915073/2rFLTrlW.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/713402331446915073/2rFLTrlW_bigger.jpg",
   "displayName": "Praveen Madineni",
   "id": "5733aab3c43b8c6019726236",
   "url": "/praveen_kaizen_twitter",
   "username": "praveen_kaizen_twitter"
  },
  "html": "Hello all. I&#39;m facing another issue with go sdk to generate credential report",
  "id": "58a4e76e872fc8ce623f6277",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-02-15T23:42:38.325Z",
  "text": "Hello all. I'm facing another issue with go sdk to generate credential report",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/praveen_kaizen_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/713402331446915073/2rFLTrlW.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/713402331446915073/2rFLTrlW_bigger.jpg",
   "displayName": "Praveen Madineni",
   "id": "5733aab3c43b8c6019726236",
   "url": "/praveen_kaizen_twitter",
   "username": "praveen_kaizen_twitter"
  },
  "html": "I&#39;m using this sample code",
  "id": "58a4e78421d548df2c154762",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-02-15T23:43:00.080Z",
  "text": "I'm using this sample code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/praveen_kaizen_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/713402331446915073/2rFLTrlW.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/713402331446915073/2rFLTrlW_bigger.jpg",
   "displayName": "Praveen Madineni",
   "id": "5733aab3c43b8c6019726236",
   "url": "/praveen_kaizen_twitter",
   "username": "praveen_kaizen_twitter"
  },
  "html": "/code         var params *iam.GenerateCredentialReportInput<br>            resp, err := svc.GenerateCredentialReport(params)<pre><code>        <span class=\"keyword\">if</span> err != nil {\n<span class=\"comment\">// Print the error, cast err to awserr.Error to get the Code and</span>\n<span class=\"comment\">// Message from an error.</span>\n    fmt.<span class=\"keyword\">Println</span>(err.Error())\n    <span class=\"keyword\">return</span>\n        }\n\n        <span class=\"comment\">// Pretty-print the response data.</span>\n        fmt.<span class=\"keyword\">Println</span>(resp)</code></pre>",
  "id": "58a4e78a21d548df2c154780",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-02-15T23:43:06.055Z",
  "text": "/code \t\tvar params *iam.GenerateCredentialReportInput\n\t\t\tresp, err := svc.GenerateCredentialReport(params)\n\n\t\t\tif err != nil {\n    // Print the error, cast err to awserr.Error to get the Code and\n    // Message from an error.\n    \tfmt.Println(err.Error())\n    \treturn\n\t\t\t}\n\n\t\t\t// Pretty-print the response data.\n\t\t\tfmt.Println(resp)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/praveen_kaizen_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/713402331446915073/2rFLTrlW.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/713402331446915073/2rFLTrlW_bigger.jpg",
   "displayName": "Praveen Madineni",
   "id": "5733aab3c43b8c6019726236",
   "url": "/praveen_kaizen_twitter",
   "username": "praveen_kaizen_twitter"
  },
  "html": "and I&#39;m expecting a json of credential report.",
  "id": "58a4e79a21d548df2c1547d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-02-15T23:43:22.380Z",
  "text": "and I'm expecting a json of credential report.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/praveen_kaizen_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/713402331446915073/2rFLTrlW.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/713402331446915073/2rFLTrlW_bigger.jpg",
   "displayName": "Praveen Madineni",
   "id": "5733aab3c43b8c6019726236",
   "url": "/praveen_kaizen_twitter",
   "username": "praveen_kaizen_twitter"
  },
  "html": "However I am getting this error",
  "id": "58a4e7a221d548df2c1547f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-02-15T23:43:30.404Z",
  "text": "However I am getting this error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/praveen_kaizen_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/713402331446915073/2rFLTrlW.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/713402331446915073/2rFLTrlW_bigger.jpg",
   "displayName": "Praveen Madineni",
   "id": "5733aab3c43b8c6019726236",
   "url": "/praveen_kaizen_twitter",
   "username": "praveen_kaizen_twitter"
  },
  "html": "not really an errror. But response",
  "id": "58a4e7b8872fc8ce623f6397",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-02-15T23:43:52.181Z",
  "text": "not really an errror. But response",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/praveen_kaizen_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/713402331446915073/2rFLTrlW.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/713402331446915073/2rFLTrlW_bigger.jpg",
   "displayName": "Praveen Madineni",
   "id": "5733aab3c43b8c6019726236",
   "url": "/praveen_kaizen_twitter",
   "username": "praveen_kaizen_twitter"
  },
  "html": "/code {<br>  State: &quot;COMPLETE&quot;<br>}",
  "id": "58a4e7bb21d548df2c15482d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-02-15T23:43:55.719Z",
  "text": "/code {\n  State: \"COMPLETE\"\n}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"praveen_kaizen_twitter\" class=\"mention\">@praveen_kaizen_twitter</span>  you&#39;ll need to use the <code>GetCredentialReport</code> API operation to retrieve the credential report.  The <code>GenerateCredentialReport</code> is an async API operation that when complete the report can be retrieved with GetCredentialReport. Check out the IAM service doc, <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html</a> for more information on these two APIs.",
  "id": "58a4fed70ad50ac3152020b5",
  "issues": [],
  "mentions": [
   {
    "screenName": "praveen_kaizen_twitter",
    "userId": "5733aab3c43b8c6019726236",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-02-16T01:22:31.383Z",
  "text": "@praveen_kaizen_twitter  you'll need to use the `GetCredentialReport` API operation to retrieve the credential report.  The `GenerateCredentialReport` is an async API operation that when complete the report can be retrieved with GetCredentialReport. Check out the IAM service doc, http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html for more information on these two APIs.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/nboukeffa",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/154042?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/154042?v=3&s=60",
   "displayName": "Nadir Boukeffa",
   "gv": "3",
   "id": "58a6b38ad73408ce4f4af9e6",
   "url": "/nboukeffa",
   "username": "nboukeffa",
   "v": 1
  },
  "html": "Hi guys, do you know if it exist any query builder in for building lucene query and/or structured query?",
  "id": "58a6b463de50490822dc55fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-02-17T08:29:23.384Z",
  "text": "Hi guys, do you know if it exist any query builder in for building lucene query and/or structured query?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/nboukeffa",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/154042?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/154042?v=3&s=60",
   "displayName": "Nadir Boukeffa",
   "gv": "3",
   "id": "58a6b38ad73408ce4f4af9e6",
   "url": "/nboukeffa",
   "username": "nboukeffa",
   "v": 1
  },
  "html": "I found this for now <a href=\"https://github.com/balzaczyy/golucene\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/balzaczyy/golucene</a> but if you have other suggestions thanks!",
  "id": "58a6b472de50490822dc5638",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-02-17T08:29:38.862Z",
  "text": "I found this for now https://github.com/balzaczyy/golucene but if you have other suggestions thanks!",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/balzaczyy/golucene"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/IanZhao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2393895?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2393895?v=4&s=60",
   "displayName": "Ian Chenyang Zhao",
   "gv": "4",
   "id": "540ddba7163965c9bc2034f8",
   "url": "/IanZhao",
   "username": "IanZhao",
   "v": 14
  },
  "html": "anyone using <code>cognitoidentityprovider</code> package? ",
  "id": "58a76b3a00c00c3d4f52a0d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-02-17T21:29:30.211Z",
  "text": "anyone using `cognitoidentityprovider` package? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/IanZhao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2393895?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2393895?v=4&s=60",
   "displayName": "Ian Chenyang Zhao",
   "gv": "4",
   "id": "540ddba7163965c9bc2034f8",
   "url": "/IanZhao",
   "username": "IanZhao",
   "v": 14
  },
  "html": "I\u2019m wonder how to save a developer authenticated identity to my identity pool..",
  "id": "58a76b4d1465c46a567c4bb1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-02-17T21:29:49.696Z",
  "text": "I\u2019m wonder how to save a developer authenticated identity to my identity pool..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/gao-jian",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3766503?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3766503?v=3&s=60",
   "displayName": "Jian Gao",
   "gv": "3",
   "id": "58af1f97d73408ce4f4c6ff4",
   "url": "/gao-jian",
   "username": "gao-jian",
   "v": 1
  },
  "html": "Hi guys, to use EC2 CreateImage to create an aim, if I ignore BlockDeviceMappings in CreateImageInput,<br>will I always get all drive devices in the EC2 instance? I have an extra gp2 block device for data. Thanks.",
  "id": "58af21e9872fc8ce62759e89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-02-23T17:54:49.593Z",
  "text": "Hi guys, to use EC2 CreateImage to create an aim, if I ignore BlockDeviceMappings in CreateImageInput, \nwill I always get all drive devices in the EC2 instance? I have an extra gp2 block device for data. Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/CannibalVox",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1728156?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1728156?v=4&s=60",
   "displayName": "Stephen Baynham",
   "gv": "4",
   "id": "54f22b2a15522ed4b3dc9f3b",
   "url": "/CannibalVox",
   "username": "CannibalVox",
   "v": 18
  },
  "html": "Can I use filters to pull all whatevers with a given tag?",
  "id": "58af65cb1465c46a56a6a548",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-02-23T22:44:27.893Z",
  "text": "Can I use filters to pull all whatevers with a given tag?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/CannibalVox",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1728156?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1728156?v=4&s=60",
   "displayName": "Stephen Baynham",
   "gv": "4",
   "id": "54f22b2a15522ed4b3dc9f3b",
   "url": "/CannibalVox",
   "username": "CannibalVox",
   "v": 18
  },
  "html": "Example is for instance all RDS event subscriptions",
  "id": "58af65dce961e53c7f5baafa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-02-23T22:44:44.095Z",
  "text": "Example is for instance all RDS event subscriptions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/CannibalVox",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1728156?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1728156?v=4&s=60",
   "displayName": "Stephen Baynham",
   "gv": "4",
   "id": "54f22b2a15522ed4b3dc9f3b",
   "url": "/CannibalVox",
   "username": "CannibalVox",
   "v": 18
  },
  "html": "or all RDS instances",
  "id": "58af65e91465c46a56a6a610",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-02-23T22:44:57.042Z",
  "text": "or all RDS instances",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"IanZhao\" class=\"mention\">@IanZhao</span>, it may be a good idea to reach out to the <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=173&amp;start=0\" rel=\"nofollow\" target=\"_blank\" class=\"link\">service</a> to see if they can give you better assistance.",
  "id": "58af683be961e53c7f5bb843",
  "issues": [],
  "mentions": [
   {
    "screenName": "IanZhao",
    "userId": "540ddba7163965c9bc2034f8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-02-23T22:54:51.890Z",
  "text": "Hello @IanZhao, it may be a good idea to reach out to the [service](https://forums.aws.amazon.com/forum.jspa?forumID=173&start=0) to see if they can give you better assistance.",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=173&amp;start=0"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "Can I set my own header with ses.SendEmailInput ?",
  "id": "58b13ef97ceae5376a38803f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-02-25T08:23:21.677Z",
  "text": "Can I set my own header with ses.SendEmailInput ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span> Check out the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/ses/#SES.SendEmailRequest\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><code>SendEmailRequest</code></a> method on the SES client. It will return a <code>request.Request</code> value that you can set headers on the built request with <code>HTTPRequest.Header.Set(&quot;value&quot;, &quot;key&quot;)</code>. Once you set the headers you need make sure to call <code>Send()</code> method of the Request value to send the API operation request.",
  "id": "58b1f9971465c46a56b3ed10",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-02-25T21:39:35.475Z",
  "text": "@kaihendry Check out the [`SendEmailRequest`](http://docs.aws.amazon.com/sdk-for-go/api/service/ses/#SES.SendEmailRequest) method on the SES client. It will return a `request.Request` value that you can set headers on the built request with `HTTPRequest.Header.Set(\"value\", \"key\")`. Once you set the headers you need make sure to call `Send()` method of the Request value to send the API operation request.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/ses/#SES.SendEmailRequest"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/ryanwalls",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/842653?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/842653?v=3&s=60",
   "displayName": "ryanwalls",
   "gv": "3",
   "id": "5490834cdb8155e6700dfe08",
   "url": "/ryanwalls",
   "username": "ryanwalls",
   "v": 4
  },
  "html": "Anyone know if there is a method to get the CPU and Memory information given an instance type?  e.g.  Given c4.xlarge, get the CPU and Memory specs for that instance type.",
  "id": "58b331697ceae5376a41775e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-02-26T19:50:01.805Z",
  "text": "Anyone know if there is a method to get the CPU and Memory information given an instance type?  e.g.  Given c4.xlarge, get the CPU and Memory specs for that instance type.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-02-27T09:34:45.257Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ryanwalls\" class=\"mention\">@ryanwalls</span> I use the data from ec2instances.info in one of my projects, have a look at <a href=\"https://github.com/cristim/autospotting\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/cristim/autospotting</a>",
  "id": "58b3f29dfef1d2de52ab8fd6",
  "issues": [],
  "mentions": [
   {
    "screenName": "ryanwalls",
    "userId": "5490834cdb8155e6700dfe08",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-02-27T09:34:21.859Z",
  "text": "@ryanwalls I use the data from ec2instances.info in one of my projects, have a look at https://github.com/cristim/autospotting",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/cristim/autospotting"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "it would be nice to make this a stand-alone library, I bet there are more people interested in using this information",
  "id": "58b3f2f29eb1bd81481e1f16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-02-27T09:35:46.452Z",
  "text": "it would be nice to make this a stand-alone library, I bet there are more people interested in using this information",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> email headers, sorry",
  "id": "58b4f7837ceae5376a4b87dc",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-02-28T04:07:31.905Z",
  "text": "@jasdel email headers, sorry",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span> thanks for the clarification, yes email headers can also be set. <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/header-fields.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">This</a> is a list of the headers that SES supports. I think to do this you&#39;ll need to construct the email message your self using, <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/ses/#SES.SendRawEmail\" rel=\"nofollow\" target=\"_blank\" class=\"link\">SendRawEmail</a> API operation",
  "id": "58b5e50f7ceae5376a51a8b5",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-02-28T21:01:03.029Z",
  "text": "@kaihendry thanks for the clarification, yes email headers can also be set. [This](http://docs.aws.amazon.com/ses/latest/DeveloperGuide/header-fields.html) is a list of the headers that SES supports. I think to do this you'll need to construct the email message your self using, [SendRawEmail](http://docs.aws.amazon.com/sdk-for-go/api/service/ses/#SES.SendRawEmail) API operation",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/ses/latest/DeveloperGuide/header-fields.html"
   },
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/ses/#SES.SendRawEmail"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "Hey everone. :) ",
  "id": "58b6b4fade504908222e6949",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-03-01T11:48:10.650Z",
  "text": "Hey everone. :) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "Did ever somebody use CodeDeploy and create DeploymentGroup by any chance? (:",
  "id": "58b6b5137ceae5376a563b55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-03-01T11:48:35.556Z",
  "text": "Did ever somebody use CodeDeploy and create DeploymentGroup by any chance? (:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "when I&#39;m trying to use it, it says to my that the DeploymentGroup doesn&#39;t exist. ",
  "id": "58b6b5321465c46a56ce01fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-03-01T11:49:06.206Z",
  "text": "when I'm trying to use it, it says to my that the DeploymentGroup doesn't exist. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "But I&#39;m calling CreateDeploymentGroup. :D ",
  "id": "58b6b53be961e53c7f833868",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-03-01T11:49:15.601Z",
  "text": "But I'm calling CreateDeploymentGroup. :D ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "so OFC it doesn&#39;t exist yet. :D ",
  "id": "58b6b540e961e53c7f833879",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-03-01T11:49:20.496Z",
  "text": "so OFC it doesn't exist yet. :D ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "I&#39;m just trying to create it!",
  "id": "58b6b54800c00c3d4fa3ee96",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-03-01T11:49:28.409Z",
  "text": "I'm just trying to create it!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "Hi",
  "id": "58b6e066872fc8ce629f5c2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-03-01T14:53:26.054Z",
  "text": "Hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "Does anyone use s3 / s3manager to upload?",
  "id": "58b6e06721d548df2c766bbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-03-01T14:53:27.600Z",
  "text": "Does anyone use s3 / s3manager to upload?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jeffotoni\" class=\"mention\">@jeffotoni</span> sure, what question, or issue are you having with s3 or s3manager for upload?",
  "id": "58b71a8d21d548df2c7826a8",
  "issues": [],
  "mentions": [
   {
    "screenName": "jeffotoni",
    "userId": "58b63979d73408ce4f4d96ef",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-03-01T19:01:33.667Z",
  "text": "@jeffotoni sure, what question, or issue are you having with s3 or s3manager for upload?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Hello, I wanted to download one file per range of bytes, eg: 10mb, I would like to download 1mb or 0-1024 bytes",
  "id": "58b72537e961e53c7f8681cf",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-01T19:47:03.553Z",
  "text": "@jasdel Hello, I wanted to download one file per range of bytes, eg: 10mb, I would like to download 1mb or 0-1024 bytes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jeffotoni\" class=\"mention\">@jeffotoni</span> I think using S3 service client&#39;s <code>GetObject</code> API operation would be best.  The <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#GetObjectInput\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><code>GetObjectInput</code></a> type&#39;s field <code>Range</code> is where you&#39;d specify the byte range of the object you&#39;re looking to get.",
  "id": "58b7274200c00c3d4fa744f3",
  "issues": [],
  "mentions": [
   {
    "screenName": "jeffotoni",
    "userId": "58b63979d73408ce4f4d96ef",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-01T19:55:46.474Z",
  "text": "@jeffotoni I think using S3 service client's `GetObject` API operation would be best.  The [`GetObjectInput`](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#GetObjectInput) type's field `Range` is where you'd specify the byte range of the object you're looking to get.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#GetObjectInput"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "If you&#39;re looking to get the full content of an object concurrently the s3manager&#39;s Downloader would be best. But if you&#39;re only looking to get a slice of an object the above suggestion is probably what you want to use",
  "id": "58b72776de5049082231873e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-01T19:56:38.990Z",
  "text": "If you're looking to get the full content of an object concurrently the s3manager's Downloader would be best. But if you're only looking to get a slice of an object the above suggestion is probably what you want to use",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Is right, I&#39;m going from the one researched in the manual to check it, thanks",
  "id": "58b729fb21d548df2c78a6e5",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-01T20:07:23.707Z",
  "text": "@jasdel Is right, I'm going from the one researched in the manual to check it, thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "I&#39;m baffled by the DynamoDB golang examples; I cannot seem to figure out how to do a CreateTable that aligns with a struct that will be marshaled.  are there any simple examples to help get things going?",
  "id": "58b72d8f872fc8ce62a1b3eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-01T20:22:39.472Z",
  "text": "I'm baffled by the DynamoDB golang examples; I cannot seem to figure out how to do a CreateTable that aligns with a struct that will be marshaled.  are there any simple examples to help get things going?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-01T20:46:07.377Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "here&#39;s an example of what I am trying to insert into the table<pre><code><span class=\"typedef\"><span class=\"keyword\">type</span> <span class=\"type\">Record</span> struct <span class=\"container\">{\n  <span class=\"type\">Key</span> <span class=\"title\">string</span>\n  <span class=\"type\">Name</span> <span class=\"title\">string</span>\n  <span class=\"type\">Attributes</span> <span class=\"title\">map</span>[<span class=\"title\">string</span>]<span class=\"title\">interface</span>\n}</span></span>\n\n<span class=\"typedef\"><span class=\"keyword\">type</span> <span class=\"type\">SpecificRecord</span> struct <span class=\"container\">{\n  <span class=\"type\">Record</span>\n  <span class=\"type\">Source</span> <span class=\"title\">string</span>\n}</span></span>\n\n<span class=\"typedef\"><span class=\"keyword\">type</span> <span class=\"type\">OtherRecord</span> struct <span class=\"container\">{\n  <span class=\"type\">Record</span>\n  <span class=\"type\">OtherField</span> <span class=\"title\">string</span>\n}</span></span></code></pre>",
  "id": "58b730ea7ceae5376a59deef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-03-01T20:36:58.432Z",
  "text": "here's an example of what I am trying to insert into the table\n```\ntype Record struct {\n  Key string\n  Name string\n  Attributes map[string]interface\n}\n\ntype SpecificRecord struct {\n  Record\n  Source string\n}\n\ntype OtherRecord struct {\n  Record\n  OtherField string\n}\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dishmael\" class=\"mention\">@dishmael</span> <a href=\"https://github.com/aws/aws-sdk-go/tree/master/example/service/dynamodb/scanItems\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/tree/master/example/service/dynamodb/scanItems</a> is an example for using the marshalers to get items from dynamodb.  Also the SDK docs have a few examples, <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbattribute/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbattribute/</a>",
  "id": "58b73333f1a33b627568f8a6",
  "issues": [],
  "mentions": [
   {
    "screenName": "dishmael",
    "userId": "5878f078d73408ce4f43502d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-01T20:46:43.588Z",
  "text": "@dishmael https://github.com/aws/aws-sdk-go/tree/master/example/service/dynamodb/scanItems is an example for using the marshalers to get items from dynamodb.  Also the SDK docs have a few examples, http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbattribute/",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/tree/master/example/service/dynamodb/scanItems"
   },
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbattribute/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I read those, but I cannot seem to figure out how to create the table so that it accepts the struct",
  "id": "58b73390e961e53c7f86e3b5",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-01T20:48:16.169Z",
  "text": "@jasdel I read those, but I cannot seem to figure out how to create the table so that it accepts the struct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "I&#39;ve been reading <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/#example_DynamoDB_CreateTable\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/#example_DynamoDB_CreateTable</a>",
  "id": "58b733ab872fc8ce62a1df36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-01T20:48:43.420Z",
  "text": "I've been reading http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/#example_DynamoDB_CreateTable",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/#example_DynamoDB_CreateTable"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Ah ok, check out <a href=\"https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/createTable/main.go\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/createTable/main.go</a> this example file",
  "id": "58b733b4872fc8ce62a1df9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-01T20:48:52.783Z",
  "text": "Ah ok, check out https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/createTable/main.go this example file",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/createTable/main.go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I agree adding a few more pointed examples for dynamodb would be helpful",
  "id": "58b733d4e961e53c7f86e69d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-01T20:49:24.397Z",
  "text": "I agree adding a few more pointed examples for dynamodb would be helpful",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Check out this file for example on putting Go types into dynamodb using the dynamodbattributes package. <a href=\"https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/worker/result_recorder.go#L32\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/worker/result_recorder.go#L32</a>",
  "id": "58b734221465c46a56d1b761",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T20:50:42.008Z",
  "text": "Check out this file for example on putting Go types into dynamodb using the dynamodbattributes package. https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/worker/result_recorder.go#L32",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/worker/result_recorder.go#L32"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-03-01T20:53:16.274Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "looking at the link (...createTable/main.go), I would assume I should create my table using...<pre><code><span class=\"tag\">svc</span><span class=\"class\">.CreateTable</span>(&amp;dynamodb.CreateTableInput{\n  <span class=\"tag\">TableName</span>: <span class=\"tag\">aws</span><span class=\"class\">.String</span>(tableName),\n  <span class=\"tag\">AttributeDefinitions</span>: <span class=\"attr_selector\">[]</span>*<span class=\"tag\">dynamodb</span><span class=\"class\">.AttributeDefinition</span>{\n    {\n      <span class=\"tag\">AttributeName</span>: <span class=\"tag\">aws</span><span class=\"class\">.String</span>(<span class=\"string\">\"Key\"</span>),\n      <span class=\"tag\">AttributeType</span>: <span class=\"tag\">aws</span><span class=\"class\">.String</span>(dynamodb.ScalarAttributeTypeM),\n    },\n  },\n  <span class=\"tag\">KeySchema</span>: <span class=\"attr_selector\">[]</span>*<span class=\"tag\">dynamodb</span><span class=\"class\">.KeySchemaElement</span>{\n    {\n      <span class=\"tag\">AttributeName</span>: <span class=\"tag\">aws</span><span class=\"class\">.String</span>(<span class=\"string\">\"Key\"</span>),\n      <span class=\"tag\">KeyType</span>:       <span class=\"tag\">aws</span><span class=\"class\">.String</span>(<span class=\"string\">\"HASH\"</span>),\n    },\n  },\n  <span class=\"tag\">ProvisionedThroughput</span>: <span class=\"keyword\">&amp;</span><span class=\"tag\">dynamodb</span><span class=\"class\">.ProvisionedThroughput</span>{\n    <span class=\"attribute\">ReadCapacityUnits</span>:  aws.<span class=\"function\">Int64</span>(<span class=\"number\">1</span>),\n    <span class=\"attribute\">WriteCapacityUnits</span>: aws.<span class=\"function\">Int64</span>(<span class=\"number\">1</span>),\n  },\n})</code></pre>",
  "id": "58b734b400c00c3d4fa7ac98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T20:53:08.337Z",
  "text": "looking at the link (...createTable/main.go), I would assume I should create my table using...\n```\nsvc.CreateTable(&dynamodb.CreateTableInput{\n  TableName: aws.String(tableName),\n  AttributeDefinitions: []*dynamodb.AttributeDefinition{\n    {\n      AttributeName: aws.String(\"Key\"),\n      AttributeType: aws.String(dynamodb.ScalarAttributeTypeM),\n    },\n  },\n  KeySchema: []*dynamodb.KeySchemaElement{\n    {\n      AttributeName: aws.String(\"Key\"),\n      KeyType:       aws.String(\"HASH\"),\n    },\n  },\n  ProvisionedThroughput: &dynamodb.ProvisionedThroughput{\n    ReadCapacityUnits:  aws.Int64(1),\n    WriteCapacityUnits: aws.Int64(1),\n  },\n})\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dishmael\" class=\"mention\">@dishmael</span> that looks correct. If you&#39;re scheme also has a sort or partition key you can add those via the <code>KeySchema</code> and <code>AttributeDefinitions</code> also. ",
  "id": "58b7351b7ceae5376a59fe7c",
  "issues": [],
  "mentions": [
   {
    "screenName": "dishmael",
    "userId": "5878f078d73408ce4f43502d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T20:54:51.815Z",
  "text": "@dishmael that looks correct. If you're scheme also has a sort or partition key you can add those via the `KeySchema` and `AttributeDefinitions` also. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ok, let me try that - thanks for the help!",
  "id": "58b7354521d548df2c78fac9",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T20:55:33.547Z",
  "text": "@jasdel ok, let me try that - thanks for the help!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<code>AttributeDefinitions</code> is a list of named fields and their types that will be used in the <code>KeySchema</code>. KeySchema is a list of keys that will be used by the table.",
  "id": "58b7355221d548df2c78fb78",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T20:55:46.967Z",
  "text": "`AttributeDefinitions` is a list of named fields and their types that will be used in the `KeySchema`. KeySchema is a list of keys that will be used by the table.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": ":)",
  "id": "58b735577ceae5376a5a0036",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T20:55:51.744Z",
  "text": ":)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "lol I <em>think</em> I get it",
  "id": "58b7356af1a33b6275690b55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T20:56:10.114Z",
  "text": "lol I _think_ I get it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "we&#39;ll see in a few minutes",
  "id": "58b73572872fc8ce62a1eaf8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T20:56:18.284Z",
  "text": "we'll see in a few minutes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I believe the code is working - I am no longer getting an error when I do an insert; however, the response is empty - shouldn&#39;t it return <em>something</em> from the insert?",
  "id": "58b7375800c00c3d4fa7bf42",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T21:04:24.153Z",
  "text": "@jasdel I believe the code is working - I am no longer getting an error when I do an insert; however, the response is empty - shouldn't it return _something_ from the insert?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "By default there won&#39;t be any values in the operation&#39;s <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/#PutItemOutput\" rel=\"nofollow\" target=\"_blank\" class=\"link\">response</a>.  You can set a few option flags in the <code>PutItemInput</code> type that will enable some metric values in the response.",
  "id": "58b737d600c00c3d4fa7c303",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T21:06:30.850Z",
  "text": "By default there won't be any values in the operation's [response](http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/#PutItemOutput).  You can set a few option flags in the `PutItemInput` type that will enable some metric values in the response.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/#PutItemOutput"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Or are you trying to do a GetItem after the items were inserted?",
  "id": "58b73804de5049082231f87d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T21:07:16.612Z",
  "text": "Or are you trying to do a GetItem after the items were inserted?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "no, was assuming the PutItem operation would return the object being inserted",
  "id": "58b738461465c46a56d1d58d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T21:08:22.536Z",
  "text": "no, was assuming the PutItem operation would return the object being inserted",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "with like a status = ok",
  "id": "58b7384ce961e53c7f870647",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T21:08:28.420Z",
  "text": "with like a status = ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "or something",
  "id": "58b7384e00c00c3d4fa7c5ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T21:08:30.665Z",
  "text": "or something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Ah, no as long as you don&#39;t get an error response i think its safe to assume the operation was successful. ",
  "id": "58b73875e961e53c7f870775",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T21:09:09.199Z",
  "text": "Ah, no as long as you don't get an error response i think its safe to assume the operation was successful. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "ok cool",
  "id": "58b7387dde5049082231faa0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T21:09:17.992Z",
  "text": "ok cool",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "thanks again for the quick help!",
  "id": "58b738847ceae5376a5a156d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T21:09:24.946Z",
  "text": "thanks again for the quick help!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "though be mindful if you have multiple actors inserting an Item with the same key, the SDK does not implement locking/versioning of records. (<span data-link-type=\"issue\" data-issue=\"409\" class=\"issue\">#409</span>).",
  "id": "58b738bc872fc8ce62a2022d",
  "issues": [
   {
    "number": "409"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T21:10:20.402Z",
  "text": "though be mindful if you have multiple actors inserting an Item with the same key, the SDK does not implement locking/versioning of records. (#409).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "glad to help",
  "id": "58b738bf21d548df2c791522",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-01T21:10:23.800Z",
  "text": "glad to help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "good to know, though I am building a single client that will proxy requests so I don&#39;t think that will be an issue",
  "id": "58b738fa1465c46a56d1da05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-01T21:11:22.925Z",
  "text": "good to know, though I am building a single client that will proxy requests so I don't think that will be an issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "cool, even better :)",
  "id": "58b7390921d548df2c79170b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-01T21:11:37.268Z",
  "text": "cool, even better :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/mylons",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/433565?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/433565?v=4&s=60",
   "displayName": "Mike Lyons",
   "gv": "4",
   "id": "530636685e986b0712ef9167",
   "url": "/mylons",
   "username": "mylons",
   "v": 10
  },
  "html": "hey chums -- i&#39;m somewhat new to golang, and i&#39;m trying to figure out how to use the <code>unit.Session</code> from <a href=\"https://godoc.org/github.com/aws/aws-sdk-go/awstesting/unit\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://godoc.org/github.com/aws/aws-sdk-go/awstesting/unit</a> to act as a dummy session or something to allow me to create aws resources for testing",
  "id": "58b73cb8872fc8ce62a21c80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-03-01T21:27:20.323Z",
  "text": "hey chums -- i'm somewhat new to golang, and i'm trying to figure out how to use the `unit.Session` from https://godoc.org/github.com/aws/aws-sdk-go/awstesting/unit to act as a dummy session or something to allow me to create aws resources for testing",
  "unread": false,
  "urls": [
   {
    "url": "https://godoc.org/github.com/aws/aws-sdk-go/awstesting/unit"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mylons\" class=\"mention\">@mylons</span> unit.Session would be good if you&#39;ll be removing or replacing the request handlers that a service will use when making a request and mocking them out with your own. An alternative way would be to set the endpoint manually to a test server that will respond with faked data.",
  "id": "58b73dac21d548df2c793638",
  "issues": [],
  "mentions": [
   {
    "screenName": "mylons",
    "userId": "530636685e986b0712ef9167",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-03-01T21:31:24.897Z",
  "text": "@mylons unit.Session would be good if you'll be removing or replacing the request handlers that a service will use when making a request and mocking them out with your own. An alternative way would be to set the endpoint manually to a test server that will respond with faked data.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/mylons",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/433565?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/433565?v=4&s=60",
   "displayName": "Mike Lyons",
   "gv": "4",
   "id": "530636685e986b0712ef9167",
   "url": "/mylons",
   "username": "mylons",
   "v": 10
  },
  "html": "ahhhhhhh -- i was literally just reading your post on the aws blog about mocking out aws resources",
  "id": "58b73dc4de50490822322013",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-01T21:31:48.239Z",
  "text": "ahhhhhhh -- i was literally just reading your post on the aws blog about mocking out aws resources",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/mylons",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/433565?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/433565?v=4&s=60",
   "displayName": "Mike Lyons",
   "gv": "4",
   "id": "530636685e986b0712ef9167",
   "url": "/mylons",
   "username": "mylons",
   "v": 10
  },
  "html": "and coming to the conclusion that unit.Session was not the way to go",
  "id": "58b73dcde961e53c7f87306c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-01T21:31:57.621Z",
  "text": "and coming to the conclusion that unit.Session was not the way to go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/mylons",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/433565?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/433565?v=4&s=60",
   "displayName": "Mike Lyons",
   "gv": "4",
   "id": "530636685e986b0712ef9167",
   "url": "/mylons",
   "username": "mylons",
   "v": 10
  },
  "html": "this is basically the asnwer to my question, ty <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> <a href=\"https://aws.amazon.com/blogs/developer/mocking-out-then-aws-sdk-for-go-for-unit-testing/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://aws.amazon.com/blogs/developer/mocking-out-then-aws-sdk-for-go-for-unit-testing/</a>",
  "id": "58b73ddee961e53c7f873115",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-01T21:32:14.228Z",
  "text": "this is basically the asnwer to my question, ty @jasdel https://aws.amazon.com/blogs/developer/mocking-out-then-aws-sdk-for-go-for-unit-testing/",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/blogs/developer/mocking-out-then-aws-sdk-for-go-for-unit-testing/"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-03-01T21:32:29.806Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "awesome :)",
  "id": "58b73de621d548df2c7937b7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-01T21:32:22.738Z",
  "text": "awesome :)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/mylons",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/433565?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/433565?v=4&s=60",
   "displayName": "Mike Lyons",
   "gv": "4",
   "id": "530636685e986b0712ef9167",
   "url": "/mylons",
   "username": "mylons",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> alright i&#39;m finally mocked up, but <code>sess := session.Must(session.NewSession())</code> blows up due to things like missing region, creds",
  "id": "58b761a2e961e53c7f8800b8",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-02T00:04:50.031Z",
  "text": "@jasdel alright i'm finally mocked up, but `sess := session.Must(session.NewSession())` blows up due to things like missing region, creds",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/mylons",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/433565?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/433565?v=4&s=60",
   "displayName": "Mike Lyons",
   "gv": "4",
   "id": "530636685e986b0712ef9167",
   "url": "/mylons",
   "username": "mylons",
   "v": 10
  },
  "html": "is that expected?",
  "id": "58b761a4de5049082232e9d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-02T00:04:52.075Z",
  "text": "is that expected?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Since the environment is mocked you can specify a mock region and <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/#pkg-variables\" rel=\"nofollow\" target=\"_blank\" class=\"link\">anonymous credentials</a> like those used in the awstesting/unit package for unit.Session.",
  "id": "58b7621a00c00c3d4fa8bce4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-02T00:06:50.400Z",
  "text": "Since the environment is mocked you can specify a mock region and [anonymous credentials](http://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/#pkg-variables) like those used in the awstesting/unit package for unit.Session.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/#pkg-variables"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/mylons",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/433565?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/433565?v=4&s=60",
   "displayName": "Mike Lyons",
   "gv": "4",
   "id": "530636685e986b0712ef9167",
   "url": "/mylons",
   "username": "mylons",
   "v": 10
  },
  "html": "awww yis",
  "id": "58b762291465c46a56d2da3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-02T00:07:05.381Z",
  "text": "awww yis",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/mylons",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/433565?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/433565?v=4&s=60",
   "displayName": "Mike Lyons",
   "gv": "4",
   "id": "530636685e986b0712ef9167",
   "url": "/mylons",
   "username": "mylons",
   "v": 10
  },
  "html": "ty, sir",
  "id": "58b7622f872fc8ce62a2fea9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-02T00:07:11.626Z",
  "text": "ty, sir",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "np :)",
  "id": "58b7625121d548df2c7a1f79",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-02T00:07:45.564Z",
  "text": "np :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "hi",
  "id": "58baca3c21d548df2c8d20ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-04T14:07:56.859Z",
  "text": "hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "Does anyone have any examples of how to use the interface<br>S3iface ListMultipartUploadsPages?<br><a href=\"Https://godoc.org/github.com/aws/aws-sdk-go/service/s3/s3iface\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Https://godoc.org/github.com/aws/aws-sdk-go/service/s3/s3iface</a>",
  "id": "58bacaccde5049082244d990",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-04T14:10:20.085Z",
  "text": "Does anyone have any examples of how to use the interface\nS3iface ListMultipartUploadsPages?\nHttps://godoc.org/github.com/aws/aws-sdk-go/service/s3/s3iface",
  "unread": false,
  "urls": [
   {
    "url": "Https://godoc.org/github.com/aws/aws-sdk-go/service/s3/s3iface"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "Look what I did.",
  "id": "58bacb18872fc8ce62b5e1a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-04T14:11:36.909Z",
  "text": "Look what I did.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "result, err := uploader.Upload(paramUp, func(u *s3manager.Uploader) {<pre><code>    u.<span class=\"type\">PartSize</span> = <span class=\"number\">10</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span> <span class=\"comment\">// 10MB part size</span>\n    u.<span class=\"type\">LeavePartsOnError</span> = <span class=\"built_in\">true</span>    <span class=\"comment\">// Don't delete the parts if the upload fails.</span>\n    u.<span class=\"type\">Concurrency</span> = <span class=\"number\">4</span>\n    u.<span class=\"type\">MaxUploadParts</span> = <span class=\"number\">100</span>\n    fmt.<span class=\"type\">Println</span>(u)\n    u.<span class=\"type\">S3</span>.<span class=\"type\">ListMultipartUploadsPages</span>(*s3.<span class=\"type\">ListMultipartUploadsInput</span>, <span class=\"func\"><span class=\"keyword\">func</span><span class=\"params\">(*s3.ListMultipartUploadsOutput,)</span></span>\n})</code></pre>",
  "id": "58bacb2e00c00c3d4fbbced3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-04T14:11:58.817Z",
  "text": "result, err := uploader.Upload(paramUp, func(u *s3manager.Uploader) {\n\n\t\tu.PartSize = 10 * 1024 * 1024 // 10MB part size\n\t\tu.LeavePartsOnError = true    // Don't delete the parts if the upload fails.\n\t\tu.Concurrency = 4\n\t\tu.MaxUploadParts = 100\n\t\tfmt.Println(u)\n\t\tu.S3.ListMultipartUploadsPages(*s3.ListMultipartUploadsInput, func(*s3.ListMultipartUploadsOutput,)\n\t})",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "The * s3.ListMultipartUploadsInput parameter that I am not getting",
  "id": "58bacc79872fc8ce62b5e89b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-03-04T14:17:29.068Z",
  "text": "The * s3.ListMultipartUploadsInput parameter that I am not getting",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "I got it, I&#39;m not believing it, haha",
  "id": "58bacea1f1a33b62757c385a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-03-04T14:26:41.644Z",
  "text": "I got it, I'm not believing it, haha",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "The parameter has to be done before the call with s3,",
  "id": "58bacf10de5049082244ecff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-03-04T14:28:32.300Z",
  "text": "The parameter has to be done before the call with s3,\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "params := &amp;s3.ListMultipartUploadsInput{<br>        Bucket: &amp;bucketName,<br>    }<br>errList := u.S3.ListMultipartUploadsPages(params, func(page *s3.ListMultipartUploadsOutput, lastPage bool) bool {",
  "id": "58bacf25872fc8ce62b5f61e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-04T14:28:53.283Z",
  "text": "params := &s3.ListMultipartUploadsInput{\n\t\tBucket: &bucketName,\n\t}\nerrList := u.S3.ListMultipartUploadsPages(params, func(page *s3.ListMultipartUploadsOutput, lastPage bool) bool {",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "I would like to know how I get Upload status, does anyone know of an example, to capture upload% upload?",
  "id": "58bad1327ceae5376a6e164c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-03-04T14:37:38.750Z",
  "text": "I would like to know how I get Upload status, does anyone know of an example, to capture upload% upload?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "hi <span data-link-type=\"mention\" data-screen-name=\"jeffotoni\" class=\"mention\">@jeffotoni</span> glad you solved your original question. For upload percentage, the SDK does not yet support this feature, we have <span data-link-type=\"issue\" data-issue=\"279\" class=\"issue\">#279</span> tracking this.",
  "id": "58bd97f3e961e53c7fa903ac",
  "issues": [
   {
    "number": "279"
   }
  ],
  "mentions": [
   {
    "screenName": "jeffotoni",
    "userId": "58b63979d73408ce4f4d96ef",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-06T17:10:11.778Z",
  "text": "hi @jeffotoni glad you solved your original question. For upload percentage, the SDK does not yet support this feature, we have #279 tracking this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ryanwalls\" class=\"mention\">@ryanwalls</span> was it you who asked a few days back about a library that would give you information about EC2 instance types?",
  "id": "58bdea099eb1bd81481ef0ce",
  "issues": [],
  "mentions": [
   {
    "screenName": "ryanwalls",
    "userId": "5490834cdb8155e6700dfe08",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-03-06T23:00:25.765Z",
  "text": "@ryanwalls was it you who asked a few days back about a library that would give you information about EC2 instance types?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ryanwalls\" class=\"mention\">@ryanwalls</span> have a look at <a href=\"https://github.com/cristim/ec2-instances-info\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/cristim/ec2-instances-info</a>, I just released the component I mentioned back then into a dedicated library which could be used by anyone",
  "id": "58bdea664150746b1515ec26",
  "issues": [],
  "mentions": [
   {
    "screenName": "ryanwalls",
    "userId": "5490834cdb8155e6700dfe08",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-03-06T23:01:58.521Z",
  "text": "@ryanwalls have a look at https://github.com/cristim/ec2-instances-info, I just released the component I mentioned back then into a dedicated library which could be used by anyone",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/cristim/ec2-instances-info"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/pmyjavec",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/315096?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/315096?v=4&s=60",
   "displayName": "Paul Myjavec",
   "gv": "4",
   "id": "57d57d8340f3a6eec064adcb",
   "url": "/pmyjavec",
   "username": "pmyjavec",
   "v": 5
  },
  "html": "Is there an easy way to just get a Region full name &quot;Ohio&quot; for example,  given the region name &quot;us-west-2&quot;, seems overly difficult ",
  "id": "58bfd0dc1465c46a5601249e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-08T09:37:32.785Z",
  "text": "Is there an easy way to just get a Region full name \"Ohio\" for example,  given the region name \"us-west-2\", seems overly difficult ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/CannibalVox",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1728156?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1728156?v=4&s=60",
   "displayName": "Stephen Baynham",
   "gv": "4",
   "id": "54f22b2a15522ed4b3dc9f3b",
   "url": "/CannibalVox",
   "username": "CannibalVox",
   "v": 18
  },
  "html": "Is there anything in the SDK that allows me to retrieve, for instance, memory amount from an instance class?",
  "id": "58c07bfe872fc8ce62d56926",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-03-08T21:47:42.525Z",
  "text": "Is there anything in the SDK that allows me to retrieve, for instance, memory amount from an instance class?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/CannibalVox",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1728156?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1728156?v=4&s=60",
   "displayName": "Stephen Baynham",
   "gv": "4",
   "id": "54f22b2a15522ed4b3dc9f3b",
   "url": "/CannibalVox",
   "username": "CannibalVox",
   "v": 18
  },
  "html": "I guess I can manually build my own table but I&#39;d rather not have to maintain it ;)",
  "id": "58c07c0b21d548df2caced44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-08T21:47:55.923Z",
  "text": "I guess I can manually build my own table but I'd rather not have to maintain it ;)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-08T22:55:27.646Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"CannibalVox\" class=\"mention\">@CannibalVox</span> not in the SDK, but see the URL I pasted above",
  "id": "58c08af5fef1d2de52ac9cf7",
  "issues": [],
  "mentions": [
   {
    "screenName": "CannibalVox",
    "userId": "54f22b2a15522ed4b3dc9f3b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-08T22:51:33.237Z",
  "text": "@CannibalVox not in the SDK, but see the URL I pasted above",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"pmyjavec\" class=\"mention\">@pmyjavec</span> The SDK has this information but its only used for <a href=\"https://github.com/aws/aws-sdk-go/blob/master/aws/endpoints/defaults.go#L18-L31\" rel=\"nofollow\" target=\"_blank\" class=\"link\">comments</a> right now. I&#39;m not sure the SDK could make a strong assurance that the name would ever change in the future to make available programmatically. If you&#39;d like this as a feature request, please open a Issue with it on github. ",
  "id": "58c08d977ceae5376a8e44fa",
  "issues": [],
  "mentions": [
   {
    "screenName": "pmyjavec",
    "userId": "57d57d8340f3a6eec064adcb",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-08T23:02:47.699Z",
  "text": "@pmyjavec The SDK has this information but its only used for [comments](https://github.com/aws/aws-sdk-go/blob/master/aws/endpoints/defaults.go#L18-L31) right now. I'm not sure the SDK could make a strong assurance that the name would ever change in the future to make available programmatically. If you'd like this as a feature request, please open a Issue with it on github. ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/blob/master/aws/endpoints/defaults.go#L18-L31"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/awsong",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/787544?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/787544?v=3&s=60",
   "displayName": "Andy Song",
   "gv": "3",
   "id": "5756c431c43b8c60197850d0",
   "url": "/awsong",
   "username": "awsong",
   "v": 1
  },
  "html": "Does anybody use AWS WorkDocs API?",
  "id": "58c1174d7ceae5376a91dbe5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-09T08:50:21.943Z",
  "text": "Does anybody use AWS WorkDocs API?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/awsong",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/787544?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/787544?v=3&s=60",
   "displayName": "Andy Song",
   "gv": "3",
   "id": "5756c431c43b8c60197850d0",
   "url": "/awsong",
   "username": "awsong",
   "v": 1
  },
  "html": "I&#39;m wondering how I can get full content of a file/object so that I can copy it. ",
  "id": "58c1176c00c00c3d4fdfb705",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-09T08:50:52.815Z",
  "text": "I'm wondering how I can get full content of a file/object so that I can copy it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Telmo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/109544?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/109544?v=4&s=60",
   "displayName": "Roberto",
   "gv": "4",
   "id": "5485c7d9db8155e6700dd009",
   "url": "/Telmo",
   "username": "Telmo",
   "v": 2
  },
  "html": "morning, I am fairly new to go and first time using the aws-sdk-go library. I am trying to fetch the cloudwatch metrics for a given instance, but as far as I can tell I can only download 1 metric at the time. Is there a way to get all metrics without having to make multiple calls?",
  "id": "58c165e2de50490822689f45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-09T14:25:38.056Z",
  "text": "morning, I am fairly new to go and first time using the aws-sdk-go library. I am trying to fetch the cloudwatch metrics for a given instance, but as far as I can tell I can only download 1 metric at the time. Is there a way to get all metrics without having to make multiple calls?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Telmo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/109544?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/109544?v=4&s=60",
   "displayName": "Roberto",
   "gv": "4",
   "id": "5485c7d9db8155e6700dd009",
   "url": "/Telmo",
   "username": "Telmo",
   "v": 2
  },
  "html": "<code>GetMetricStatistics</code> seems to only want to use a single instance of <code>cloudwatch.GetMetricStatisticsInput</code> instead of a slice of <code>cloudwatch.GetMetricStatisticsInput</code>",
  "id": "58c16648e961e53c7fc090dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-09T14:27:20.541Z",
  "text": "`GetMetricStatistics` seems to only want to use a single instance of `cloudwatch.GetMetricStatisticsInput` instead of a slice of `cloudwatch.GetMetricStatisticsInput`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Telmo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/109544?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/109544?v=4&s=60",
   "displayName": "Roberto",
   "gv": "4",
   "id": "5485c7d9db8155e6700dd009",
   "url": "/Telmo",
   "username": "Telmo",
   "v": 2
  },
  "html": "am I missing something? am I using the right function?",
  "id": "58c1665add08b4b859a8e01b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-09T14:27:38.670Z",
  "text": "am I missing something? am I using the right function?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "I am trying to set the TTL on a table but I keep getting an error: An unknown operation was requested",
  "id": "58c1ad37de504908226a7836",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-09T19:29:59.870Z",
  "text": "I am trying to set the TTL on a table but I keep getting an error: An unknown operation was requested",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "the table items have a property called expiretime that is a time value",
  "id": "58c1ad55872fc8ce62dd3f8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-09T19:30:29.974Z",
  "text": "the table items have a property called expiretime that is a time value",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "then I use...<pre><code><span class=\"keyword\">&amp;</span><span class=\"tag\">dynamodb</span><span class=\"class\">.UpdateTimeToLiveInput</span>{\n        <span class=\"tag\">TableName</span>: <span class=\"tag\">aws</span><span class=\"class\">.String</span>(table),\n        <span class=\"tag\">TimeToLiveSpecification</span>: <span class=\"keyword\">&amp;</span><span class=\"tag\">dynamodb</span><span class=\"class\">.TimeToLiveSpecification</span>{\n            <span class=\"attribute\">AttributeName</span>: aws.<span class=\"function\">String</span>(<span class=\"string\">\"expiretime\"</span>),\n            <span class=\"attribute\">Enabled</span>:       aws.<span class=\"function\">Bool</span>(true),\n        },\n    }</code></pre>",
  "id": "58c1ad75dd08b4b859aab773",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-09T19:31:01.944Z",
  "text": "then I use...\n```\n&dynamodb.UpdateTimeToLiveInput{\n\t\tTableName: aws.String(table),\n\t\tTimeToLiveSpecification: &dynamodb.TimeToLiveSpecification{\n\t\t\tAttributeName: aws.String(\"expiretime\"),\n\t\t\tEnabled:       aws.Bool(true),\n\t\t},\n\t}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "not sure what&#39;s going on",
  "id": "58c1ad8321d548df2cb4aa0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-09T19:31:15.796Z",
  "text": "not sure what's going on",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dishmael\" class=\"mention\">@dishmael</span> You&#39;re looking to use <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TTL.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">Dynamod DB&#39;s TTL</a> new feature correct?  The time needs to be a integer in seconds from UTC epoc (e.g unix time).",
  "id": "58c1af0b21d548df2cb4b417",
  "issues": [],
  "mentions": [
   {
    "screenName": "dishmael",
    "userId": "5878f078d73408ce4f43502d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-09T19:37:47.636Z",
  "text": "@dishmael You're looking to use [Dynamod DB's TTL](http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TTL.html) new feature correct?  The time needs to be a integer in seconds from UTC epoc (e.g unix time).",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TTL.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "ah, so its not a time field, its an integer field",
  "id": "58c1af27872fc8ce62dd4a9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-09T19:38:15.187Z",
  "text": "ah, so its not a time field, its an integer field",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> same issue; I converted the expiretime field to int64 and tried again, same error",
  "id": "58c1b1c51465c46a560d7494",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-09T19:49:25.107Z",
  "text": "@jasdel same issue; I converted the expiretime field to int64 and tried again, same error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "here is the full code called right after the table is up...<pre><code>params := &amp;dynamodb.UpdateTimeToLiveInput{\n  TableName: aws.<span class=\"built_in\">String</span>(table),\n  TimeToLiveSpecification: &amp;dynamodb.TimeToLiveSpecification{\n    AttributeName: aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"expiretime\"</span>),\n    Enabled:       aws.Bool(<span class=\"literal\">true</span>),\n  },\n}\n\n<span class=\"keyword\">if</span> _, <span class=\"built_in\">err</span> := svc.UpdateTimeToLive(params); <span class=\"built_in\">err</span> != nil {\n  <span class=\"built_in\">log</span>.Fatalf(<span class=\"string\">\"Error setting TTL: %s\\n\"</span>, <span class=\"built_in\">err</span>.<span class=\"keyword\">Error</span>())\n}</code></pre>",
  "id": "58c1b2a97ceae5376a95ca9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-09T19:53:13.234Z",
  "text": "here is the full code called right after the table is up...\n```\nparams := &dynamodb.UpdateTimeToLiveInput{\n  TableName: aws.String(table),\n  TimeToLiveSpecification: &dynamodb.TimeToLiveSpecification{\n    AttributeName: aws.String(\"expiretime\"),\n    Enabled:       aws.Bool(true),\n  },\n}\n\nif _, err := svc.UpdateTimeToLive(params); err != nil {\n  log.Fatalf(\"Error setting TTL: %s\\n\", err.Error())\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "does the TTL option not work on a local copy of dynamodb?",
  "id": "58c1b37000c00c3d4fe3be2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-09T19:56:32.579Z",
  "text": "does the TTL option not work on a local copy of dynamodb?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dishmael\" class=\"mention\">@dishmael</span>  - I&#39;m unable to reproduce this with the service itself. So, I think you may be on to something with it being the local copy. Do you have the latest version of local?",
  "id": "58c1b5767ceae5376a95dcd7",
  "issues": [],
  "mentions": [
   {
    "screenName": "dishmael",
    "userId": "5878f078d73408ce4f43502d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-09T20:05:10.245Z",
  "text": "@dishmael  - I'm unable to reproduce this with the service itself. So, I think you may be on to something with it being the local copy. Do you have the latest version of local?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "I couldn&#39;t find anything regarding if TTL was not available for local.",
  "id": "58c1b5c2de504908226ab2b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-09T20:06:26.353Z",
  "text": "I couldn't find anything regarding if TTL was not available for local.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> yeah, I have the latest - it doesn&#39;t list the version when I start but I downloaded it last week so assume its the latest",
  "id": "58c1b5e121d548df2cb4e193",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-09T20:06:57.130Z",
  "text": "@xibz yeah, I have the latest - it doesn't list the version when I start but I downloaded it last week so assume its the latest",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "I&#39;m stumped, the error message doesn&#39;t really tell me anything",
  "id": "58c1b6081465c46a560d95f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-09T20:07:36.733Z",
  "text": "I'm stumped, the error message doesn't really tell me anything",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Do none of the TTL operations work?",
  "id": "58c1b616de504908226ab509",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-03-09T20:07:50.394Z",
  "text": "Do none of the TTL operations work?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "I&#39;ve only tried svc.UpdateTimeToLive(...)",
  "id": "58c1b63700c00c3d4fe3d15e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-03-09T20:08:23.084Z",
  "text": "I've only tried svc.UpdateTimeToLive(...)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "can it be set in the table declaration?",
  "id": "58c1b643dd08b4b859aaf428",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-03-09T20:08:35.098Z",
  "text": "can it be set in the table declaration?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "<a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/#example_DynamoDB_UpdateTimeToLive\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/#example_DynamoDB_UpdateTimeToLive</a>",
  "id": "58c1b6b0de504908226ab7f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-03-09T20:10:24.953Z",
  "text": "https://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/#example_DynamoDB_UpdateTimeToLive",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/#example_DynamoDB_UpdateTimeToLive"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "that&#39;s the example I&#39;ve been trying to use",
  "id": "58c1b6b7de504908226ab804",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-03-09T20:10:31.103Z",
  "text": "that's the example I've been trying to use",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "no matter what I try, I get the same error",
  "id": "58c1b6c57ceae5376a95e5cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-03-09T20:10:45.803Z",
  "text": "no matter what I try, I get the same error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "I think the best bet here is to reach out to the service team&#39;s <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=131\" rel=\"nofollow\" target=\"_blank\" class=\"link\">forums</a>. I&#39;m going to reach out to the service team, myself, about this and see if they are able to give some information to what is going on.<br>I used your snippet and it works on non-local. So, I don&#39;t think it&#39;s something you&#39;re doing.",
  "id": "58c1b885de504908226ac341",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-09T20:18:13.155Z",
  "text": "I think the best bet here is to reach out to the service team's [forums](https://forums.aws.amazon.com/forum.jspa?forumID=131). I'm going to reach out to the service team, myself, about this and see if they are able to give some information to what is going on.\nI used your snippet and it works on non-local. So, I don't think it's something you're doing.",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=131"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "hmmm very odd",
  "id": "58c1bdab872fc8ce62ddaa21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-09T20:40:11.165Z",
  "text": "hmmm very odd",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "ok well I appreciate you looking into it",
  "id": "58c1bdaf00c00c3d4fe3fe1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-09T20:40:15.627Z",
  "text": "ok well I appreciate you looking into it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "I just downloaded a fresh copy of DDB to see if maybe my copy were old",
  "id": "58c1bdbddd08b4b859ab22b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-09T20:40:29.468Z",
  "text": "I just downloaded a fresh copy of DDB to see if maybe my copy were old",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "same issue though",
  "id": "58c1bdc0dd08b4b859ab22bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-09T20:40:32.037Z",
  "text": "same issue though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "<a href=\"https://forums.aws.amazon.com/thread.jspa?threadID=251088\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://forums.aws.amazon.com/thread.jspa?threadID=251088</a>",
  "id": "58c1be7ede504908226ae33d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-09T20:43:42.596Z",
  "text": "https://forums.aws.amazon.com/thread.jspa?threadID=251088",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/thread.jspa?threadID=251088"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dishmael\" class=\"mention\">@dishmael</span> - The service team just got back to me saying it isn&#39;t supported yet in local.",
  "id": "58c1dc661465c46a560e7f04",
  "issues": [],
  "mentions": [
   {
    "screenName": "dishmael",
    "userId": "5878f078d73408ce4f43502d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-09T22:51:18.577Z",
  "text": "@dishmael - The service team just got back to me saying it isn't supported yet in local.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> dang, ok - thanks for the update :( ",
  "id": "58c2246200c00c3d4fe62788",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-10T03:58:26.097Z",
  "text": "@xibz dang, ok - thanks for the update :( ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/meirf",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2043305?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2043305?v=4&s=60",
   "displayName": "meirf",
   "gv": "4",
   "id": "58c24298d73408ce4f4f9dee",
   "url": "/meirf",
   "username": "meirf",
   "v": 3
  },
  "html": "elbv2.escribeLoadBalancers says that it only returns Application Load Balancers. elb.escribeLoadBalancers says doesn&#39;t say that it limits Application vs Classic. Is there a way to all Application and Classic in elbv2?",
  "id": "58c243bade504908226d6597",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-03-10T06:12:10.737Z",
  "text": "elbv2.escribeLoadBalancers says that it only returns Application Load Balancers. elb.escribeLoadBalancers says doesn't say that it limits Application vs Classic. Is there a way to all Application and Classic in elbv2?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/meirf",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2043305?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2043305?v=4&s=60",
   "displayName": "meirf",
   "gv": "4",
   "id": "58c24298d73408ce4f4f9dee",
   "url": "/meirf",
   "username": "meirf",
   "v": 3
  },
  "html": "*describeLoadBalancers",
  "id": "58c243f27ceae5376a98bf3f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-03-10T06:13:06.749Z",
  "text": "*describeLoadBalancers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/CannibalVox",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1728156?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1728156?v=4&s=60",
   "displayName": "Stephen Baynham",
   "gv": "4",
   "id": "54f22b2a15522ed4b3dc9f3b",
   "url": "/CannibalVox",
   "username": "CannibalVox",
   "v": 18
  },
  "html": "Is there any way to find out of an aurora rds.DBInstance is a writer or reader?",
  "id": "58c307751465c46a56154e90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-03-10T20:07:17.007Z",
  "text": "Is there any way to find out of an aurora rds.DBInstance is a writer or reader?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Wphelp98737",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=60",
   "displayName": "Morteza Janjani",
   "gv": "4",
   "id": "586f82b9d73408ce4f41a600",
   "url": "/Wphelp98737",
   "username": "Wphelp98737",
   "v": 15
  },
  "html": "\u0628\u0646\u0627\u0645 \u062e\u062f\u0627 \u0648 \u0628\u0627 \u0633\u0644\u0627\u0645 \u062e\u062f\u0645\u062a \u0634\u0645\u0627",
  "id": "58c34d1b21d548df2cbe1676",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-03-11T01:04:27.451Z",
  "text": "\u0628\u0646\u0627\u0645 \u062e\u062f\u0627 \u0648 \u0628\u0627 \u0633\u0644\u0627\u0645 \u062e\u062f\u0645\u062a \u0634\u0645\u0627",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "<p>I think I might have found a bug or my interpretation of keys and aws.Int64 is wrong.  I have the following...</p><pre><code>...\n<span class=\"rule\"><span class=\"attribute\">ExpressionAttributeValues</span>:<span class=\"value\"> map[string]*dynamodb.AttributeValue{\n  <span class=\"string\">\":val5\"</span>: {\n    N: aws.<span class=\"function\">Int64</span>(time.<span class=\"function\">Time</span>().<span class=\"function\">Unix</span>()),\n  }\n}\n...</span></span></code></pre><p>When I compile the code, I get the following error message: cannot use aws.Int64(time.Time.Unix()) (type <em>int64) as type </em>string in field value. Am I doing it wrong?</p>",
  "id": "58c4809bde504908227976f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-03-11T22:56:26.994Z",
  "text": "I think I might have found a bug or my interpretation of keys and aws.Int64 is wrong.  I have the following...\n```\n...\nExpressionAttributeValues: map[string]*dynamodb.AttributeValue{\n  \":val5\": {\n    N: aws.Int64(time.Time().Unix()),\n  }\n}\n...\n```\nWhen I compile the code, I get the following error message: cannot use aws.Int64(time.Time.Unix()) (type *int64) as type *string in field value. Am I doing it wrong?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/dishmael",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7176097?v=3&s=60",
   "displayName": "David Ishmael",
   "gv": "3",
   "id": "5878f078d73408ce4f43502d",
   "url": "/dishmael",
   "username": "dishmael",
   "v": 1
  },
  "html": "I ended up getting it to work using...<pre><code><span class=\"rule\"><span class=\"attribute\">ExpressionAttributeValues</span>:<span class=\"value\"> map[string]*dynamodb.AttributeValue{\n  <span class=\"string\">\":val5\"</span>: {\n    N: aws.<span class=\"function\">String</span>(strconv.<span class=\"function\">FormatInt</span>(time.<span class=\"function\">Time</span>().<span class=\"function\">Unix</span>(), <span class=\"number\">10</span>)),\n  }\n}</span></span></code></pre>",
  "id": "58c4822ce961e53c7fd25b38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-11T23:03:08.192Z",
  "text": "I ended up getting it to work using...\n```\nExpressionAttributeValues: map[string]*dynamodb.AttributeValue{\n  \":val5\": {\n    N: aws.String(strconv.FormatInt(time.Time().Unix(), 10)),\n  }\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Wphelp98737",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=60",
   "displayName": "Morteza Janjani",
   "gv": "4",
   "id": "586f82b9d73408ce4f41a600",
   "url": "/Wphelp98737",
   "username": "Wphelp98737",
   "v": 15
  },
  "html": "\u0628\u0646\u0627\u0645 \u062e\u062f\u0627 \u0648 \u0628\u0627 \u0633\u0644\u0627\u0645 \u062e\u062f\u0645\u062a \u0634\u0645\u0627 \u0622\u06cc\u0627 \u0648\u0642\u062a\u0634 \u0646\u06cc\u0633\u062a \u06a9\u0647 \u0645\u0646 \u0628\u0647 \u067e\u0648\u0644 \u0628\u0631\u0633\u0645 \u0645\u0646\u06cc \u06a9\u0647 \u062d\u062f\u0648\u062f \u0686\u0647\u0627\u0631 \u0633\u0627\u0644 \u0627\u0633\u062a \u06a9\u0647 \u0647\u0632\u06cc\u0646\u0647 \u06a9\u0631\u062f\u0647 \u0627\u0645 \u0644\u0637\u0641\u0627 \u0645\u0631\u0627 \u0631\u0627\u0647\u0646\u0645\u0627\u06cc\u06cc \u0628\u0641\u0631\u0645\u0627\u0626\u06cc\u062f\u060c \u0645\u062a\u0634\u06a9\u0631\u0645 ",
  "id": "58c5512c21d548df2cc7c1a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-03-12T13:46:20.672Z",
  "text": "\u0628\u0646\u0627\u0645 \u062e\u062f\u0627 \u0648 \u0628\u0627 \u0633\u0644\u0627\u0645 \u062e\u062f\u0645\u062a \u0634\u0645\u0627 \u0622\u06cc\u0627 \u0648\u0642\u062a\u0634 \u0646\u06cc\u0633\u062a \u06a9\u0647 \u0645\u0646 \u0628\u0647 \u067e\u0648\u0644 \u0628\u0631\u0633\u0645 \u0645\u0646\u06cc \u06a9\u0647 \u062d\u062f\u0648\u062f \u0686\u0647\u0627\u0631 \u0633\u0627\u0644 \u0627\u0633\u062a \u06a9\u0647 \u0647\u0632\u06cc\u0646\u0647 \u06a9\u0631\u062f\u0647 \u0627\u0645 \u0644\u0637\u0641\u0627 \u0645\u0631\u0627 \u0631\u0627\u0647\u0646\u0645\u0627\u06cc\u06cc \u0628\u0641\u0631\u0645\u0627\u0626\u06cc\u062f\u060c \u0645\u062a\u0634\u06a9\u0631\u0645 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> the github badges seem to be broken after your latest change",
  "id": "58cc469f794f24854d4df8ef",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-03-17T20:27:11.858Z",
  "text": "@jasdel the github badges seem to be broken after your latest change",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Thank you <span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span>!",
  "id": "58cc46ee2215a08f0499f78f",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-17T20:28:30.623Z",
  "text": "Thank you @cristim!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/fsenart",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/515714?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/515714?v=4&s=60",
   "displayName": "Farzad Senart",
   "gv": "4",
   "id": "529c6b6eed5ab0b3bf04d622",
   "url": "/fsenart",
   "username": "fsenart",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> <span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> it seems to be a general problem with new changes from github. We have the same issue since a few days. Check for example an ancient commit you&#39;ll see the same issue with your readme.",
  "id": "58cc4720f7f7d481042ad512",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   },
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-17T20:29:20.509Z",
  "text": "@cristim @xibz it seems to be a general problem with new changes from github. We have the same issue since a few days. Check for example an ancient commit you'll see the same issue with your readme.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thank <span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> I fixed this in, <span data-link-type=\"issue\" data-issue=\"1136\" class=\"issue\">#1136</span> ",
  "id": "58cc47326701410e584c2b8e",
  "issues": [
   {
    "number": "1136"
   }
  ],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-03-17T20:29:38.071Z",
  "text": "Thank @cristim I fixed this in, #1136 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for the heads up <span data-link-type=\"mention\" data-screen-name=\"fsenart\" class=\"mention\">@fsenart</span> this is the first time I&#39;ve noticed the issue, but will make sure to edit locally now :) or at least preview first",
  "id": "58cc47726d7eb18404dbed8a",
  "issues": [],
  "mentions": [
   {
    "screenName": "fsenart",
    "userId": "529c6b6eed5ab0b3bf04d622",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-17T20:30:42.819Z",
  "text": "Thanks for the heads up @fsenart this is the first time I've noticed the issue, but will make sure to edit locally now :) or at least preview first",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/fsenart",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/515714?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/515714?v=4&s=60",
   "displayName": "Farzad Senart",
   "gv": "4",
   "id": "529c6b6eed5ab0b3bf04d622",
   "url": "/fsenart",
   "username": "fsenart",
   "v": 18
  },
  "html": "its weird. When I check this commit just for exemple <a href=\"https://github.com/aws/aws-sdk-go/tree/0e9d407f5635155ef9d4f1fd5c078e9aa236c177\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/tree/0e9d407f5635155ef9d4f1fd5c078e9aa236c177</a> the issue is still here! ",
  "id": "58cc47787b3f37e7540b07e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-17T20:30:48.769Z",
  "text": "its weird. When I check this commit just for exemple https://github.com/aws/aws-sdk-go/tree/0e9d407f5635155ef9d4f1fd5c078e9aa236c177 the issue is still here! ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/tree/0e9d407f5635155ef9d4f1fd5c078e9aa236c177"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Oh, odd, I didn&#39;t noticed that before",
  "id": "58cc47a36701410e584c2e2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-17T20:31:31.384Z",
  "text": "Oh, odd, I didn't noticed that before",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-17T20:32:01.611Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/fsenart",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/515714?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/515714?v=4&s=60",
   "displayName": "Farzad Senart",
   "gv": "4",
   "id": "529c6b6eed5ab0b3bf04d622",
   "url": "/fsenart",
   "username": "fsenart",
   "v": 18
  },
  "html": "I use <code>grip</code> locally which uses the github api to prerender the readme and all seems ok but once commited it is shown with such issues",
  "id": "58cc47ae1c040b8e040a986e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-17T20:31:42.899Z",
  "text": "I use `grip` locally which uses the github api to prerender the readme and all seems ok but once commited it is shown with such issues",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I&#39;m curious if it is due to the &lt;span&gt; tag is the culprit. Maybe github change their markdown rendering to do &lt;span&gt; different?",
  "id": "58cc481f2215a08f0499fe5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-17T20:33:35.530Z",
  "text": "I'm curious if it is due to the <span> tag is the culprit. Maybe github change their markdown rendering to do <span> different?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/fsenart",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/515714?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/515714?v=4&s=60",
   "displayName": "Farzad Senart",
   "gv": "4",
   "id": "529c6b6eed5ab0b3bf04d622",
   "url": "/fsenart",
   "username": "fsenart",
   "v": 18
  },
  "html": "I can&#39;t find information from github about recent changes. For me I have the issue with tables. ",
  "id": "58cc4861ac314c8a1a5e8a9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-17T20:34:41.362Z",
  "text": "I can't find information from github about recent changes. For me I have the issue with tables. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> And I could not thank you",
  "id": "58cc57c0f7f7d481042b278c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-17T21:40:16.743Z",
  "text": "@jasdel And I could not thank you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/simon-s9",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14272055?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14272055?v=3&s=60",
   "displayName": "Simon",
   "gv": "3",
   "id": "58987dd7d73408ce4f486d3d",
   "url": "/simon-s9",
   "username": "simon-s9",
   "v": 1
  },
  "html": "Hi! Having some issues with running vm&#39;s. For some reason I can see an associated public ip in the console but not in the api response. Any ideas?",
  "id": "58cffa2658ad4eb02833f0fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-03-20T15:49:58.763Z",
  "text": "Hi! Having some issues with running vm's. For some reason I can see an associated public ip in the console but not in the api response. Any ideas?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"simon-s9\" class=\"mention\">@simon-s9</span> are you having an issues configuring a VM or running the sdk in a vm",
  "id": "58d003347b3f37e754189873",
  "issues": [],
  "mentions": [
   {
    "screenName": "simon-s9",
    "userId": "58987dd7d73408ce4f486d3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-03-20T16:28:36.838Z",
  "text": "Hi @simon-s9 are you having an issues configuring a VM or running the sdk in a vm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/simon-s9",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14272055?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14272055?v=3&s=60",
   "displayName": "Simon",
   "gv": "3",
   "id": "58987dd7d73408ce4f486d3d",
   "url": "/simon-s9",
   "username": "simon-s9",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> nope, I&#39;m creating a new vm using golang-sdk. But I&#39;ve figured out a way already. Seems that the public ip address is not returned upon the first call to run instances, but it is returned if you&#39;re trying to describe the instances. It is different behavior from nodejs-sdk (for example). That&#39;s why I got confused.",
  "id": "58d022395917e26076b66665",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-03-20T18:40:57.064Z",
  "text": "@jasdel nope, I'm creating a new vm using golang-sdk. But I've figured out a way already. Seems that the public ip address is not returned upon the first call to run instances, but it is returned if you're trying to describe the instances. It is different behavior from nodejs-sdk (for example). That's why I got confused.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for the update, which service client were you using <span data-link-type=\"mention\" data-screen-name=\"simon-s9\" class=\"mention\">@simon-s9</span> ?",
  "id": "58d025f7b809ca5f4a64a927",
  "issues": [],
  "mentions": [
   {
    "screenName": "simon-s9",
    "userId": "58987dd7d73408ce4f486d3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-03-20T18:56:55.779Z",
  "text": "Thanks for the update, which service client were you using @simon-s9 ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-03-20T18:57:34.229Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/simon-s9",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14272055?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14272055?v=3&s=60",
   "displayName": "Simon",
   "gv": "3",
   "id": "58987dd7d73408ce4f486d3d",
   "url": "/simon-s9",
   "username": "simon-s9",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ec2",
  "id": "58d026166701410e5859f35a",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-03-20T18:57:26.054Z",
  "text": "@jasdel ec2",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/simon-s9",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14272055?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14272055?v=3&s=60",
   "displayName": "Simon",
   "gv": "3",
   "id": "58987dd7d73408ce4f486d3d",
   "url": "/simon-s9",
   "username": "simon-s9",
   "v": 1
  },
  "html": "I&#39;m now into another issue :) for some reason the API does not accept public key, generated by crypto/ssh package. &quot;InvalidKey.Format: Key is not in valid OpenSSH public key format status code: 400&quot;",
  "id": "58d02693b809ca5f4a64acaa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-03-20T18:59:31.280Z",
  "text": "I'm now into another issue :) for some reason the API does not accept public key, generated by crypto/ssh package. \"InvalidKey.Format: Key is not in valid OpenSSH public key format status code: 400\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/vagmi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/35158?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/35158?v=3&s=60",
   "displayName": "Vagmi",
   "gv": "3",
   "id": "5703cddd187bb6f0eaddf6f2",
   "url": "/vagmi",
   "username": "vagmi",
   "v": 1
  },
  "html": "<p>Hi, I am trying to do a <code>DescribeRegions</code> request from the aws-go-sdk. Ideally speaking DescribeRegions does not need any region to be filtered.</p><p>I am using something like this.</p><pre><code>    regionsSvc := ec2.New(sess, <span class=\"constant\">nil</span>)\n    regions, err := regionsSvc.DescribeRegions(<span class=\"constant\">nil</span>)\n    <span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n        fmt.Println(<span class=\"string\">\"Unable to list regions\"</span>, err)\n    }\n    <span class=\"keyword\">for</span> _, reg := <span class=\"keyword\">range</span> regions.Regions {\n        fmt.Println(<span class=\"string\">\"Found region \"</span>, reg.RegionName)\n    }</code></pre><p>The err is <code>MissingRegion: could not find region configuration</code>.  Am I missing something?</p>",
  "id": "58d034a66701410e585a3fcd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-03-20T19:59:34.812Z",
  "text": "Hi, I am trying to do a `DescribeRegions` request from the aws-go-sdk. Ideally speaking DescribeRegions does not need any region to be filtered.\n\nI am using something like this.\n\n```\n\tregionsSvc := ec2.New(sess, nil)\n\tregions, err := regionsSvc.DescribeRegions(nil)\n\tif err != nil {\n\t\tfmt.Println(\"Unable to list regions\", err)\n\t}\n\tfor _, reg := range regions.Regions {\n\t\tfmt.Println(\"Found region \", reg.RegionName)\n\t}\n```\n\nThe err is `MissingRegion: could not find region configuration`.  Am I missing something?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"vagmi\" class=\"mention\">@vagmi</span>, all clients need a region specified. You can use the environment variable <code>AWS_REGION</code> to specify a region or you can set region in the <code>aws.Config</code>. Please let me know if you have any additional questions, and if that works.",
  "id": "58d035528fa1633954fb5ae8",
  "issues": [],
  "mentions": [
   {
    "screenName": "vagmi",
    "userId": "5703cddd187bb6f0eaddf6f2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-03-20T20:02:26.053Z",
  "text": "Hello @vagmi, all clients need a region specified. You can use the environment variable `AWS_REGION` to specify a region or you can set region in the `aws.Config`. Please let me know if you have any additional questions, and if that works.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/vagmi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/35158?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/35158?v=3&s=60",
   "displayName": "Vagmi",
   "gv": "3",
   "id": "5703cddd187bb6f0eaddf6f2",
   "url": "/vagmi",
   "username": "vagmi",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> but as per the documentation of <code>DescribeRegions</code> it does not need a region. Is there another way to get a list of known regions? <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html</a>",
  "id": "58d03dc12215a08f04a87a1a",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-03-20T20:38:25.132Z",
  "text": "@xibz but as per the documentation of `DescribeRegions` it does not need a region. Is there another way to get a list of known regions? http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/vagmi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/35158?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/35158?v=3&s=60",
   "displayName": "Vagmi",
   "gv": "3",
   "id": "5703cddd187bb6f0eaddf6f2",
   "url": "/vagmi",
   "username": "vagmi",
   "v": 1
  },
  "html": "oh good. I understand it now. you need a region for the endpoint but DescribeRegions does get me the other regions and not only the region to which I am making the call.",
  "id": "58d04033fe6a638b1ae72937",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-20T20:48:51.485Z",
  "text": "oh good. I understand it now. you need a region for the endpoint but DescribeRegions does get me the other regions and not only the region to which I am making the call.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Yep, that&#39;s correct <span data-link-type=\"mention\" data-screen-name=\"vagmi\" class=\"mention\">@vagmi</span>.",
  "id": "58d04299b809ca5f4a653f14",
  "issues": [],
  "mentions": [
   {
    "screenName": "vagmi",
    "userId": "5703cddd187bb6f0eaddf6f2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-03-20T20:59:05.425Z",
  "text": "Yep, that's correct @vagmi.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/vagmi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/35158?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/35158?v=3&s=60",
   "displayName": "Vagmi",
   "gv": "3",
   "id": "5703cddd187bb6f0eaddf6f2",
   "url": "/vagmi",
   "username": "vagmi",
   "v": 1
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> ",
  "id": "58d042a5f7f7d4810439d2d2",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-03-20T20:59:17.924Z",
  "text": "thanks @xibz ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/tgruben",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/889059?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/889059?v=4&s=60",
   "displayName": "tgruben",
   "gv": "4",
   "id": "5819fcd4d73408ce4f3318ef",
   "url": "/tgruben",
   "username": "tgruben",
   "v": 3
  },
  "html": "I am able to publish via iotdataplane.Publish interface but I am not able to access iotdataplane.UpdateThingShadow for i receive the following errorERROR:ForbiddenException: Forbidden\\n\\tstatus code: 403, request id",
  "id": "58d082eb58ad4eb02836494e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-03-21T01:33:31.628Z",
  "text": "I am able to publish via iotdataplane.Publish interface but I am not able to access iotdataplane.UpdateThingShadow for i receive the following errorERROR:ForbiddenException: Forbidden\\n\\tstatus code: 403, request id",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/tgruben",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/889059?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/889059?v=4&s=60",
   "displayName": "tgruben",
   "gv": "4",
   "id": "5819fcd4d73408ce4f3318ef",
   "url": "/tgruben",
   "username": "tgruben",
   "v": 3
  },
  "html": "my policy is enable iot:*.   Does that make sense?",
  "id": "58d08308b809ca5f4a66364f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-03-21T01:34:00.758Z",
  "text": "my policy is enable iot:*.   Does that make sense?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"per19\" class=\"mention\">@per19</span> this is not the best place to ask about python",
  "id": "58d6541f7b553c707c50cb4b",
  "issues": [],
  "mentions": [
   {
    "screenName": "per19",
    "userId": "57b3934f40f3a6eec05fd5f0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-03-25T11:27:26.995Z",
  "text": "@per19 this is not the best place to ask about python",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/the1337beauty_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/2163201626/logo-small.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/2163201626/logo-small_bigger.png",
   "displayName": "Andrea Kimberlin",
   "id": "58dbb7f4d73408ce4f549306",
   "url": "/the1337beauty_twitter",
   "username": "the1337beauty_twitter",
   "v": 1
  },
  "html": "hello everyone, I&#39;m still learning the aws-sdk-go, I&#39;m wondering if anyone has experience with error handling and displaying specifc parts of an error in a client application?",
  "id": "58dbb922408f90be666a2b49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-03-29T13:39:46.337Z",
  "text": "hello everyone, I'm still learning the aws-sdk-go, I'm wondering if anyone has experience with error handling and displaying specifc parts of an error in a client application?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/the1337beauty_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/2163201626/logo-small.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/2163201626/logo-small_bigger.png",
   "displayName": "Andrea Kimberlin",
   "id": "58dbb7f4d73408ce4f549306",
   "url": "/the1337beauty_twitter",
   "username": "the1337beauty_twitter",
   "v": 1
  },
  "html": "nevermind, found exactly what I needed!",
  "id": "58dbbbf008c00c092a29cc73",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-03-29T13:51:44.024Z",
  "text": "nevermind, found exactly what I needed!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/apoorvam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8859725?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8859725?v=4&s=60",
   "displayName": "Apoorva M",
   "gv": "4",
   "id": "554c714915522ed4b3e01983",
   "url": "/apoorvam",
   "username": "apoorvam",
   "v": 21
  },
  "html": "Hello, Given aws s3 bucket details i.e bucket name, region,  access key and secret key.. How do I verify if I have write permissions to it without writing any object? New to AWS SDK, any  quick pointers?",
  "id": "58dbeb938fcce56b20ae0721",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-03-29T17:14:59.358Z",
  "text": "Hello, Given aws s3 bucket details i.e bucket name, region,  access key and secret key.. How do I verify if I have write permissions to it without writing any object? New to AWS SDK, any  quick pointers?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"apoorvam\" class=\"mention\">@apoorvam</span> not sure if that&#39;s possible, but why not just write an object to test if it works?",
  "id": "58dbfbdfc4ac989f3cb742a8",
  "issues": [],
  "mentions": [
   {
    "screenName": "apoorvam",
    "userId": "554c714915522ed4b3e01983",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-03-29T18:24:31.742Z",
  "text": "@apoorvam not sure if that's possible, but why not just write an object to test if it works?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/apoorvam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8859725?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8859725?v=4&s=60",
   "displayName": "Apoorva M",
   "gv": "4",
   "id": "554c714915522ed4b3e01983",
   "url": "/apoorvam",
   "username": "apoorvam",
   "v": 21
  },
  "html": "Can do that, but wanted to check if there is simpler way than writing a test object and deleting it.",
  "id": "58dbfc4908c00c092a2b1d16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-03-29T18:26:17.826Z",
  "text": "Can do that, but wanted to check if there is simpler way than writing a test object and deleting it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/apoorvam",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8859725?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8859725?v=4&s=60",
   "displayName": "Apoorva M",
   "gv": "4",
   "id": "554c714915522ed4b3e01983",
   "url": "/apoorvam",
   "username": "apoorvam",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> Thanks!",
  "id": "58dbfc58f22385553dec452a",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-03-29T18:26:32.929Z",
  "text": "@cristim Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "is there a way to enable logging for retries caused by throttling?",
  "id": "58dc318ae3700b1461c84e5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-03-29T22:13:30.469Z",
  "text": "is there a way to enable logging for retries caused by throttling?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> The SDK doesn&#39;t have it built in specifically for throttling, but you can enable logging for all retries with <code>aws.LogDebugWithRequestRetries | aws.LogDebugWithRequestErrors</code>. In addition you can add a request handler that will log throttling retires.",
  "id": "58dc32f47ea420cc421b90bd",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-03-29T22:19:32.563Z",
  "text": "@cristim The SDK doesn't have it built in specifically for throttling, but you can enable logging for all retries with `aws.LogDebugWithRequestRetries | aws.LogDebugWithRequestErrors`. In addition you can add a request handler that will log throttling retires.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "thanks",
  "id": "58dc3320e3700b1461c84e68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-03-29T22:20:16.616Z",
  "text": "thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<pre><code class=\"go\">svc := dynamodb.New(sess)\nsvc.Handlers.Retry.PushBack(<span class=\"keyword\">func</span>(r *request.Request) {\n     <span class=\"keyword\">if</span> r.WillRetry() &amp;&amp; r.IsErrorThrottle() {\n         <span class=\"comment\">// TODO Log error</span>\n     }\n})\nsvc.PutItem(...)</code></pre>",
  "id": "58dc338aad849bcf42314224",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-03-29T22:22:02.442Z",
  "text": "```go\nsvc := dynamodb.New(sess)\nsvc.Handlers.Retry.PushBack(func(r *request.Request) {\n     if r.WillRetry() && r.IsErrorThrottle() {\n         // TODO Log error\n     }\n})\nsvc.PutItem(...)\n```\n\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "awesome",
  "id": "58dc33bc7b553c707c5111e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-03-29T22:22:52.594Z",
  "text": "awesome",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "hi everybody... is there a way in golang to fetch the credentials from the EC2 instance? ",
  "id": "58dfa40e08c00c092a39eab9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-01T12:58:54.500Z",
  "text": "hi everybody... is there a way in golang to fetch the credentials from the EC2 instance? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "I am trying to do this ",
  "id": "58dfad1d4cb8d091734b0ba7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-01T13:37:33.495Z",
  "text": "I am trying to do this ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<pre><code>ec2RoleProvider <span class=\"value\">:= &amp;ec2rolecreds.EC2RoleProvider{        \n        Client: ec2metadata.<span class=\"function\">New</span>(session.<span class=\"function\">New</span>()),        \n        ExpiryWindow: <span class=\"number\">0</span>,\n    }\n    creds := credentials.<span class=\"function\">NewCredentials</span>(ec2RoleProvider)\nconfig := &amp;aws.Config{\n        Region:      aws.<span class=\"function\">String</span>(region),\n        Credentials: creds,\n    }\nsess := session.<span class=\"function\">New</span>(config)</span></code></pre>",
  "id": "58dfad7408c00c092a3a0fc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-01T13:39:00.643Z",
  "text": "```\nec2RoleProvider := &ec2rolecreds.EC2RoleProvider{\t\t\n\t\tClient: ec2metadata.New(session.New()),\t\t\n\t\tExpiryWindow: 0,\n\t}\n\tcreds := credentials.NewCredentials(ec2RoleProvider)\nconfig := &aws.Config{\n\t\tRegion:      aws.String(region),\n\t\tCredentials: creds,\n\t}\nsess := session.New(config)\n\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "Please comment whether this is the correct way ?",
  "id": "58dfad9c4cb8d091734b0d5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-01T13:39:40.653Z",
  "text": "Please comment whether this is the correct way ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"abhay8nitt_twitter\" class=\"mention\">@abhay8nitt_twitter</span> I&#39;m not sure why do you need that? the SDK uses them automatically when executed from an instance, you don&#39;t need to do this yourself",
  "id": "58e01e01dddd87f332d23c17",
  "issues": [],
  "mentions": [
   {
    "screenName": "abhay8nitt_twitter",
    "userId": "58dfa339d73408ce4f555b60",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-01T21:39:13.850Z",
  "text": "@abhay8nitt_twitter I'm not sure why do you need that? the SDK uses them automatically when executed from an instance, you don't need to do this yourself",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> what should be the code like ?",
  "id": "58e07bf608c00c092a3cba4a",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-02T04:20:06.427Z",
  "text": "@cristim what should be the code like ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Delete everything about the creds and ec2roleprovider variables in your snippet. I am typing this on my phone so I can&#39;t easily rewrite it for you ",
  "id": "58e0a40cbc370d964edd4296",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-02T07:11:08.956Z",
  "text": "Delete everything about the creds and ec2roleprovider variables in your snippet. I am typing this on my phone so I can't easily rewrite it for you ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span>  thanks.. it would be great if you could please share the code/pointer... I am confused - s3manager.NewDownloader(sess), sqs.New(sess) etc all expect a session paramter- do you mean to say that  sess := session.New() will automatically pick from the ec2 instance ?",
  "id": "58e13f39b52518ed4dd16e3f",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-02T18:13:13.506Z",
  "text": "@cristim  thanks.. it would be great if you could please share the code/pointer... I am confused - s3manager.NewDownloader(sess), sqs.New(sess) etc all expect a session paramter- do you mean to say that  sess := session.New() will automatically pick from the ec2 instance ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "exactly",
  "id": "58e14cb6d7ab15e817243058",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-02T19:10:46.603Z",
  "text": "exactly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/g/u/ak5hat_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/744709068602761216/hYHta3-B.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/744709068602761216/hYHta3-B_bigger.jpg",
   "displayName": "Akshat",
   "id": "58e1d002d73408ce4f55aa15",
   "url": "/ak5hat_twitter",
   "username": "ak5hat_twitter"
  },
  "html": "hi guys i am trying out aws-sdk-go ",
  "id": "58e1d02d8fcce56b20c410c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-03T04:31:41.357Z",
  "text": "hi guys i am trying out aws-sdk-go ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/g/u/ak5hat_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/744709068602761216/hYHta3-B.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/744709068602761216/hYHta3-B_bigger.jpg",
   "displayName": "Akshat",
   "id": "58e1d002d73408ce4f55aa15",
   "url": "/ak5hat_twitter",
   "username": "ak5hat_twitter"
  },
  "html": "wish me luck",
  "id": "58e1d0308fcce56b20c410c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-03T04:31:44.276Z",
  "text": "wish me luck",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> thanks..",
  "id": "58e1db778bb56c2d116ca164",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-03T05:19:51.239Z",
  "text": "@cristim thanks..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"abhay8nitt_twitter\" class=\"mention\">@abhay8nitt_twitter</span> let me know if it worked for you",
  "id": "58e1f7c0dddd87f332d2461b",
  "issues": [],
  "mentions": [
   {
    "screenName": "abhay8nitt_twitter",
    "userId": "58dfa339d73408ce4f555b60",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-03T07:20:32.667Z",
  "text": "@abhay8nitt_twitter let me know if it worked for you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/d7p",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/745957?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/745957?v=3&s=60",
   "displayName": "Dan",
   "gv": "3",
   "id": "545cd373db8155e6700d267c",
   "url": "/d7p",
   "username": "d7p",
   "v": 1
  },
  "html": "hi just using the route53domains.ListDomains functions",
  "id": "58e27349ad849bcf4249266e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-03T16:07:37.167Z",
  "text": "hi just using the route53domains.ListDomains functions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/d7p",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/745957?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/745957?v=3&s=60",
   "displayName": "Dan",
   "gv": "3",
   "id": "545cd373db8155e6700d267c",
   "url": "/d7p",
   "username": "d7p",
   "v": 1
  },
  "html": "in the docs it the examples don&#39;t use a region but in testing it needs to be set to us-east-1 ",
  "id": "58e2737308c00c092a44244b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-03T16:08:19.649Z",
  "text": "in the docs it the examples don't use a region but in testing it needs to be set to us-east-1 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/d7p",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/745957?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/745957?v=3&s=60",
   "displayName": "Dan",
   "gv": "3",
   "id": "545cd373db8155e6700d267c",
   "url": "/d7p",
   "username": "d7p",
   "v": 1
  },
  "html": "is that right?",
  "id": "58e2737708c00c092a442465",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-03T16:08:23.410Z",
  "text": "is that right?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "The examples may be oversimplified or may assume that the region is defined as an environment variable ",
  "id": "58e2a51908c00c092a451b18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-03T19:40:09.727Z",
  "text": "The examples may be oversimplified or may assume that the region is defined as an environment variable ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/d7p",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/745957?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/745957?v=3&s=60",
   "displayName": "Dan",
   "gv": "3",
   "id": "545cd373db8155e6700d267c",
   "url": "/d7p",
   "username": "d7p",
   "v": 1
  },
  "html": "ok. Thank you ",
  "id": "58e36b6608c00c092a4802a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-04T09:46:14.949Z",
  "text": "ok. Thank you ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> I have not tried out the code yet due to some unavoidable issues..while browsing through the code session.New() I observed that the code picks the credentials from the env variables                 <code>\n</code>",
  "id": "58e38c328fcce56b20cb4d62",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-04T12:06:10.799Z",
  "text": "@cristim I have not tried out the code yet due to some unavoidable issues..while browsing through the code session.New() I observed that the code picks the credentials from the env variables                 ````\n````",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<strong>envCfg := loadEnvConfig()</strong>",
  "id": "58e38c4d8bb56c2d1173b521",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-04T12:06:37.091Z",
  "text": "**envCfg := loadEnvConfig()**",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "Internally the loadEnvConfig() expects the environment to be configured for these keys AWS_ACCESS_KEY_ID ",
  "id": "58e38c87b52518ed4dda952f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-04T12:07:35.656Z",
  "text": "Internally the loadEnvConfig() expects the environment to be configured for these keys AWS_ACCESS_KEY_ID ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"abhay8nitt_twitter\" class=\"mention\">@abhay8nitt_twitter</span> you&#39;re looking for the SDK to retrieve EC2 Instance Role credentials correct?  The SDK will attempt to automatically do this if it does not find any credentials in the environment, or shared credentials.  And the Ec2 Instance Role is configured correctly.  You shouldn&#39;t have to set the <code>Config.Credentials</code> value. ",
  "id": "58e3edb9f22385553d0b7446",
  "issues": [],
  "mentions": [
   {
    "screenName": "abhay8nitt_twitter",
    "userId": "58dfa339d73408ce4f555b60",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-04T19:02:17.245Z",
  "text": "@abhay8nitt_twitter you're looking for the SDK to retrieve EC2 Instance Role credentials correct?  The SDK will attempt to automatically do this if it does not find any credentials in the environment, or shared credentials.  And the Ec2 Instance Role is configured correctly.  You shouldn't have to set the `Config.Credentials` value. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> right! thanks much for the confirmation.",
  "id": "58e447427ea420cc423b6d5d",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-05T01:24:18.606Z",
  "text": "@jasdel right! thanks much for the confirmation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/svanharmelen",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4171547?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4171547?v=4&s=60",
   "displayName": "Sander van Harmelen",
   "gv": "4",
   "id": "53997345a9176b500d1cdc33",
   "url": "/svanharmelen",
   "username": "svanharmelen",
   "v": 7
  },
  "html": "hi, I&#39;m looking for the right API call(s) to find a VPC by it&#39;s name (so matching a value against the tag <code>Name</code>)",
  "id": "58e4b570b52518ed4ddf83bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-05T09:14:24.329Z",
  "text": "hi, I'm looking for the right API call(s) to find a VPC by it's name (so matching a value against the tag `Name`)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-05T09:15:10.156Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/svanharmelen",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4171547?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4171547?v=4&s=60",
   "displayName": "Sander van Harmelen",
   "gv": "4",
   "id": "53997345a9176b500d1cdc33",
   "url": "/svanharmelen",
   "username": "svanharmelen",
   "v": 7
  },
  "html": "so I have the name and would like to find/retrieve the VPC ID",
  "id": "58e4b598408f90be668dbaf1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-05T09:15:04.868Z",
  "text": "so I have the name and would like to find/retrieve the VPC ID",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/svanharmelen",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4171547?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4171547?v=4&s=60",
   "displayName": "Sander van Harmelen",
   "gv": "4",
   "id": "53997345a9176b500d1cdc33",
   "url": "/svanharmelen",
   "username": "svanharmelen",
   "v": 7
  },
  "html": "Think I found it... <code>DescribeVpcs</code> should do the trick I guess",
  "id": "58e4b6a968bee3091f109575",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-05T09:19:37.743Z",
  "text": "Think I found it... `DescribeVpcs` should do the trick I guess",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"svanharmelen\" class=\"mention\">@svanharmelen</span> correct that should do what you&#39;re looking for.",
  "id": "58e517947ea420cc423efc92",
  "issues": [],
  "mentions": [
   {
    "screenName": "svanharmelen",
    "userId": "53997345a9176b500d1cdc33",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-05T16:13:08.553Z",
  "text": "@svanharmelen correct that should do what you're looking for.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "func (*CloudFormation) ListStacksPages is in the documentation but is not in the &quot;operations&quot; list",
  "id": "58e681fb7ea420cc42451875",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-06T17:59:23.207Z",
  "text": "func (*CloudFormation) ListStacksPages is in the documentation but is not in the \"operations\" list",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "Is there a reason for this, or is this just an oversight?",
  "id": "58e68221ad849bcf425ab72f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-06T18:00:01.700Z",
  "text": "Is there a reason for this, or is this just an oversight?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"buhduh\" class=\"mention\">@buhduh</span> The <code>Operations</code> section only include the service&#39;s API operations. All pagination helpers are in the <code>Paginators</code> section. We&#39;re investigating ways we can refactor this document to make these concepts easier to discover",
  "id": "58e6984fb52518ed4de7e7b6",
  "issues": [],
  "mentions": [
   {
    "screenName": "buhduh",
    "userId": "58e681dbd73408ce4f569b79",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-06T19:34:39.392Z",
  "text": "@buhduh The `Operations` section only include the service's API operations. All pagination helpers are in the `Paginators` section. We're investigating ways we can refactor this document to make these concepts easier to discover",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "ah, thank you",
  "id": "58e6c4d38fcce56b20d9705b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-06T22:44:35.078Z",
  "text": "ah, thank you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/flyinprogrammer",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1844847?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1844847?v=4&s=60",
   "displayName": "Alan Scherger",
   "gv": "4",
   "id": "54bff6addb8155e6700ee9d3",
   "url": "/flyinprogrammer",
   "username": "flyinprogrammer",
   "v": 11
  },
  "html": "<p>so the awscli python scripts have this &quot;configure&quot; option: <a href=\"https://github.com/aws/aws-cli/blob/develop/awscli/customizations/configure/configure.py\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-cli/blob/develop/awscli/customizations/configure/configure.py</a></p><p>is there something comparable in the golang sdk ?</p>",
  "id": "58e919a5ad849bcf4264a9dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-04-08T17:11:01.247Z",
  "text": "so the awscli python scripts have this \"configure\" option: https://github.com/aws/aws-cli/blob/develop/awscli/customizations/configure/configure.py\n\nis there something comparable in the golang sdk ?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-cli/blob/develop/awscli/customizations/configure/configure.py"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> as suggested - the code fetches the AWS credentials(i tried logging )- however I keep on getting this error - <strong>Error MissingRegion: could not find region configuration<br>panic: runtime error: invalid memory address or nil pointer dereference</strong>. Should this be configured in the ~/.aws/config file ?",
  "id": "58eb34538fcce56b20e8f1c9",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-10T07:29:22.997Z",
  "text": "@jasdel as suggested - the code fetches the AWS credentials(i tried logging )- however I keep on getting this error - **Error MissingRegion: could not find region configuration\npanic: runtime error: invalid memory address or nil pointer dereference**. Should this be configured in the ~/.aws/config file ?\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"abhay8nitt_twitter\" class=\"mention\">@abhay8nitt_twitter</span>  The SDK will only read the <code>~/aws/config</code> file if the environment variable <code>AWS_SDK_LOAD_CONFIG</code> environment variable is set. the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/session/\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><code>session</code></a> package docs goes into more detail about this.",
  "id": "58ebc2a8ad849bcf426e3de2",
  "issues": [],
  "mentions": [
   {
    "screenName": "abhay8nitt_twitter",
    "userId": "58dfa339d73408ce4f555b60",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-10T17:36:40.502Z",
  "text": "@abhay8nitt_twitter  The SDK will only read the `~/aws/config` file if the environment variable `AWS_SDK_LOAD_CONFIG` environment variable is set. the [`session`](http://docs.aws.amazon.com/sdk-for-go/api/aws/session/) package docs goes into more detail about this.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/session/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/smithrp",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1187330?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1187330?v=3&s=60",
   "displayName": "Ryan Smith",
   "gv": "3",
   "id": "58ec4da0d73408ce4f578252",
   "url": "/smithrp",
   "username": "smithrp",
   "v": 1
  },
  "html": "Hi there!  I&#39;m trying to use the aws-sdk-go to subscribe a SQS queue to a SNS topic, but it seems that the sdk doesn&#39;t setup permissions on the queue to accept messages sent from the SNS topic.  Does anyone know how to add permissions so that SNS has the ability to properly send messages to the queue?",
  "id": "58ec4e2f08c00c092a6b46e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-11T03:31:59.724Z",
  "text": "Hi there!  I'm trying to use the aws-sdk-go to subscribe a SQS queue to a SNS topic, but it seems that the sdk doesn't setup permissions on the queue to accept messages sent from the SNS topic.  Does anyone know how to add permissions so that SNS has the ability to properly send messages to the queue?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/amit_thakkar01_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/798482683496198145/HcP9ZlnK.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/798482683496198145/HcP9ZlnK_bigger.jpg",
   "displayName": "Amit Thakkar",
   "id": "58ede587d73408ce4f57d25a",
   "url": "/amit_thakkar01_twitter",
   "username": "amit_thakkar01_twitter"
  },
  "html": "Hello,<br>I am trying to parse/deserialized cloud formation template..",
  "id": "58ede5a4b52518ed4d03b388",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-12T08:30:28.506Z",
  "text": "Hello,\nI am trying to parse/deserialized cloud formation template..",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/amit_thakkar01_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/798482683496198145/HcP9ZlnK.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/798482683496198145/HcP9ZlnK_bigger.jpg",
   "displayName": "Amit Thakkar",
   "id": "58ede587d73408ce4f57d25a",
   "url": "/amit_thakkar01_twitter",
   "username": "amit_thakkar01_twitter"
  },
  "html": "Can anyone help me, how can I do it?",
  "id": "58ede5ba8bb56c2d119d4624",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-12T08:30:50.476Z",
  "text": "Can anyone help me, how can I do it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/simon-s9",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14272055?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14272055?v=3&s=60",
   "displayName": "Simon",
   "gv": "3",
   "id": "58987dd7d73408ce4f486d3d",
   "url": "/simon-s9",
   "username": "simon-s9",
   "v": 1
  },
  "html": "Hi! What&#39;s the best way to test access credentials? Listing instances for ec2? Let&#39;s say that I need the user to provide credentials with EC2FullAccess, how can I check them. Haven&#39;t found anything in the docs.",
  "id": "58ee06874cb8d0917382a6e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-12T10:50:47.108Z",
  "text": "Hi! What's the best way to test access credentials? Listing instances for ec2? Let's say that I need the user to provide credentials with EC2FullAccess, how can I check them. Haven't found anything in the docs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/destructive-dragon",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4991312?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4991312?v=4&s=60",
   "displayName": "Destructive Dragon",
   "gv": "4",
   "id": "57d16a1d40f3a6eec06431ae",
   "url": "/destructive-dragon",
   "username": "destructive-dragon",
   "v": 9
  },
  "html": "Hey, does anyone know if s3 supports multiple uploads at the same time?",
  "id": "58ee47b0a0e4856242f9ba6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-12T15:28:48.510Z",
  "text": "Hey, does anyone know if s3 supports multiple uploads at the same time?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"SmaugTheGreat\" class=\"mention\">@SmaugTheGreat</span> Yes, you can use the same s3 service client instances to upload objects in parallel. They are safe to use across gorouties",
  "id": "58ee5a7e8bb56c2d119f74be",
  "issues": [],
  "mentions": [
   {
    "screenName": "SmaugTheGreat",
    "userId": "57d16a1d40f3a6eec06431ae",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-04-12T16:49:02.467Z",
  "text": "@SmaugTheGreat Yes, you can use the same s3 service client instances to upload objects in parallel. They are safe to use across gorouties",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"simon-s9\" class=\"mention\">@simon-s9</span> I&#39;m not aware of a method to check credentials permissions without making the associated API  class off hand. Asking in Stack overflow might be helpful with the <code>aws</code> tag.",
  "id": "58ee5ac58fcce56b20f695ca",
  "issues": [],
  "mentions": [
   {
    "screenName": "simon-s9",
    "userId": "58987dd7d73408ce4f486d3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-12T16:50:13.482Z",
  "text": "@simon-s9 I'm not aware of a method to check credentials permissions without making the associated API  class off hand. Asking in Stack overflow might be helpful with the `aws` tag.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"smithrp\" class=\"mention\">@smithrp</span> The AWS console does a lot of setup under the hood for your when you create and associate queues/topics  there. The SDKs don&#39;t have this higher level functionality so the permissions need to be set manually. To add permission for the SNS you probably will need to create a <code>Policy</code>granting permission. This doc might be helpful, <a href=\"http://docs.aws.amazon.com/sns/latest/dg/SendMessageToSQS.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sns/latest/dg/SendMessageToSQS.html</a>",
  "id": "58ee5c01f22385553d34eb35",
  "issues": [],
  "mentions": [
   {
    "screenName": "smithrp",
    "userId": "58ec4da0d73408ce4f578252",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-04-12T16:55:29.961Z",
  "text": "@smithrp The AWS console does a lot of setup under the hood for your when you create and associate queues/topics  there. The SDKs don't have this higher level functionality so the permissions need to be set manually. To add permission for the SNS you probably will need to create a `Policy`granting permission. This doc might be helpful, http://docs.aws.amazon.com/sns/latest/dg/SendMessageToSQS.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sns/latest/dg/SendMessageToSQS.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/smithrp",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1187330?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1187330?v=3&s=60",
   "displayName": "Ryan Smith",
   "gv": "3",
   "id": "58ec4da0d73408ce4f578252",
   "url": "/smithrp",
   "username": "smithrp",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Thanks for the input.  I have been trying to add permissions using the sdk but I&#39;ve been having a hard time with it.  Attempting to recreate what the AWS console does under the hood I found the &quot;AddPermission&quot; and have been trying to add the following permission:</p><pre><code>permissionParams := &amp;sqs.AddPermissionInput{\n            AWSAccountIds: []*string{ <span class=\"comment\">// Required</span>\n                aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"*\"</span>), <span class=\"comment\">// Required</span>\n            },\n            Actions: []*string{ <span class=\"comment\">// Required</span>\n                aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"SendMessage\"</span>), <span class=\"comment\">// Required</span>\n            },\n            Label:    aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"SendMessageToQueue\"</span>), <span class=\"comment\">// Required</span>\n            QueueUrl: DispatchQueueURL,                         <span class=\"comment\">// Required</span>\n        }\n        _, err = svc.AddPermission(permissionParams)</code></pre><p>But I keep getting the following error:  Error adding permissions to dispatch queue: InvalidParameterValue: Value [*] for parameter PrincipalId is invalid. Reason: Unable to verify.</p><p>Is there a better way to add permissions that I&#39;m just not seeing?  Thanks in advance for any help you can provide!</p>",
  "id": "58ee79b0bdf4acc11252eda2",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-12T19:02:08.162Z",
  "text": "@jasdel Thanks for the input.  I have been trying to add permissions using the sdk but I've been having a hard time with it.  Attempting to recreate what the AWS console does under the hood I found the \"AddPermission\" and have been trying to add the following permission:\n```\npermissionParams := &sqs.AddPermissionInput{\n\t\t\tAWSAccountIds: []*string{ // Required\n\t\t\t\taws.String(\"*\"), // Required\n\t\t\t},\n\t\t\tActions: []*string{ // Required\n\t\t\t\taws.String(\"SendMessage\"), // Required\n\t\t\t},\n\t\t\tLabel:    aws.String(\"SendMessageToQueue\"), // Required\n\t\t\tQueueUrl: DispatchQueueURL,                         // Required\n\t\t}\n\t\t_, err = svc.AddPermission(permissionParams)\n```\nBut I keep getting the following error:  Error adding permissions to dispatch queue: InvalidParameterValue: Value [*] for parameter PrincipalId is invalid. Reason: Unable to verify.\n\nIs there a better way to add permissions that I'm just not seeing?  Thanks in advance for any help you can provide!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "Hello all, very new to golang here",
  "id": "58ee7d4af22385553d359207",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-12T19:17:30.666Z",
  "text": "Hello all, very new to golang here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "I&#39;m trying to create a tool that fetches cloudwatch logs",
  "id": "58ee7d5b4cb8d0917384f59c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-12T19:17:47.889Z",
  "text": "I'm trying to create a tool that fetches cloudwatch logs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "the logs might come from FilterLogEvents or from just GetLogEvents",
  "id": "58ee7d73b52518ed4d0685dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-12T19:18:11.821Z",
  "text": "the logs might come from FilterLogEvents or from just GetLogEvents",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "is there a agnostic type for those 2? I am pushing the found events through a channel",
  "id": "58ee7d8d69a692963ea48815",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-12T19:18:37.759Z",
  "text": "is there a agnostic type for those 2? I am pushing the found events through a channel",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "the main issue is I am trying to assign FilteredLogEventOutput to OutputLogEvent",
  "id": "58ee7f918e4b63533dc1914b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-12T19:27:13.771Z",
  "text": "the main issue is I am trying to assign FilteredLogEventOutput to OutputLogEvent",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "which actually matches except FilteredLogEventOutput has a few extra fields I dont care about",
  "id": "58ee7fbb8bb56c2d11a02d1c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-12T19:27:55.583Z",
  "text": "which actually matches except FilteredLogEventOutput has a few extra fields I dont care about",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "is it bad style to typecast a struct?",
  "id": "58ee7fc58fcce56b20f73f69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-12T19:28:05.030Z",
  "text": "is it bad style to typecast a struct?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"MadMub\" class=\"mention\">@MadMub</span> They two types need to be manually converted between the two. The SDK does not currently have an utility to provide this conversion. ",
  "id": "58ee809abdf4acc112530c8b",
  "issues": [],
  "mentions": [
   {
    "screenName": "MadMub",
    "userId": "572a0dabc43b8c6019711f8e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-12T19:31:38.363Z",
  "text": "@MadMub They two types need to be manually converted between the two. The SDK does not currently have an utility to provide this conversion. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> hey just talked to u in the golang slack!",
  "id": "58ee84b5408f90be66b4cd1b",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-12T19:49:09.298Z",
  "text": "@jasdel hey just talked to u in the golang slack!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "thanks for answering me in both places",
  "id": "58ee84bbad849bcf427a76c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-12T19:49:15.038Z",
  "text": "thanks for answering me in both places",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "I did this and I think its gunna work",
  "id": "58ee84c1408f90be66b4cd30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-04-12T19:49:21.266Z",
  "text": "I did this and I think its gunna work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "<pre><code><span class=\"built_in\">log</span>Events &lt;- &amp;cloudwatchlogs.OutputLogEvent{\n                    Message:       <span class=\"built_in\">log</span>Event.Message,\n                    IngestionTime: <span class=\"built_in\">log</span>Event.IngestionTime,\n                    Timestamp:     <span class=\"built_in\">log</span>Event.Timestamp,\n                }</code></pre>",
  "id": "58ee84c98bb56c2d11a045bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-04-12T19:49:29.100Z",
  "text": "```\nlogEvents <- &cloudwatchlogs.OutputLogEvent{\n\t\t\t\t\tMessage:       logEvent.Message,\n\t\t\t\t\tIngestionTime: logEvent.IngestionTime,\n\t\t\t\t\tTimestamp:     logEvent.Timestamp,\n\t\t\t\t}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Glad to help.  yeah having a utility function that does the conversion for your is the best way to go for this. ",
  "id": "58ee86ad8fcce56b20f75e3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-04-12T19:57:33.483Z",
  "text": "Glad to help.  yeah having a utility function that does the conversion for your is the best way to go for this. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> it would probably be a better design practice for me to create my own struct and write the conversion utility as you said",
  "id": "58ee87cdbdf4acc1125330c9",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-04-12T20:02:21.909Z",
  "text": "@jasdel it would probably be a better design practice for me to create my own struct and write the conversion utility as you said",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "and not bleed the aws type on my top level (I\u2019m making a command line util so its not a real concern) but if it were an api/lib its probably the best move anyways",
  "id": "58ee8802bdf4acc112533161",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-04-12T20:03:14.976Z",
  "text": "and not bleed the aws type on my top level (I\u2019m making a command line util so its not a real concern) but if it were an api/lib its probably the best move anyways",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Yeah good point, If the custom value will exist/used outside of the context of the two API calls. If the two structs are only being used to round trip, or send the second API call, just converting between the SDK&#39;s two structs would be easier. Because a custom type would require three copies vs two",
  "id": "58ee892fb52518ed4d06b915",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-04-12T20:08:15.392Z",
  "text": "Yeah good point, If the custom value will exist/used outside of the context of the two API calls. If the two structs are only being used to round trip, or send the second API call, just converting between the SDK's two structs would be easier. Because a custom type would require three copies vs two",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> i was able to connect to aws; i have been trying to fetch SQS messages, this code fails to fetch the messages; however i am able to fetch through the command line cli (aws cli). Am I missing something?<pre><code>sqs_svc = sqs.<span class=\"keyword\">New</span>(sess)\nresult, <span class=\"built_in\">err</span> := sqs_svc.ReceiveMessage(&amp;sqs.ReceiveMessageInput{\n        AttributeNames: []*<span class=\"built_in\">string</span>{\n            aws.<span class=\"built_in\">String</span>(sqs.MessageSystemAttributeNameSentTimestamp),\n        },\n        MessageAttributeNames: []*<span class=\"built_in\">string</span>{\n            aws.<span class=\"built_in\">String</span>(sqs.QueueAttributeNameAll),\n        },\n        QueueUrl:            &amp;qURL,\n        MaxNumberOfMessages: aws.Int64(<span class=\"number\">2</span>),\n        VisibilityTimeout:   aws.Int64(<span class=\"number\">30</span>),\n        WaitTimeSeconds:     aws.Int64(<span class=\"number\">20</span>),\n    })\n`</code></pre>",
  "id": "58f473d0d32c6f2f09126594",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-17T07:50:40.755Z",
  "text": "@jasdel i was able to connect to aws; i have been trying to fetch SQS messages, this code fails to fetch the messages; however i am able to fetch through the command line cli (aws cli). Am I missing something?\n````\nsqs_svc = sqs.New(sess)\nresult, err := sqs_svc.ReceiveMessage(&sqs.ReceiveMessageInput{\n\t\tAttributeNames: []*string{\n\t\t\taws.String(sqs.MessageSystemAttributeNameSentTimestamp),\n\t\t},\n\t\tMessageAttributeNames: []*string{\n\t\t\taws.String(sqs.QueueAttributeNameAll),\n\t\t},\n\t\tQueueUrl:            &qURL,\n\t\tMaxNumberOfMessages: aws.Int64(2),\n\t\tVisibilityTimeout:   aws.Int64(30),\n\t\tWaitTimeSeconds:     aws.Int64(20),\n\t})\n`````\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "I get the following error - &quot;RequestError: send request failed\\ncaused by: Post&quot;",
  "id": "58f475d6bdf4acc112686d47",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-17T07:59:18.914Z",
  "text": "I get the following error - \"RequestError: send request failed\\ncaused by: Post\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "Does the above issue map tp <span data-link-type=\"issue\" data-issue=\"984\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#984</span> ?",
  "id": "58f4769408c00c092a8a2637",
  "issues": [
   {
    "number": "984",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-17T08:02:28.349Z",
  "text": "Does the above issue map tp https://github.com/aws/aws-sdk-go/issues/984 ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/MadhaviLosetty",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13563052?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13563052?v=4&s=60",
   "displayName": "MadhaviLosetty",
   "gv": "4",
   "id": "55b969f90fc9f982beab777b",
   "url": "/MadhaviLosetty",
   "username": "MadhaviLosetty",
   "v": 2
  },
  "html": "<p>func main() {<br>    cred := credentials.NewStaticCredentials(&quot;xxxx&quot;, &quot;xxxx&quot;, &quot;&quot;)<br>    svc := ec2.New(session.New(&amp;aws.Config{Region: aws.String(&quot;us-west-2&quot;), Credentials: cred}))<br>    // Specify the details of the instance that you want to create.<br>    runResult, err := svc.RunInstances(&amp;ec2.RunInstancesInput{<br>        // An Amazon Linux AMI ID for t2.micro instances in the us-west-2 region<br>        ImageId:      aws.String(&quot;ami-e7527ed7&quot;),<br>        InstanceType: aws.String(&quot;t2.micro&quot;),<br>        MinCount:     aws.Int64(1),<br>        MaxCount:     aws.Int64(1),<br>    })<br>    if err != nil {<br>        fmt.Println(&quot;Could not create instance&quot;, err)<br>        return<br>    }</p><pre><code>fmt.<span class=\"keyword\">Println</span>(<span class=\"string\">\"Created instance\"</span>, *runResult.Instances[<span class=\"number\">0</span>].InstanceId)\n\n<span class=\"comment\">// Add tags to the created instance</span>\n_, errtag := svc.CreateTags(&amp;ec2.CreateTagsInput{\n    Resources: []*string{runResult.Instances[<span class=\"number\">0</span>].InstanceId},\n    Tags: []*ec2.Tag{\n        {\n            Key:   aws.String(<span class=\"string\">\"Name\"</span>),\n            Value: aws.String(<span class=\"string\">\"MadhaviInstance\"</span>),\n        },\n    },\n})\n<span class=\"keyword\">if</span> errtag != nil {\n    fmt.<span class=\"keyword\">Println</span>(<span class=\"string\">\"Could not create tags for instance\"</span>, runResult.Instances[<span class=\"number\">0</span>].InstanceId, errtag)\n    <span class=\"keyword\">return</span>\n}\n\nfmt.<span class=\"keyword\">Println</span>(<span class=\"string\">\"Successfully tagged instance\"</span>)</code></pre><p>}</p><p>Error :<br>C:\\GoWorkspace\\src&gt;go run hello.go<br>Could not create instance RequestError: send request failed<br>caused by: Post <a href=\"https://ec2.us-west-2.amazonaws.com/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://ec2.us-west-2.amazonaws.com/</a>: dial tcp 54.240.253.45:443: i/o timeout</p>",
  "id": "58f517b0881b89e1015ce035",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-04-17T19:29:52.825Z",
  "text": "func main() {\n\tcred := credentials.NewStaticCredentials(\"xxxx\", \"xxxx\", \"\")\n\tsvc := ec2.New(session.New(&aws.Config{Region: aws.String(\"us-west-2\"), Credentials: cred}))\n\t// Specify the details of the instance that you want to create.\n\trunResult, err := svc.RunInstances(&ec2.RunInstancesInput{\n\t\t// An Amazon Linux AMI ID for t2.micro instances in the us-west-2 region\n\t\tImageId:      aws.String(\"ami-e7527ed7\"),\n\t\tInstanceType: aws.String(\"t2.micro\"),\n\t\tMinCount:     aws.Int64(1),\n\t\tMaxCount:     aws.Int64(1),\n\t})\n\tif err != nil {\n\t\tfmt.Println(\"Could not create instance\", err)\n\t\treturn\n\t}\n\n\tfmt.Println(\"Created instance\", *runResult.Instances[0].InstanceId)\n\n\t// Add tags to the created instance\n\t_, errtag := svc.CreateTags(&ec2.CreateTagsInput{\n\t\tResources: []*string{runResult.Instances[0].InstanceId},\n\t\tTags: []*ec2.Tag{\n\t\t\t{\n\t\t\t\tKey:   aws.String(\"Name\"),\n\t\t\t\tValue: aws.String(\"MadhaviInstance\"),\n\t\t\t},\n\t\t},\n\t})\n\tif errtag != nil {\n\t\tfmt.Println(\"Could not create tags for instance\", runResult.Instances[0].InstanceId, errtag)\n\t\treturn\n\t}\n\n\tfmt.Println(\"Successfully tagged instance\")\n}\n\nError : \nC:\\GoWorkspace\\src>go run hello.go\nCould not create instance RequestError: send request failed\ncaused by: Post https://ec2.us-west-2.amazonaws.com/: dial tcp 54.240.253.45:443: i/o timeout",
  "unread": false,
  "urls": [
   {
    "url": "https://ec2.us-west-2.amazonaws.com/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/MadhaviLosetty",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13563052?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13563052?v=4&s=60",
   "displayName": "MadhaviLosetty",
   "gv": "4",
   "id": "55b969f90fc9f982beab777b",
   "url": "/MadhaviLosetty",
   "username": "MadhaviLosetty",
   "v": 2
  },
  "html": "Please let me know if I need to set any proxy configuration ",
  "id": "58f517c68bb56c2d11b82429",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-17T19:30:14.110Z",
  "text": "Please let me know if I need to set any proxy configuration ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "Yes <span data-link-type=\"mention\" data-screen-name=\"MadhaviLosetty\" class=\"mention\">@MadhaviLosetty</span> I guess you have to set proxy configuration",
  "id": "58f5a39c8e4b63533ddbb709",
  "issues": [],
  "mentions": [
   {
    "screenName": "MadhaviLosetty",
    "userId": "55b969f90fc9f982beab777b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-04-18T05:26:52.974Z",
  "text": "Yes @MadhaviLosetty I guess you have to set proxy configuration",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> second try",
  "id": "58f5d01fd32c6f2f0917abbc",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-18T08:36:47.183Z",
  "text": "@jasdel second try",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "can you please help how to set the proxy",
  "id": "58f5d02cf22385553d503cdc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-18T08:37:00.532Z",
  "text": "can you please help how to set the proxy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "?",
  "id": "58f5d02d08c00c092a8f91dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-18T08:37:01.486Z",
  "text": "?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I set the (http_proxy and https_proxy) on my ec2 instance. the session is being created from the ec2 instance profile. Post that I made the following code change</p><pre><code><span class=\"tag\">func</span> <span class=\"tag\">readSQSMessages</span>() *<span class=\"tag\">sqs</span><span class=\"class\">.ReceiveMessageOutput</span> <span class=\"rules\">{\n    <span class=\"rule\"><span class=\"attribute\">region </span>:<span class=\"value\">= <span class=\"string\">\"us-west-2\"</span>\n    httpclient := &amp;http.Client{\n        Transport: &amp;http.Transport{\n            Proxy: <span class=\"function\">func</span>(*http.Request) (*url.URL, error) {\n                return url.<span class=\"function\">Parse</span>(os.<span class=\"function\">Getenv</span>(<span class=\"string\">\"https_proxy\"</span>))\n            },\n        },\n    }\n    sess := session.<span class=\"function\">Must</span>(session.<span class=\"function\">NewSession</span>(&amp;aws.Config{\n        Region:     aws.<span class=\"function\">String</span>(region),\n        HTTPClient: httpclient,\n    }))        \n    svc:= sqs.<span class=\"function\">New</span>(sess)\n    qURL := <span class=\"string\">\"myUrl\"</span> \n    recieve_params := &amp;sqs.ReceiveMessageInput{\n        QueueUrl:            aws.<span class=\"function\">String</span>(qURL),\n        MaxNumberOfMessages: aws.<span class=\"function\">Int64</span>(<span class=\"number\">2</span>),\n        VisibilityTimeout:   aws.<span class=\"function\">Int64</span>(<span class=\"number\">30</span>),\n        WaitTimeSeconds:     aws.<span class=\"function\">Int64</span>(<span class=\"number\">20</span>),\n    }\n    result, err := svc.<span class=\"function\">ReceiveMessage</span>(recieve_params)    \n    for _, message := range result.Messages {\n        fmt.<span class=\"function\">Println</span>(<span class=\"string\">\"Message Body\"</span>, *message.Body)\n    }\n    if err != nil {\n        fmt.<span class=\"function\">Println</span>(<span class=\"string\">\"sqs message read error\"</span>, err)        \n        return nil\n    }\n    return result\n}</span></span></span></code></pre><p>The above code fails to read the message from the SQS - <strong><em> sqs message read error=&quot;NoCredentialProviders: no valid providers in chain. Deprecated. \\n\\tFor verbose messaging see aws.Config.CredentialsChainVerboseErrors&quot; </em></strong></p>",
  "id": "58f5f5e8bdf4acc1126e5b91",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-18T11:18:00.913Z",
  "text": "@jasdel I set the (http_proxy and https_proxy) on my ec2 instance. the session is being created from the ec2 instance profile. Post that I made the following code change\n```\nfunc readSQSMessages() *sqs.ReceiveMessageOutput {\n\tregion := \"us-west-2\"\n\thttpclient := &http.Client{\n\t\tTransport: &http.Transport{\n\t\t\tProxy: func(*http.Request) (*url.URL, error) {\n\t\t\t\treturn url.Parse(os.Getenv(\"https_proxy\"))\n\t\t\t},\n\t\t},\n\t}\n\tsess := session.Must(session.NewSession(&aws.Config{\n\t\tRegion:     aws.String(region),\n\t\tHTTPClient: httpclient,\n\t}))\t\t\n\tsvc:= sqs.New(sess)\n\tqURL := \"myUrl\" \n\trecieve_params := &sqs.ReceiveMessageInput{\n\t\tQueueUrl:            aws.String(qURL),\n\t\tMaxNumberOfMessages: aws.Int64(2),\n\t\tVisibilityTimeout:   aws.Int64(30),\n\t\tWaitTimeSeconds:     aws.Int64(20),\n\t}\n\tresult, err := svc.ReceiveMessage(recieve_params)\t\n\tfor _, message := range result.Messages {\n\t\tfmt.Println(\"Message Body\", *message.Body)\n\t}\n\tif err != nil {\n\t\tfmt.Println(\"sqs message read error\", err)\t\t\n\t\treturn nil\n\t}\n\treturn result\n}\n```\nThe above code fails to read the message from the SQS - *** sqs message read error=\"NoCredentialProviders: no valid providers in chain. Deprecated. \\n\\tFor verbose messaging see aws.Config.CredentialsChainVerboseErrors\" ***",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"abhay8nitt_twitter\" class=\"mention\">@abhay8nitt_twitter</span> Thanks for the feedback. I&#39;m reading over your previous messages and will get back to you shortly",
  "id": "58f6614a08c00c092a9226f9",
  "issues": [],
  "mentions": [
   {
    "screenName": "abhay8nitt_twitter",
    "userId": "58dfa339d73408ce4f555b60",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-18T18:56:10.196Z",
  "text": "@abhay8nitt_twitter Thanks for the feedback. I'm reading over your previous messages and will get back to you shortly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/tgruben",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/889059?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/889059?v=4&s=60",
   "displayName": "tgruben",
   "gv": "4",
   "id": "5819fcd4d73408ce4f3318ef",
   "url": "/tgruben",
   "username": "tgruben",
   "v": 3
  },
  "html": "I have a go powered iot project that uses the paho.mqtt.golang api to see events from my lambda (alexa skill) function.  it works great for 10 minutes and then just no longer receives events here is how i configure the connection",
  "id": "58f677528bb56c2d11bde141",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-18T20:30:10.483Z",
  "text": "I have a go powered iot project that uses the paho.mqtt.golang api to see events from my lambda (alexa skill) function.  it works great for 10 minutes and then just no longer receives events here is how i configure the connection",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/tgruben",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/889059?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/889059?v=4&s=60",
   "displayName": "tgruben",
   "gv": "4",
   "id": "5819fcd4d73408ce4f3318ef",
   "url": "/tgruben",
   "username": "tgruben",
   "v": 3
  },
  "html": "<code>connOpts := &amp;MQTT.ClientOptions{\n                ClientID:             cid,\n                CleanSession:         true,\n                AutoReconnect:        true,\n                MaxReconnectInterval: 1 * time.Second,\n                KeepAlive:            60 * time.Second,\n                TLSConfig: *NewTlsConfig(),\n        }</code>",
  "id": "58f677618e4b63533ddf6453",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-18T20:30:25.821Z",
  "text": "```connOpts := &MQTT.ClientOptions{\n                ClientID:             cid,\n                CleanSession:         true,\n                AutoReconnect:        true,\n                MaxReconnectInterval: 1 * time.Second,\n                KeepAlive:            60 * time.Second,\n                TLSConfig: *NewTlsConfig(),\n        }```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/tgruben",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/889059?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/889059?v=4&s=60",
   "displayName": "tgruben",
   "gv": "4",
   "id": "5819fcd4d73408ce4f3318ef",
   "url": "/tgruben",
   "username": "tgruben",
   "v": 3
  },
  "html": "anyone have any idea how to keep this active?",
  "id": "58f67778a0e4856242188ed8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-18T20:30:48.948Z",
  "text": "anyone have any idea how to keep this active?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"tgruben\" class=\"mention\">@tgruben</span> - Are you using the SDK? In addition, have you tried reaching out to that third party library to see if there is a bug there?",
  "id": "58f679a608c00c092a929a65",
  "issues": [],
  "mentions": [
   {
    "screenName": "tgruben",
    "userId": "5819fcd4d73408ce4f3318ef",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-04-18T20:40:06.355Z",
  "text": "@tgruben - Are you using the SDK? In addition, have you tried reaching out to that third party library to see if there is a bug there?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-18T21:10:12.524Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/tgruben",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/889059?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/889059?v=4&s=60",
   "displayName": "tgruben",
   "gv": "4",
   "id": "5819fcd4d73408ce4f3318ef",
   "url": "/tgruben",
   "username": "tgruben",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> i&#39;m using the sdk to publish but there doesn&#39;t seem to be a subscribe side of the sdk in go other than the mqtt route",
  "id": "58f6809a8bb56c2d11be09c0",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-18T21:09:46.739Z",
  "text": "@xibz i'm using the sdk to publish but there doesn't seem to be a subscribe side of the sdk in go other than the mqtt route",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"tgruben\" class=\"mention\">@tgruben</span>  thanks for the update. The SDK only does not implement the MQTT or subscript portion of the IoT Dataplain API.  We have <span data-link-type=\"issue\" data-issue=\"706\" class=\"issue\">#706</span> that requests this feature",
  "id": "58f6819969a692963ec24f36",
  "issues": [
   {
    "number": "706"
   }
  ],
  "mentions": [
   {
    "screenName": "tgruben",
    "userId": "5819fcd4d73408ce4f3318ef",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-18T21:14:01.965Z",
  "text": "@tgruben  thanks for the update. The SDK only does not implement the MQTT or subscript portion of the IoT Dataplain API.  We have #706 that requests this feature",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "hI <span data-link-type=\"mention\" data-screen-name=\"abhay8nitt_twitter\" class=\"mention\">@abhay8nitt_twitter</span> To clarify the issue you&#39;re running into is that the SDK doesn&#39;t seem to be using the proxy specify. Is that correct?  If you enable the <code>CredentialsChainVerboseErrors</code> configuration flag what error message do you see from the credentials?",
  "id": "58f6824ca0e485624218c24d",
  "issues": [],
  "mentions": [
   {
    "screenName": "abhay8nitt_twitter",
    "userId": "58dfa339d73408ce4f555b60",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-18T21:17:00.946Z",
  "text": "hI @abhay8nitt_twitter To clarify the issue you're running into is that the SDK doesn't seem to be using the proxy specify. Is that correct?  If you enable the `CredentialsChainVerboseErrors` configuration flag what error message do you see from the credentials?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-18T21:22:04.921Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"abhay8nitt_twitter\" class=\"mention\">@abhay8nitt_twitter</span> could you also run this following program that will do nothing but print if it retrieved the credentials or not, or the error that occurred.<pre><code class=\"go\"><span class=\"keyword\">package</span> main\n\n<span class=\"keyword\">import</span> (\n    <span class=\"string\">\"fmt\"</span>\n    <span class=\"string\">\"net/http\"</span>\n\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/aws\"</span>\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/aws/session\"</span>\n)\n\n<span class=\"keyword\">func</span> main() {\n    region := <span class=\"string\">\"us-west-2\"</span>\n    httpClient := <span class=\"comment\">//  your http client</span>\n\n    sess := session.Must(session.NewSession(&amp;aws.Config{\n        Region:     aws.String(region),\n        HTTPClient: httpClient,\n\n        CredentialsChainVerboseErrors: aws.Bool(<span class=\"constant\">true</span>),\n    }))\n\n    creds, err := sess.Config.Credentials.Get()\n    <span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n        <span class=\"built_in\">panic</span>(err)\n    }\n\n    fmt.Printf(<span class=\"string\">\"got credentials from, %s\\n\"</span>, creds.ProviderName)\n}</code></pre>",
  "id": "58f682b6d32c6f2f091ac9f1",
  "issues": [],
  "mentions": [
   {
    "screenName": "abhay8nitt_twitter",
    "userId": "58dfa339d73408ce4f555b60",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-18T21:18:46.931Z",
  "text": "@abhay8nitt_twitter could you also run this following program that will do nothing but print if it retrieved the credentials or not, or the error that occurred.\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\n\t\"github.com/aws/aws-sdk-go/aws\"\n\t\"github.com/aws/aws-sdk-go/aws/session\"\n)\n\nfunc main() {\n\tregion := \"us-west-2\"\n\thttpClient := //  your http client\n\n\tsess := session.Must(session.NewSession(&aws.Config{\n\t\tRegion:     aws.String(region),\n\t\tHTTPClient: httpClient,\n\n\t\tCredentialsChainVerboseErrors: aws.Bool(true),\n\t}))\n\n\tcreds, err := sess.Config.Credentials.Get()\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tfmt.Printf(\"got credentials from, %s\\n\", creds.ProviderName)\n}\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "This will output any error that occurred in detail, or report if the credentials were retrieved by the SDK",
  "id": "58f6841369a692963ec258e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-18T21:24:35.643Z",
  "text": "This will output any error that occurred in detail, or report if the credentials were retrieved by the SDK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/MadhaviLosetty",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13563052?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13563052?v=4&s=60",
   "displayName": "MadhaviLosetty",
   "gv": "4",
   "id": "55b969f90fc9f982beab777b",
   "url": "/MadhaviLosetty",
   "username": "MadhaviLosetty",
   "v": 2
  },
  "html": "<p>runResult, err := svc.RunInstances(&amp;ec2.RunInstancesInput{<br>        ImageId:      aws.String(<em>amiPtr),<br>        InstanceType: aws.String(&quot;t2.micro&quot;),<br>        MinCount:     aws.Int64(1),<br>        MaxCount:     aws.Int64(</em>instanceCntPtr),<br>        UserData:     aws.String(&quot;C:\\Users\\UserName\\Desktop\\UserData.txt&quot;),<br>    })</p><p>Error: InvalidParameterValue: Invalid BASE64 encoding of user data<br>        status code: 400, request id: 9fa328cc-f7fd-4ad6-b91b-d9e977f97b7a</p><p>Any idea on how to encode the file content? Is there an API for it?        </p>",
  "id": "58f6b0698fcce56b20156dde",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-19T00:33:45.033Z",
  "text": "runResult, err := svc.RunInstances(&ec2.RunInstancesInput{\n\t\tImageId:      aws.String(*amiPtr),\n\t\tInstanceType: aws.String(\"t2.micro\"),\n\t\tMinCount:     aws.Int64(1),\n\t\tMaxCount:     aws.Int64(*instanceCntPtr),\n\t\tUserData:     aws.String(\"C:\\\\Users\\\\UserName\\\\Desktop\\\\UserData.txt\"),\n\t})\n\t\nError: InvalidParameterValue: Invalid BASE64 encoding of user data\n        status code: 400, request id: 9fa328cc-f7fd-4ad6-b91b-d9e977f97b7a\n\t\t\nAny idea on how to encode the file content? Is there an API for it?\t\t",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/MadhaviLosetty",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13563052?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13563052?v=4&s=60",
   "displayName": "MadhaviLosetty",
   "gv": "4",
   "id": "55b969f90fc9f982beab777b",
   "url": "/MadhaviLosetty",
   "username": "MadhaviLosetty",
   "v": 2
  },
  "html": "Issue resolved by using b64.StdEncoding.EncodeToString([]byte(dat))",
  "id": "58f6b71a08c00c092a937d51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-19T01:02:18.127Z",
  "text": "Issue resolved by using b64.StdEncoding.EncodeToString([]byte(dat))",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> After enabling the CredentialsChainVerboseErrors as suggested ^</p><pre><code><span class=\"xml\">    creds retrieval error=\"NoCredentialProviders: no valid providers in chain\\ncaused by: EnvAccessKeyNotFound: failed to find credentials in the environment.\\nSharedCredsLoad: failed to load profile, .\\nEC2RoleRequestError: no EC2 instance role found\\ncaused by: EC2MetadataError: failed to make EC2Metadata request\\ncaused by: <span class=\"pi\">&lt;?xml version=\\\"1.0\\\" encoding=\\\"iso-8859-1\\\"?&gt;</span>\\n<span class=\"doctype\">&lt;!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\"\\n         \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\"&gt;</span>\\n<span class=\"tag\">&lt;<span class=\"title\">html</span> <span class=\"attribute\">xmlns</span>=<span class=\"value\">\\\"http:</span>//<span class=\"attribute\">www.w3.org</span>/<span class=\"attribute\">1999</span>/<span class=\"attribute\">xhtml</span>\\\" <span class=\"attribute\">xml:lang</span>=<span class=\"value\">\\\"en\\\"</span> <span class=\"attribute\">lang</span>=<span class=\"value\">\\\"en\\\"</span>&gt;</span>\\n <span class=\"tag\">&lt;<span class=\"title\">head</span>&gt;</span>\\n  <span class=\"tag\">&lt;<span class=\"title\">title</span>&gt;</span>404 - Not Found<span class=\"tag\">&lt;/<span class=\"title\">title</span>&gt;</span>\\n <span class=\"tag\">&lt;/<span class=\"title\">head</span>&gt;</span>\\n <span class=\"tag\">&lt;<span class=\"title\">body</span>&gt;</span>\\n  <span class=\"tag\">&lt;<span class=\"title\">h1</span>&gt;</span>404 - Not Found<span class=\"tag\">&lt;/<span class=\"title\">h1</span>&gt;</span>\\n <span class=\"tag\">&lt;/<span class=\"title\">body</span>&gt;</span>\\n<span class=\"tag\">&lt;/<span class=\"title\">html</span>&gt;</span>\\n\"\n    panic: NoCredentialProviders: no valid providers in chain\n    caused by: EnvAccessKeyNotFound: failed to find credentials in the environment.\n    SharedCredsLoad: failed to load profile, .\n    EC2RoleRequestError: no EC2 instance role found\n    caused by: EC2MetadataError: failed to make EC2Metadata request\n    caused by: <span class=\"pi\">&lt;?xml version=\"1.0\" encoding=\"iso-8859-1\"?&gt;</span>\n    <span class=\"doctype\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n             \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"title\">html</span> <span class=\"attribute\">xmlns</span>=<span class=\"value\">\"http://www.w3.org/1999/xhtml\"</span> <span class=\"attribute\">xml:lang</span>=<span class=\"value\">\"en\"</span> <span class=\"attribute\">lang</span>=<span class=\"value\">\"en\"</span>&gt;</span>\n     <span class=\"tag\">&lt;<span class=\"title\">head</span>&gt;</span>\n      <span class=\"tag\">&lt;<span class=\"title\">title</span>&gt;</span>404 - Not Found<span class=\"tag\">&lt;/<span class=\"title\">title</span>&gt;</span>\n     <span class=\"tag\">&lt;/<span class=\"title\">head</span>&gt;</span>\n     <span class=\"tag\">&lt;<span class=\"title\">body</span>&gt;</span>\n      <span class=\"tag\">&lt;<span class=\"title\">h1</span>&gt;</span>404 - Not Found<span class=\"tag\">&lt;/<span class=\"title\">h1</span>&gt;</span>\n     <span class=\"tag\">&lt;/<span class=\"title\">body</span>&gt;</span></span></code></pre><p>Please let me know if you need more details</p>",
  "id": "58f72ec88bb56c2d11c076c0",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-19T09:32:56.780Z",
  "text": "@jasdel After enabling the CredentialsChainVerboseErrors as suggested ^\n\n```\n\tcreds retrieval error=\"NoCredentialProviders: no valid providers in chain\\ncaused by: EnvAccessKeyNotFound: failed to find credentials in the environment.\\nSharedCredsLoad: failed to load profile, .\\nEC2RoleRequestError: no EC2 instance role found\\ncaused by: EC2MetadataError: failed to make EC2Metadata request\\ncaused by: <?xml version=\\\"1.0\\\" encoding=\\\"iso-8859-1\\\"?>\\n<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\"\\n         \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\">\\n<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\" xml:lang=\\\"en\\\" lang=\\\"en\\\">\\n <head>\\n  <title>404 - Not Found</title>\\n </head>\\n <body>\\n  <h1>404 - Not Found</h1>\\n </body>\\n</html>\\n\"\n\tpanic: NoCredentialProviders: no valid providers in chain\n\tcaused by: EnvAccessKeyNotFound: failed to find credentials in the environment.\n\tSharedCredsLoad: failed to load profile, .\n\tEC2RoleRequestError: no EC2 instance role found\n\tcaused by: EC2MetadataError: failed to make EC2Metadata request\n\tcaused by: <?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n\t<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\t         \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\t<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n\t <head>\n\t  <title>404 - Not Found</title>\n\t </head>\n\t <body>\n\t  <h1>404 - Not Found</h1>\n\t </body>\n```\nPlease let me know if you need more details",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "I know it was just released today, but is there a way that I can add tags to lambda functions when I create them via the Golang SDK?",
  "id": "58f762088fcce56b2017f758",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-19T13:11:36.893Z",
  "text": "I know it was just released today, but is there a way that I can add tags to lambda functions when I create them via the Golang SDK?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "it doesn&#39;t seem to be documented very well currently",
  "id": "58f762a88e4b63533de2d2d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-19T13:14:16.357Z",
  "text": "it doesn't seem to be documented very well currently",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-19T16:55:56.094Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"abhay8nitt_twitter\" class=\"mention\">@abhay8nitt_twitter</span> Thanks for the updated. From the log output it looks like the EC2 instance roles are not configured on the instance. You can verify this with the curl command, <pre><code class=\"sh\">curl http://<span class=\"number\">169.254</span>.<span class=\"number\">169.254</span>/latest/meta-data/iam/security-credentials</code></pre>",
  "id": "58f796893e27cac331a3ced1",
  "issues": [],
  "mentions": [
   {
    "screenName": "abhay8nitt_twitter",
    "userId": "58dfa339d73408ce4f555b60",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-19T16:55:37.776Z",
  "text": "@abhay8nitt_twitter Thanks for the updated. From the log output it looks like the EC2 instance roles are not configured on the instance. You can verify this with the curl command, \n\n```sh\ncurl http://169.254.169.254/latest/meta-data/iam/security-credentials\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jdonboch\" class=\"mention\">@jdonboch</span> With Lambda&#39;s new tagging feature you can add tags to existing resources (e.g. functions) with the <code>TagResource</code> API operation.   If you want to set the tags when you create a function the <code>CreateFunctionInput</code> type now has a new field, <code>Tags</code>.  It looks like our docs at <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/lambda/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/lambda/</a> are a little out of date, but I think they should be updated in a few days.",
  "id": "58f79e288e4b63533de40c82",
  "issues": [],
  "mentions": [
   {
    "screenName": "jdonboch",
    "userId": "55a6c1285e0d51bd787b7c3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-19T17:28:08.512Z",
  "text": "@jdonboch With Lambda's new tagging feature you can add tags to existing resources (e.g. functions) with the `TagResource` API operation.   If you want to set the tags when you create a function the `CreateFunctionInput` type now has a new field, `Tags`.  It looks like our docs at http://docs.aws.amazon.com/sdk-for-go/api/service/lambda/ are a little out of date, but I think they should be updated in a few days.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/lambda/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I tried this out - and it outputs nothing",
  "id": "58f79e2d8e4b63533de40c8a",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-19T17:28:13.496Z",
  "text": "@jasdel I tried this out - and it outputs nothing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"abhay8nitt_twitter\" class=\"mention\">@abhay8nitt_twitter</span> thanks, that means that the EC2 Instance does not have a role assigned to it, or the role or policy is not correctly configured",
  "id": "58f79e788e4b63533de40e85",
  "issues": [],
  "mentions": [
   {
    "screenName": "abhay8nitt_twitter",
    "userId": "58dfa339d73408ce4f555b60",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-19T17:29:28.679Z",
  "text": "@abhay8nitt_twitter thanks, that means that the EC2 Instance does not have a role assigned to it, or the role or policy is not correctly configured",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Check out this guide on how to setup up the instance role, <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html</a>",
  "id": "58f79eaa8bb56c2d11c28c60",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-19T17:30:18.212Z",
  "text": "Check out this guide on how to setup up the instance role, http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "by chance you&#39;re not running the curl command within a docker container are you?  We&#39;ve seen issues in the past where the docker container&#39;s router wont route to the 169.254.169.254 request.",
  "id": "58f79f128e4b63533de4120f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-19T17:32:02.095Z",
  "text": "by chance you're not running the curl command within a docker container are you?  We've seen issues in the past where the docker container's router wont route to the 169.254.169.254 request.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thanks a ton for the reply.. I will try setting this up and keep you updated!  No I am not running within a docker.. directly on the ec2 instance",
  "id": "58f79f368e4b63533de41273",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-19T17:32:38.571Z",
  "text": "@jasdel thanks a ton for the reply.. I will try setting this up and keep you updated!  No I am not running within a docker.. directly on the ec2 instance",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"abhay8nitt_twitter\" class=\"mention\">@abhay8nitt_twitter</span> thanks for the update. Let us know if we can help anymore. Normally getting the policy right and making sure that the instance role is assigned to the instance when it is created is common reasons for this not to work. I&#39;d first check in the EC2 instance&#39;s detail page that the instance role is assigned.",
  "id": "58f79f87f22385553d580175",
  "issues": [],
  "mentions": [
   {
    "screenName": "abhay8nitt_twitter",
    "userId": "58dfa339d73408ce4f555b60",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-19T17:33:59.257Z",
  "text": "@abhay8nitt_twitter thanks for the update. Let us know if we can help anymore. Normally getting the policy right and making sure that the instance role is assigned to the instance when it is created is common reasons for this not to work. I'd first check in the EC2 instance's detail page that the instance role is assigned.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I&#39;ve forgotten to do that a few times :)",
  "id": "58f79f95ad849bcf429d5a43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-19T17:34:13.037Z",
  "text": "I've forgotten to do that a few times :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "sure <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I will keep you posted",
  "id": "58f79fc2ad849bcf429d5af0",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-19T17:34:58.495Z",
  "text": "sure @jasdel I will keep you posted",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> one more thing - there is another microservice which runs on another ec2 box - (written in scala). It also uses the ec2 instance to create session. I tried the above curl statement - it too returns empty but things seem to be working fine there",
  "id": "58f7a251ad849bcf429d67b6",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-19T17:45:53.411Z",
  "text": "@jasdel one more thing - there is another microservice which runs on another ec2 box - (written in scala). It also uses the ec2 instance to create session. I tried the above curl statement - it too returns empty but things seem to be working fine there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I am suspecting one more thing.. I have seen nodejs and scala code.. constructors take the <strong>sqs = new AmazonSQSBufferedAsyncClient(<br>    new AmazonSQSAsyncClient(new DefaultAWSCredentialsProviderChain(), sqsClientConfig),<br>    new QueueBufferConfig() )) </strong>  (in case of scala) and similarly in nodejs . Are we missing that here in the go code here- which is resulting in this issue? If so- how dow we achieve the same?",
  "id": "58f7a5adf22385553d581d20",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-19T18:00:13.088Z",
  "text": "@jasdel I am suspecting one more thing.. I have seen nodejs and scala code.. constructors take the **sqs = new AmazonSQSBufferedAsyncClient(\n    new AmazonSQSAsyncClient(new DefaultAWSCredentialsProviderChain(), sqsClientConfig),\n    new QueueBufferConfig() )) **  (in case of scala) and similarly in nodejs . Are we missing that here in the go code here- which is resulting in this issue? If so- how dow we achieve the same?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "The aws-sdk-go  creates its credential chain in the <code>session.NewSession()</code> call.  it derives the credentials from several sources, environment, shared credentials file  (~/.aws/credentials), and finally EC2 instance roles.",
  "id": "58f7a6eef22385553d58240e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-04-19T18:05:34.596Z",
  "text": "The aws-sdk-go  creates its credential chain in the `session.NewSession()` call.  it derives the credentials from several sources, environment, shared credentials file  (~/.aws/credentials), and finally EC2 instance roles.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "by chance does your instance include the shared config file, (~/.aws/config)?  The aws-sdk-go does not read this fine by default. that functionality needs to be enabled with <code>AWS_SDK_LOAD_CONFIG =1</code> environment config, or via the <code>SessionOption. SharedConfigState</code> value set to <code>session.SharedConfigEnable</code>",
  "id": "58f7a7628bb56c2d11c2b6ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-19T18:07:30.569Z",
  "text": "by chance does your instance include the shared config file, (~/.aws/config)?  The aws-sdk-go does not read this fine by default. that functionality needs to be enabled with `AWS_SDK_LOAD_CONFIG =1` environment config, or via the `SessionOption. SharedConfigState` value set to `session.SharedConfigEnable`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-19T18:08:02.996Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "The <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/session/\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><code>session</code></a> package goes into more details about these options",
  "id": "58f7a77acfec91927255b4a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-19T18:07:54.205Z",
  "text": "The [`session`](http://docs.aws.amazon.com/sdk-for-go/api/aws/session/) package goes into more details about these options",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/session/"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ok it has abstracted this stuff unlike other sdk&#39;s .. No the instance doesn&#39;t include the config file ( we are trying to read from the instance profile). So is it correct to assume the above settings are not required if I am attempting to create the session from the ec2 instance profile",
  "id": "58f7a7e208c00c092a976a3a",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-19T18:09:38.835Z",
  "text": "@jasdel ok it has abstracted this stuff unlike other sdk's .. No the instance doesn't include the config file ( we are trying to read from the instance profile). So is it correct to assume the above settings are not required if I am attempting to create the session from the ec2 instance profile",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "?",
  "id": "58f7a7e3a0e48562421d6f61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-19T18:09:39.615Z",
  "text": "?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Correct, the session will automatically create the credential chain based on the session options, environment configuration, and shared credentials/config file",
  "id": "58f7a835881b89e101675bb8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-19T18:11:01.722Z",
  "text": "Correct, the session will automatically create the credential chain based on the session options, environment configuration, and shared credentials/config file",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/JulioDeLeon",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6826951?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6826951?v=4&s=60",
   "displayName": "Julio de Leon",
   "gv": "4",
   "id": "58a719a7d73408ce4f4b0d22",
   "url": "/JulioDeLeon",
   "username": "JulioDeLeon",
   "v": 2
  },
  "html": "Hello folks, Has anyone here tried to use this aws-sdk within a docker image?",
  "id": "58f904898e4b63533dea082d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-20T18:57:13.828Z",
  "text": "Hello folks, Has anyone here tried to use this aws-sdk within a docker image?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"JulioDeLeon\" class=\"mention\">@JulioDeLeon</span> We use Docker for some of our sandbox testing. Theres a series of docker files in the <a href=\"https://github.com/aws/aws-sdk-go/tree/master/awstesting/sandbox\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><code>awstesting/sandbox</code></a> folder. We have heard reports of Docker&#39;s routing sometimes causing issues with EC2 instance roles&#39;s ec2 metadata service request not being routable when the router is misonfigured. but thats the only issue I&#39;ve heard",
  "id": "58f90a3e8fcce56b201f255b",
  "issues": [],
  "mentions": [
   {
    "screenName": "JulioDeLeon",
    "userId": "58a719a7d73408ce4f4b0d22",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-04-20T19:21:34.135Z",
  "text": "@JulioDeLeon We use Docker for some of our sandbox testing. Theres a series of docker files in the [`awstesting/sandbox`](https://github.com/aws/aws-sdk-go/tree/master/awstesting/sandbox) folder. We have heard reports of Docker's routing sometimes causing issues with EC2 instance roles's ec2 metadata service request not being routable when the router is misonfigured. but thats the only issue I've heard",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/tree/master/awstesting/sandbox"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cpq",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/601816?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/601816?v=4&s=60",
   "displayName": "Sergey Lyubka",
   "gv": "4",
   "id": "55265b7315522ed4b3debf3d",
   "url": "/cpq",
   "username": "cpq",
   "v": 39
  },
  "html": "Hi. Question about things API. I can list things, get name, version and attribute. Is there an online/offline status somewhere ?",
  "id": "58fb4abd8bb56c2d11d1046a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-04-22T12:21:17.548Z",
  "text": "Hi. Question about things API. I can list things, get name, version and attribute. Is there an online/offline status somewhere ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I tried a couple of things but no luck so far<br>The environment has the following - HTTP_PROXY,HTTPS_PROXY,NO_PROXY,http_proxy,https_proxy configured.</p><pre><code><span class=\"number\">1</span>. Session creation without httpclient.\nValue, _ := sess.Config.Credentials.Get()\nLogged the following Value fields-  ProviderName, AccessKeyID, SecretAccessKey <span class=\"comment\">(**Successful**)</span>. But when tried <span class=\"keyword\">to</span> create an sqs client  <span class=\"keyword\">and</span> <span class=\"keyword\">read</span> the sqs <span class=\"keyword\">message</span> - I get an error ( **send request failed caused by: Post https:<span class=\"comment\">//sqs.us-west-2.amazonaws.com/: dial tcp X.X.X.X:443: getsockopt: connection timed out **)</span>\n<span class=\"number\">2</span>. Session creation <span class=\"keyword\">with</span> httpclient (also enabled  **CredentialsChainVerboseErrors: aws.Bool(true)**) <span class=\"keyword\">in</span> the session- pointed <span class=\"keyword\">to</span> the proxy - used both ProxyFromEnvironment as well as\nProxy: func(h *http.Request) <span class=\"comment\">(*url.URL, error) {\n                return url.Parse(HTTPS_PROXY)\n            },\nValue, _ := sess.Config.Credentials.Get() - (**Errors out - \"NoCredentialProviders: no valid providers in chain\\ncaused by: EnvAccessKeyNotFound: failed to find credentials in the environment.\\nSharedCredsLoad: failed to load profile, .\\nEC2RoleRequestError: no EC2 instance role found\\ncaused by: EC2MetadataError: failed to make EC2Metadata request\\ncaused by **)</span>\n<span class=\"number\">3</span>. Tried the below standalone code <span class=\"keyword\">on</span> the ec2 instance\n*\nsess := session.Must(session.NewSession(&amp;aws.Config<span class=\"comment\">{\n        Region: aws.String(\"us-west-2\"),\n    }</span>))\n    svc := s3.New(sess)    \n    i := <span class=\"number\">0</span>\n    err := svc.ListObjectsPages(&amp;s3.ListObjectsInput<span class=\"comment\">{\n        \"mybucket\",\n    }</span>, func(p *s3.ListObjectsOutput, last bool) (shouldContinue bool) <span class=\"comment\">{\n        fmt.Println(\"Page,\", i)\n        i++        \n        for _, obj := range p.Contents {\n            fmt.Println(\"Object:\", *obj.Key)\n        }</span>\n        return true\n    })\n*\nThis was able <span class=\"keyword\">to</span> print the objects <span class=\"keyword\">in</span> the page. However when I tried <span class=\"keyword\">to</span> unset the NO_PROXY variable <span class=\"keyword\">in</span> the environment even this code failed <span class=\"keyword\">with</span> the same error \n*failed <span class=\"keyword\">to</span> list objects NoCredentialProviders: no valid providers <span class=\"keyword\">in</span> chain. Deprecated.*\n        *<span class=\"keyword\">For</span> verbose messaging see aws.Config.CredentialsChainVerboseErrors*</code></pre><p>Have been struggling with this for a while. Anyhelp would be really appreciable.. (my ops team says that the permissions are all ok as the standalone code runs successfully.. and other microservices on ec2 instances written in scala and node pretty much follow the above ). </p>",
  "id": "58fd92f08e4b63533df9ebcc",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-24T05:53:51.932Z",
  "text": "@jasdel I tried a couple of things but no luck so far \nThe environment has the following - HTTP_PROXY,HTTPS_PROXY,NO_PROXY,http_proxy,https_proxy configured.\n```\n1. Session creation without httpclient.\nValue, _ := sess.Config.Credentials.Get()\nLogged the following Value fields-  ProviderName, AccessKeyID, SecretAccessKey (**Successful**). But when tried to create an sqs client  and read the sqs message - I get an error ( **send request failed caused by: Post https://sqs.us-west-2.amazonaws.com/: dial tcp X.X.X.X:443: getsockopt: connection timed out **)\n2. Session creation with httpclient (also enabled  **CredentialsChainVerboseErrors: aws.Bool(true)**) in the session- pointed to the proxy - used both ProxyFromEnvironment as well as\nProxy: func(h *http.Request) (*url.URL, error) {\n\t\t\t\treturn url.Parse(HTTPS_PROXY)\n\t\t\t},\nValue, _ := sess.Config.Credentials.Get() - (**Errors out - \"NoCredentialProviders: no valid providers in chain\\ncaused by: EnvAccessKeyNotFound: failed to find credentials in the environment.\\nSharedCredsLoad: failed to load profile, .\\nEC2RoleRequestError: no EC2 instance role found\\ncaused by: EC2MetadataError: failed to make EC2Metadata request\\ncaused by **)\n3. Tried the below standalone code on the ec2 instance\n*\nsess := session.Must(session.NewSession(&aws.Config{\n        Region: aws.String(\"us-west-2\"),\n    }))\n    svc := s3.New(sess)    \n    i := 0\n    err := svc.ListObjectsPages(&s3.ListObjectsInput{\n        \"mybucket\",\n    }, func(p *s3.ListObjectsOutput, last bool) (shouldContinue bool) {\n        fmt.Println(\"Page,\", i)\n        i++        \n        for _, obj := range p.Contents {\n            fmt.Println(\"Object:\", *obj.Key)\n        }\n        return true\n    })\n*\nThis was able to print the objects in the page. However when I tried to unset the NO_PROXY variable in the environment even this code failed with the same error \n*failed to list objects NoCredentialProviders: no valid providers in chain. Deprecated.*\n        *For verbose messaging see aws.Config.CredentialsChainVerboseErrors*\n```\nHave been struggling with this for a while. Anyhelp would be really appreciable.. (my ops team says that the permissions are all ok as the standalone code runs successfully.. and other microservices on ec2 instances written in scala and node pretty much follow the above ). \n\n\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I have created a new issue as well <span data-link-type=\"issue\" data-issue=\"1226\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#1226</span>",
  "id": "58fda6a312d24099359155b0",
  "issues": [
   {
    "number": "1226",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-04-24T07:17:55.335Z",
  "text": "@jasdel I have created a new issue as well https://github.com/aws/aws-sdk-go/issues/1226",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for the update <span data-link-type=\"mention\" data-screen-name=\"abhay8nitt_twitter\" class=\"mention\">@abhay8nitt_twitter</span> I&#39;ve  taken a look at the issue and asked a few quests there.",
  "id": "58fe2f9c08c00c092aaf8500",
  "issues": [],
  "mentions": [
   {
    "screenName": "abhay8nitt_twitter",
    "userId": "58dfa339d73408ce4f555b60",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-04-24T17:02:20.534Z",
  "text": "Thanks for the update @abhay8nitt_twitter I've  taken a look at the issue and asked a few quests there.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/tleyden",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/296876?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/296876?v=4&s=60",
   "displayName": "Traun Leyden",
   "gv": "4",
   "id": "54d9047615522ed4b3dbce0e",
   "url": "/tleyden",
   "username": "tleyden",
   "v": 27
  },
  "html": "I&#39;m looking for a way to programmatically tell the aws sdk to connect to a standalone moto mock ec2 instance running at <a href=\"http://127.0.0.1:5000/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://127.0.0.1:5000/</a> ",
  "id": "58ff55c7cfec91927272baaf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-25T13:57:27.409Z",
  "text": "I'm looking for a way to programmatically tell the aws sdk to connect to a standalone moto mock ec2 instance running at http://127.0.0.1:5000/ ",
  "unread": false,
  "urls": [
   {
    "url": "http://127.0.0.1:5000/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/tleyden",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/296876?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/296876?v=4&s=60",
   "displayName": "Traun Leyden",
   "gv": "4",
   "id": "54d9047615522ed4b3dbce0e",
   "url": "/tleyden",
   "username": "tleyden",
   "v": 27
  },
  "html": "looks like it&#39;s <code>Config.Endpoint</code>",
  "id": "58ff5758881b89e101843091",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-25T14:04:08.075Z",
  "text": "looks like it's `Config.Endpoint`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I have updated <span data-link-type=\"issue\" data-issue=\"1226\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#1226</span>. Is there an easy way to directly fetch the attribute values from the RecieveMessage Body . In my case I want to fetch the bucket name and object key",
  "id": "5900b6b3f22385553d7b37fb",
  "issues": [
   {
    "number": "1226",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-04-26T15:03:15.602Z",
  "text": "@jasdel I have updated https://github.com/aws/aws-sdk-go/issues/1226. Is there an easy way to directly fetch the attribute values from the RecieveMessage Body . In my case I want to fetch the bucket name and object key",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"tleyden\" class=\"mention\">@tleyden</span> Correct setting the <code>Endpoint</code> is the best way. You may also need to set <code>Config.DisableSSL</code> as well to prevent tLS being used for the request",
  "id": "5900ba668e4b63533d076da9",
  "issues": [],
  "mentions": [
   {
    "screenName": "tleyden",
    "userId": "54d9047615522ed4b3dbce0e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-26T15:19:02.366Z",
  "text": "@tleyden Correct setting the `Endpoint` is the best way. You may also need to set `Config.DisableSSL` as well to prevent tLS being used for the request",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/tleyden",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/296876?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/296876?v=4&s=60",
   "displayName": "Traun Leyden",
   "gv": "4",
   "id": "54d9047615522ed4b3dbce0e",
   "url": "/tleyden",
   "username": "tleyden",
   "v": 27
  },
  "html": "Cool, thanks!",
  "id": "59016b3808c00c092abd28ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-27T03:53:28.486Z",
  "text": "Cool, thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/andrewbruno",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7456297?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7456297?v=3&s=60",
   "displayName": "Andrew Bruno",
   "gv": "3",
   "id": "58f87d14d73408ce4f59acff",
   "url": "/andrewbruno",
   "username": "andrewbruno"
  },
  "html": "Left menu links to golang APIs dont seem to work <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/</a>",
  "id": "59016c336aea30763d47a609",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-27T03:57:39.154Z",
  "text": "Left menu links to golang APIs dont seem to work http://docs.aws.amazon.com/sdk-for-go/api/",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/andrewbruno",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7456297?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7456297?v=3&s=60",
   "displayName": "Andrew Bruno",
   "gv": "3",
   "id": "58f87d14d73408ce4f59acff",
   "url": "/andrewbruno",
   "username": "andrewbruno"
  },
  "html": "e.g. <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/cognitoidentityprovider/\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/cognitoidentityprovider/</a>",
  "id": "59016c4ad32c6f2f0944e9e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-27T03:58:02.885Z",
  "text": "e.g. http://docs.aws.amazon.com/sdk-for-go/api/service/cognitoidentityprovider/",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/cognitoidentityprovider/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/andrewbruno",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7456297?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7456297?v=3&s=60",
   "displayName": "Andrew Bruno",
   "gv": "3",
   "id": "58f87d14d73408ce4f59acff",
   "url": "/andrewbruno",
   "username": "andrewbruno"
  },
  "html": "I have submitted an AWS support ticket - FYI",
  "id": "59016c868bb56c2d11e88073",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-27T03:59:02.134Z",
  "text": "I have submitted an AWS support ticket - FYI",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for the feedback <span data-link-type=\"mention\" data-screen-name=\"andrewbruno\" class=\"mention\">@andrewbruno</span> I&#39;m trying to reproduce the issue,  but running into troubles seeing the issue you&#39;re running into.  I click on items in the left frame (package list) and the right frame loads the detailed documentation for the package I clicked. Am I doing the correct steps to reproduce the issue? If you could provide steps to reproduce the issue that would be very helpful",
  "id": "590219ad587a245e24547bad",
  "issues": [],
  "mentions": [
   {
    "screenName": "andrewbruno",
    "userId": "58f87d14d73408ce4f59acff",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-27T16:17:49.066Z",
  "text": "Thanks for the feedback @andrewbruno I'm trying to reproduce the issue,  but running into troubles seeing the issue you're running into.  I click on items in the left frame (package list) and the right frame loads the detailed documentation for the package I clicked. Am I doing the correct steps to reproduce the issue? If you could provide steps to reproduce the issue that would be very helpful",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/andrewbruno",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7456297?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7456297?v=3&s=60",
   "displayName": "Andrew Bruno",
   "gv": "3",
   "id": "58f87d14d73408ce4f59acff",
   "url": "/andrewbruno",
   "username": "andrewbruno"
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> - I re-tested it, and it has now been fixed.  Thanks.",
  "id": "5902ec2dcfec91927282047c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-04-28T07:15:57.560Z",
  "text": "Hi @jasdel - I re-tested it, and it has now been fixed.  Thanks.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for the update <span data-link-type=\"mention\" data-screen-name=\"andrewbruno\" class=\"mention\">@andrewbruno</span> , let us know if you run into any additional issues, or have feed back",
  "id": "59036d078bb56c2d11f103cb",
  "issues": [],
  "mentions": [
   {
    "screenName": "andrewbruno",
    "userId": "58f87d14d73408ce4f59acff",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-04-28T16:25:43.136Z",
  "text": "Thanks for the update @andrewbruno , let us know if you run into any additional issues, or have feed back",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "Hi All",
  "id": "59037d85f22385553d8737c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T17:36:05.331Z",
  "text": "Hi All",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "I am developing some application in cloud and have a need to upload some bigger files to S3. I am trying to find answer to the below post: ",
  "id": "59037dab8bb56c2d11f1533e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T17:36:43.857Z",
  "text": "I am developing some application in cloud and have a need to upload some bigger files to S3. I am trying to find answer to the below post: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "<a href=\"https://stackoverflow.com/questions/43662755/s3-golang-multipart-upload-using-presigned-url\" rel=\"nofollow\" target=\"_blank\" class=\"link\">https://stackoverflow.com/questions/43662755/s3-golang-multipart-upload-using-presigned-url</a>",
  "id": "59037dacf22385553d87382b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T17:36:44.274Z",
  "text": "https://stackoverflow.com/questions/43662755/s3-golang-multipart-upload-using-presigned-url",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/questions/43662755/s3-golang-multipart-upload-using-presigned-url"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "Please share if you have any suggestions on this",
  "id": "59037dbc6aea30763d506393",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T17:37:00.500Z",
  "text": "Please share if you have any suggestions on this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"sfahmi123\" class=\"mention\">@sfahmi123</span> I think <code>michael-sqlbot</code>&#39;s response provides a overview of what you&#39;re application would need to do. There are a few ways you could accomplish this upload. One I would suggest is that the client requests for your application to create a upload. Your application would make the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.CreateMultipartUpload\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><code>CreateMultiPartUpload</code></a> API call to S3. This will return a UploadID  value. Then from there your application can begin to vend <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.UploadPart\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><code>PutObjectPart</code></a> API calls as presigned URLs to the client. When the client is done with all of the uploads your application would make the [<code>CompleteMultiPartUpload</code>](<a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.CompleteMultipartUpload\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.CompleteMultipartUpload</a> API call.",
  "id": "5903863e08c00c092ac61ba9",
  "issues": [],
  "mentions": [
   {
    "screenName": "sfahmi123",
    "userId": "59037d80d73408ce4f5bb1b7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T18:13:18.261Z",
  "text": "Hi @sfahmi123 I think `michael-sqlbot`'s response provides a overview of what you're application would need to do. There are a few ways you could accomplish this upload. One I would suggest is that the client requests for your application to create a upload. Your application would make the [`CreateMultiPartUpload`](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.CreateMultipartUpload) API call to S3. This will return a UploadID  value. Then from there your application can begin to vend [`PutObjectPart`](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.UploadPart) API calls as presigned URLs to the client. When the client is done with all of the uploads your application would make the [`CompleteMultiPartUpload`](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.CompleteMultipartUpload API call.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.CreateMultipartUpload"
   },
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.UploadPart"
   },
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.CompleteMultipartUpload"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "your application would need to have a way of vending the <code>PutObjectPart</code> presigned URLs to the client either one demand in batches, or something similar, because the presigned URLs will expire after a configured time.  Technically you could also presign the <code>CreateMultiPartUpload</code> API call also, but the client would need to send the UploadID to your applicaiton anyways so it could create the UploadPart presigned API urls.",
  "id": "590386bc08c00c092ac61d89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T18:15:24.573Z",
  "text": "your application would need to have a way of vending the `PutObjectPart` presigned URLs to the client either one demand in batches, or something similar, because the presigned URLs will expire after a configured time.  Technically you could also presign the `CreateMultiPartUpload` API call also, but the client would need to send the UploadID to your applicaiton anyways so it could create the UploadPart presigned API urls.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "Thanks Jason for the inputs",
  "id": "590387346aea30763d508d20",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T18:17:24.579Z",
  "text": "Thanks Jason for the inputs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "The createMultiPartUpload API would also need a presigned URL, right? I spent some time on it but could not figure out which argument for this function can take the presigned URL",
  "id": "590387698bb56c2d11f1810b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-04-28T18:18:17.693Z",
  "text": "The createMultiPartUpload API would also need a presigned URL, right? I spent some time on it but could not figure out which argument for this function can take the presigned URL",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "Also, does every call like createMultiPartUpload putObjectPart require seperate presigned URL&#39;s?",
  "id": "590387c06aea30763d509161",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-04-28T18:19:44.368Z",
  "text": "Also, does every call like createMultiPartUpload putObjectPart require seperate presigned URL's?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "It would be great if you could provide me the list of functions from the SDK that I can use and also tell me how to pass the presigned URL&#39;s to it...",
  "id": "59038823587a245e245a79c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T18:21:23.711Z",
  "text": "It would be great if you could provide me the list of functions from the SDK that I can use and also tell me how to pass the presigned URL's to it...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Ah so, none of these API methods take a presigned URL. The client that is given the the presigned url would use Go&#39;s http.Client to make the request directly",
  "id": "59038825f22385553d876742",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T18:21:25.167Z",
  "text": "Ah so, none of these API methods take a presigned URL. The client that is given the the presigned url would use Go's http.Client to make the request directly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "The SDK will generate the presigned URL with the <code>PresignRequest</code> method on the <code>request.Request</code> type, but the SDK does not consume the urls. They are for clients outside of the SDK",
  "id": "5903886e8fcce56b204795de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T18:22:38.978Z",
  "text": "The SDK will generate the presigned URL with the `PresignRequest` method on the `request.Request` type, but the SDK does not consume the urls. They are for clients outside of the SDK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "You mean I use the http.Client method to send the request similar to what CreateMultiPartUpload  sends? How do I do it?",
  "id": "5903889412d2409935aa5c94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T18:23:16.034Z",
  "text": "You mean I use the http.Client method to send the request similar to what CreateMultiPartUpload  sends? How do I do it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "ok",
  "id": "59038897587a245e245a7c76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T18:23:19.551Z",
  "text": "ok",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "I have some code written to generate the presigned URl:",
  "id": "590388f5c1d3b501542e0448",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T18:24:53.322Z",
  "text": "I have some code written to generate the presigned URl:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "<pre><code>       <span class=\"rule\"><span class=\"attribute\">sess </span>:<span class=\"value\">= session.<span class=\"function\">Must</span>(session.<span class=\"function\">NewSession</span>())\n        svc := s3.<span class=\"function\">New</span>(sess, &amp;aws.Config{Region: aws.<span class=\"function\">String</span>(<span class=\"string\">\"us-east-1\"</span>)})</span></span></code></pre><p>path := &quot;/test/testing/signedurl&quot;</p><p>req, _ := svc.PutObjectRequest(&amp;s3.PutObjectInput{<br>    Bucket: aws.String(&quot;ad.cisco.com-techsupport-test&quot;),<br>    Key:    aws.String(path),<br>})<br>urlStr, err := req.Presign(3 * time.Minute)</p>",
  "id": "590388f58fcce56b20479855",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T18:24:53.551Z",
  "text": "           sess := session.Must(session.NewSession())\n            svc := s3.New(sess, &aws.Config{Region: aws.String(\"us-east-1\")})\npath := \"/test/testing/signedurl\"\n\nreq, _ := svc.PutObjectRequest(&s3.PutObjectInput{\n    Bucket: aws.String(\"ad.cisco.com-techsupport-test\"),\n    Key:    aws.String(path),\n})\nurlStr, err := req.Presign(3 * time.Minute)\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "But I am trying to understand how I can use this on the application that uploads (multi part) the file to s3",
  "id": "59038926cfec91927284d7bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T18:25:42.158Z",
  "text": "But I am trying to understand how I can use this on the application that uploads (multi part) the file to s3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "Is there a sample code available for this anywhere?",
  "id": "590389cfd32c6f2f094dc262",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T18:28:31.093Z",
  "text": "Is there a sample code available for this anywhere?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thats a good start, So first I&#39;d start without multipart using <code>PutObject</code> API.  your application should use the PutObjectRequest method to create the pre-signed URL. With this url use the Go standard library&#39;s http.NewRequest and http.Client to send the request to S3. Once you have this working adding multipart is the next step.",
  "id": "590389f6587a245e245a83d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T18:29:10.502Z",
  "text": "Thats a good start, So first I'd start without multipart using `PutObject` API.  your application should use the PutObjectRequest method to create the pre-signed URL. With this url use the Go standard library's http.NewRequest and http.Client to send the request to S3. Once you have this working adding multipart is the next step.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Sure, I think so I&#39;ll look around a bit and see if I can find any",
  "id": "59038a038e4b63533d13580b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T18:29:23.091Z",
  "text": "Sure, I think so I'll look around a bit and see if I can find any",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "I have the single upload working with the presigned url.. Sample code below where I am passing the presigned url as an argument to a go program.....",
  "id": "59038b5c12d2409935aa6728",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-28T18:35:08.527Z",
  "text": "I have the single upload working with the presigned url.. Sample code below where I am passing the presigned url as an argument to a go program.....",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "   urlStr := os.Args[1]<pre><code><span class=\"keyword\">file</span>, err := os.Open(<span class=\"string\">\"*******\"</span>)\nfi, err := <span class=\"keyword\">file</span>.Stat()\nbuffer :=make([]<span class=\"keyword\">byte</span>,fi.<span class=\"keyword\">Size</span>())\n<span class=\"keyword\">file</span>.<span class=\"keyword\">Read</span>(buffer)\nrdr := bytes.<span class=\"keyword\">NewReader</span>(buffer)\n\nrequ, err := http.NewRequest(<span class=\"string\">\"PUT\"</span>, urlStr,rdr)\n<span class=\"keyword\">if</span> err != nil {\n    fmt.<span class=\"keyword\">Println</span>(<span class=\"string\">\"error creating request\"</span>, urlStr)\n    <span class=\"keyword\">return</span>\n}\n\nresp, err := http.DefaultClient.<span class=\"keyword\">Do</span>(requ)</code></pre>",
  "id": "59038b6612d2409935aa6761",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-28T18:35:18.539Z",
  "text": "   urlStr := os.Args[1]\n\n    file, err := os.Open(\"*******\")\n    fi, err := file.Stat()\n    buffer :=make([]byte,fi.Size())\n    file.Read(buffer)\n    rdr := bytes.NewReader(buffer)\n\n    requ, err := http.NewRequest(\"PUT\", urlStr,rdr)\n    if err != nil {\n        fmt.Println(\"error creating request\", urlStr)\n        return\n    }\n\n    resp, err := http.DefaultClient.Do(requ)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "This can upload the files to S3 using presigned url and single upload.....But could not figure out how to modify this for multipart upload",
  "id": "59038b9e6aea30763d50a408",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-28T18:36:14.167Z",
  "text": "This can upload the files to S3 using presigned url and single upload.....But could not figure out how to modify this for multipart upload",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "This also reads the entrire file contents to memory. I tried to use the bufio.NewReader here instead of  bytes.NewReader, but it did not work",
  "id": "59038c2708c00c092ac63360",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-28T18:38:31.929Z",
  "text": "This also reads the entrire file contents to memory. I tried to use the bufio.NewReader here instead of  bytes.NewReader, but it did not work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>  Please let me know if you can find a sample code",
  "id": "59038d428bb56c2d11f19b78",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-28T18:43:14.312Z",
  "text": "@jasdel  Please let me know if you can find a sample code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-04-28T19:33:55.140Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sfahmi123\" class=\"mention\">@sfahmi123</span> instead of using the buffer you should be able to just pass the file in  as the third parameter to <code>NewRequest</code> correct?  The <code>bufio</code> package should make this a little bit smoother though. It shouldn&#39;t need to load the entire file at once into memory, only stream its contents. The <code>bufio</code> package should help reduce the total amount of memory needed. <pre><code class=\"go\">f, err := os.Open(filename)\n<span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n     <span class=\"built_in\">panic</span>(err)\n}\nbody := bufio.NewReader(f)\n<span class=\"keyword\">defer</span> f.Close()\n\nreq, err := http.NewRequest(<span class=\"string\">\"PUT\"</span>, urlStr, body)\n<span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n    <span class=\"built_in\">panic</span>(err)\n}\n\nresp, err := http.DefaultClient.Do(req)</code></pre>",
  "id": "590398586aea30763d50d988",
  "issues": [],
  "mentions": [
   {
    "screenName": "sfahmi123",
    "userId": "59037d80d73408ce4f5bb1b7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-28T19:30:32.580Z",
  "text": "@sfahmi123 instead of using the buffer you should be able to just pass the file in  as the third parameter to `NewRequest` correct?  The `bufio` package should make this a little bit smoother though. It shouldn't need to load the entire file at once into memory, only stream its contents. The `bufio` package should help reduce the total amount of memory needed. \n\n```go\nf, err := os.Open(filename)\nif err != nil {\n     panic(err)\n}\nbody := bufio.NewReader(f)\ndefer f.Close()\n\nreq, err := http.NewRequest(\"PUT\", urlStr, body)\nif err != nil {\n    panic(err)\n}\n\nresp, err := http.DefaultClient.Do(req)\n```",
  "unread": false,
  "urls": [],
  "v": 6
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "I am not sure if it will work....I tried it and it gave me the following HTTP response",
  "id": "5903b69a587a245e245b3c48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-04-28T21:39:38.942Z",
  "text": "I am not sure if it will work....I tried it and it gave me the following HTTP response",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "&amp;{501 Not Implemented 501 HTTP/1.1 1 1 map[X-Amz-Id-2:[5UQTwTcAsNqGaua9XEftaoHMnRLTiyU5+LC9sDUB1MHctaq0UcL8m5GMOnlKZq6PwMA+cG6i4KE=] Content-Type:[application/xml] Date:[Fri, 28 Apr 2017 21:37:36 GMT] Server:[AmazonS3] X-Amz-Request-Id:[AF4FEFF58278D3FB]] 0x18612750 -1 [chunked] true false map[] 0x1865a380 0x18869380}",
  "id": "5903b69b12d2409935ab142d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-28T21:39:39.396Z",
  "text": "&{501 Not Implemented 501 HTTP/1.1 1 1 map[X-Amz-Id-2:[5UQTwTcAsNqGaua9XEftaoHMnRLTiyU5+LC9sDUB1MHctaq0UcL8m5GMOnlKZq6PwMA+cG6i4KE=] Content-Type:[application/xml] Date:[Fri, 28 Apr 2017 21:37:36 GMT] Server:[AmazonS3] X-Amz-Request-Id:[AF4FEFF58278D3FB]] 0x18612750 -1 [chunked] true false map[] 0x1865a380 0x18869380}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "The 501 response, suggest something is wrong with the request i think. Try logging the request with <code>httptest.DumpRequest</code> to see if it is not doing what you expect.  In addition you can dump the response for more information with <code>httptest.DumpResponse</code>.",
  "id": "5903b73ef22385553d882ca1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-04-28T21:42:22.202Z",
  "text": "The 501 response, suggest something is wrong with the request i think. Try logging the request with `httptest.DumpRequest` to see if it is not doing what you expect.  In addition you can dump the response for more information with `httptest.DumpResponse`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "Can we use generate  presigned url for CreateMultipartUploadRequest(<em>s3.CreateMultipartUploadInput) (</em>request.Request, *s3.CreateMultipartUploadOutput)  request?",
  "id": "5903d542881b89e101976139",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-04-28T23:50:26.533Z",
  "text": "Can we use generate  presigned url for CreateMultipartUploadRequest(*s3.CreateMultipartUploadInput) (*request.Request, *s3.CreateMultipartUploadOutput)  request?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "You can, but it would require your client to send back the requestID to your application so your application could create the UploadPart presigned urls. I&#39;d suggest performing the CreateMultipartUploadRequest in your application and only vending the UploadPart presigned URLs to the client.",
  "id": "5903d683c1d3b501542f296e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-04-28T23:55:47.932Z",
  "text": "You can, but it would require your client to send back the requestID to your application so your application could create the UploadPart presigned urls. I'd suggest performing the CreateMultipartUploadRequest in your application and only vending the UploadPart presigned URLs to the client.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "ok...got it....let me try that....Thanks a lot Jason for your inputs.",
  "id": "5903e9068bb56c2d11f2ea6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-04-29T01:14:46.025Z",
  "text": "ok...got it....let me try that....Thanks a lot Jason for your inputs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/michaelerickson",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=60",
   "displayName": "Michael Erickson",
   "gv": "3",
   "id": "59061c64d73408ce4f5c07f6",
   "url": "/michaelerickson",
   "username": "michaelerickson"
  },
  "html": "Good morning all.  I&#39;m trying to add tags to an object being uploaded to S3.  Using:",
  "id": "59061c84c1d3b50154366f0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-04-30T17:19:00.635Z",
  "text": "Good morning all.  I'm trying to add tags to an object being uploaded to S3.  Using:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/michaelerickson",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=60",
   "displayName": "Michael Erickson",
   "gv": "3",
   "id": "59061c64d73408ce4f5c07f6",
   "url": "/michaelerickson",
   "username": "michaelerickson"
  },
  "html": "```",
  "id": "59061ca212d2409935b2a008",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-04-30T17:19:30.036Z",
  "text": "```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/michaelerickson",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=60",
   "displayName": "Michael Erickson",
   "gv": "3",
   "id": "59061c64d73408ce4f5c07f6",
   "url": "/michaelerickson",
   "username": "michaelerickson"
  },
  "html": "```// Create an S3 uploader<br>        uploader := s3manager.NewUploader(sess)<pre><code>    // <span class=\"operator\"><span class=\"keyword\">Create</span> <span class=\"keyword\">some</span> tags\n    tags := url.<span class=\"keyword\">Values</span>{}\n    tags.<span class=\"keyword\">Set</span>(<span class=\"string\">\"PHI\"</span>, <span class=\"string\">\"true\"</span>)\n    tags.<span class=\"keyword\">Add</span>(<span class=\"string\">\"GVT\"</span>, <span class=\"string\">\"true\"</span>)\n    tags.<span class=\"keyword\">Add</span>(<span class=\"string\">\"PII\"</span>, <span class=\"string\">\"true\"</span>)\n    <span class=\"keyword\">log</span>.Printf(<span class=\"string\">\"INFO: tags: %s\\n\"</span>, tags.<span class=\"keyword\">Encode</span>())\n    // Try <span class=\"keyword\">and</span> upload\n    resp, err := uploader.Upload(&amp;s3manager.UploadInput{\n            Bucket:  aws.<span class=\"keyword\">String</span>(bucket),\n            <span class=\"keyword\">Key</span>:     aws.<span class=\"keyword\">String</span>(filename),\n            Body:    file,\n            Tagging: aws.<span class=\"keyword\">String</span>(tags.<span class=\"keyword\">Encode</span>()),\n    }) <span class=\"string\">``</span><span class=\"string\">`</span></span></code></pre>",
  "id": "59061caac1d3b5015436701a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-04-30T17:19:38.007Z",
  "text": "```// Create an S3 uploader\n        uploader := s3manager.NewUploader(sess)\n        \n        // Create some tags\n        tags := url.Values{}\n        tags.Set(\"PHI\", \"true\")\n        tags.Add(\"GVT\", \"true\")\n        tags.Add(\"PII\", \"true\")\n        log.Printf(\"INFO: tags: %s\\n\", tags.Encode())\n        // Try and upload\n        resp, err := uploader.Upload(&s3manager.UploadInput{\n                Bucket:  aws.String(bucket),\n                Key:     aws.String(filename),\n                Body:    file,\n                Tagging: aws.String(tags.Encode()),\n        }) ```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/michaelerickson",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=60",
   "displayName": "Michael Erickson",
   "gv": "3",
   "id": "59061c64d73408ce4f5c07f6",
   "url": "/michaelerickson",
   "username": "michaelerickson"
  },
  "html": "the <code>uploader.Upload</code> function sees to apply the tags if the object can be moved in one single chunk.  However, uploading a large file that creates a multipart upload winds up ignoring the tags.",
  "id": "59061cef587a245e2462e65d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-04-30T17:20:47.502Z",
  "text": "the `uploader.Upload` function sees to apply the tags if the object can be moved in one single chunk.  However, uploading a large file that creates a multipart upload winds up ignoring the tags.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/michaelerickson",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=60",
   "displayName": "Michael Erickson",
   "gv": "3",
   "id": "59061c64d73408ce4f5c07f6",
   "url": "/michaelerickson",
   "username": "michaelerickson"
  },
  "html": "<pre><code>        // <span class=\"operator\"><span class=\"keyword\">Create</span> an S3 uploader\n        uploader := s3manager.NewUploader(sess)\n\n        // <span class=\"keyword\">Create</span> <span class=\"keyword\">some</span> tags\n        tags := url.<span class=\"keyword\">Values</span>{}\n        tags.<span class=\"keyword\">Set</span>(<span class=\"string\">\"PHI\"</span>, <span class=\"string\">\"true\"</span>)\n        tags.<span class=\"keyword\">Add</span>(<span class=\"string\">\"GVT\"</span>, <span class=\"string\">\"true\"</span>)\n        tags.<span class=\"keyword\">Add</span>(<span class=\"string\">\"PII\"</span>, <span class=\"string\">\"true\"</span>)\n        <span class=\"keyword\">log</span>.Printf(<span class=\"string\">\"INFO: tags: %s\\n\"</span>, tags.<span class=\"keyword\">Encode</span>())\n        // Try <span class=\"keyword\">and</span> upload\n        resp, err := uploader.Upload(&amp;s3manager.UploadInput{\n                Bucket:  aws.<span class=\"keyword\">String</span>(bucket),\n                <span class=\"keyword\">Key</span>:     aws.<span class=\"keyword\">String</span>(filename),\n                Body:    file,\n                Tagging: aws.<span class=\"keyword\">String</span>(tags.<span class=\"keyword\">Encode</span>()),\n        })</span></code></pre>",
  "id": "59061d11c1d3b50154367179",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-04-30T17:21:21.444Z",
  "text": "```\n        // Create an S3 uploader\n        uploader := s3manager.NewUploader(sess)\n        \n        // Create some tags\n        tags := url.Values{}\n        tags.Set(\"PHI\", \"true\")\n        tags.Add(\"GVT\", \"true\")\n        tags.Add(\"PII\", \"true\")\n        log.Printf(\"INFO: tags: %s\\n\", tags.Encode())\n        // Try and upload\n        resp, err := uploader.Upload(&s3manager.UploadInput{\n                Bucket:  aws.String(bucket),\n                Key:     aws.String(filename),\n                Body:    file,\n                Tagging: aws.String(tags.Encode()),\n        }) \n\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/michaelerickson",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=60",
   "displayName": "Michael Erickson",
   "gv": "3",
   "id": "59061c64d73408ce4f5c07f6",
   "url": "/michaelerickson",
   "username": "michaelerickson"
  },
  "html": "<p>A small object upload gets the tags:</p><pre><code><span class=\"number\">2017</span><span class=\"regexp\">/04/</span><span class=\"number\">30</span> <span class=\"number\">12</span>:<span class=\"number\">09</span>:<span class=\"number\">04</span> <span class=\"string\">INFO:</span> <span class=\"string\">tags:</span> GVT=<span class=\"literal\">true</span>&amp;PHI=<span class=\"literal\">true</span>&amp;PII=<span class=\"literal\">true</span>\n<span class=\"number\">2017</span><span class=\"regexp\">/04/</span><span class=\"number\">30</span> <span class=\"number\">12</span>:<span class=\"number\">09</span>:<span class=\"number\">04</span> <span class=\"string\">INFO:</span> <span class=\"string\">Request:</span> s3<span class=\"regexp\">/&amp;{PutObject PUT /</span>{Bucket}/{Key+} %!s(*request.Paginator=&lt;nil&gt;) %!s(func(*request.Request) error=&lt;nil&gt;)}, <span class=\"string\">Payload:</span> {\n<span class=\"label\">  Body:</span> buffer(<span class=\"number\">0xc4201238c0</span>),\n<span class=\"label\">  Bucket:</span> <span class=\"string\">\"mde-test-20170429T1633-qqzza\"</span>,\n<span class=\"label\">  Key:</span> <span class=\"string\">\"bar\"</span>,\n<span class=\"label\">  Tagging:</span> <span class=\"string\">\"GVT=true&amp;PHI=true&amp;PII=true\"</span>\n}</code></pre><p>But an object split across multiple uploads doesn&#39;t:</p><pre><code><span class=\"number\">2017</span><span class=\"regexp\">/04/</span><span class=\"number\">30</span> <span class=\"number\">12</span>:<span class=\"number\">11</span>:<span class=\"number\">04</span> <span class=\"string\">INFO:</span> <span class=\"string\">tags:</span> GVT=<span class=\"literal\">true</span>&amp;PHI=<span class=\"literal\">true</span>&amp;PII=<span class=\"literal\">true</span>\n<span class=\"number\">2017</span><span class=\"regexp\">/04/</span><span class=\"number\">30</span> <span class=\"number\">12</span>:<span class=\"number\">11</span>:<span class=\"number\">04</span> <span class=\"string\">INFO:</span> <span class=\"string\">Request:</span> s3<span class=\"regexp\">/&amp;{CreateMultipartUpload POST /</span>{Bucket}/{Key+}?uploads %!s(*request.Paginator=&lt;nil&gt;) %!s(func(*request.Request) error=&lt;nil&gt;)}, Payload: {\n<span class=\"label\">  Bucket:</span> <span class=\"string\">\"mde-test-20170429T1633-qqzza\"</span>,\n<span class=\"label\">  Key:</span> <span class=\"string\">\"foo\"</span>\n}\n<span class=\"number\">2017</span><span class=\"regexp\">/04/</span><span class=\"number\">30</span> <span class=\"number\">12</span>:<span class=\"number\">11</span>:<span class=\"number\">05</span> <span class=\"string\">INFO:</span> <span class=\"string\">Request:</span> s3<span class=\"regexp\">/&amp;{UploadPart PUT /</span>{Bucket}/{Key+} %!s(*request.Paginator=&lt;nil&gt;) %!s(func(*request.Request) error=&lt;nil&gt;)}, <span class=\"string\">Payload:</span> {\n<span class=\"label\">  Body:</span> buffer(<span class=\"number\">0xc420298570</span>),\n<span class=\"label\">  Bucket:</span> <span class=\"string\">\"mde-test-20170429T1633-qqzza\"</span>,\n<span class=\"label\">  Key:</span> <span class=\"string\">\"foo\"</span>,\n<span class=\"label\">  PartNumber:</span> <span class=\"number\">4</span>,\n<span class=\"label\">  UploadId:</span> <span class=\"string\">\"0eCVFpnuFvLEF8C64ZHBX9aidflMn6cZLxHQmFey71WMU5D.wSy6jaWElUZWqhfT.qpD6zFtGl7aNdGckjeIetIdvlp92GFFZUoVffwYFI0a_ON4FBQhm8NQ.hhyY7wp\"</span>\n}\n...</code></pre><p>Not that second log dropped the <code>Tagging</code> element on the request.</p>",
  "id": "59061ddb8e4b63533d1bb4d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-30T17:24:43.405Z",
  "text": "A small object upload gets the tags:\n\n```\n2017/04/30 12:09:04 INFO: tags: GVT=true&PHI=true&PII=true\n2017/04/30 12:09:04 INFO: Request: s3/&{PutObject PUT /{Bucket}/{Key+} %!s(*request.Paginator=<nil>) %!s(func(*request.Request) error=<nil>)}, Payload: {\n  Body: buffer(0xc4201238c0),\n  Bucket: \"mde-test-20170429T1633-qqzza\",\n  Key: \"bar\",\n  Tagging: \"GVT=true&PHI=true&PII=true\"\n}\n```\n\nBut an object split across multiple uploads doesn't:\n\n```\n2017/04/30 12:11:04 INFO: tags: GVT=true&PHI=true&PII=true\n2017/04/30 12:11:04 INFO: Request: s3/&{CreateMultipartUpload POST /{Bucket}/{Key+}?uploads %!s(*request.Paginator=<nil>) %!s(func(*request.Request) error=<nil>)}, Payload: {\n  Bucket: \"mde-test-20170429T1633-qqzza\",\n  Key: \"foo\"\n}\n2017/04/30 12:11:05 INFO: Request: s3/&{UploadPart PUT /{Bucket}/{Key+} %!s(*request.Paginator=<nil>) %!s(func(*request.Request) error=<nil>)}, Payload: {\n  Body: buffer(0xc420298570),\n  Bucket: \"mde-test-20170429T1633-qqzza\",\n  Key: \"foo\",\n  PartNumber: 4,\n  UploadId: \"0eCVFpnuFvLEF8C64ZHBX9aidflMn6cZLxHQmFey71WMU5D.wSy6jaWElUZWqhfT.qpD6zFtGl7aNdGckjeIetIdvlp92GFFZUoVffwYFI0a_ON4FBQhm8NQ.hhyY7wp\"\n}\n...\n```\n\nNot that second log dropped the `Tagging` element on the request.\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/michaelerickson",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=60",
   "displayName": "Michael Erickson",
   "gv": "3",
   "id": "59061c64d73408ce4f5c07f6",
   "url": "/michaelerickson",
   "username": "michaelerickson"
  },
  "html": "Wondering if I&#39;m missing something, or if this is a known issue. ",
  "id": "59061e4e587a245e2462eb8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-30T17:26:38.195Z",
  "text": "Wondering if I'm missing something, or if this is a known issue. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/michaelerickson",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1043067?v=3&s=60",
   "displayName": "Michael Erickson",
   "gv": "3",
   "id": "59061c64d73408ce4f5c07f6",
   "url": "/michaelerickson",
   "username": "michaelerickson"
  },
  "html": "For what it&#39;s worth, adding the tags after the multi-part upload using <code>s3.PutObjectTagging()</code> works, so that&#39;s what I&#39;ll do.",
  "id": "59062ab46aea30763d59241d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-04-30T18:19:32.922Z",
  "text": "For what it's worth, adding the tags after the multi-part upload using `s3.PutObjectTagging()` works, so that's what I'll do.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "Hi Jason",
  "id": "5908c0dcedf919574a6d8a66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-02T17:24:44.276Z",
  "text": "Hi Jason",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "I tried the presigned URL mechanism that we discussed. The CompleteMultipartUploadRequest and UploadPartRequest seems to work fine. But for CreateMultipartUploadRequest, I keep getting the following error:",
  "id": "5908c15c8bb56c2d1103fe14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-02T17:26:52.100Z",
  "text": "I tried the presigned URL mechanism that we discussed. The CompleteMultipartUploadRequest and UploadPartRequest seems to work fine. But for CreateMultipartUploadRequest, I keep getting the following error:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "&lt;Code&gt;SignatureDoesNotMatch&lt;/Code&gt;&lt;Message&gt;The request signature we calculated does not match the signature you provided. Check your key and signing method.",
  "id": "5908c15cf22385553d99c8de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-02T17:26:52.189Z",
  "text": "<Code>SignatureDoesNotMatch</Code><Message>The request signature we calculated does not match the signature you provided. Check your key and signing method.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "I veirifed all the fields and it looks OK...Any ideas on how to debug why am I getting this error?",
  "id": "5908c18708c00c092ad889bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-02T17:27:35.402Z",
  "text": "I veirifed all the fields and it looks OK...Any ideas on how to debug why am I getting this error?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"michaelerickson\" class=\"mention\">@michaelerickson</span> i think the result you landed on of putting the tagging on an Object after its been uploaded is the best way to workaround this issue. It looks like the S3 Upload Manager does not have the logic to add tagging to the multipart upload if the tags were provided as input. I think this is a feature that should be added to the SDK&#39;s upload manager. Would you like to create a Github issue for this issue. ",
  "id": "5908c42ac1d3b50154407fcd",
  "issues": [],
  "mentions": [
   {
    "screenName": "michaelerickson",
    "userId": "59061c64d73408ce4f5c07f6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-05-02T17:38:50.213Z",
  "text": "@michaelerickson i think the result you landed on of putting the tagging on an Object after its been uploaded is the best way to workaround this issue. It looks like the S3 Upload Manager does not have the logic to add tagging to the multipart upload if the tags were provided as input. I think this is a feature that should be added to the SDK's upload manager. Would you like to create a Github issue for this issue. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"sfahmi123\" class=\"mention\">@sfahmi123</span>  hmm this might be a header that is missing.",
  "id": "5908c4468bb56c2d11040a52",
  "issues": [],
  "mentions": [
   {
    "screenName": "sfahmi123",
    "userId": "59037d80d73408ce4f5bb1b7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-05-02T17:39:18.158Z",
  "text": "Hi @sfahmi123  hmm this might be a header that is missing.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "you can enable debug logging by setting the LogLevel in Config to <code>aws.LogDebugWithHTTPBody | aws.LogDebutWithSigning</code>  This will print out what the SDK used to sign the request, and the the response body will include similar data such as headers set that can be compared",
  "id": "5908c4a0881b89e101a88b44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-05-02T17:40:48.722Z",
  "text": "you can enable debug logging by setting the LogLevel in Config to `aws.LogDebugWithHTTPBody | aws.LogDebutWithSigning`  This will print out what the SDK used to sign the request, and the the response body will include similar data such as headers set that can be compared",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Are you getting this error with the presigned URL or when the SDK makes the API request?",
  "id": "5908c4b5edf919574a6d9e20",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-05-02T17:41:09.083Z",
  "text": "Are you getting this error with the presigned URL or when the SDK makes the API request?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "I am getting this error with the presigned URL...",
  "id": "5908d021c1d3b5015440bcb8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-05-02T18:29:53.407Z",
  "text": "I am getting this error with the presigned URL...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "Could you provide little more details on how I enable the additional logging from my application.",
  "id": "5908d03d881b89e101a8c2db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-05-02T18:30:21.545Z",
  "text": "Could you provide little more details on how I enable the additional logging from my application.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/drgrib",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3879367?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3879367?v=4&s=60",
   "displayName": "Chris Redford",
   "gv": "4",
   "id": "5908d4aed73408ce4f5c7843",
   "url": "/drgrib",
   "username": "drgrib",
   "v": 2
  },
  "html": "<p>Trying the example for SQS send here:<br><a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#example_SQS_SendMessage\" rel=\"nofollow\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#example_SQS_SendMessage</a></p><p>Verbatim except that I am putting my own QueueUrl. I&#39;m getting this message:</p><pre><code>Error - SerializationError: failed encoding Query request\ncaused by: unsupported value <span class=\"keyword\">for</span> param MessageAttribute.<span class=\"number\">1</span><span class=\"class\">.Value</span><span class=\"class\">.BinaryListValue</span>.<span class=\"number\">1</span><span class=\"class\">.member</span>.<span class=\"number\">1</span>: <span class=\"number\">80</span> (uint8)</code></pre>",
  "id": "5908d516d32c6f2f0960638e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-02T18:51:02.983Z",
  "text": "Trying the example for SQS send here:\nhttp://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#example_SQS_SendMessage\n\nVerbatim except that I am putting my own QueueUrl. I'm getting this message:\n```\nError - SerializationError: failed encoding Query request\ncaused by: unsupported value for param MessageAttribute.1.Value.BinaryListValue.1.member.1: 80 (uint8)\n```",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#example_SQS_SendMessage"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi, <span data-link-type=\"mention\" data-screen-name=\"drgrib\" class=\"mention\">@drgrib</span>  If you remove the setting of the <code>MessageAttributes</code> parameter from the API operation does the request get made successfully?",
  "id": "5908ef2412d2409935bd84a5",
  "issues": [],
  "mentions": [
   {
    "screenName": "drgrib",
    "userId": "5908d4aed73408ce4f5c7843",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-02T20:42:12.136Z",
  "text": "Hi, @drgrib  If you remove the setting of the `MessageAttributes` parameter from the API operation does the request get made successfully?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/drgrib",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3879367?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3879367?v=4&s=60",
   "displayName": "Chris Redford",
   "gv": "4",
   "id": "5908d4aed73408ce4f5c7843",
   "url": "/drgrib",
   "username": "drgrib",
   "v": 2
  },
  "html": "Aha. Removing <code>MessageAttributes</code>, <code>MessageDeduplicationId</code>, and <code>MessageGroupId</code> <em>did</em> complete successfully. Didn&#39;t know they were optional. Thanks!",
  "id": "5908f020881b89e101a95d97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-02T20:46:24.779Z",
  "text": "Aha. Removing `MessageAttributes`, `MessageDeduplicationId`, and `MessageGroupId` *did* complete successfully. Didn't know they were optional. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I think this example isn&#39;t doing a very good job of demonstrating how to use the SQS SendMessage API. The <code>BinaryListValues</code> field should not be set as it is not implemented by the API.",
  "id": "5908f0bf8fcce56b205aaac4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-02T20:49:03.572Z",
  "text": "I think this example isn't doing a very good job of demonstrating how to use the SQS SendMessage API. The `BinaryListValues` field should not be set as it is not implemented by the API.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Correct, in the example anything with out the trailing <code>// Required</code>on the same lines means that value is required. This isn&#39;t as clear as it could be, but if a field has a trailing required that field&#39;s value is required. In the case of <code>BinaryListValues</code> a slice element value is required if the <code>BinaryListValues</code> field is set, but <code>BinaryListValues</code> is not required.",
  "id": "5908f15d8fcce56b205aae15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-02T20:51:41.720Z",
  "text": "Correct, in the example anything with out the trailing `// Required `on the same lines means that value is required. This isn't as clear as it could be, but if a field has a trailing required that field's value is required. In the case of `BinaryListValues` a slice element value is required if the `BinaryListValues` field is set, but `BinaryListValues` is not required.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/drgrib",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3879367?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3879367?v=4&s=60",
   "displayName": "Chris Redford",
   "gv": "4",
   "id": "5908d4aed73408ce4f5c7843",
   "url": "/drgrib",
   "username": "drgrib",
   "v": 2
  },
  "html": "Right. I think I saw so many <code>// Required</code> tags that I subconsciously assumed every field was required \ud83d\ude04",
  "id": "5908f1e012d2409935bd9153",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-02T20:53:52.235Z",
  "text": "Right. I think I saw so many `// Required` tags that I subconsciously assumed every field was required \ud83d\ude04",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "thanks I&#39;ll pass along the feedback, i think there are some improvements the SDK could make to how the examples are created/generated that we can explore",
  "id": "5908f30d8fcce56b205ab4a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-02T20:58:53.188Z",
  "text": "thanks I'll pass along the feedback, i think there are some improvements the SDK could make to how the examples are created/generated that we can explore",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "Hi Jason.I am trying the multipart upload using the presigned URL and after CompleteMultipartUploadRequest , I do not see the file in S3. THe request is successful but I do not see the file in S3 bucket. I can see the file getting created if there is already some other files present in the bucket...",
  "id": "590908f86aea30763d64650e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-02T22:32:24.115Z",
  "text": "Hi Jason.I am trying the multipart upload using the presigned URL and after CompleteMultipartUploadRequest , I do not see the file in S3. THe request is successful but I do not see the file in S3 bucket. I can see the file getting created if there is already some other files present in the bucket...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sfahmi123\" class=\"mention\">@sfahmi123</span> does the <code>CompleteMultipartUploadRequest</code> operation return the the S3 object&#39;s <code>Location</code> or <code>Key</code>?",
  "id": "59090b9412d2409935bdfeae",
  "issues": [],
  "mentions": [
   {
    "screenName": "sfahmi123",
    "userId": "59037d80d73408ce4f5bb1b7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-02T22:43:32.740Z",
  "text": "@sfahmi123 does the `CompleteMultipartUploadRequest` operation return the the S3 object's `Location` or `Key`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "you could also see if the object is listed in <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.ListMultipartUploads\" rel=\"nofollow\" target=\"_blank\" class=\"link\"><code>ListMultipartUploads</code></a>",
  "id": "59090be612d2409935bdff67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-02T22:44:54.376Z",
  "text": "you could also see if the object is listed in [`ListMultipartUploads`](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.ListMultipartUploads)",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.ListMultipartUploads"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Is the <code>CompleteMultipartUpload</code> API call being made from a presigned URL or in the application using the SDK?",
  "id": "59090c5408c00c092ad9e933",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-02T22:46:44.815Z",
  "text": "Is the `CompleteMultipartUpload` API call being made from a presigned URL or in the application using the SDK?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "The object was listed under ListMultipartUploads until I did CompleteMultipartUploadRequest . ",
  "id": "59090e8e6aea30763d647b9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-02T22:56:14.222Z",
  "text": "The object was listed under ListMultipartUploads until I did CompleteMultipartUploadRequest . ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "After I did CompleteMultipartUploadRequest , the object is not listed and the file is not shown in the S3 bucket.",
  "id": "59090ea46aea30763d647c0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-02T22:56:36.752Z",
  "text": "After I did CompleteMultipartUploadRequest , the object is not listed and the file is not shown in the S3 bucket.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "I did the init and CompleteMultipartUploadRequest  from the application using SDK and only the upload part is done from the client using presigned url",
  "id": "59090ec88fcce56b205b2158",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-02T22:57:12.316Z",
  "text": "I did the init and CompleteMultipartUploadRequest  from the application using SDK and only the upload part is done from the client using presigned url",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "Is there a way to debug what is going on?",
  "id": "59090ee4881b89e101a9d5d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-02T22:57:40.528Z",
  "text": "Is there a way to debug what is going on?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hmm so <code>ListMultipartUploads</code> listing the upload prior to <code>CompleteMultipartUpload</code> and not after is what I would expect.  Then the object not showing after is odd. I&#39;d check to verify that the <code>Key</code> of <code>CompleteMultipartUpload</code> is the correct value you expect to be uploaded.",
  "id": "590911c9d32c6f2f09617370",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-02T23:10:01.263Z",
  "text": "Hmm so `ListMultipartUploads` listing the upload prior to `CompleteMultipartUpload` and not after is what I would expect.  Then the object not showing after is odd. I'd check to verify that the `Key` of `CompleteMultipartUpload` is the correct value you expect to be uploaded.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Also is any error being returned from CompleteMultipartUpload?  ",
  "id": "59091237d32c6f2f096174fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-02T23:11:51.080Z",
  "text": "Also is any error being returned from CompleteMultipartUpload?  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Also that the <code>UploadId</code> is the correct value",
  "id": "590912578bb56c2d110569dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-02T23:12:23.420Z",
  "text": "Also that the `UploadId` is the correct value",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "Yes, the Key was correct and CompleteMultipartUpload did not return any error. UploadId was correct....I tried it twice and got the same result.",
  "id": "5909172f5f3e76601ee1c152",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-02T23:33:03.623Z",
  "text": "Yes, the Key was correct and CompleteMultipartUpload did not return any error. UploadId was correct....I tried it twice and got the same result.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/lvic4594",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/25107231?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/25107231?v=3&s=60",
   "displayName": "lvic4594",
   "gv": "3",
   "id": "5909e818d73408ce4f5caa5b",
   "url": "/lvic4594",
   "username": "lvic4594"
  },
  "html": "I see syntax for creating S3 client in example:  svc := s3.New(sess) so: what is the type for &quot;svc&quot; if i have to declare it as global?",
  "id": "5909e8e6881b89e101ad35be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-03T14:27:50.962Z",
  "text": "I see syntax for creating S3 client in example:  svc := s3.New(sess) so: what is the type for \"svc\" if i have to declare it as global?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/fsenart",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/515714?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/515714?v=4&s=60",
   "displayName": "Farzad Senart",
   "gv": "4",
   "id": "529c6b6eed5ab0b3bf04d622",
   "url": "/fsenart",
   "username": "fsenart",
   "v": 18
  },
  "html": "<code>*s3.S3</code>",
  "id": "5909e90712d2409935c17282",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-05-03T14:28:23.838Z",
  "text": "`*s3.S3`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/lvic4594",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/25107231?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/25107231?v=3&s=60",
   "displayName": "lvic4594",
   "gv": "3",
   "id": "5909e818d73408ce4f5caa5b",
   "url": "/lvic4594",
   "username": "lvic4594"
  },
  "html": "Ah, thanks - that worked",
  "id": "5909ea5a881b89e101ad3e86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-05-03T14:34:02.583Z",
  "text": "Ah, thanks - that worked",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/fsenart",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/515714?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/515714?v=4&s=60",
   "displayName": "Farzad Senart",
   "gv": "4",
   "id": "529c6b6eed5ab0b3bf04d622",
   "url": "/fsenart",
   "username": "fsenart",
   "v": 18
  },
  "html": ":wink: ",
  "id": "5909ea6b08c00c092add584d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-05-03T14:34:19.284Z",
  "text": ":wink: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/lvic4594",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/25107231?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/25107231?v=3&s=60",
   "displayName": "lvic4594",
   "gv": "3",
   "id": "5909e818d73408ce4f5caa5b",
   "url": "/lvic4594",
   "username": "lvic4594"
  },
  "html": "hate that idea of &quot;ad-hoc&quot; declarations. Makes code unreadable",
  "id": "5909eadc8e4b63533d2a9940",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-05-03T14:36:12.478Z",
  "text": "hate that idea of \"ad-hoc\" declarations. Makes code unreadable",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/drgrib",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3879367?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3879367?v=4&s=60",
   "displayName": "Chris Redford",
   "gv": "4",
   "id": "5908d4aed73408ce4f5c7843",
   "url": "/drgrib",
   "username": "drgrib",
   "v": 2
  },
  "html": "What is the fastest per second SQS send rate I can expect to get with aws-sdk-go?",
  "id": "590a0450d32c6f2f09655ae3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-05-03T16:24:48.009Z",
  "text": "What is the fastest per second SQS send rate I can expect to get with aws-sdk-go?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/drgrib",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3879367?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3879367?v=4&s=60",
   "displayName": "Chris Redford",
   "gv": "4",
   "id": "5908d4aed73408ce4f5c7843",
   "url": "/drgrib",
   "username": "drgrib",
   "v": 2
  },
  "html": "Assuming the fastest possible AWS EC2 hardware, etc are not a limitation.",
  "id": "590a047512d2409935c2055e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-05-03T16:25:25.027Z",
  "text": "Assuming the fastest possible AWS EC2 hardware, etc are not a limitation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/drgrib",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3879367?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3879367?v=4&s=60",
   "displayName": "Chris Redford",
   "gv": "4",
   "id": "5908d4aed73408ce4f5c7843",
   "url": "/drgrib",
   "username": "drgrib",
   "v": 2
  },
  "html": "message per second*",
  "id": "590a04cb5f3e76601ee59d67",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-05-03T16:26:50.999Z",
  "text": "message per second*",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"drgrib\" class=\"mention\">@drgrib</span> - I really have no idea. However, writing a quick benchmark may be able to give you a good average",
  "id": "590b656463a9bc9028493659",
  "issues": [],
  "mentions": [
   {
    "screenName": "drgrib",
    "userId": "5908d4aed73408ce4f5c7843",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-04T17:31:16.717Z",
  "text": "@drgrib - I really have no idea. However, writing a quick benchmark may be able to give you a good average",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "s3.PutObject allows uploads of data to s3.  There is a PutObjectInput.SSEKMSKeyId which allows kms encryption.  When trying to encrypt with a kms from a different account the arns do not match because the sdk generates the arn from the account that is using the client.  ",
  "id": "590b77c1d1a7716a0a92a8b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-04T18:49:37.623Z",
  "text": "s3.PutObject allows uploads of data to s3.  There is a PutObjectInput.SSEKMSKeyId which allows kms encryption.  When trying to encrypt with a kms from a different account the arns do not match because the sdk generates the arn from the account that is using the client.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "Is there a way to use a kms key from a different account WITHOUT assuming a role?",
  "id": "590b77db0a783b6c0a65a15e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-04T18:50:03.240Z",
  "text": "Is there a way to use a kms key from a different account WITHOUT assuming a role?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "so far the only solution I can see is to use sts to assume a role in the account the kms key exists",
  "id": "590b77f3c4d73f445a747734",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-04T18:50:27.916Z",
  "text": "so far the only solution I can see is to use sts to assume a role in the account the kms key exists",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"drgrib\" class=\"mention\">@drgrib</span> we use sqs as an asynchronous request processor of sorts",
  "id": "590b783d631b8e4e61a23834",
  "issues": [],
  "mentions": [
   {
    "screenName": "drgrib",
    "userId": "5908d4aed73408ce4f5c7843",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-04T18:51:41.111Z",
  "text": "@drgrib we use sqs as an asynchronous request processor of sorts",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "we see a throughput of at least ~100000 requests in 10-15 minutes",
  "id": "590b78552b926f8a67214f2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-04T18:52:05.316Z",
  "text": "we see a throughput of at least ~100000 requests in 10-15 minutes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "which is an awful solution but that should give you a rough idea of what you can expect as a lower bounds",
  "id": "590b78730a783b6c0a65a3d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-04T18:52:35.897Z",
  "text": "which is an awful solution but that should give you a rough idea of what you can expect as a lower bounds",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-05-04T19:20:42.382Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/drgrib",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3879367?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3879367?v=4&s=60",
   "displayName": "Chris Redford",
   "gv": "4",
   "id": "5908d4aed73408ce4f5c7843",
   "url": "/drgrib",
   "username": "drgrib",
   "v": 2
  },
  "html": "Thanks guys. I realized how hard the question may be to answer after running some implementations myself. From my desktop computer, running serially, I can do 11 sends / second. Another version I wrote that was strongly parallelized was able to do 3000 sends /second from my desktop. And I&#39;m brainstorming a new version that can probably do more. This isn&#39;t even taking advantage of the AWS in-cluster transfer speeds yet, so who knows how fast it can go with more tweaking. That&#39;s one of the amazing things about both Go and AWS. They are a strong combination.",
  "id": "590b7ed0c4d73f445a749a07",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-04T19:19:44.711Z",
  "text": "Thanks guys. I realized how hard the question may be to answer after running some implementations myself. From my desktop computer, running serially, I can do 11 sends / second. Another version I wrote that was strongly parallelized was able to do 3000 sends /second from my desktop. And I'm brainstorming a new version that can probably do more. This isn't even taking advantage of the AWS in-cluster transfer speeds yet, so who knows how fast it can go with more tweaking. That's one of the amazing things about both Go and AWS. They are a strong combination.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "Good evening all!",
  "id": "590bc43dc89bb14b5acfe12f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-05T00:15:57.195Z",
  "text": "Good evening all!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "Anyone around?",
  "id": "590bc440d1a7716a0a93e016",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-05T00:16:00.760Z",
  "text": "Anyone around?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/mhat",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/973?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/973?v=3&s=60",
   "displayName": "Matt Knopp",
   "gv": "3",
   "id": "57e4206d40f3a6eec066be97",
   "url": "/mhat",
   "username": "mhat",
   "v": 1
  },
  "html": "Howdy, is there a right to prevent GetObject from automatically decompressing objects with content-encoding: gzip? I can sort of fake it by setting ResponseContentEncoding on GetObjectInput ... but that&#39;s brittle and makes it hard to correctly handle cases where the object doesn&#39;t have content-encoding: gzip. It looks like the decompression is happening transparently through net/http. There&#39;s an option in http.Transport to disable that behavior but I don&#39;t see a way in the aws-sdk-go to access the underlying http.Transport. ",
  "id": "590cbde4631b8e4e61a76b28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-05T18:01:08.932Z",
  "text": "Howdy, is there a right to prevent GetObject from automatically decompressing objects with content-encoding: gzip? I can sort of fake it by setting ResponseContentEncoding on GetObjectInput ... but that's brittle and makes it hard to correctly handle cases where the object doesn't have content-encoding: gzip. It looks like the decompression is happening transparently through net/http. There's an option in http.Transport to disable that behavior but I don't see a way in the aws-sdk-go to access the underlying http.Transport. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/mhat",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/973?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/973?v=3&s=60",
   "displayName": "Matt Knopp",
   "gv": "3",
   "id": "57e4206d40f3a6eec066be97",
   "url": "/mhat",
   "username": "mhat",
   "v": 1
  },
  "html": "I&#39;ll probably switch to s3manager which doesn&#39;t appear to have that feature, but I was curious if there was a way to support the correct behavior through GetObject. ",
  "id": "590cbe47ac693c532ac429e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-05T18:02:47.140Z",
  "text": "I'll probably switch to s3manager which doesn't appear to have that feature, but I was curious if there was a way to support the correct behavior through GetObject. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "I haven&#39;t been able to access the Ec2 reference since yesterday",
  "id": "590cbf7c2b926f8a67269049",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-05T18:07:56.124Z",
  "text": "I haven't been able to access the Ec2 reference since yesterday",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/octalthorpe",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6535531?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6535531?v=3&s=60",
   "displayName": "Kristopher Cieplak",
   "gv": "3",
   "id": "590cc588d73408ce4f5d4437",
   "url": "/octalthorpe",
   "username": "octalthorpe"
  },
  "html": "Just about to post the same thing 404 on <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/ec2/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/ec2/</a> ",
  "id": "590cc59d33e9ee771c799848",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-05T18:34:05.566Z",
  "text": "Just about to post the same thing 404 on http://docs.aws.amazon.com/sdk-for-go/api/service/ec2/ ",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/ec2/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/paulstuart",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3433277?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3433277?v=3&s=60",
   "displayName": "Paul Stuart",
   "gv": "3",
   "id": "590ccd04d73408ce4f5d45c1",
   "url": "/paulstuart",
   "username": "paulstuart"
  },
  "html": "404 as well: <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/s3/</a> and the feedback form itself: <a href=\"https://aws.amazon.com/forms/aws-doc-feedback\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://aws.amazon.com/forms/aws-doc-feedback</a>",
  "id": "590ccda5ac693c532ac46a8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-05T19:08:21.269Z",
  "text": "404 as well: http://docs.aws.amazon.com/sdk-for-go/api/service/s3/ and the feedback form itself: https://aws.amazon.com/forms/aws-doc-feedback",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/"
   },
   {
    "url": "https://aws.amazon.com/forms/aws-doc-feedback"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mhat\" class=\"mention\">@mhat</span> - You&#39;ll have to use your own <code>http.Client</code> to do that. You can set the <code>HTTPClient</code> in the <code>aws.Config</code>",
  "id": "590cdb3a0dcaa48e67309834",
  "issues": [],
  "mentions": [
   {
    "screenName": "mhat",
    "userId": "57e4206d40f3a6eec066be97",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-05T20:06:18.337Z",
  "text": "@mhat - You'll have to use your own `http.Client` to do that. You can set the `HTTPClient` in the `aws.Config`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"davidcpell\" class=\"mention\">@davidcpell</span> <span data-link-type=\"mention\" data-screen-name=\"octalthorpe\" class=\"mention\">@octalthorpe</span> <span data-link-type=\"mention\" data-screen-name=\"paulstuart\" class=\"mention\">@paulstuart</span> - Yea, looks like sometime happened with our doc release yesterday. Taking a look into what is going on",
  "id": "590cdb6ec4d73f445a7a066c",
  "issues": [],
  "mentions": [
   {
    "screenName": "davidcpell",
    "userId": "5661fbbc16b6c7089cbd71b0",
    "userIds": []
   },
   {
    "screenName": "octalthorpe",
    "userId": "590cc588d73408ce4f5d4437",
    "userIds": []
   },
   {
    "screenName": "paulstuart",
    "userId": "590ccd04d73408ce4f5d45c1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-05-05T20:07:10.457Z",
  "text": "@davidcpell @octalthorpe @paulstuart - Yea, looks like sometime happened with our doc release yesterday. Taking a look into what is going on",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/mhat",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/973?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/973?v=3&s=60",
   "displayName": "Matt Knopp",
   "gv": "3",
   "id": "57e4206d40f3a6eec066be97",
   "url": "/mhat",
   "username": "mhat",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> awesome, I&#39;ll look at that when the docs are back online. ",
  "id": "590ce28133e9ee771c7a1232",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-05T20:37:21.182Z",
  "text": "@xibz awesome, I'll look at that when the docs are back online. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "How&#39;s the docs looking for you guys?",
  "id": "590cf9e20dcaa48e67311ab6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-05T22:17:06.841Z",
  "text": "How's the docs looking for you guys?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/paulstuart",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3433277?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3433277?v=3&s=60",
   "displayName": "Paul Stuart",
   "gv": "3",
   "id": "590ccd04d73408ce4f5d45c1",
   "url": "/paulstuart",
   "username": "paulstuart"
  },
  "html": "the s3 now link works, but the feedback link (upper right) is still broken.",
  "id": "590cfa2c5c89dc53617d73fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-05-05T22:18:20.507Z",
  "text": "the s3 now link works, but the feedback link (upper right) is still broken.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Awesome. I&#39;ll ping the doc team to see what is going on with that",
  "id": "590cfaaf5c89dc53617d768d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-05T22:20:31.490Z",
  "text": "Awesome. I'll ping the doc team to see what is going on with that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/Febriansz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/14304241?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/14304241?v=3&s=60",
   "displayName": "Febriansz",
   "gv": "3",
   "id": "590d9b70d73408ce4f5d650b",
   "url": "/Febriansz",
   "username": "Febriansz",
   "v": 1
  },
  "html": "Hi there, i&#39;m newbie in this, i want to create an object (file) in my bucket using Go Language, i&#39;ve read the API Reference and search it on google but all of them uploading the file using file itself, no one using base64 encoded for the body, if someone can help me with this? i&#39;ve done it with PHP but now im using Go Language",
  "id": "590d9c260a783b6c0a6dbec2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-05-06T09:49:26.607Z",
  "text": "Hi there, i'm newbie in this, i want to create an object (file) in my bucket using Go Language, i've read the API Reference and search it on google but all of them uploading the file using file itself, no one using base64 encoded for the body, if someone can help me with this? i've done it with PHP but now im using Go Language",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> !",
  "id": "590f7375c89bb14b5adcfe96",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-07T19:20:21.961Z",
  "text": "thanks @xibz !",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "Is there any way to view the Go API Reference in such a way that the functions etc are all listed on the left as links to find things easier by scrolling or even searching like in the Ruby reference? Right now I have to do a &quot;find on page&quot; for e.g. &quot;func (*ECS) DescribeClusters&quot; to find that function (and have to know its name beforehand)",
  "id": "5911ced183cb5db073134efd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-09T14:14:41.160Z",
  "text": "Is there any way to view the Go API Reference in such a way that the functions etc are all listed on the left as links to find things easier by scrolling or even searching like in the Ruby reference? Right now I have to do a \"find on page\" for e.g. \"func (*ECS) DescribeClusters\" to find that function (and have to know its name beforehand)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"davidcpell\" class=\"mention\">@davidcpell</span> thanks for the feedback. the API Reference does not have this functionality. We&#39;re always looking for additional feedback on how to make the SDK and docs better.   If you&#39;d like to create a <a href=\"https://github.com/aws/aws-sdk-go/issues\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Github Issue</a> we can better track this request, and prioritize it easier.",
  "id": "5911fab983cb5db07314325d",
  "issues": [],
  "mentions": [
   {
    "screenName": "davidcpell",
    "userId": "5661fbbc16b6c7089cbd71b0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-09T17:22:01.878Z",
  "text": "@davidcpell thanks for the feedback. the API Reference does not have this functionality. We're always looking for additional feedback on how to make the SDK and docs better.   If you'd like to create a [Github Issue](https://github.com/aws/aws-sdk-go/issues) we can better track this request, and prioritize it easier.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/issues"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/wolfy-j",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/796136?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/796136?v=4&s=60",
   "displayName": "Wolfy-J",
   "gv": "4",
   "id": "55f6bb950fc9f982beb09fa7",
   "url": "/wolfy-j",
   "username": "wolfy-j",
   "v": 20
  },
  "html": "Hi, Lex related API docs do not display anymore on <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/lexruntimeservice/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/lexruntimeservice/</a> at 9 May 2017, was working yesterday :/",
  "id": "59121135631b8e4e61bbc2a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-09T18:57:57.315Z",
  "text": "Hi, Lex related API docs do not display anymore on http://docs.aws.amazon.com/sdk-for-go/api/service/lexruntimeservice/ at 9 May 2017, was working yesterday :/",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/lexruntimeservice/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/wolfy-j",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/796136?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/796136?v=4&s=60",
   "displayName": "Wolfy-J",
   "gv": "4",
   "id": "55f6bb950fc9f982beb09fa7",
   "url": "/wolfy-j",
   "username": "wolfy-j",
   "v": 20
  },
  "html": "Actually most of service docs are 404",
  "id": "591212ead1a7716a0aac65a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-09T19:05:14.988Z",
  "text": "Actually most of service docs are 404",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for the heads up <span data-link-type=\"mention\" data-screen-name=\"wolfy-j\" class=\"mention\">@wolfy-j</span> , it looks like the SDK&#39;s API Reference guides aren&#39;t being rendered correctly.  We&#39;re looking into this now",
  "id": "59121302c4d73f445a8d8fee",
  "issues": [],
  "mentions": [
   {
    "screenName": "wolfy-j",
    "userId": "55f6bb950fc9f982beb09fa7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-09T19:05:38.566Z",
  "text": "Thanks for the heads up @wolfy-j , it looks like the SDK's API Reference guides aren't being rendered correctly.  We're looking into this now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/wolfy-j",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/796136?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/796136?v=4&s=60",
   "displayName": "Wolfy-J",
   "gv": "4",
   "id": "55f6bb950fc9f982beb09fa7",
   "url": "/wolfy-j",
   "username": "wolfy-j",
   "v": 20
  },
  "html": "thank you :+1: ",
  "id": "59121328c4d73f445a8d9064",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-09T19:06:16.757Z",
  "text": "thank you :+1: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "In the meantime I suggest using godoc.org, for the SDK&#39;s api reference guides, <a href=\"https://godoc.org/github.com/aws/aws-sdk-go/service/lexruntimeservice\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://godoc.org/github.com/aws/aws-sdk-go/service/lexruntimeservice</a>",
  "id": "591213495c89dc536190b308",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-09T19:06:49.525Z",
  "text": "In the meantime I suggest using godoc.org, for the SDK's api reference guides, https://godoc.org/github.com/aws/aws-sdk-go/service/lexruntimeservice",
  "unread": false,
  "urls": [
   {
    "url": "https://godoc.org/github.com/aws/aws-sdk-go/service/lexruntimeservice"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/wolfy-j",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/796136?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/796136?v=4&s=60",
   "displayName": "Wolfy-J",
   "gv": "4",
   "id": "55f6bb950fc9f982beb09fa7",
   "url": "/wolfy-j",
   "username": "wolfy-j",
   "v": 20
  },
  "html": ":fire: thank you!",
  "id": "591213cf631b8e4e61bbce8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-09T19:09:03.525Z",
  "text": ":fire: thank you!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"wolfy-j\" class=\"mention\">@wolfy-j</span> - Just fixed the docs. Please let us know if you see any other issues.",
  "id": "591231ca83cb5db073153eb8",
  "issues": [],
  "mentions": [
   {
    "screenName": "wolfy-j",
    "userId": "55f6bb950fc9f982beb09fa7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-09T21:16:58.112Z",
  "text": "@wolfy-j - Just fixed the docs. Please let us know if you see any other issues.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/johnsogg",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3066894?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3066894?v=4&s=60",
   "displayName": "Gabe Johnson",
   "gv": "4",
   "id": "56bcd8ade610378809c0fa87",
   "url": "/johnsogg",
   "username": "johnsogg",
   "v": 5
  },
  "html": "Hi, I&#39;m brand new to AWS. I&#39;m trying to push files to somebody else&#39;s bucket, and they&#39;ve provided a slew of information to upload a specific file X (access key, bucket, key, acl, policy, signature, success action redirect, content type of X, content disposition). I don&#39;t have a secret key, which seems required to perform the operation. Ideally I&#39;d do this with a basic http request and avoid the aws-go code altogether. Is it possible?",
  "id": "5913590c9d90dc7a1c667659",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-10T18:16:44.777Z",
  "text": "Hi, I'm brand new to AWS. I'm trying to push files to somebody else's bucket, and they've provided a slew of information to upload a specific file X (access key, bucket, key, acl, policy, signature, success action redirect, content type of X, content disposition). I don't have a secret key, which seems required to perform the operation. Ideally I'd do this with a basic http request and avoid the aws-go code altogether. Is it possible?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "No",
  "id": "59135af29d90dc7a1c667d7b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-10T18:24:50.301Z",
  "text": "No",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "What they can do is to generate a presigned URL that contains all the credentials ",
  "id": "59135b412b926f8a6740778f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-10T18:26:09.460Z",
  "text": "What they can do is to generate a presigned URL that contains all the credentials ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Then you can upload without the sdk, any http client should do",
  "id": "59135c1d9d90dc7a1c6681a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-10T18:29:49.229Z",
  "text": "Then you can upload without the sdk, any http client should do",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/johnsogg",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3066894?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3066894?v=4&s=60",
   "displayName": "Gabe Johnson",
   "gv": "4",
   "id": "56bcd8ade610378809c0fa87",
   "url": "/johnsogg",
   "username": "johnsogg",
   "v": 5
  },
  "html": "Thanks. I know others have managed to upload to thingiverse buckets with the info they provide, so I&#39;ll just have to keep trial-and-erroring to see what works.",
  "id": "59136b599d90dc7a1c66c502",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-10T19:34:49.247Z",
  "text": "Thanks. I know others have managed to upload to thingiverse buckets with the info they provide, so I'll just have to keep trial-and-erroring to see what works.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"johnsogg\" class=\"mention\">@johnsogg</span> buckets are global to AWS, across all regions and accounts.  If the other account provides write access to their own bucket from the account you are trying to upload from, you should be able to do it fine in the API.  You would need to give them your account number and ask them to update their bucket policy to allow s3:putobject for your account.  I do not believe anything else is required.",
  "id": "5913a27b8a05641b116d8934",
  "issues": [],
  "mentions": [
   {
    "screenName": "johnsogg",
    "userId": "56bcd8ade610378809c0fa87",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-10T23:30:03.258Z",
  "text": "@johnsogg buckets are global to AWS, across all regions and accounts.  If the other account provides write access to their own bucket from the account you are trying to upload from, you should be able to do it fine in the API.  You would need to give them your account number and ask them to update their bucket policy to allow s3:putobject for your account.  I do not believe anything else is required.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "I&#39;m printing out the response from a DescribeContainerInstances call, which is a DescribeContainerInstancesOutput, and am finding that inside the []*ContainerInstance list there are attributes missing. In particular, I was hoping that I could see the RegisteredAt value for each ContainerInstance but that field is missing entirely from the list. Is there something I&#39;m missing here?",
  "id": "5913bffa631b8e4e61c31c1e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-11T01:35:54.881Z",
  "text": "I'm printing out the response from a DescribeContainerInstances call, which is a DescribeContainerInstancesOutput, and am finding that inside the []*ContainerInstance list there are attributes missing. In particular, I was hoping that I could see the RegisteredAt value for each ContainerInstance but that field is missing entirely from the list. Is there something I'm missing here?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"johnsogg\" class=\"mention\">@johnsogg</span> I should note, though, that if you are trying to encrypt with kms from an account other than the account using the API then you will not be able to do it that way.",
  "id": "5913d12a9d90dc7a1c685bea",
  "issues": [],
  "mentions": [
   {
    "screenName": "johnsogg",
    "userId": "56bcd8ade610378809c0fa87",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-11T02:49:14.911Z",
  "text": "@johnsogg I should note, though, that if you are trying to encrypt with kms from an account other than the account using the API then you will not be able to do it that way.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/sc-bot-jenkins",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18126991?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18126991?v=3&s=60",
   "displayName": "sc-bot-jenkins",
   "gv": "3",
   "id": "5914db7ed73408ce4f5ee1b0",
   "url": "/sc-bot-jenkins",
   "username": "sc-bot-jenkins",
   "v": 3
  },
  "html": "Are there some examples pertaining to S3 and <span data-link-type=\"issue\" data-issue=\"88\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#88</span> ?",
  "id": "5914dc42c4d73f445a9993fa",
  "issues": [
   {
    "number": "88",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-11T21:48:50.189Z",
  "text": "Are there some examples pertaining to S3 and https://github.com/aws/aws-sdk-go/issues/88 ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sc-bot-jenkins\" class=\"mention\">@sc-bot-jenkins</span> check out the example in the s3iface package, <a href=\"https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3iface/interface.go#L17-L61\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3iface/interface.go#L17-L61</a>",
  "id": "5914e26592217cca5868d211",
  "issues": [],
  "mentions": [
   {
    "screenName": "sc-bot-jenkins",
    "userId": "5914db7ed73408ce4f5ee1b0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-11T22:15:01.481Z",
  "text": "@sc-bot-jenkins check out the example in the s3iface package, https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3iface/interface.go#L17-L61",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3iface/interface.go#L17-L61"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/snirad",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13535072?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13535072?v=4&s=60",
   "displayName": "snirad",
   "gv": "4",
   "id": "56bd93f8e610378809c110f0",
   "url": "/snirad",
   "username": "snirad",
   "v": 9
  },
  "html": "Hello, Must I create a session instance to start using aws-sdk  ",
  "id": "591576e09f4f4ab05bb7ef65",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-12T08:48:32.882Z",
  "text": "Hello, Must I create a session instance to start using aws-sdk  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/snirad",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13535072?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13535072?v=4&s=60",
   "displayName": "snirad",
   "gv": "4",
   "id": "56bd93f8e610378809c110f0",
   "url": "/snirad",
   "username": "snirad",
   "v": 9
  },
  "html": "<pre><code>    <span class=\"string\">\"github.com/aws/aws-sdk-go/aws\"</span>\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/aws/session\"</span>\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/aws/endpoints\"</span>\n)\n\n<span class=\"keyword\">var</span> sess = session.Must(session.NewSession(&amp;aws.Config{\nRegion: aws.<span class=\"built_in\">String</span>(endpoints.UsWest2RegionID),\n}))</code></pre>Before i even started doing anything",
  "id": "591577119f4f4ab05bb7f007",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-12T08:49:21.405Z",
  "text": "```\n\t\"github.com/aws/aws-sdk-go/aws\"\n\t\"github.com/aws/aws-sdk-go/aws/session\"\n\t\"github.com/aws/aws-sdk-go/aws/endpoints\"\n)\n\nvar sess = session.Must(session.NewSession(&aws.Config{\nRegion: aws.String(endpoints.UsWest2RegionID),\n}))\n``` \nBefore i even started doing anything\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/fsenart",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/515714?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/515714?v=4&s=60",
   "displayName": "Farzad Senart",
   "gv": "4",
   "id": "529c6b6eed5ab0b3bf04d622",
   "url": "/fsenart",
   "username": "fsenart",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"snirad\" class=\"mention\">@snirad</span> sessions are mandatory if you need to make any call to aws services. So in most cases, yes you need to create a session.",
  "id": "5915777892217cca586ae225",
  "issues": [],
  "mentions": [
   {
    "screenName": "snirad",
    "userId": "56bd93f8e610378809c110f0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-12T08:51:04.573Z",
  "text": "@snirad sessions are mandatory if you need to make any call to aws services. So in most cases, yes you need to create a session.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/snirad",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13535072?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13535072?v=4&s=60",
   "displayName": "snirad",
   "gv": "4",
   "id": "56bd93f8e610378809c110f0",
   "url": "/snirad",
   "username": "snirad",
   "v": 9
  },
  "html": "and import those 3 lines ?",
  "id": "5915778b2b926f8a67493c21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-12T08:51:23.531Z",
  "text": "and import those 3 lines ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/fsenart",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/515714?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/515714?v=4&s=60",
   "displayName": "Farzad Senart",
   "gv": "4",
   "id": "529c6b6eed5ab0b3bf04d622",
   "url": "/fsenart",
   "username": "fsenart",
   "v": 18
  },
  "html": "yes, this is the way golang works",
  "id": "591577c133e9ee771c9bca16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-12T08:52:17.063Z",
  "text": "yes, this is the way golang works",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/snirad",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13535072?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13535072?v=4&s=60",
   "displayName": "snirad",
   "gv": "4",
   "id": "56bd93f8e610378809c110f0",
   "url": "/snirad",
   "username": "snirad",
   "v": 9
  },
  "html": "ok thx",
  "id": "591577cfc4d73f445a9bc48b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-12T08:52:31.998Z",
  "text": "ok thx",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/fsenart",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/515714?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/515714?v=4&s=60",
   "displayName": "Farzad Senart",
   "gv": "4",
   "id": "529c6b6eed5ab0b3bf04d622",
   "url": "/fsenart",
   "username": "fsenart",
   "v": 18
  },
  "html": "PS: you do not need to always have a config (in lambda, etc.)",
  "id": "591577e892217cca586ae3d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-12T08:52:56.366Z",
  "text": "PS: you do not need to always have a config (in lambda, etc.)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "And those imports should be filled automatically by your editor ",
  "id": "59158c7633e9ee771c9c2736",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-12T10:20:38.299Z",
  "text": "And those imports should be filled automatically by your editor ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/michael-leon",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3431856?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3431856?v=3&s=60",
   "displayName": "michael-leon",
   "gv": "3",
   "id": "5919ba66d73408ce4f5fabe3",
   "url": "/michael-leon",
   "username": "michael-leon"
  },
  "html": "Hey all, I&#39;m having issues getting s3/GetObject to work.  PutObject works fine but GetObject is sending me back AllAccessDisabled issues.  Anybody face this problem?",
  "id": "5919ba922b926f8a67595075",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-05-15T14:26:26.065Z",
  "text": "Hey all, I'm having issues getting s3/GetObject to work.  PutObject works fine but GetObject is sending me back AllAccessDisabled issues.  Anybody face this problem?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"michael-leon\" class=\"mention\">@michael-leon</span> this error is most likely occurring because the bucket or object&#39;s policy is preventing access to the object. You can make sure that the put and get are occurring with the same account to start with. In addition in the AWS Console for S3 you can view the policies and permissions on buckets and objects.",
  "id": "5919d921d1a7716a0acb6138",
  "issues": [],
  "mentions": [
   {
    "screenName": "michael-leon",
    "userId": "5919ba66d73408ce4f5fabe3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-05-15T16:36:49.733Z",
  "text": "@michael-leon this error is most likely occurring because the bucket or object's policy is preventing access to the object. You can make sure that the put and get are occurring with the same account to start with. In addition in the AWS Console for S3 you can view the policies and permissions on buckets and objects.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/michael-leon",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3431856?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3431856?v=3&s=60",
   "displayName": "michael-leon",
   "gv": "3",
   "id": "5919ba66d73408ce4f5fabe3",
   "url": "/michael-leon",
   "username": "michael-leon"
  },
  "html": "Hey Jason, so I thought that would be the case as well but my IAM role has the correct permissions and the S3 bucket is properly configured from everything I can tell.  How should the key be formatted?<pre><code><span class=\"rule\"><span class=\"attribute\">params </span>:<span class=\"value\">= &amp;s3.GetObjectInput{\n        Bucket:               aws.<span class=\"function\">String</span>(os.<span class=\"function\">Getenv</span>(<span class=\"string\">\"S3\"</span>)),\n        Key:                  aws.<span class=\"function\">String</span>(<span class=\"string\">\"/reports/\"</span> + reportId + <span class=\"string\">\".csv\"</span>),\n        SSECustomerAlgorithm: aws.<span class=\"function\">String</span>(<span class=\"string\">\"AES256\"</span>),\n    }</span></span></code></pre>",
  "id": "5919fb7233e9ee771cad2c02",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-15T19:03:14.214Z",
  "text": "Hey Jason, so I thought that would be the case as well but my IAM role has the correct permissions and the S3 bucket is properly configured from everything I can tell.  How should the key be formatted?\n```\nparams := &s3.GetObjectInput{\n\t\tBucket:               aws.String(os.Getenv(\"S3\")),\n\t\tKey:                  aws.String(\"/reports/\" + reportId + \".csv\"),\n\t\tSSECustomerAlgorithm: aws.String(\"AES256\"),\n\t}```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"michael-leon\" class=\"mention\">@michael-leon</span> the Key is a freeform value and there is no set format for the key. By convention a lot of users will use <code>/</code> as element separators to visibly be similar to a folder structure.  The most important part is that the key that was used for upload is exactly the same as the key used for download",
  "id": "591b424d33e9ee771cb2ec54",
  "issues": [],
  "mentions": [
   {
    "screenName": "michael-leon",
    "userId": "5919ba66d73408ce4f5fabe3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-05-16T18:17:49.710Z",
  "text": "@michael-leon the Key is a freeform value and there is no set format for the key. By convention a lot of users will use `/` as element separators to visibly be similar to a folder structure.  The most important part is that the key that was used for upload is exactly the same as the key used for download",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "Hi, I&#39;m looking at the golang aws sdk doc for cloudwatch.  I have a quesiton, what is the difference between a DimensionName and a DimensionValue?",
  "id": "591b6e5fc4d73f445ab39f27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-05-16T21:25:51.577Z",
  "text": "Hi, I'm looking at the golang aws sdk doc for cloudwatch.  I have a quesiton, what is the difference between a DimensionName and a DimensionValue?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"popopanda\" class=\"mention\">@popopanda</span> which API operation are you using?  I think <code>DimensionName</code> and <code>DimensionValue</code> are effectively key value pairs.",
  "id": "591b71f42b926f8a67613d6e",
  "issues": [],
  "mentions": [
   {
    "screenName": "popopanda",
    "userId": "591b6e17d73408ce4f600963",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-16T21:41:08.583Z",
  "text": "Hi @popopanda which API operation are you using?  I think `DimensionName` and `DimensionValue` are effectively key value pairs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "I am using this one from the example - <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/cloudwatch/#example_CloudWatch_GetMetricStatistics\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/cloudwatch/#example_CloudWatch_GetMetricStatistics</a>",
  "id": "591b72b68a05641b118c77a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-16T21:44:22.670Z",
  "text": "I am using this one from the example - https://docs.aws.amazon.com/sdk-for-go/api/service/cloudwatch/#example_CloudWatch_GetMetricStatistics",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/cloudwatch/#example_CloudWatch_GetMetricStatistics"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "I haven&#39;t found any documentation on what it dimensionName can refer to.  I assume something like <code>DomainARN</code> and the value is the actual ARN value",
  "id": "591b730b92217cca5882dee4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-05-16T21:45:47.060Z",
  "text": "I haven't found any documentation on what it dimensionName can refer to.  I assume something like `DomainARN` and the value is the actual ARN value",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "ah ok in this case these are statistic dimensions that you&#39;re stating you want to be included in the response I think. I think you&#39;ll get a better response with this question by asking CloudWatch directly. They have a forum at <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=138\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://forums.aws.amazon.com/forum.jspa?forumID=138</a>",
  "id": "591b783233e9ee771cb3e15f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-05-16T22:07:46.948Z",
  "text": "ah ok in this case these are statistic dimensions that you're stating you want to be included in the response I think. I think you'll get a better response with this question by asking CloudWatch directly. They have a forum at https://forums.aws.amazon.com/forum.jspa?forumID=138",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=138"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "Great! thanks!",
  "id": "591b81eb00efc2bb3e74e191",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-05-16T22:49:15.226Z",
  "text": "Great! thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/alethenorio",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2749771?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2749771?v=4&s=60",
   "displayName": "Alexandre Thenorio",
   "gv": "4",
   "id": "56e18a6585d51f252ab8242d",
   "url": "/alethenorio",
   "username": "alethenorio",
   "v": 18
  },
  "html": "Evening",
  "id": "591c73e10a783b6c0aaa42a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-17T16:01:37.666Z",
  "text": "Evening",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/alethenorio",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2749771?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2749771?v=4&s=60",
   "displayName": "Alexandre Thenorio",
   "gv": "4",
   "id": "56e18a6585d51f252ab8242d",
   "url": "/alethenorio",
   "username": "alethenorio",
   "v": 18
  },
  "html": "I have recently implemented S3 Crypto using client side encryption however trying to perform verification against the java is proving a bit difficult, it seems that the java SDK is writing using v1 headers. Does the Go SDK not support that?",
  "id": "591c74299f4f4ab05bd3aae1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-17T16:02:49.346Z",
  "text": "I have recently implemented S3 Crypto using client side encryption however trying to perform verification against the java is proving a bit difficult, it seems that the java SDK is writing using v1 headers. Does the Go SDK not support that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/alethenorio",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2749771?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2749771?v=4&s=60",
   "displayName": "Alexandre Thenorio",
   "gv": "4",
   "id": "56e18a6585d51f252ab8242d",
   "url": "/alethenorio",
   "username": "alethenorio",
   "v": 18
  },
  "html": "Or maybe I am making a mistake somewhere so I wouldnt trading some ideas",
  "id": "591c77af631b8e4e61e66ef2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-17T16:17:51.802Z",
  "text": "Or maybe I am making a mistake somewhere so I wouldnt trading some ideas",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "hey everybody.. any pointers for mocking S3,SQS services- I am planning to write some Unit Tests. Any help would be appreciable!",
  "id": "591c7cd4c4d73f445ab81dc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-17T16:39:48.646Z",
  "text": "hey everybody.. any pointers for mocking S3,SQS services- I am planning to write some Unit Tests. Any help would be appreciable!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"abhay8nitt_twitter\" class=\"mention\">@abhay8nitt_twitter</span> if your application can use the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3iface/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><code>s3iface.S3API</code></a> interfaces in your code you can mock out the calls in your unit tests without needing to worry about the SDK&#39;s internals.  there is an example in that doc on how to mock when using the service client interfaces.",
  "id": "591c7d570a783b6c0aaa73a4",
  "issues": [],
  "mentions": [
   {
    "screenName": "abhay8nitt_twitter",
    "userId": "58dfa339d73408ce4f555b60",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-17T16:41:59.196Z",
  "text": "@abhay8nitt_twitter if your application can use the [`s3iface.S3API`](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3iface/) interfaces in your code you can mock out the calls in your unit tests without needing to worry about the SDK's internals.  there is an example in that doc on how to mock when using the service client interfaces.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3iface/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "sure I will have a look.. thanks much <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> !",
  "id": "591c7da092217cca588756da",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-17T16:43:12.670Z",
  "text": "sure I will have a look.. thanks much @jasdel !",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "great :) the SDK has an example on doing this for DynamoDB but the idea is the same for all other services. <a href=\"https://github.com/aws/aws-sdk-go/tree/master/example/service/dynamodb/unitTest\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/tree/master/example/service/dynamodb/unitTest</a>",
  "id": "591c7de233e9ee771cb8525e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-17T16:44:18.542Z",
  "text": "great :) the SDK has an example on doing this for DynamoDB but the idea is the same for all other services. https://github.com/aws/aws-sdk-go/tree/master/example/service/dynamodb/unitTest",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/tree/master/example/service/dynamodb/unitTest"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mylons\" class=\"mention\">@mylons</span> I was going through the chat history and found that you successfully mocked the S3 calls for UT. Is it possible for you to share the example code (may be on your github repo )?",
  "id": "591c99e8f3001cd3423028ce",
  "issues": [],
  "mentions": [
   {
    "screenName": "mylons",
    "userId": "530636685e986b0712ef9167",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-17T18:43:52.035Z",
  "text": "@mylons I was going through the chat history and found that you successfully mocked the S3 calls for UT. Is it possible for you to share the example code (may be on your github repo )?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "All services are alike regarding the interface approach for testing and it is easy to port code between them ",
  "id": "591cbf1e5e34568d5e6538a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-05-17T21:22:38.597Z",
  "text": "All services are alike regarding the interface approach for testing and it is easy to port code between them ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "Hi",
  "id": "5920921d0a783b6c0abaa6bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-20T18:59:41.479Z",
  "text": "Hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "What is the import of this &quot;stscreds.NewCredentials&quot; personal function?",
  "id": "5920921e5e34568d5e745f6c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-20T18:59:42.194Z",
  "text": "What is the import of this \"stscreds.NewCredentials\" personal function?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "&quot;<a href=\"http://github.com/aws/aws-sdk-go/service/ses\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/service/ses</a>&quot; ?",
  "id": "5920922b9f4f4ab05be3e36e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-05-20T18:59:55.179Z",
  "text": "\"github.com/aws/aws-sdk-go/service/ses\" ?",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/aws/aws-sdk-go/service/ses"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "I&#39;m trying &quot;<a href=\"http://github.com/aws/aws-sdk-go/aws/credentials/stscreds\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/aws/credentials/stscreds</a>&quot; but it&#39;s not working",
  "id": "592092e3c4d73f445ac8354d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-05-20T19:02:59.674Z",
  "text": "I'm trying \"github.com/aws/aws-sdk-go/aws/credentials/stscreds\" but it's not working\n",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/aws/aws-sdk-go/aws/credentials/stscreds"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "I got it now worked, like this: stscreds &quot;<a href=\"http://github.com/aws/aws-sdk-go/aws/credentials/stscreds\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/aws/credentials/stscreds</a>&quot;",
  "id": "59209332f3001cd3423fbe4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-05-20T19:04:18.937Z",
  "text": "I got it now worked, like this: stscreds \"github.com/aws/aws-sdk-go/aws/credentials/stscreds\"",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/aws/aws-sdk-go/aws/credentials/stscreds"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": ":smile: ",
  "id": "592093675e34568d5e746405",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-05-20T19:05:11.119Z",
  "text": ":smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/sladjandr",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17433866?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17433866?v=3&s=60",
   "displayName": "Sladjan Drazic",
   "gv": "3",
   "id": "5921c714d73408ce4f612bd5",
   "url": "/sladjandr",
   "username": "sladjandr"
  },
  "html": "Hey guys, does someone here knows how to write a stream of data to a file on amazon s3 when the source of that stream is not a local file but a series of strings that get sent to my app during the entire day? I&#39;ve been using <a href=\"https://godoc.org/cloud.google.com/go/storage#Writer.Write\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://godoc.org/cloud.google.com/go/storage#Writer.Write</a> to do that on Google Storage, we switched to AWS and I can&#39;t seem to find a similar function in aws-sdk-go.  ",
  "id": "5921cad492217cca589b8277",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-05-21T17:13:56.951Z",
  "text": "Hey guys, does someone here knows how to write a stream of data to a file on amazon s3 when the source of that stream is not a local file but a series of strings that get sent to my app during the entire day? I've been using https://godoc.org/cloud.google.com/go/storage#Writer.Write to do that on Google Storage, we switched to AWS and I can't seem to find a similar function in aws-sdk-go.  ",
  "unread": false,
  "urls": [
   {
    "url": "https://godoc.org/cloud.google.com/go/storage#Writer.Write"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/sparkLogic",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/28575101?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/28575101?v=3&s=60",
   "displayName": "sparklogic",
   "gv": "3",
   "id": "59237f6dd73408ce4f617ffc",
   "url": "/sparkLogic",
   "username": "sparkLogic"
  },
  "html": "Hi, Does the <code>aws-sdk-go</code> support pricing API endpoint which is available as part of account/billing (<a href=\"https://aws.amazon.com/blogs/aws/new-aws-price-list-api/)?\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://aws.amazon.com/blogs/aws/new-aws-price-list-api/)?</a> ",
  "id": "59237fc12b926f8a67813773",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-05-23T00:18:09.752Z",
  "text": "Hi, Does the `aws-sdk-go` support pricing API endpoint which is available as part of account/billing (https://aws.amazon.com/blogs/aws/new-aws-price-list-api/)? ",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/blogs/aws/new-aws-price-list-api/)?"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Not sure, in case it doesn&#39;t, for ec2 prices I wrote a small library wrapping the data from ec2instances.info ",
  "id": "5923c2c200efc2bb3e958ac2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-05-23T05:04:02.387Z",
  "text": "Not sure, in case it doesn't, for ec2 prices I wrote a small library wrapping the data from ec2instances.info ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/sparkLogic",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/28575101?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/28575101?v=3&s=60",
   "displayName": "sparklogic",
   "gv": "3",
   "id": "59237f6dd73408ce4f617ffc",
   "url": "/sparkLogic",
   "username": "sparkLogic"
  },
  "html": "thanks for that info, <span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> ",
  "id": "59244feb05e3326c67ff5716",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-05-23T15:06:19.075Z",
  "text": "thanks for that info, @cristim ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sparkLogic\" class=\"mention\">@sparkLogic</span> have a look at <a href=\"https://github.com/cristim/ec2-instances-info\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/cristim/ec2-instances-info</a>",
  "id": "592450150a783b6c0ac8f911",
  "issues": [],
  "mentions": [
   {
    "screenName": "sparkLogic",
    "userId": "59237f6dd73408ce4f617ffc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-05-23T15:07:01.232Z",
  "text": "@sparkLogic have a look at https://github.com/cristim/ec2-instances-info",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/cristim/ec2-instances-info"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "(the price data may not be up-to-date, it needs a rebuild/code update in the event of updates from AWS and ec2instances.info)",
  "id": "59245154eec422e415df5a06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-05-23T15:12:20.307Z",
  "text": "(the price data may not be up-to-date, it needs a rebuild/code update in the event of updates from AWS and ec2instances.info)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/3/solivaf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4161697?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4161697?v=3&s=60",
   "displayName": "Fernando Soliva",
   "gv": "3",
   "id": "5658eaa816b6c7089cbc7424",
   "url": "/solivaf",
   "username": "solivaf",
   "v": 3
  },
  "html": "Hi all, aws has a specific library to kinesis for Go?",
  "id": "5924745e0a783b6c0ac9a72a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-23T17:41:50.541Z",
  "text": "Hi all, aws has a specific library to kinesis for Go?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"solivaf\" class=\"mention\">@solivaf</span> AWS not provide a library Kinesis Streams Consumers, only client libraries for the control plan APIs are provided. There are a few open source libraries available in Go though. But I have not personally used any.",
  "id": "5925f917c4d73f445aded544",
  "issues": [],
  "mentions": [
   {
    "screenName": "solivaf",
    "userId": "5658eaa816b6c7089cbc7424",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-24T21:20:23.500Z",
  "text": "@solivaf AWS not provide a library Kinesis Streams Consumers, only client libraries for the control plan APIs are provided. There are a few open source libraries available in Go though. But I have not personally used any.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<a href=\"http://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html#kinesis-record-processor-overview-kcl\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html#kinesis-record-processor-overview-kcl</a>",
  "id": "5925f943fcbbe1891c408a22",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-05-24T21:21:07.972Z",
  "text": "http://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html#kinesis-record-processor-overview-kcl",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html#kinesis-record-processor-overview-kcl"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-05-26T12:40:56.477Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/cherwin",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=60",
   "displayName": "Cherwin Nooitmeer",
   "gv": "3",
   "id": "573375c0c43b8c60197257e7",
   "url": "/cherwin",
   "username": "cherwin",
   "v": 1
  },
  "html": "does anyone know why I get<br><code>panic: SharedConfigLoadError: failed to load config file, /Users/cherwin/.aws/credentials</code><br>the config file exists and is verified to be working with <code>aws-cli</code>",
  "id": "592820e12b926f8a67955b0c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-05-26T12:34:41.907Z",
  "text": "does anyone know why I get \n```panic: SharedConfigLoadError: failed to load config file, /Users/cherwin/.aws/credentials``` \nthe config file exists and is verified to be working with `aws-cli`",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cherwin\" class=\"mention\">@cherwin</span> maybe permission problems? ",
  "id": "5929337beec422e415f30900",
  "issues": [],
  "mentions": [
   {
    "screenName": "cherwin",
    "userId": "573375c0c43b8c60197257e7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-05-27T08:06:19.853Z",
  "text": "@cherwin maybe permission problems? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "Also, are you sure your aws cli is actually using your credential file? ",
  "id": "592933b2cb83ba6a41038a05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-05-27T08:07:14.534Z",
  "text": "Also, are you sure your aws cli is actually using your credential file? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "The file is usually under aws/config/credentials ",
  "id": "592934082b926f8a67994133",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-05-27T08:08:40.390Z",
  "text": "The file is usually under aws/config/credentials ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "So you might be barking under the wrong tree. ",
  "id": "5929341acb83ba6a41038a7c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-05-27T08:08:58.269Z",
  "text": "So you might be barking under the wrong tree. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cherwin\" class=\"mention\">@cherwin</span> - that is the credentials file and not the shared config. Can you provide a code snippet?",
  "id": "592a075af3001cd34265be0c",
  "issues": [],
  "mentions": [
   {
    "screenName": "cherwin",
    "userId": "573375c0c43b8c60197257e7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-05-27T23:10:18.862Z",
  "text": "@cherwin - that is the credentials file and not the shared config. Can you provide a code snippet?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Wphelp98737",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=60",
   "displayName": "Morteza Janjani",
   "gv": "4",
   "id": "586f82b9d73408ce4f41a600",
   "url": "/Wphelp98737",
   "username": "Wphelp98737",
   "v": 15
  },
  "html": "\u0628\u0646\u0627\u0645 \u062e\u062f\u0627 \u0648 \u0628\u0627 \u0633\u0644\u0627\u0645 \u062e\u062f\u0645\u062a \u0634\u0645\u0627 \u0627\u0633\u0627\u062a\u06cc\u062f \u0645\u062d\u062a\u0631\u0645 ",
  "id": "592a48180a783b6c0ae040bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-05-28T03:46:32.510Z",
  "text": "\u0628\u0646\u0627\u0645 \u062e\u062f\u0627 \u0648 \u0628\u0627 \u0633\u0644\u0627\u0645 \u062e\u062f\u0645\u062a \u0634\u0645\u0627 \u0627\u0633\u0627\u062a\u06cc\u062f \u0645\u062d\u062a\u0631\u0645 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Wphelp98737",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=60",
   "displayName": "Morteza Janjani",
   "gv": "4",
   "id": "586f82b9d73408ce4f41a600",
   "url": "/Wphelp98737",
   "username": "Wphelp98737",
   "v": 15
  },
  "html": "\u0627\u0645\u06cc\u062f\u0648\u0627\u0631\u0645 \u06a9\u0647 \u062f\u0631 \u06a9\u0646\u0627\u0631 \u0634\u0645\u0627 \u0639\u0644\u0645 \u0627\u0645\u0648\u0632\u06cc \u0648 \u06a9\u0633\u0628 \u062f\u0627\u0646\u0634 \u06a9\u0646\u0645 ...",
  "id": "592a4840fa63ba2f7688afa8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-05-28T03:47:12.045Z",
  "text": "\u0627\u0645\u06cc\u062f\u0648\u0627\u0631\u0645 \u06a9\u0647 \u062f\u0631 \u06a9\u0646\u0627\u0631 \u0634\u0645\u0627 \u0639\u0644\u0645 \u0627\u0645\u0648\u0632\u06cc \u0648 \u06a9\u0633\u0628 \u062f\u0627\u0646\u0634 \u06a9\u0646\u0645 ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/cherwin",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=60",
   "displayName": "Cherwin Nooitmeer",
   "gv": "3",
   "id": "573375c0c43b8c60197257e7",
   "url": "/cherwin",
   "username": "cherwin",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Skarlso\" class=\"mention\">@Skarlso</span> nah none of those",
  "id": "592c3badfa63ba2f768f9448",
  "issues": [],
  "mentions": [
   {
    "screenName": "Skarlso",
    "userId": "5753d59cc43b8c601976d39e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-05-29T15:18:05.426Z",
  "text": "@Skarlso nah none of those",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/cherwin",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=60",
   "displayName": "Cherwin Nooitmeer",
   "gv": "3",
   "id": "573375c0c43b8c60197257e7",
   "url": "/cherwin",
   "username": "cherwin",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> <code>s3svc := s3.New(session.New())</code> is enough to reproduce the problem",
  "id": "592c3be0631b8e4e61241a20",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-05-29T15:18:56.354Z",
  "text": "@xibz ```s3svc := s3.New(session.New())``` is enough to reproduce the problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cherwin\" class=\"mention\">@cherwin</span> Have you set up your credentials here /Users/cherwin/.aws/credentials?",
  "id": "592c4af5fcbbe1891c57b92c",
  "issues": [],
  "mentions": [
   {
    "screenName": "cherwin",
    "userId": "573375c0c43b8c60197257e7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-05-29T16:23:17.570Z",
  "text": "@cherwin Have you set up your credentials here /Users/cherwin/.aws/credentials?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/cherwin",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=60",
   "displayName": "Cherwin Nooitmeer",
   "gv": "3",
   "id": "573375c0c43b8c60197257e7",
   "url": "/cherwin",
   "username": "cherwin",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jeffotoni\" class=\"mention\">@jeffotoni</span> yes I did, it&#39;s working with boto3 for example. when I remove that file, boto3 is not working as expected.",
  "id": "592ce3ccfcbbe1891c59df55",
  "issues": [],
  "mentions": [
   {
    "screenName": "jeffotoni",
    "userId": "58b63979d73408ce4f4d96ef",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-30T03:15:24.235Z",
  "text": "@jeffotoni yes I did, it's working with boto3 for example. when I remove that file, boto3 is not working as expected.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cherwin\" class=\"mention\">@cherwin</span> - What version of the SDK are you using?",
  "id": "592d9f3738b37b98283cce3b",
  "issues": [],
  "mentions": [
   {
    "screenName": "cherwin",
    "userId": "573375c0c43b8c60197257e7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-05-30T16:35:03.808Z",
  "text": "@cherwin - What version of the SDK are you using?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Also it could be possible that there is some non-ascii character that may be corrupting the file when being read by the SDK",
  "id": "592da3e7fcbbe1891c5d3187",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-05-30T16:55:03.720Z",
  "text": "Also it could be possible that there is some non-ascii character that may be corrupting the file when being read by the SDK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-05-30T17:00:56.015Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cherwin\" class=\"mention\">@cherwin</span> I noticed the error wasn&#39;t including the underlying error i fixed the bug causign the error cause to not be included <span data-link-type=\"issue\" data-issue=\"1305\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#1305</span>",
  "id": "592da4f20ba4d59763f62b8b",
  "issues": [
   {
    "number": "1305",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [
   {
    "screenName": "cherwin",
    "userId": "573375c0c43b8c60197257e7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-05-30T16:59:30.109Z",
  "text": "@cherwin I noticed the error wasn't including the underlying error i fixed the bug causign the error cause to not be included https://github.com/aws/aws-sdk-go/pull/1305",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cherwin\" class=\"mention\">@cherwin</span> I&#39;ve merged in <span data-link-type=\"issue\" data-issue=\"1305\" class=\"issue\">#1305</span> and you should now see the error the SDK is encountering when trying to load the shared config file.",
  "id": "592dc8b5fa63ba2f76963277",
  "issues": [
   {
    "number": "1305"
   }
  ],
  "mentions": [
   {
    "screenName": "cherwin",
    "userId": "573375c0c43b8c60197257e7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-30T19:32:05.264Z",
  "text": "@cherwin I've merged in #1305 and you should now see the error the SDK is encountering when trying to load the shared config file.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/cherwin",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=60",
   "displayName": "Cherwin Nooitmeer",
   "gv": "3",
   "id": "573375c0c43b8c60197257e7",
   "url": "/cherwin",
   "username": "cherwin",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> sweet I&#39;ll try this out immediately",
  "id": "592dcce9f3001cd34273fcd1",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-30T19:50:01.588Z",
  "text": "@jasdel sweet I'll try this out immediately",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/cherwin",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=60",
   "displayName": "Cherwin Nooitmeer",
   "gv": "3",
   "id": "573375c0c43b8c60197257e7",
   "url": "/cherwin",
   "username": "cherwin",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>, well I&#39;m not getting the error anymore :)",
  "id": "592dd0355e34568d5ea7c19e",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-30T20:04:05.948Z",
  "text": "@jasdel, well I'm not getting the error anymore :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/cherwin",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=60",
   "displayName": "Cherwin Nooitmeer",
   "gv": "3",
   "id": "573375c0c43b8c60197257e7",
   "url": "/cherwin",
   "username": "cherwin",
   "v": 1
  },
  "html": "your fix coincidentally made me update the sdk and now I&#39;m not experiencing this problem anymore",
  "id": "592dd05300efc2bb3ebda96e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-30T20:04:35.690Z",
  "text": "your fix coincidentally made me update the sdk and now I'm not experiencing this problem anymore",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/cherwin",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=60",
   "displayName": "Cherwin Nooitmeer",
   "gv": "3",
   "id": "573375c0c43b8c60197257e7",
   "url": "/cherwin",
   "username": "cherwin",
   "v": 1
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> <span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> ",
  "id": "592dd07f0ba4d59763f6f81d",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   },
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-30T20:05:19.082Z",
  "text": "thanks @jasdel @xibz ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for the update <span data-link-type=\"mention\" data-screen-name=\"cherwin\" class=\"mention\">@cherwin</span> glad, updating the SDK resolved the issue you were running into!",
  "id": "592dd32d0ba4d59763f705c1",
  "issues": [],
  "mentions": [
   {
    "screenName": "cherwin",
    "userId": "573375c0c43b8c60197257e7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-30T20:16:45.812Z",
  "text": "Thanks for the update @cherwin glad, updating the SDK resolved the issue you were running into!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/3/cherwin",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3290010?v=3&s=60",
   "displayName": "Cherwin Nooitmeer",
   "gv": "3",
   "id": "573375c0c43b8c60197257e7",
   "url": "/cherwin",
   "username": "cherwin",
   "v": 1
  },
  "html": "plus we now show the underlying error as well :)",
  "id": "592dd34e38b37b98283dcbef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-05-30T20:17:18.529Z",
  "text": "plus we now show the underlying error as well :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "absolutely :)",
  "id": "592df20b0a783b6c0aee8206",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-05-30T22:28:27.481Z",
  "text": "absolutely :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-05-31T21:45:43.975Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/npalaska",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11507287?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11507287?v=3&s=60",
   "displayName": "Nikhil Palaskar",
   "gv": "3",
   "id": "592f3249d73408ce4f63baf0",
   "url": "/npalaska",
   "username": "npalaska"
  },
  "html": "Hey Everyone, can I get some reference for subscribing to an IoT topic using Go API and sending msg params to the subscribed topic or does anyone have a reference to a small IoT example of using Go API   ?",
  "id": "592f394acb83ba6a411aa9ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-05-31T21:44:42.106Z",
  "text": "Hey Everyone, can I get some reference for subscribing to an IoT topic using Go API and sending msg params to the subscribed topic or does anyone have a reference to a small IoT example of using Go API   ?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2017-06-01T12:49:35.835Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/daidokoro",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=60",
   "displayName": "Shaun Remekie",
   "gv": "4",
   "id": "584f0023d73408ce4f3c94c8",
   "url": "/daidokoro",
   "username": "daidokoro",
   "v": 11
  },
  "html": "Hey All, does anyone know if the <code>aws cloudformation deploy</code> API is exposed in the Go SDK. Essentially this command is used to deploy Special Cloudformation SAM (serverless architecture model) templates, See <a href=\"https://github.com/awslabs/serverless-application-model/blob/master/HOWTO.md\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Here</a>.<br>SAM Templates can&#39;t be deployed using the CreateStack Methods. Under the hood, the Deploy api creates a change-set and deploys it, but doing this manually in Go, doesn&#39;t seem to work. Thanks in advance. :-)",
  "id": "59300d420a783b6c0af76b88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-06-01T12:49:06.212Z",
  "text": "Hey All, does anyone know if the `aws cloudformation deploy` API is exposed in the Go SDK. Essentially this command is used to deploy Special Cloudformation SAM (serverless architecture model) templates, See [Here](https://github.com/awslabs/serverless-application-model/blob/master/HOWTO.md).\nSAM Templates can't be deployed using the CreateStack Methods. Under the hood, the Deploy api creates a change-set and deploys it, but doing this manually in Go, doesn't seem to work. Thanks in advance. :-)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/awslabs/serverless-application-model/blob/master/HOWTO.md"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "Hey <span data-link-type=\"mention\" data-screen-name=\"daidokoro\" class=\"mention\">@daidokoro</span>. For a complete example of that look on this project : <a href=\"https://github.com/Skarlso/go-furnace\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/Skarlso/go-furnace</a>",
  "id": "59300e8a0a783b6c0af7721b",
  "issues": [],
  "mentions": [
   {
    "screenName": "daidokoro",
    "userId": "584f0023d73408ce4f3c94c8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-06-01T12:54:34.606Z",
  "text": "Hey @daidokoro. For a complete example of that look on this project : https://github.com/Skarlso/go-furnace",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/Skarlso/go-furnace"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "You can find examples in there for codedeploy and other stuff as well. ",
  "id": "59300ec62b926f8a67b3c030",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-06-01T12:55:34.319Z",
  "text": "You can find examples in there for codedeploy and other stuff as well. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "Also unit testing practices. ",
  "id": "59300ed53aeff8a61f67140f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-06-01T12:55:49.773Z",
  "text": "Also unit testing practices. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/daidokoro",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=60",
   "displayName": "Shaun Remekie",
   "gv": "4",
   "id": "584f0023d73408ce4f3c94c8",
   "url": "/daidokoro",
   "username": "daidokoro",
   "v": 11
  },
  "html": "Ah! Thanks Gergely, I&#39;ve come across your project before, I&#39;ve starred previously, it&#39;s great!  Thanks sooo much, I&#39;ll have a look.  Definitely need to sort out my testing stuff as well :-)",
  "id": "59301010fcbbe1891c67aeb8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-06-01T13:01:04.880Z",
  "text": "Ah! Thanks Gergely, I've come across your project before, I've starred previously, it's great!  Thanks sooo much, I'll have a look.  Definitely need to sort out my testing stuff as well :-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "(-: thanks very much! ",
  "id": "593012bacb83ba6a411e102c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-06-01T13:12:26.832Z",
  "text": "(-: thanks very much! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Skarlso",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/182850?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/182850?v=4&s=60",
   "displayName": "Gergely Brautigam",
   "gv": "4",
   "id": "5753d59cc43b8c601976d39e",
   "url": "/Skarlso",
   "username": "Skarlso",
   "v": 27
  },
  "html": "If you still have questions, shoot. (-:",
  "id": "593012d5fcbbe1891c67bada",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-06-01T13:12:53.092Z",
  "text": "If you still have questions, shoot. (-:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"daidokoro\" class=\"mention\">@daidokoro</span> ",
  "id": "59303d58f2dd2dba065ca580",
  "issues": [],
  "mentions": [
   {
    "screenName": "daidokoro",
    "userId": "584f0023d73408ce4f3c94c8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-01T16:14:16.754Z",
  "text": "@daidokoro ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "hi all, I was wondering if anybody knew how to get the account ID ?",
  "id": "593117a3ca6d4ae80cd34c5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-06-02T07:45:39.245Z",
  "text": "hi all, I was wondering if anybody knew how to get the account ID ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "I&#39;ve started to play with the SDK, but from what I see all snapshots (public &amp; private) are returned, and I&#39;m pretty sure it would be the same for AMIs",
  "id": "593117c4eb257a8725ce5b39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-06-02T07:46:12.106Z",
  "text": "I've started to play with the SDK, but from what I see all snapshots (public & private) are returned, and I'm pretty sure it would be the same for AMIs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/daidokoro",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=60",
   "displayName": "Shaun Remekie",
   "gv": "4",
   "id": "584f0023d73408ce4f3c94c8",
   "url": "/daidokoro",
   "username": "daidokoro",
   "v": 11
  },
  "html": "Hey <span data-link-type=\"mention\" data-screen-name=\"xlr-8\" class=\"mention\">@xlr-8</span> , you can get the account ID using the sts.GetCallerIdentity Method. Not sure about the snapshot/ami stuff, but this should do the account id bit. <pre><code class=\"go\">sess := session.Must(session.NewSession())\n\nsvc := sts.New(sess)\n\n<span class=\"keyword\">var</span> params *sts.GetCallerIdentityInput\nresp, err := svc.GetCallerIdentity(params)\n\n<span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n    <span class=\"comment\">// Print the error, cast err to awserr.Error to get the Code and</span>\n    <span class=\"comment\">// Message from an error.</span>\n    fmt.Println(err.Error())\n    <span class=\"keyword\">return</span>\n}\n\n<span class=\"comment\">// Pretty-print the response data.</span>\nfmt.Println(resp)</code></pre>",
  "id": "5931208df2dd2dba06601b52",
  "issues": [],
  "mentions": [
   {
    "screenName": "xlr-8",
    "userId": "57592a76c2f0db084a1cf428",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-06-02T08:23:41.100Z",
  "text": "Hey @xlr-8 , you can get the account ID using the sts.GetCallerIdentity Method. Not sure about the snapshot/ami stuff, but this should do the account id bit. \n\n```go\nsess := session.Must(session.NewSession())\n\nsvc := sts.New(sess)\n\nvar params *sts.GetCallerIdentityInput\nresp, err := svc.GetCallerIdentity(params)\n\nif err != nil {\n    // Print the error, cast err to awserr.Error to get the Code and\n    // Message from an error.\n    fmt.Println(err.Error())\n    return\n}\n\n// Pretty-print the response data.\nfmt.Println(resp)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-02T08:28:00.158Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "Cheers <span data-link-type=\"mention\" data-screen-name=\"daidokoro\" class=\"mention\">@daidokoro</span>  I&#39;ll test that right away",
  "id": "593120b76549436c7d0b4c63",
  "issues": [],
  "mentions": [
   {
    "screenName": "daidokoro",
    "userId": "584f0023d73408ce4f3c94c8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-02T08:24:23.903Z",
  "text": "Cheers @daidokoro  I'll test that right away",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"daidokoro\" class=\"mention\">@daidokoro</span> works like a charm :) thanks!",
  "id": "593129a7ca6d4ae80cd39b33",
  "issues": [],
  "mentions": [
   {
    "screenName": "daidokoro",
    "userId": "584f0023d73408ce4f3c94c8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-02T09:02:31.348Z",
  "text": "@daidokoro works like a charm :) thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/daidokoro",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=60",
   "displayName": "Shaun Remekie",
   "gv": "4",
   "id": "584f0023d73408ce4f3c94c8",
   "url": "/daidokoro",
   "username": "daidokoro",
   "v": 11
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xlr-8\" class=\"mention\">@xlr-8</span>  No problem, glad it&#39;s sorted ^_^",
  "id": "5931302d6462d8493cd1df48",
  "issues": [],
  "mentions": [
   {
    "screenName": "xlr-8",
    "userId": "57592a76c2f0db084a1cf428",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-02T09:30:21.476Z",
  "text": "@xlr-8  No problem, glad it's sorted ^_^",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "Too bad there is no easier/straight forward way of doing though",
  "id": "593131b0142826e97276a44f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-02T09:36:48.488Z",
  "text": "Too bad there is no easier/straight forward way of doing though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/daidokoro",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=60",
   "displayName": "Shaun Remekie",
   "gv": "4",
   "id": "584f0023d73408ce4f3c94c8",
   "url": "/daidokoro",
   "username": "daidokoro",
   "v": 11
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xlr-8\" class=\"mention\">@xlr-8</span> , Ye true, there&#39;s definitely a lot of &quot;do-it-yourself&quot;, involved in using the Go SDK, but it&#39;s <strong>Go</strong> so the finished product is almost always worth it. :-)",
  "id": "593159a97503e2b70603bfd4",
  "issues": [],
  "mentions": [
   {
    "screenName": "xlr-8",
    "userId": "57592a76c2f0db084a1cf428",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-02T12:27:21.502Z",
  "text": "@xlr-8 , Ye true, there's definitely a lot of \"do-it-yourself\", involved in using the Go SDK, but it's __Go__ so the finished product is almost always worth it. :-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-02T22:46:31.706Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "Hi, I have a snippit to describe my ec2 instances with  specific tag<pre><code>sess := session.Must(session.NewSession())\n    svc := ec2.<span class=\"keyword\">New</span>(sess)\n    totalInstances := <span class=\"number\">0</span>\n\n    params := &amp;ec2.DescribeInstancesInput{\n        DryRun: aws.Bool(<span class=\"literal\">false</span>),\n        Filters: []*ec2.<span class=\"built_in\">Filter</span>{\n            {\n                Name: aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"tag:Environment\"</span>),\n                Values: []*<span class=\"built_in\">string</span>{\n                    aws.<span class=\"built_in\">String</span>(env),\n                },\n            },\n        },\n    }\n    resp, <span class=\"built_in\">err</span> := svc.DescribeInstances(params)\n\n    <span class=\"keyword\">if</span> <span class=\"built_in\">err</span> != nil {\n        fmt.Println(<span class=\"built_in\">err</span>.<span class=\"keyword\">Error</span>())\n        return\n    }</code></pre>",
  "id": "5931e9c4f2dd2dba066398ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-06-02T22:42:12.657Z",
  "text": "Hi, I have a snippit to describe my ec2 instances with  specific tag\n```\nsess := session.Must(session.NewSession())\n\tsvc := ec2.New(sess)\n\ttotalInstances := 0\n\n\tparams := &ec2.DescribeInstancesInput{\n\t\tDryRun: aws.Bool(false),\n\t\tFilters: []*ec2.Filter{\n\t\t\t{\n\t\t\t\tName: aws.String(\"tag:Environment\"),\n\t\t\t\tValues: []*string{\n\t\t\t\t\taws.String(env),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n\tresp, err := svc.DescribeInstances(params)\n\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn\n\t}\n```",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "I also have a function that invokes the assume_role api, and I am able to get the return keyid, secretkey, and the token",
  "id": "5931e9fb6462d8493cd536a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-02T22:43:07.890Z",
  "text": "I also have a function that invokes the assume_role api, and I am able to get the return keyid, secretkey, and the token",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "How can I use those values to call ec2 instances?",
  "id": "5931ea276462d8493cd53724",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-02T22:43:51.143Z",
  "text": "How can I use those values to call ec2 instances?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-02T22:45:17.292Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "for context, I have 2 aws accounts, and want to &quot;describe&quot; ec2 instances in my 2nd aws account, hence why i&#39;m calling the &quot;assume_role&quot; api to get the correct permissions to access my 2nd aws account from account1",
  "id": "5931ea5e6549436c7d0ebd81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-02T22:44:46.037Z",
  "text": "for context, I have 2 aws accounts, and want to \"describe\" ec2 instances in my 2nd aws account, hence why i'm calling the \"assume_role\" api to get the correct permissions to access my 2nd aws account from account1",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"popopanda\" class=\"mention\">@popopanda</span>, you can set those values specifically in the <code>aws.Config</code> object under <code>Credentials</code>. Please take a look <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/#NewStaticCredentials\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>",
  "id": "5931eb997503e2b706064e72",
  "issues": [],
  "mentions": [
   {
    "screenName": "popopanda",
    "userId": "591b6e17d73408ce4f600963",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-06-02T22:50:01.597Z",
  "text": "@popopanda, you can set those values specifically in the `aws.Config` object under `Credentials`. Please take a look [here](https://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/#NewStaticCredentials)",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/#NewStaticCredentials"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "what is the difference between NewCredentials and NewStaticCredentials?",
  "id": "5931ef7b167d046a7d6286f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-06-02T23:06:35.185Z",
  "text": "what is the difference between NewCredentials and NewStaticCredentials?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "I&#39;m also looking to only temporary use the new aws keys",
  "id": "5931efb502c480e6720885a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-06-02T23:07:33.100Z",
  "text": "I'm also looking to only temporary use the new aws keys",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "ah nvm on above question :)",
  "id": "5931eff66462d8493cd547b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-06-02T23:08:38.428Z",
  "text": "ah nvm on above question :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-02T23:21:13.792Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> Where would I pass aws.Config into? so far I have <pre><code>  awsKeyID, awsSecretKey, awsTokenID := <span class=\"function\"><span class=\"title\">assumeRole</span><span class=\"params\">()</span></span>\n  newCreds := credentials.<span class=\"function\"><span class=\"title\">NewStaticCredentials</span><span class=\"params\">(awsKeyID, awsSecretKey, awsTokenID)</span></span></code></pre>",
  "id": "5931f2c1cf9c13503c4a9325",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-06-02T23:20:33.475Z",
  "text": "@xibz Where would I pass aws.Config into? so far I have \n```\n  awsKeyID, awsSecretKey, awsTokenID := assumeRole()\n  newCreds := credentials.NewStaticCredentials(awsKeyID, awsSecretKey, awsTokenID)\n```",
  "unread": false,
  "urls": [],
  "v": 5
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<pre><code class=\"go\">sess := session.Must(session.NewSession(&amp;aws.Config{\n    Credentials: newCreds,\n}))</code></pre>",
  "id": "5931f34c142826e9727a111a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-06-02T23:22:52.731Z",
  "text": "```go\nsess := session.Must(session.NewSession(&aws.Config{\n    Credentials: newCreds,\n}))\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "thanks!",
  "id": "5931f765e531dbc905a616b8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-06-02T23:40:21.144Z",
  "text": "thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Yep, np :)",
  "id": "5931f786e531dbc905a61719",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-06-02T23:40:54.669Z",
  "text": "Yep, np :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/KevinCSI",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4729376?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4729376?v=3&s=60",
   "displayName": "Kevin Bradley",
   "gv": "3",
   "id": "59380cc6d73408ce4f656a57",
   "url": "/KevinCSI",
   "username": "KevinCSI"
  },
  "html": "Hey everybody,  I was wondering if you could grab ec-2 instance tags from this api? ",
  "id": "59380d1431f589c64f839bef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-07T14:26:28.845Z",
  "text": "Hey everybody,  I was wondering if you could grab ec-2 instance tags from this api? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/KevinCSI",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4729376?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4729376?v=3&s=60",
   "displayName": "Kevin Bradley",
   "gv": "3",
   "id": "59380cc6d73408ce4f656a57",
   "url": "/KevinCSI",
   "username": "KevinCSI"
  },
  "html": "I don&#39;t believe that information is stored in instance metadata",
  "id": "59380d3dcf9c13503c61e65c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-07T14:27:09.366Z",
  "text": "I don't believe that information is stored in instance metadata",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"KevinCSI\" class=\"mention\">@KevinCSI</span> yes you can: <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#EC2.DescribeInstances\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#EC2.DescribeInstances</a> will return you object containing DescribeInstancesOutput =&gt; Reservation =&gt; Instances (<a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#Instance\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#Instance</a>)",
  "id": "593817abe531dbc905bd6d0c",
  "issues": [],
  "mentions": [
   {
    "screenName": "KevinCSI",
    "userId": "59380cc6d73408ce4f656a57",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-06-07T15:11:39.251Z",
  "text": "@KevinCSI yes you can: https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#EC2.DescribeInstances will return you object containing DescribeInstancesOutput => Reservation => Instances (https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#Instance)",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#EC2.DescribeInstances"
   },
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#Instance"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdgiotta",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1541999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1541999?v=4&s=60",
   "displayName": "John D Giotta",
   "gv": "4",
   "id": "5938a0ddd73408ce4f6593e7",
   "url": "/jdgiotta",
   "username": "jdgiotta",
   "v": 4
  },
  "html": "How do I obtain a token for NewStaticCredentials?",
  "id": "5938a402f31c8ced0c1424e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-08T01:10:26.849Z",
  "text": "How do I obtain a token for NewStaticCredentials?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdgiotta",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1541999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1541999?v=4&s=60",
   "displayName": "John D Giotta",
   "gv": "4",
   "id": "5938a0ddd73408ce4f6593e7",
   "url": "/jdgiotta",
   "username": "jdgiotta",
   "v": 4
  },
  "html": "I got it.",
  "id": "5938a8676549436c7d280cbd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-06-08T01:29:11.687Z",
  "text": "I got it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/udhos",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2634722?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2634722?v=4&s=60",
   "displayName": "udhos",
   "gv": "4",
   "id": "54985c0ddb8155e6700e2132",
   "url": "/udhos",
   "username": "udhos",
   "v": 16
  },
  "html": "guys my dynamodb code is unable to find the region from ~/.aws/config. it works with NewConfig().WithRegion() what is the trick?",
  "id": "5938e46c167d046a7d7c6856",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-06-08T05:45:16.915Z",
  "text": "guys my dynamodb code is unable to find the region from ~/.aws/config. it works with NewConfig().WithRegion() what is the trick?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "If I remember correctly,it ignores that file and only uses the credentials config",
  "id": "59390efa31f589c64f87bf4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-06-08T08:46:50.299Z",
  "text": "If I remember correctly,it ignores that file and only uses the credentials config",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/BabuKumaravel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1164503?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1164503?v=3&s=60",
   "displayName": "Chin",
   "gv": "3",
   "id": "59392182d73408ce4f65ae95",
   "url": "/BabuKumaravel",
   "username": "BabuKumaravel"
  },
  "html": "Hi Android SDK , Default Unauthorised cognito id is using , ",
  "id": "593921dd6462d8493cf0a617",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-08T10:07:25.716Z",
  "text": "Hi Android SDK , Default Unauthorised cognito id is using , ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/BabuKumaravel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1164503?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1164503?v=3&s=60",
   "displayName": "Chin",
   "gv": "3",
   "id": "59392182d73408ce4f65ae95",
   "url": "/BabuKumaravel",
   "username": "BabuKumaravel"
  },
  "html": "How to use Authorised Cognito permission ?",
  "id": "593921eaf2dd2dba067f036c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-08T10:07:38.769Z",
  "text": "How to use Authorised Cognito permission ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/BabuKumaravel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1164503?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1164503?v=3&s=60",
   "displayName": "Chin",
   "gv": "3",
   "id": "59392182d73408ce4f65ae95",
   "url": "/BabuKumaravel",
   "username": "BabuKumaravel"
  },
  "html": "Please help me ",
  "id": "593921f102c480e672239a33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-08T10:07:45.000Z",
  "text": "Please help me ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/KevinCSI",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4729376?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4729376?v=3&s=60",
   "displayName": "Kevin Bradley",
   "gv": "3",
   "id": "59380cc6d73408ce4f656a57",
   "url": "/KevinCSI",
   "username": "KevinCSI"
  },
  "html": "Thanks xlr!",
  "id": "593958f9e531dbc905c28fa7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-06-08T14:02:33.875Z",
  "text": "Thanks xlr!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "np",
  "id": "59395936e531dbc905c290e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-06-08T14:03:34.252Z",
  "text": "np",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"BabuKumaravel\" class=\"mention\">@BabuKumaravel</span> - You are currently in the AWS SDK for Go channel. Were you looking for another SDK? If you are looking for the SDK you mentioned above, reaching out to them in <a href=\"https://github.com/aws/aws-sdk-android\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github</a> is the best bet.",
  "id": "593992fd6549436c7d2bb5a3",
  "issues": [],
  "mentions": [
   {
    "screenName": "BabuKumaravel",
    "userId": "59392182d73408ce4f65ae95",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-06-08T18:10:05.408Z",
  "text": "@BabuKumaravel - You are currently in the AWS SDK for Go channel. Were you looking for another SDK? If you are looking for the SDK you mentioned above, reaching out to them in [github](https://github.com/aws/aws-sdk-android) is the best bet.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-android"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/buchanae",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/262647?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/262647?v=4&s=60",
   "displayName": "Alex Buchanan",
   "gv": "4",
   "id": "57f7dabbd73408ce4f2c94bd",
   "url": "/buchanae",
   "username": "buchanae",
   "v": 7
  },
  "html": "Has anyone tackled using ListJobs across multiple queues + statuses while correctly managing pagination? For example, if you wanted to have a job list UI that listed jobs across all queues and statuses? Because a call to ListJobs is queue + status specific, it seems like managing pagination could require some cleverness.",
  "id": "5939da6d6462d8493cf3f5ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-06-08T23:14:53.590Z",
  "text": "Has anyone tackled using ListJobs across multiple queues + statuses while correctly managing pagination? For example, if you wanted to have a job list UI that listed jobs across all queues and statuses? Because a call to ListJobs is queue + status specific, it seems like managing pagination could require some cleverness.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/buchanae",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/262647?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/262647?v=4&s=60",
   "displayName": "Alex Buchanan",
   "gv": "4",
   "id": "57f7dabbd73408ce4f2c94bd",
   "url": "/buchanae",
   "username": "buchanae",
   "v": 7
  },
  "html": "Unless, I\u2019m missing something, which is always possible",
  "id": "5939da80cf9c13503c699b98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-06-08T23:15:12.543Z",
  "text": "Unless, I\u2019m missing something, which is always possible",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/buchanae",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/262647?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/262647?v=4&s=60",
   "displayName": "Alex Buchanan",
   "gv": "4",
   "id": "57f7dabbd73408ce4f2c94bd",
   "url": "/buchanae",
   "username": "buchanae",
   "v": 7
  },
  "html": "Oh, this channel isn\u2019t Batch specific. I\u2019m referring to Batch.ListJobs",
  "id": "5939db4acf9c13503c699e44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-06-08T23:18:34.351Z",
  "text": "Oh, this channel isn\u2019t Batch specific. I\u2019m referring to Batch.ListJobs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "how can I download a folder with its content",
  "id": "593a23b5cf9c13503c6a818d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-06-09T04:27:33.310Z",
  "text": "how can I download a folder with its content",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "<pre><code><span class=\"tag\">downloader</span><span class=\"class\">.Download</span>(f, &amp;s3.GetObjectInput{\n        <span class=\"attribute\">Bucket</span>: aws.<span class=\"function\">String</span>(<span class=\"string\">\"mybucker\"</span>),\n        <span class=\"attribute\">Key</span>:    aws.<span class=\"function\">String</span>(<span class=\"string\">\"mykey/folder1\"</span>),\n    })</code></pre>",
  "id": "593a252ff2dd2dba068318f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-06-09T04:33:51.617Z",
  "text": "```\ndownloader.Download(f, &s3.GetObjectInput{\n\t\tBucket: aws.String(\"mybucker\"),\n\t\tKey:    aws.String(\"mykey/folder1\"),\n\t})\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "how can I download the whole folder with its content",
  "id": "593a2542436860af4ced4ca0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-06-09T04:34:10.948Z",
  "text": "how can I download the whole folder with its content",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ffoysal\" class=\"mention\">@ffoysal</span> you&#39;ll need to use the API operation <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.ListObjects\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">ListObjects</a> to get a list of all the objects with the prefix <code>mykey/folder1</code>. Then you can use the S3 Downloader to download each file.",
  "id": "593a261ff31c8ced0c1a1fee",
  "issues": [],
  "mentions": [
   {
    "screenName": "ffoysal",
    "userId": "57475a6ec43b8c6019752519",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-06-09T04:37:51.805Z",
  "text": "@ffoysal you'll need to use the API operation [ListObjects](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.ListObjects) to get a list of all the objects with the prefix `mykey/folder1`. Then you can use the S3 Downloader to download each file.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.ListObjects"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ",
  "id": "593a26b0f2dd2dba06831cc6",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-06-09T04:40:16.455Z",
  "text": "Thanks @jasdel ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/yash-sri",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/24521437?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/24521437?v=3&s=60",
   "displayName": "yash-sri",
   "gv": "3",
   "id": "592bd77ed73408ce4f6305c7",
   "url": "/yash-sri",
   "username": "yash-sri",
   "v": 1
  },
  "html": "how to subscribe on sqs in golang?",
  "id": "593da07f02c480e6723409d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-06-11T19:56:47.773Z",
  "text": "how to subscribe on sqs in golang?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "Hi there, struggler to Unmarshall a DynamoDB response here: <a href=\"https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer</a>",
  "id": "593e5ab9d83c50560cfd556c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-06-12T09:11:21.185Z",
  "text": "Hi there, struggler to Unmarshall a DynamoDB response here: https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span> Not sure it helps, but based on your answer, the website <a href=\"https://mholt.github.io/json-to-go/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://mholt.github.io/json-to-go/</a> tells me that the struct should be:<pre><code><span class=\"keyword\">type</span> AutoGenerated <span class=\"keyword\">struct</span> {\n    VideoLite <span class=\"keyword\">struct</span> {\n        ID <span class=\"typename\">int</span> <span class=\"string\">`json:\"id\"`</span>\n        Name <span class=\"typename\">string</span> <span class=\"string\">`json:\"name\"`</span>\n    } <span class=\"string\">`json:\"video_lite\"`</span>\n}</code></pre>",
  "id": "593e5c26ca6d4ae80c05e217",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-06-12T09:17:26.113Z",
  "text": "@kaihendry Not sure it helps, but based on your answer, the website https://mholt.github.io/json-to-go/ tells me that the struct should be:\n```\ntype AutoGenerated struct {\n\tVideoLite struct {\n\t\tID int `json:\"id\"`\n\t\tName string `json:\"name\"`\n\t} `json:\"video_lite\"`\n}\n```",
  "unread": false,
  "urls": [
   {
    "url": "https://mholt.github.io/json-to-go/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/yash-sri",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/24521437?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/24521437?v=3&s=60",
   "displayName": "yash-sri",
   "gv": "3",
   "id": "592bd77ed73408ce4f6305c7",
   "url": "/yash-sri",
   "username": "yash-sri",
   "v": 1
  },
  "html": "<a href=\"https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer/44497984#44497984\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer/44497984#44497984</a>",
  "id": "593e76ca31f589c64f9bb751",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-06-12T11:11:06.789Z",
  "text": "https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer/44497984#44497984",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer/44497984#44497984"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/yash-sri",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/24521437?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/24521437?v=3&s=60",
   "displayName": "yash-sri",
   "gv": "3",
   "id": "592bd77ed73408ce4f6305c7",
   "url": "/yash-sri",
   "username": "yash-sri",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span> you can give it a try <a href=\"https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer/44497984#44497984\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer/44497984#44497984</a>",
  "id": "593e771f142826e972a8c77b",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-06-12T11:12:31.045Z",
  "text": "@kaihendry you can give it a try https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer/44497984#44497984",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer/44497984#44497984"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "When using <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/#Credentials\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/#Credentials</a> is it our duty as SDK user to ensure the credentials aren&#39;t expired and refresh them if need be? Or does the SDK handle that for us?",
  "id": "593e8e09142826e972a9361c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-06-12T12:50:17.530Z",
  "text": "When using https://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/#Credentials is it our duty as SDK user to ensure the credentials aren't expired and refresh them if need be? Or does the SDK handle that for us?",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/aws/credentials/#Credentials"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xlr-8\" class=\"mention\">@xlr-8</span> By default the Credentials.Get() will cache the successful result of a Provider&#39;s Retrieve() until Provider.IsExpired() returns true. At which point Credentials will call Provider&#39;s Retrieve() to get new credential Value.",
  "id": "593f288f6462d8493c0788ec",
  "issues": [],
  "mentions": [
   {
    "screenName": "xlr-8",
    "userId": "57592a76c2f0db084a1cf428",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-06-12T23:49:35.631Z",
  "text": "@xlr-8 By default the Credentials.Get() will cache the successful result of a Provider's Retrieve() until Provider.IsExpired() returns true. At which point Credentials will call Provider's Retrieve() to get new credential Value.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"yash-sri\" class=\"mention\">@yash-sri</span> id is an integer btw",
  "id": "593f2c9d31f589c64f9efbf6",
  "issues": [],
  "mentions": [
   {
    "screenName": "yash-sri",
    "userId": "592bd77ed73408ce4f6305c7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-06-13T00:06:53.132Z",
  "text": "@yash-sri id is an integer btw",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "damn, didn&#39;t work <a href=\"https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer/44497984#comment76015364_44497984\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer/44497984#comment76015364_44497984</a>",
  "id": "593f4a3a142826e972ac7d37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-06-13T02:13:14.388Z",
  "text": "damn, didn't work https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer/44497984#comment76015364_44497984",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/questions/44495572/how-to-parse-dynamodb-result-to-an-integer/44497984#comment76015364_44497984"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "struggling with &quot;dynamodbattribute.UnmarshalMap&quot;",
  "id": "593f4a446549436c7d40ad0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-06-13T02:13:24.481Z",
  "text": "struggling with \"dynamodbattribute.UnmarshalMap\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "Figured it out I think <a href=\"https://stackoverflow.com/a/44511895/4534\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/a/44511895/4534</a>",
  "id": "593f5d92f6a78eab484231b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-06-13T03:35:46.195Z",
  "text": "Figured it out I think https://stackoverflow.com/a/44511895/4534",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/a/44511895/4534"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/TopherGopher",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/624717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/624717?v=4&s=60",
   "displayName": "Topher Sterling",
   "gv": "4",
   "id": "561ea961d33f749381a95e43",
   "url": "/TopherGopher",
   "username": "TopherGopher",
   "v": 3
  },
  "html": "I&#39;ve got something that might be a simple fix, but I haven&#39;t been able to figure it out from the interwebs",
  "id": "5940530131f589c64fa40519",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-06-13T21:02:57.406Z",
  "text": "I've got something that might be a simple fix, but I haven't been able to figure it out from the interwebs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/TopherGopher",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/624717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/624717?v=4&s=60",
   "displayName": "Topher Sterling",
   "gv": "4",
   "id": "561ea961d33f749381a95e43",
   "url": "/TopherGopher",
   "username": "TopherGopher",
   "v": 3
  },
  "html": "I am just trying to get a list of our RDS clusters and loop through them",
  "id": "5940531e6549436c7d450028",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-06-13T21:03:26.325Z",
  "text": "I am just trying to get a list of our RDS clusters and loop through them",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/TopherGopher",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/624717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/624717?v=4&s=60",
   "displayName": "Topher Sterling",
   "gv": "4",
   "id": "561ea961d33f749381a95e43",
   "url": "/TopherGopher",
   "username": "TopherGopher",
   "v": 3
  },
  "html": "Oh - I may have just gotten it :-)",
  "id": "594053416549436c7d450075",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-13T21:04:01.284Z",
  "text": "Oh - I may have just gotten it :-)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/TopherGopher",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/624717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/624717?v=4&s=60",
   "displayName": "Topher Sterling",
   "gv": "4",
   "id": "561ea961d33f749381a95e43",
   "url": "/TopherGopher",
   "username": "TopherGopher",
   "v": 3
  },
  "html": "Yup",
  "id": "594053edf6a78eab48467a2e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2017-06-13T21:06:53.913Z",
  "text": "Yup",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/simon-s9",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14272055?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14272055?v=3&s=60",
   "displayName": "Simon",
   "gv": "3",
   "id": "58987dd7d73408ce4f486d3d",
   "url": "/simon-s9",
   "username": "simon-s9",
   "v": 1
  },
  "html": "hi! a short question. trying to list bucket objects, so I&#39;m fetching the list of buckets, get a name and then trying to list the objects and getting this error: &quot;BucketRegionError: incorrect region, the bucket is not in &#39;us-west-2&#39; region\\n\\tstatus code: 301, request id: , host id:&quot;, but there is no bucket region in the response. And I thought that s3 is region-free.",
  "id": "59411d22f31c8ced0c34fa3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-06-14T11:25:22.246Z",
  "text": "hi! a short question. trying to list bucket objects, so I'm fetching the list of buckets, get a name and then trying to list the objects and getting this error: \"BucketRegionError: incorrect region, the bucket is not in 'us-west-2' region\\n\\tstatus code: 301, request id: , host id:\", but there is no bucket region in the response. And I thought that s3 is region-free.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"simon-s9\" class=\"mention\">@simon-s9</span> no, you need to set the region",
  "id": "5941ed16cf9c13503c88c014",
  "issues": [],
  "mentions": [
   {
    "screenName": "simon-s9",
    "userId": "58987dd7d73408ce4f486d3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-06-15T02:12:38.893Z",
  "text": "@simon-s9 no, you need to set the region",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"simon-s9\" class=\"mention\">@simon-s9</span> maybe you&#39;re thinking of cloudfront, but normally you need to choose a region in any case, for example us-east-1 to use ACM sanely",
  "id": "5941ed346549436c7d4b6f8c",
  "issues": [],
  "mentions": [
   {
    "screenName": "simon-s9",
    "userId": "58987dd7d73408ce4f486d3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-06-15T02:13:08.257Z",
  "text": "@simon-s9 maybe you're thinking of cloudfront, but normally you need to choose a region in any case, for example us-east-1 to use ACM sanely",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<a href=\"https://twitter.com/kaihendry/status/875167314739691520\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://twitter.com/kaihendry/status/875167314739691520</a>",
  "id": "5941ed78f31c8ced0c38a075",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-06-15T02:14:16.422Z",
  "text": "https://twitter.com/kaihendry/status/875167314739691520",
  "unread": false,
  "urls": [
   {
    "url": "https://twitter.com/kaihendry/status/875167314739691520"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-06-19T18:51:15.009Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/andrewarrow_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/636349147306561536/PP-oOTOJ.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/636349147306561536/PP-oOTOJ_bigger.jpg",
   "displayName": "Andrew Arrow",
   "id": "57223885659847a7aff4fe38",
   "url": "/andrewarrow_twitter",
   "username": "andrewarrow_twitter"
  },
  "html": "hello Jason Del Ponte (jasdel) recommend this gitter channel to me. My question is... with s3manager, can rename a file on s3? That is, do a copy and then delete since s3 has no rename. And then the catch is, if the file is 4MB that i need to rename or 4GB will it handle both cases?",
  "id": "59481ced142826e972cf91d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-06-19T18:50:21.970Z",
  "text": "hello Jason Del Ponte (jasdel) recommend this gitter channel to me. My question is... with s3manager, can rename a file on s3? That is, do a copy and then delete since s3 has no rename. And then the catch is, if the file is 4MB that i need to rename or 4GB will it handle both cases?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2017-06-19T18:52:13.834Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/andrewarrow_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/636349147306561536/PP-oOTOJ.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/636349147306561536/PP-oOTOJ_bigger.jpg",
   "displayName": "Andrew Arrow",
   "id": "57223885659847a7aff4fe38",
   "url": "/andrewarrow_twitter",
   "username": "andrewarrow_twitter"
  },
  "html": "<pre><code><span class=\"tag\">s3manager</span><span class=\"class\">.UploadInput</span>{\n    <span class=\"attribute\">Bucket</span>: aws.<span class=\"function\">String</span>(self.Settings.ManifestBucket),\n    <span class=\"attribute\">Key</span>:    aws.<span class=\"function\">String</span>(keyname),\n    <span class=\"attribute\">Body</span>:   data,\n  }</code></pre>",
  "id": "59481d48bf1bfe6770ca24ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-06-19T18:51:52.671Z",
  "text": "```\ns3manager.UploadInput{\n    Bucket: aws.String(self.Settings.ManifestBucket),\n    Key:    aws.String(keyname),\n    Body:   data,\n  }```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/andrewarrow_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/636349147306561536/PP-oOTOJ.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/636349147306561536/PP-oOTOJ_bigger.jpg",
   "displayName": "Andrew Arrow",
   "id": "57223885659847a7aff4fe38",
   "url": "/andrewarrow_twitter",
   "username": "andrewarrow_twitter"
  },
  "html": "those s3manager.UploadInput parts with <code>data io.Reader</code> work great for uploading any size file from remote to s3",
  "id": "59481d71746f1fd6631c4a40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-06-19T18:52:33.296Z",
  "text": "those s3manager.UploadInput parts with `data io.Reader` work great for uploading any size file from remote to s3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/andrewarrow_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/636349147306561536/PP-oOTOJ.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/636349147306561536/PP-oOTOJ_bigger.jpg",
   "displayName": "Andrew Arrow",
   "id": "57223885659847a7aff4fe38",
   "url": "/andrewarrow_twitter",
   "username": "andrewarrow_twitter"
  },
  "html": "but how do I setup the params to &quot;rename&quot; an s3 file of any size",
  "id": "59481d87746f1fd6631c4ab1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-06-19T18:52:55.113Z",
  "text": "but how do I setup the params to \"rename\" an s3 file of any size",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "hey <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>  is there an api to get s3 object metadata ?",
  "id": "594aaa0017a30666708b96f1",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-06-21T17:16:48.635Z",
  "text": "hey @jasdel  is there an api to get s3 object metadata ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"abhay8nitt_twitter\" class=\"mention\">@abhay8nitt_twitter</span> you can do <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.HeadObject\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><code>HeadObject</code></a>  API operation that will return the metadata on an object without gettings its content",
  "id": "594aabb89714d1da61662bf0",
  "issues": [],
  "mentions": [
   {
    "screenName": "abhay8nitt_twitter",
    "userId": "58dfa339d73408ce4f555b60",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-06-21T17:24:08.232Z",
  "text": "@abhay8nitt_twitter you can do [`HeadObject`](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.HeadObject)  API operation that will return the metadata on an object without gettings its content",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.HeadObject"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/abhay8nitt_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/510294182544408576/Nf1CAg4h_bigger.jpeg",
   "displayName": "Abhay Mishra",
   "id": "58dfa339d73408ce4f555b60",
   "url": "/abhay8nitt_twitter",
   "username": "abhay8nitt_twitter"
  },
  "html": "ok sure thanks",
  "id": "594aac3a6462d8493c378d5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-06-21T17:26:18.456Z",
  "text": "ok sure thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/mikkeloscar",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/128566?v=3&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/128566?v=3&s=60",
   "displayName": "Mikkel Oscar Lyderik Larsen",
   "gv": "3",
   "id": "56a81cbde610378809be5f43",
   "url": "/mikkeloscar",
   "username": "mikkeloscar",
   "v": 7
  },
  "html": "Hello, is there any API I can use to get information about current account? Assuming I only have a .aws/credentials file I would like to know the name of the account which I have credentials for.",
  "id": "594c175caf2cb44427a0ae1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-06-22T19:15:40.921Z",
  "text": "Hello, is there any API I can use to get information about current account? Assuming I only have a .aws/credentials file I would like to know the name of the account which I have credentials for.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/AgathoklisPurple",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/29703824?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/29703824?v=3&s=60",
   "displayName": "AgathoklisPurple",
   "gv": "3",
   "id": "5950d153d73408ce4f6a2101",
   "url": "/AgathoklisPurple",
   "username": "AgathoklisPurple"
  },
  "html": "Hello, im trying to read from S3 using go (with the aws sdk) . Im reading approximately 250 files concurrently , and trying to append their contents to single file in my local system.The problem is when this process is sequential everything works as expected ,but is rather slow(15s aprox) , but concurrently many times im losing data . Any ideas on what path i should follow?",
  "id": "5950d26b3230e14f3af68706",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-06-26T09:22:51.362Z",
  "text": "Hello, im trying to read from S3 using go (with the aws sdk) . Im reading approximately 250 files concurrently , and trying to append their contents to single file in my local system.The problem is when this process is sequential everything works as expected ,but is rather slow(15s aprox) , but concurrently many times im losing data . Any ideas on what path i should follow?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mikkeloscar\" class=\"mention\">@mikkeloscar</span> I don&#39;t know off hand I know you can use IAM&#39;s GetAccountAliases API to list aliases for an account.  You could try asking in Stackoverflow for #aws tag might help to get a broader audience.",
  "id": "595135d68dae425031572b2c",
  "issues": [],
  "mentions": [
   {
    "screenName": "mikkeloscar",
    "userId": "56a81cbde610378809be5f43",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-06-26T16:27:02.745Z",
  "text": "@mikkeloscar I don't know off hand I know you can use IAM's GetAccountAliases API to list aliases for an account.  You could try asking in Stackoverflow for #aws tag might help to get a broader audience.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AgathoklisPurple\" class=\"mention\">@AgathoklisPurple</span> If you could link an example of what you&#39;re looking to do we might be able to help. This is also a great case where asking on StackOverflow might be able to help with this using the tag: <code>#aws-sdk-go</code>. Without seeing the code a couple suggestions I can make it to inspect how the code determines how the S3 Object content should be written to a file. If the code knows the size of each object ahead of time it can use the <code>io.WriterAt</code> interface of a `file to safely write sections to a file concurrently.",
  "id": "595145d58dae42503157775c",
  "issues": [],
  "mentions": [
   {
    "screenName": "AgathoklisPurple",
    "userId": "5950d153d73408ce4f6a2101",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-06-26T17:35:17.229Z",
  "text": "@AgathoklisPurple If you could link an example of what you're looking to do we might be able to help. This is also a great case where asking on StackOverflow might be able to help with this using the tag: `#aws-sdk-go`. Without seeing the code a couple suggestions I can make it to inspect how the code determines how the S3 Object content should be written to a file. If the code knows the size of each object ahead of time it can use the `io.WriterAt` interface of a `file to safely write sections to a file concurrently.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "the SDK&#39;s s3manager&#39;s Downloader does some similar to this with multipart download. check out the code there for some ideas how this can be accomplished with the <code>io.WriterAt</code> interface.",
  "id": "5951460d11755ab0562534b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-06-26T17:36:13.403Z",
  "text": "the SDK's s3manager's Downloader does some similar to this with multipart download. check out the code there for some ideas how this can be accomplished with the `io.WriterAt` interface.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/AgathoklisPurple",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/29703824?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/29703824?v=3&s=60",
   "displayName": "AgathoklisPurple",
   "gv": "3",
   "id": "5950d153d73408ce4f6a2101",
   "url": "/AgathoklisPurple",
   "username": "AgathoklisPurple"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Thanks for replying , i posted it on stack overflow, alongside my code snippets, here  a link : <a href=\"https://stackoverflow.com/questions/44764485/downloading-multiple-files-from-s3-concurrently-and-consolidated-them/44765128#44765128\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/questions/44764485/downloading-multiple-files-from-s3-concurrently-and-consolidated-them/44765128#44765128</a>",
  "id": "5952149411755ab056289a0c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-06-27T08:17:24.531Z",
  "text": "@jasdel Thanks for replying , i posted it on stack overflow, alongside my code snippets, here  a link : https://stackoverflow.com/questions/44764485/downloading-multiple-files-from-s3-concurrently-and-consolidated-them/44765128#44765128",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/questions/44764485/downloading-multiple-files-from-s3-concurrently-and-consolidated-them/44765128#44765128"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/britt",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1259?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1259?v=4&s=60",
   "displayName": "Britt Crawford",
   "gv": "4",
   "id": "559c1f4b15522ed4b3e395b1",
   "url": "/britt",
   "username": "britt",
   "v": 2
  },
  "html": "Has anyone run into an issue with Cloudwatch logs where it rejects all submitted events as too old?",
  "id": "59528c27bf7e6af22c7c5de3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-06-27T16:47:35.794Z",
  "text": "Has anyone run into an issue with Cloudwatch logs where it rejects all submitted events as too old?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/vvb___twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/662981428217442305/MIX7unga.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/662981428217442305/MIX7unga_bigger.jpg",
   "displayName": "Vikrant Balyan",
   "id": "5952922ad73408ce4f6a7ce2",
   "url": "/vvb___twitter",
   "username": "vvb___twitter"
  },
  "html": "Has anyone run into issues using aws-sdk-go with glide? ",
  "id": "59529272703e565c334cf04a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-06-27T17:14:26.665Z",
  "text": "Has anyone run into issues using aws-sdk-go with glide? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-27T17:14:41.108Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/vvb___twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/662981428217442305/MIX7unga.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/662981428217442305/MIX7unga_bigger.jpg",
   "displayName": "Vikrant Balyan",
   "id": "5952922ad73408ce4f6a7ce2",
   "url": "/vvb___twitter",
   "username": "vvb___twitter"
  },
  "html": "<code>[DEBUG]    Trying to open github.com/aws/aws-sdk-go/private/protocol (/opt/go/src/.glide/cache/src/https-github.com-aws-aws-sdk-go/private/protocol)\n[DEBUG]    Package github.com/aws/aws-sdk-go/private/protocol imports github.com/aws/aws-sdk-go/aws/request\n[DEBUG]    Found on GOPATH, not vendor: github.com/aws/aws-sdk-go/aws/request</code>",
  "id": "59529276ad9c781843a72991",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-06-27T17:14:30.098Z",
  "text": "```[DEBUG]\tTrying to open github.com/aws/aws-sdk-go/private/protocol (/opt/go/src/.glide/cache/src/https-github.com-aws-aws-sdk-go/private/protocol)\n[DEBUG]\tPackage github.com/aws/aws-sdk-go/private/protocol imports github.com/aws/aws-sdk-go/aws/request\n[DEBUG]\tFound on GOPATH, not vendor: github.com/aws/aws-sdk-go/aws/request\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"vvb___twitter\" class=\"mention\">@vvb___twitter</span>  I&#39;d check to make sure you don&#39;t have a local version of the SDK that might be out of date. I&#39;ve not personally seen that issue, but it looks like the something is having difficulty putting the SDK in the correct location. Does glide trim packages from a library that are not used?",
  "id": "59529428c101bc4e3a2896b7",
  "issues": [],
  "mentions": [
   {
    "screenName": "vvb___twitter",
    "userId": "5952922ad73408ce4f6a7ce2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-27T17:21:44.979Z",
  "text": "@vvb___twitter  I'd check to make sure you don't have a local version of the SDK that might be out of date. I've not personally seen that issue, but it looks like the something is having difficulty putting the SDK in the correct location. Does glide trim packages from a library that are not used?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-06-27T17:26:25.982Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/vvb___twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/662981428217442305/MIX7unga.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/662981428217442305/MIX7unga_bigger.jpg",
   "displayName": "Vikrant Balyan",
   "id": "5952922ad73408ce4f6a7ce2",
   "url": "/vvb___twitter",
   "username": "vvb___twitter"
  },
  "html": "I tried the above with a fresh GOPATH and see the same. I guess, that reduces the possibility of an out of date SDK version.",
  "id": "5952953a6ae41d5d338ea062",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-27T17:26:18.263Z",
  "text": "I tried the above with a fresh GOPATH and see the same. I guess, that reduces the possibility of an out of date SDK version.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "Is anyone aware of how to tag instances automatically from a spot-request? I can tag the spot request, but I&#39;m uncertain that there is a way to tag the instance itself automatically, without having to check for this instance ID, and tag it.",
  "id": "595352016ae41d5d3391bc63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-06-28T06:51:45.462Z",
  "text": "Is anyone aware of how to tag instances automatically from a spot-request? I can tag the spot request, but I'm uncertain that there is a way to tag the instance itself automatically, without having to check for this instance ID, and tag it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xlr-8\" class=\"mention\">@xlr-8</span> I don&#39;t think it is possible yet, the current behavior is documented as such here: <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#concepts-spot-instances-request-tags\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#concepts-spot-instances-request-tags</a>",
  "id": "595422da4bcd78af5656e92f",
  "issues": [],
  "mentions": [
   {
    "screenName": "xlr-8",
    "userId": "57592a76c2f0db084a1cf428",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-06-28T21:42:50.623Z",
  "text": "@xlr-8 I don't think it is possible yet, the current behavior is documented as such here: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#concepts-spot-instances-request-tags",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#concepts-spot-instances-request-tags"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/3/enochtsang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9893396?v=3&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9893396?v=3&s=60",
   "displayName": "Enoch Tsang",
   "gv": "3",
   "id": "5954337ed73408ce4f6abc9a",
   "url": "/enochtsang",
   "username": "enochtsang"
  },
  "html": "Does anyone know how to make an S3 object public ?",
  "id": "5954338dbf7e6af22c841482",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-28T22:54:05.281Z",
  "text": "Does anyone know how to make an S3 object public ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"enochtsang\" class=\"mention\">@enochtsang</span> - Please take a look at <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.PutObjectAcl\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">PutObjectACL</a>",
  "id": "595438355a1ab55f64365e05",
  "issues": [],
  "mentions": [
   {
    "screenName": "enochtsang",
    "userId": "5954337ed73408ce4f6abc9a",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-28T23:13:57.675Z",
  "text": "@enochtsang - Please take a look at [PutObjectACL](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.PutObjectAcl)",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.PutObjectAcl"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> thx, was my guess as well.",
  "id": "5954a0dfbf7e6af22c8596b0",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-06-29T06:40:31.192Z",
  "text": "@cristim thx, was my guess as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/akshay-tetration",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=60",
   "displayName": "Akshay Srirangam",
   "gv": "4",
   "id": "5955ae5ed73408ce4f6aedb1",
   "url": "/akshay-tetration",
   "username": "akshay-tetration",
   "v": 1
  },
  "html": "Hello, I would like to know if it is possible to obtain aws ec2 Uuid through sdk/api",
  "id": "5955ae84c101bc4e3a36301d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-06-30T01:51:00.945Z",
  "text": "Hello, I would like to know if it is possible to obtain aws ec2 Uuid through sdk/api",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/akshay-tetration",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=60",
   "displayName": "Akshay Srirangam",
   "gv": "4",
   "id": "5955ae5ed73408ce4f6aedb1",
   "url": "/akshay-tetration",
   "username": "akshay-tetration",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> could you kindly comment if its possible to obtain uuid of ec2 instance through sdk.",
  "id": "5955aeeb76a757f808bde2a8",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-06-30T01:52:43.935Z",
  "text": "@jasdel could you kindly comment if its possible to obtain uuid of ec2 instance through sdk.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"akshay-tetration\" class=\"mention\">@akshay-tetration</span> It doesn&#39;t at first glance",
  "id": "5955ef20703e565c335b9dfb",
  "issues": [],
  "mentions": [
   {
    "screenName": "akshay-tetration",
    "userId": "5955ae5ed73408ce4f6aedb1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-06-30T06:26:40.542Z",
  "text": "@akshay-tetration It doesn't at first glance",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/akshay-tetration",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=60",
   "displayName": "Akshay Srirangam",
   "gv": "4",
   "id": "5955ae5ed73408ce4f6aedb1",
   "url": "/akshay-tetration",
   "username": "akshay-tetration",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xlr-8\" class=\"mention\">@xlr-8</span> is there any work-around to obtain it or any hack to get it. ",
  "id": "59566f37ad9c781843b877d1",
  "issues": [],
  "mentions": [
   {
    "screenName": "xlr-8",
    "userId": "57592a76c2f0db084a1cf428",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-06-30T15:33:11.382Z",
  "text": "@xlr-8 is there any work-around to obtain it or any hack to get it. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/akshay-tetration",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=60",
   "displayName": "Akshay Srirangam",
   "gv": "4",
   "id": "5955ae5ed73408ce4f6aedb1",
   "url": "/akshay-tetration",
   "username": "akshay-tetration",
   "v": 1
  },
  "html": "Is there any other service/store like metadata store which gives me internal data(system level..like bios UUID etc) about the instance?",
  "id": "59566f8dc101bc4e3a3984a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-06-30T15:34:37.011Z",
  "text": "Is there any other service/store like metadata store which gives me internal data(system level..like bios UUID etc) about the instance?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "I haven&#39;t seen anything refering to uuid on <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/</a> and seems to say that the data can only be accessed from the instance: <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/identify_ec2_instances.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/identify_ec2_instances.html</a><br>Maybe there is a work-around, but I&#39;m currently not aware of it - at the same time I haven&#39;t been playing with go-sdk for years, so maybe someone more qualified could help",
  "id": "59567151a42fa68a3086f9cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-06-30T15:42:09.207Z",
  "text": "I haven't seen anything refering to uuid on https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/ and seems to say that the data can only be accessed from the instance: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/identify_ec2_instances.html\nMaybe there is a work-around, but I'm currently not aware of it - at the same time I haven't been playing with go-sdk for years, so maybe someone more qualified could help",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/"
   },
   {
    "url": "http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/identify_ec2_instances.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "I&#39;m unsure on the reasons why you might want that value/element",
  "id": "5956722976a757f808c148a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-06-30T15:45:45.835Z",
  "text": "I'm unsure on the reasons why you might want that value/element",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/akshay-tetration",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=60",
   "displayName": "Akshay Srirangam",
   "gv": "4",
   "id": "5955ae5ed73408ce4f6aedb1",
   "url": "/akshay-tetration",
   "username": "akshay-tetration",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xlr-8\" class=\"mention\">@xlr-8</span> Thank you :smiley:",
  "id": "5956865f4bcd78af56612ab0",
  "issues": [],
  "mentions": [
   {
    "screenName": "xlr-8",
    "userId": "57592a76c2f0db084a1cf428",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-06-30T17:11:59.679Z",
  "text": "@xlr-8 Thank you :smiley:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/akshay-tetration",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=60",
   "displayName": "Akshay Srirangam",
   "gv": "4",
   "id": "5955ae5ed73408ce4f6aedb1",
   "url": "/akshay-tetration",
   "username": "akshay-tetration",
   "v": 1
  },
  "html": " I need that uuid for some annotation purpose. Its possible from the instance, but I want it to be extracted from api/sdk. Any experts who can help me with this. Thank You !!",
  "id": "5956868d8dae4250316eda25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-06-30T17:12:45.305Z",
  "text": " I need that uuid for some annotation purpose. Its possible from the instance, but I want it to be extracted from api/sdk. Any experts who can help me with this. Thank You !!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Why not just use the instance ID?",
  "id": "5956b417ad9c781843b9bb0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-06-30T20:27:03.615Z",
  "text": "Why not just use the instance ID?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/3/remijouannet",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5261551?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5261551?v=3&s=60",
   "displayName": "R\u00e9mi Jouannet",
   "gv": "3",
   "id": "56273f3616b6c7089cb7bca2",
   "url": "/remijouannet",
   "username": "remijouannet",
   "v": 2
  },
  "html": "Hello everyone, i have a quick question about aws-sdk-go about custom endpoints",
  "id": "5956c00a6ae41d5d33a15ac2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-06-30T21:18:02.744Z",
  "text": "Hello everyone, i have a quick question about aws-sdk-go about custom endpoints",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/alwindoss",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/899883?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/899883?v=4&s=60",
   "displayName": "Alwin Doss",
   "gv": "4",
   "id": "5588412415522ed4b3e267f2",
   "url": "/alwindoss",
   "username": "alwindoss",
   "v": 17
  },
  "html": "Need help in creating an openid using golang sdk. Is there an example on how to do it which includes srp6a usage as well. I am very new to this. The app that I am building is a cli app which would run from my laptop interacting with the services I have deployed on aws. ",
  "id": "5957b2155a1ab55f64449f6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-07-01T14:30:45.290Z",
  "text": "Need help in creating an openid using golang sdk. Is there an example on how to do it which includes srp6a usage as well. I am very new to this. The app that I am building is a cli app which would run from my laptop interacting with the services I have deployed on aws. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/the1337beauty_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/2163201626/logo-small.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/2163201626/logo-small_bigger.png",
   "displayName": "Andrea Kimberlin",
   "id": "58dbb7f4d73408ce4f549306",
   "url": "/the1337beauty_twitter",
   "username": "the1337beauty_twitter",
   "v": 1
  },
  "html": "in go-sdk, how do you format an array of strings? trying to use cognitoidentityprovider list users",
  "id": "595d079dc101bc4e3a55023d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-07-05T15:37:01.799Z",
  "text": "in go-sdk, how do you format an array of strings? trying to use cognitoidentityprovider list users",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/the1337beauty_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/2163201626/logo-small.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/2163201626/logo-small_bigger.png",
   "displayName": "Andrea Kimberlin",
   "id": "58dbb7f4d73408ce4f549306",
   "url": "/the1337beauty_twitter",
   "username": "the1337beauty_twitter",
   "v": 1
  },
  "html": "nvm",
  "id": "595d0d6f4bcd78af567c2bbb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-07-05T16:01:51.206Z",
  "text": "nvm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/the1337beauty_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/2163201626/logo-small.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/2163201626/logo-small_bigger.png",
   "displayName": "Andrea Kimberlin",
   "id": "58dbb7f4d73408ce4f549306",
   "url": "/the1337beauty_twitter",
   "username": "the1337beauty_twitter",
   "v": 1
  },
  "html": "1 - is anyone using cognito currently?<br>2 - has anyone successfully used a &quot;context&quot; function to address pagination in requests?",
  "id": "595d1419329651f46e58756b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-07-05T16:30:17.726Z",
  "text": "1 - is anyone using cognito currently?\n2 - has anyone successfully used a \"context\" function to address pagination in requests?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nagaraju02",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/27576816?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/27576816?v=4&s=60",
   "displayName": "Nagaraju Balusa",
   "gv": "4",
   "id": "58f271b4d73408ce4f58a317",
   "url": "/nagaraju02",
   "username": "nagaraju02",
   "v": 12
  },
  "html": "Does anyone help me in providing the code for how to pull an rds tag(email) and send cloudwatch email using ses in nodejs of lambda function",
  "id": "595d20edf5b3458e30177b94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-07-05T17:25:01.467Z",
  "text": "Does anyone help me in providing the code for how to pull an rds tag(email) and send cloudwatch email using ses in nodejs of lambda function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"the1337beauty_twitter\" class=\"mention\">@the1337beauty_twitter</span> I&#39;m playing around with a simple Chat app that uses Cognito to register/sign-in users. What are you trying to do? ",
  "id": "595e31bd4bcd78af568148f7",
  "issues": [],
  "mentions": [
   {
    "screenName": "the1337beauty_twitter",
    "userId": "58dbb7f4d73408ce4f549306",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-07-06T12:49:01.075Z",
  "text": "@the1337beauty_twitter I'm playing around with a simple Chat app that uses Cognito to register/sign-in users. What are you trying to do? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "<blockquote>\nHi, Does the <code>aws-sdk-go</code> support pricing API endpoint which is available as part of account/billing (<a href=\"https://aws.amazon.com/blogs/aws/new-aws-price-list-api/)?\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://aws.amazon.com/blogs/aws/new-aws-price-list-api/)?</a><br>Well there is this: <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/costandusagereportservice/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/costandusagereportservice/</a> but I&#39;m not sure how well that would suit you</blockquote>\n",
  "id": "595e590e3230e14f3a309c31",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-07-06T15:36:46.942Z",
  "text": "> Hi, Does the `aws-sdk-go` support pricing API endpoint which is available as part of account/billing (https://aws.amazon.com/blogs/aws/new-aws-price-list-api/)? \nWell there is this: http://docs.aws.amazon.com/sdk-for-go/api/service/costandusagereportservice/ but I'm not sure how well that would suit you",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/blogs/aws/new-aws-price-list-api/)?"
   },
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/costandusagereportservice/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sparkLogic\" class=\"mention\">@sparkLogic</span> If you look at the actions <a href=\"http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/operations.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/operations.html</a> then these are the actions of <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/budgets/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/budgets/</a> - hope that answer your question",
  "id": "595e88b876a757f808e3dd6a",
  "issues": [],
  "mentions": [
   {
    "screenName": "sparkLogic",
    "userId": "59237f6dd73408ce4f617ffc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-07-06T19:00:08.457Z",
  "text": "@sparkLogic If you look at the actions http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/operations.html then these are the actions of http://docs.aws.amazon.com/sdk-for-go/api/service/budgets/ - hope that answer your question",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/operations.html"
   },
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/budgets/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "Hi ",
  "id": "595fe42b4bcd78af56893aed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-07-07T19:42:35.845Z",
  "text": "Hi ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "I am doing multipart upload to S3 using golang.  I an able to upload fine...The CompleteMultipartUploadOutput returned after a multipart upload has a field called Location.",
  "id": "595fe4832723db8d5eeb0bb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-07-07T19:44:03.957Z",
  "text": "I am doing multipart upload to S3 using golang.  I an able to upload fine...The CompleteMultipartUploadOutput returned after a multipart upload has a field called Location.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "When I print it it shows &quot;%2F&quot; instead of forward slash.. Any idea why is it like this? Is there a way we can use this value to download a file from S3 in any of the API&#39;s?",
  "id": "595fe4bac101bc4e3a61ac6d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-07-07T19:44:58.438Z",
  "text": "When I print it it shows \"%2F\" instead of forward slash.. Any idea why is it like this? Is there a way we can use this value to download a file from S3 in any of the API's?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/3/pawansharma15",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/27625185?v=3&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/27625185?v=3&s=60",
   "displayName": "Pawan Sharma",
   "gv": "3",
   "id": "58fb8f16d73408ce4f5a3edf",
   "url": "/pawansharma15",
   "username": "pawansharma15",
   "v": 4
  },
  "html": "Hello All,  I have created a small app that would display AWS EC2 resources in Tree View using the Javascript SDK. The app takes any resource id ranging from elb/alb name, instance, volume, network interface and would display all the children of the top node of the given id/name. <a href=\"https://github.com/pawansharma15/cloudTreeView\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/pawansharma15/cloudTreeView</a>. Please review and suggest improvements. Thank you!",
  "id": "59650d624bcd78af569ce87f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-11T17:39:46.048Z",
  "text": "Hello All,  I have created a small app that would display AWS EC2 resources in Tree View using the Javascript SDK. The app takes any resource id ranging from elb/alb name, instance, volume, network interface and would display all the children of the top node of the given id/name. https://github.com/pawansharma15/cloudTreeView. Please review and suggest improvements. Thank you!",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/pawansharma15/cloudTreeView"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for sharing <span data-link-type=\"mention\" data-screen-name=\"pawansharma15\" class=\"mention\">@pawansharma15</span> If you haven&#39;t already done so the gophers.slack.com #aws channel. I&#39;m sure some in that channel would be interested in seeing your app as well.",
  "id": "5965283fbc46472974dcc847",
  "issues": [],
  "mentions": [
   {
    "screenName": "pawansharma15",
    "userId": "58fb8f16d73408ce4f5a3edf",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-07-11T19:34:23.805Z",
  "text": "Thanks for sharing @pawansharma15 If you haven't already done so the gophers.slack.com #aws channel. I'm sure some in that channel would be interested in seeing your app as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sfahmi123\" class=\"mention\">@sfahmi123</span> If you didn&#39;t already see it, <span data-link-type=\"issue\" data-issue=\"1385\" class=\"issue\">#1385</span> is tracking the <code>/</code> vs <code>%2F</code> issue with S3 Upload manager",
  "id": "596528810de4d2545e1957e3",
  "issues": [
   {
    "number": "1385"
   }
  ],
  "mentions": [
   {
    "screenName": "sfahmi123",
    "userId": "59037d80d73408ce4f5bb1b7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-07-11T19:35:29.378Z",
  "text": "@sfahmi123 If you didn't already see it, #1385 is tracking the `/` vs `%2F` issue with S3 Upload manager",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Hi all. I&#39;m considering creating a video course on the AWS SDK for Go. What would be a good example application to build up over a number of modules that would cover popular services like EC2, S3, DynamoDB, Lambda, Cloudwatch, etc.?",
  "id": "5968225a1c8697534a212c46",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-07-14T01:46:02.582Z",
  "text": "Hi all. I'm considering creating a video course on the AWS SDK for Go. What would be a good example application to build up over a number of modules that would cover popular services like EC2, S3, DynamoDB, Lambda, Cloudwatch, etc.?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> I think terraform may be one of the widest users of the sdk ",
  "id": "59685f0b1c8697534a21eb30",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-07-14T06:04:59.916Z",
  "text": "@mrichman I think terraform may be one of the widest users of the sdk ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "But it is a huge code base which may be a barrier of entry, so maybe you can find smaller applications each working closely with fewer services ",
  "id": "59685fd31c8697534a21ede2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-07-14T06:08:19.855Z",
  "text": "But it is a huge code base which may be a barrier of entry, so maybe you can find smaller applications each working closely with fewer services ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I am the author of such an application that uses quite a bit of the ec2 and autoscaling modules and itself is built to run as a lambda function ",
  "id": "596860a90de4d2545e2756d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-07-14T06:11:53.511Z",
  "text": "I am the author of such an application that uses quite a bit of the ec2 and autoscaling modules and itself is built to run as a lambda function ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/codingconcepts",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10614665?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10614665?v=4&s=60",
   "displayName": "Coding Concepts",
   "gv": "4",
   "id": "585a3afed73408ce4f3e7568",
   "url": "/codingconcepts",
   "username": "codingconcepts",
   "v": 4
  },
  "html": "<p>Hi all, I&#39;m calling the Go SDK&#39;s Polly  SynthesizeSpeechWithContext endpoint and adding a RIFF header to the PCM data returned (making it a playable WAV file).</p><p>In order to do this, I&#39;m having to buffer the AudioStream, into memory (to get the length for the header) which feels unnecessary given the Polly server knows the PCM data length and could return it in the response headers...  I&#39;ve added the WithGetResponseHeaders and can see there are a number of headers being returned (including Content-Type) but nothing for content length/PCM data length.</p><p>Any ideas?</p>",
  "id": "59687ceb329651f46e8740b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-07-14T08:12:27.719Z",
  "text": "Hi all, I'm calling the Go SDK's Polly  SynthesizeSpeechWithContext endpoint and adding a RIFF header to the PCM data returned (making it a playable WAV file).\n\nIn order to do this, I'm having to buffer the AudioStream, into memory (to get the length for the header) which feels unnecessary given the Polly server knows the PCM data length and could return it in the response headers...  I've added the WithGetResponseHeaders and can see there are a number of headers being returned (including Content-Type) but nothing for content length/PCM data length.\n\nAny ideas?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"magheru_san\" class=\"mention\">@magheru_san</span> thanks for the suggestion but I think that might be too ambitious an example to use as a vehicle to teach the Go SDK.",
  "id": "5968a8c93230e14f3a5a5038",
  "issues": [],
  "mentions": [
   {
    "screenName": "magheru_san",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-14T11:19:37.447Z",
  "text": "@magheru_san thanks for the suggestion but I think that might be too ambitious an example to use as a vehicle to teach the Go SDK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> which one do you mean? large tools like the Terraform or using smaller tools that touch a limited number of services?",
  "id": "5968b01ac101bc4e3a8470ad",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-14T11:50:50.605Z",
  "text": "@mrichman which one do you mean? large tools like the Terraform or using smaller tools that touch a limited number of services?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-07-14T11:56:53.467Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I think godoc is the best resource to find projects using the SDK (or any other go modules for that matter), for example this list for the ec2 service: <a href=\"https://godoc.org/github.com/aws/aws-sdk-go/service/ec2?importers\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://godoc.org/github.com/aws/aws-sdk-go/service/ec2?importers</a>",
  "id": "5968b0a31c8697534a23266a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-14T11:53:07.157Z",
  "text": "I think godoc is the best resource to find projects using the SDK (or any other go modules for that matter), for example this list for the ec2 service: https://godoc.org/github.com/aws/aws-sdk-go/service/ec2?importers",
  "unread": false,
  "urls": [
   {
    "url": "https://godoc.org/github.com/aws/aws-sdk-go/service/ec2?importers"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"magheru_san\" class=\"mention\">@magheru_san</span> my goal is to build up an application in about 2 hours that shows how to effectively use common services to solve some business problem. ",
  "id": "5968e2d989aea4761d9ae1b6",
  "issues": [],
  "mentions": [
   {
    "screenName": "magheru_san",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-07-14T15:27:21.354Z",
  "text": "@magheru_san my goal is to build up an application in about 2 hours that shows how to effectively use common services to solve some business problem. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> you want to write it from scratch and have it do useful stuff within 2hours?",
  "id": "5968e40bbc46472974ecd7a3",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-14T15:32:27.976Z",
  "text": "@mrichman you want to write it from scratch and have it do useful stuff within 2hours?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "or just walk through existing projects for some time and show how things can be done in a real world app",
  "id": "5968e42cc101bc4e3a856394",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-14T15:33:00.218Z",
  "text": "or just walk through existing projects for some time and show how things can be done in a real world app",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"magheru_san\" class=\"mention\">@magheru_san</span> well 2 hours is very limited so possibly take a basic app that isn&#39;t AWS-aware and enhance it with AWS services",
  "id": "5968e46f3230e14f3a5b7496",
  "issues": [],
  "mentions": [
   {
    "screenName": "magheru_san",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-14T15:34:07.844Z",
  "text": "@magheru_san well 2 hours is very limited so possibly take a basic app that isn't AWS-aware and enhance it with AWS services",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I see, do you have anything in mind?",
  "id": "5968e6e3bc46472974ece61d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-14T15:44:35.649Z",
  "text": "I see, do you have anything in mind?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"magheru_san\" class=\"mention\">@magheru_san</span> possibly a simple e-commerce site. I could touch S3, DynamoDB, Cloudwatch, etc. whatever would be interesting to a Go developer new to AWS.",
  "id": "5968eccc3230e14f3a5b9e74",
  "issues": [],
  "mentions": [
   {
    "screenName": "magheru_san",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-14T16:09:48.335Z",
  "text": "@magheru_san possibly a simple e-commerce site. I could touch S3, DynamoDB, Cloudwatch, etc. whatever would be interesting to a Go developer new to AWS.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "does anyone know how to calculate the billing per month via go?<br>The billing report is enabled, but I&#39;m not sure which file / which math I&#39;m supposed to do in order to calculate that",
  "id": "596e0e03c101bc4e3a982bb5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-07-18T13:32:51.739Z",
  "text": "does anyone know how to calculate the billing per month via go?\nThe billing report is enabled, but I'm not sure which file / which math I'm supposed to do in order to calculate that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xlr-8\" class=\"mention\">@xlr-8</span> Read this: <a href=\"https://aws.amazon.com/blogs/aws/new-programmatic-access-to-aws-billing-data/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://aws.amazon.com/blogs/aws/new-programmatic-access-to-aws-billing-data/</a>  and you can use S3 API to get the files",
  "id": "596e198ebc46472974fffe3e",
  "issues": [],
  "mentions": [
   {
    "screenName": "xlr-8",
    "userId": "57592a76c2f0db084a1cf428",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T14:22:06.727Z",
  "text": "@xlr-8 Read this: https://aws.amazon.com/blogs/aws/new-programmatic-access-to-aws-billing-data/  and you can use S3 API to get the files",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/blogs/aws/new-programmatic-access-to-aws-billing-data/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xlr-8\" class=\"mention\">@xlr-8</span> I&#39;m assuming you would use <a href=\"https://golang.org/pkg/encoding/csv/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://golang.org/pkg/encoding/csv/</a> to parse the files",
  "id": "596e19c23230e14f3a6e9bda",
  "issues": [],
  "mentions": [
   {
    "screenName": "xlr-8",
    "userId": "57592a76c2f0db084a1cf428",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T14:22:58.055Z",
  "text": "@xlr-8 I'm assuming you would use https://golang.org/pkg/encoding/csv/ to parse the files",
  "unread": false,
  "urls": [
   {
    "url": "https://golang.org/pkg/encoding/csv/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "Thx <span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> but I&#39;m not sure to understand what you mean. Currently I don&#39;t have much problem with accessing files, or thinking about which lib I&#39;m gonna use. My problem is: how do I manage to extract from the file data, so that I endup with the same result as in my billing management?",
  "id": "596e20f889aea4761dae4a28",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-07-18T14:53:44.615Z",
  "text": "Thx @mrichman but I'm not sure to understand what you mean. Currently I don't have much problem with accessing files, or thinking about which lib I'm gonna use. My problem is: how do I manage to extract from the file data, so that I endup with the same result as in my billing management?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "ex: shall I just sum the value of a certain column? Shall I make some sum and multiplications, etc",
  "id": "596e21fd1c8697534a378f89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-07-18T14:58:05.581Z",
  "text": "ex: shall I just sum the value of a certain column? Shall I make some sum and multiplications, etc",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xlr-8\" class=\"mention\">@xlr-8</span> That&#39;s not really an SDK question. You might want to ask on the AWS forums <a href=\"https://forums.aws.amazon.com/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://forums.aws.amazon.com/</a>",
  "id": "596e23233230e14f3a6ecbe7",
  "issues": [],
  "mentions": [
   {
    "screenName": "xlr-8",
    "userId": "57592a76c2f0db084a1cf428",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-07-18T15:02:59.194Z",
  "text": "@xlr-8 That's not really an SDK question. You might want to ask on the AWS forums https://forums.aws.amazon.com/",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "yes, you are right",
  "id": "596e254b1c8697534a379f83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T15:12:11.043Z",
  "text": "yes, you are right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "Hey All, I was trying to delete the message we received in the sqs queue using go lang. I was able to get the message but unable to delete the message. I&#39;m new to programming. Can any one help me with thoughts.",
  "id": "596e304df5b3458e305bc6c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-07-18T15:59:09.647Z",
  "text": "Hey All, I was trying to delete the message we received in the sqs queue using go lang. I was able to get the message but unable to delete the message. I'm new to programming. Can any one help me with thoughts.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "<p>func (s *sqs_internal) DeleteMessage(ReceiptHandle string) (bool, error) {<br>    resultDelete, err := s.svc.DeleteMessage(&amp;sqs.DeleteMessageInput{<br>        QueueUrl:      aws.String(QueueURL),<br>        ReceiptHandle: &amp;ReceiptHandle,<br>    })</p><pre><code><span class=\"keyword\">if</span> err != nil {\n    fmt.<span class=\"keyword\">Println</span>(<span class=\"string\">\"Delete Error\"</span>, err)\n    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>, err\n}\n\nfmt.<span class=\"keyword\">Println</span>(<span class=\"string\">\"Message Deleted\"</span>, resultDelete)\n<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>, err</code></pre><p>}</p>",
  "id": "596e30884bcd78af56c133d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-07-18T16:00:08.859Z",
  "text": "func (s *sqs_internal) DeleteMessage(ReceiptHandle string) (bool, error) {\n\tresultDelete, err := s.svc.DeleteMessage(&sqs.DeleteMessageInput{\n\t\tQueueUrl:      aws.String(QueueURL),\n\t\tReceiptHandle: &ReceiptHandle,\n\t})\n\n\tif err != nil {\n\t\tfmt.Println(\"Delete Error\", err)\n\t\treturn false, err\n\t}\n\n\tfmt.Println(\"Message Deleted\", resultDelete)\n\treturn true, err\n}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "This is the code written so far",
  "id": "596e309d0de4d2545e3d3b69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-07-18T16:00:29.295Z",
  "text": "This is the code written so far",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "I&#39;mc alling this function as follows from main.go",
  "id": "596e30c276a757f80821e5aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-07-18T16:01:06.267Z",
  "text": "I'mc alling this function as follows from main.go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "sqs.DeleteMessage(*message.ReceiptHandle)",
  "id": "596e30c3bc46472974007874",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-07-18T16:01:07.193Z",
  "text": "sqs.DeleteMessage(*message.ReceiptHandle)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "Please share your thoughts and suggestions",
  "id": "596e30da3230e14f3a6f1458",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-07-18T16:01:30.486Z",
  "text": "Please share your thoughts and suggestions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Any error message?",
  "id": "596e3494f5b3458e305bdff7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T16:17:24.880Z",
  "text": "Any error message?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "Nope",
  "id": "596e36000de4d2545e3d5632",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T16:23:28.148Z",
  "text": "Nope",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "I am able to get message from get message function",
  "id": "596e360d3230e14f3a6f2ffa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T16:23:41.250Z",
  "text": "I am able to get message from get message function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "but unable to delete the same message after retrieving it.",
  "id": "596e3626c101bc4e3a9900f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T16:24:06.241Z",
  "text": "but unable to delete the same message after retrieving it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Do you have a value for <code>resultDelete</code>?",
  "id": "596e362bbc46472974009442",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T16:24:11.227Z",
  "text": "Do you have a value for `resultDelete`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "oh - well, it&#39;s a queue. Once you retrieve it, it should be gone.",
  "id": "596e363fbc4647297400946a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T16:24:31.721Z",
  "text": "oh - well, it's a queue. Once you retrieve it, it should be gone.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "I got it.. so once I read the message I&#39;m locking its visibility for 30 seconds so that no one can process the same message again.",
  "id": "596e36762723db8d5e22ab17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T16:25:26.154Z",
  "text": "I got it.. so once I read the message I'm locking its visibility for 30 seconds so that no one can process the same message again.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "after 30 seconds I&#39;m releasing it back so it would be available back in the queue",
  "id": "596e368e2723db8d5e22ab53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T16:25:50.000Z",
  "text": "after 30 seconds I'm releasing it back so it would be available back in the queue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "So my need is to delete the message from the queue",
  "id": "596e36a1329651f46e9cb962",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T16:26:09.888Z",
  "text": "So my need is to delete the message from the queue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "value for resultdelete is as follows in the function",
  "id": "596e371c2723db8d5e22ae01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T16:28:12.517Z",
  "text": "value for resultdelete is as follows in the function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "resultDelete, err := s.svc.DeleteMessage(&amp;sqs.DeleteMessageInput{<br>QueueUrl: aws.String(QueueURL),<br>ReceiptHandle: &amp;ReceiptHandle,<br>})",
  "id": "596e371e4bcd78af56c156bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T16:28:14.005Z",
  "text": "resultDelete, err := s.svc.DeleteMessage(&sqs.DeleteMessageInput{\nQueueUrl: aws.String(QueueURL),\nReceiptHandle: &ReceiptHandle,\n})",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "aha.. we are coding in such a way that once we are reading the messages from the queue, we are going to delete the message from the queue which is read",
  "id": "596e395b1c8697534a380755",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T16:37:47.415Z",
  "text": "aha.. we are coding in such a way that once we are reading the messages from the queue, we are going to delete the message from the queue which is read",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "so what is the value of <code>resultDelete</code> and <code>err</code>",
  "id": "596e39852723db8d5e22b9a7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-07-18T16:38:29.071Z",
  "text": "so what is the value of `resultDelete` and `err`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "so how can I go ahead with this, like if we leave about getting message from queue, how can is olve the problem of deleting the message from the queue? Please advice",
  "id": "596e398ec101bc4e3a991434",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-07-18T16:38:38.917Z",
  "text": "so how can I go ahead with this, like if we leave about getting message from queue, how can is olve the problem of deleting the message from the queue? Please advice",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/akshay-tetration",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=60",
   "displayName": "Akshay Srirangam",
   "gv": "4",
   "id": "5955ae5ed73408ce4f6aedb1",
   "url": "/akshay-tetration",
   "username": "akshay-tetration",
   "v": 1
  },
  "html": "Hey all, Can anyone guide me on using certificate based authentication while using AWS SDK for EC2. Currently I am using the access key and secret key pair to authenticate throu sdk. Any method of authentication which uses client/server side certificates to authenticate ?",
  "id": "596e3a23c101bc4e3a991b2a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-07-18T16:41:07.013Z",
  "text": "Hey all, Can anyone guide me on using certificate based authentication while using AWS SDK for EC2. Currently I am using the access key and secret key pair to authenticate throu sdk. Any method of authentication which uses client/server side certificates to authenticate ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "the message to be deleted",
  "id": "596e3a482723db8d5e22bca1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-07-18T16:41:44.919Z",
  "text": "the message to be deleted",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> ",
  "id": "596e3a5176a757f808221714",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-07-18T16:41:53.833Z",
  "text": "@mrichman ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"duginivijay\" class=\"mention\">@duginivijay</span> and <code>err</code> is nil?",
  "id": "596e3a62bf7e6af22cee5ecc",
  "issues": [],
  "mentions": [
   {
    "screenName": "duginivijay",
    "userId": "56f1be5885d51f252aba3fd1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-07-18T16:42:10.269Z",
  "text": "@duginivijay and `err` is nil?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "yep",
  "id": "596e3a880de4d2545e3d6d55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-07-18T16:42:48.876Z",
  "text": "yep",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"duginivijay\" class=\"mention\">@duginivijay</span> then i&#39;d assume the delete worked",
  "id": "596e3abd89aea4761daed00f",
  "issues": [],
  "mentions": [
   {
    "screenName": "duginivijay",
    "userId": "56f1be5885d51f252aba3fd1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-07-18T16:43:41.754Z",
  "text": "@duginivijay then i'd assume the delete worked",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "From the docs: &quot;If you don&#39;t provide the most recently received receipt handle for the message when you use the DeleteMessage action, the request succeeds, but the message might not be deleted.&quot;",
  "id": "596e3ae976a757f8082219bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-07-18T16:44:25.947Z",
  "text": "From the docs: \"If you don't provide the most recently received receipt handle for the message when you use the DeleteMessage action, the request succeeds, but the message might not be deleted.\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Make sure you don&#39;t have another process reading on the same queue",
  "id": "596e3b14bc4647297400aefe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-07-18T16:45:08.605Z",
  "text": "Make sure you don't have another process reading on the same queue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "there is only one message sitting in the queue <span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> and I&#39;m only the one using that queue. I created one message to delete it using the code",
  "id": "596e3c59bc4647297400b833",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-07-18T16:50:33.854Z",
  "text": "there is only one message sitting in the queue @mrichman and I'm only the one using that queue. I created one message to delete it using the code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "I&#39;m little confused with the receipt which I&#39;m passing. I&#39;m not getting any idea like where it is pulling out from. I tried of putting couple of print statements to make sure we entered the delete function but none of them printing out on the console.",
  "id": "596e3cc83230e14f3a6f5187",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-07-18T16:52:24.582Z",
  "text": "I'm little confused with the receipt which I'm passing. I'm not getting any idea like where it is pulling out from. I tried of putting couple of print statements to make sure we entered the delete function but none of them printing out on the console.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Can you post a complete working example somewhere?",
  "id": "596e3cf50de4d2545e3d7c92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-07-18T16:53:09.385Z",
  "text": "Can you post a complete working example somewhere?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "sorry I didn&#39;t get you.. you mean getting the message and deleteing the message code? or what I;&#39;m trying to do in form of words?",
  "id": "596e3d7d76a757f808222887",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-18T16:55:25.825Z",
  "text": "sorry I didn't get you.. you mean getting the message and deleteing the message code? or what I;'m trying to do in form of words?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "<p>Queue : A<br>Message &quot;hello&quot; is sent to Queue A.<br>When I run my get message code it pulls the message &quot;hello&quot; from Queue A and puts the visibility off for 30 seconds.<br>so when I try to hit it again it says no message received.<br>After 30 seconds if I hit again then the message &quot;hello&quot; is shown.</p><p>Now I&#39;m trying to delete the message &quot;hello&quot; from queue A</p>",
  "id": "596e3df8c101bc4e3a993032",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-18T16:57:28.146Z",
  "text": "Queue : A\nMessage \"hello\" is sent to Queue A.\nWhen I run my get message code it pulls the message \"hello\" from Queue A and puts the visibility off for 30 seconds.\nso when I try to hit it again it says no message received.\nAfter 30 seconds if I hit again then the message \"hello\" is shown.\n\nNow I'm trying to delete the message \"hello\" from queue A",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Yes, words in the form of a .go file that you can compile and execute ;)",
  "id": "596e3e2576a757f808222d05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-18T16:58:13.391Z",
  "text": "Yes, words in the form of a .go file that you can compile and execute ;)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "haha",
  "id": "596e3e344bcd78af56c17c25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-18T16:58:28.792Z",
  "text": "haha",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "gotcha",
  "id": "596e3e362723db8d5e22d64e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-18T16:58:30.996Z",
  "text": "gotcha",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "And try eliminating the visibility function to make sure you can actually get a delete working first.",
  "id": "596e3e5cbf7e6af22cee7341",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-18T16:59:08.114Z",
  "text": "And try eliminating the visibility function to make sure you can actually get a delete working first.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "<a href=\"https://pastebin.com/JvHnNNDy\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://pastebin.com/JvHnNNDy</a>",
  "id": "596e3f4dbf7e6af22cee782c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-07-18T17:03:09.788Z",
  "text": "https://pastebin.com/JvHnNNDy",
  "unread": false,
  "urls": [
   {
    "url": "https://pastebin.com/JvHnNNDy"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "<a href=\"https://pastebin.com/s3YXf4Q4\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://pastebin.com/s3YXf4Q4</a>",
  "id": "596e3f902723db8d5e22de18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-18T17:04:16.083Z",
  "text": "https://pastebin.com/s3YXf4Q4",
  "unread": false,
  "urls": [
   {
    "url": "https://pastebin.com/s3YXf4Q4"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "sure so will remove getmessage function and will try to work on deletemessage intially.",
  "id": "596e3fbef5b3458e305c15d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-18T17:05:02.770Z",
  "text": "sure so will remove getmessage function and will try to work on deletemessage intially.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "please find the files attached in it.",
  "id": "596e3fd24bcd78af56c185d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-18T17:05:22.507Z",
  "text": "please find the files attached in it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "That code looks like it should work",
  "id": "596e3ff4f5b3458e305c176d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-07-18T17:05:56.032Z",
  "text": "That code looks like it should work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "did it work for you ? to delete the message ?",
  "id": "596e4031c101bc4e3a993a77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-07-18T17:06:57.898Z",
  "text": "did it work for you ? to delete the message ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "I didn&#39;t run it",
  "id": "596e4069329651f46e9cf60e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-07-18T17:07:53.316Z",
  "text": "I didn't run it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "Okay",
  "id": "596e40ed0de4d2545e3d91ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-07-18T17:10:05.158Z",
  "text": "Okay",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "you dont find any discrepancies in code blocking it not to do the function as expected ?",
  "id": "596e4101c101bc4e3a993f76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-07-18T17:10:25.780Z",
  "text": "you dont find any discrepancies in code blocking it not to do the function as expected ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Worked for me: <a href=\"https://pastebin.com/0i8jcKpt\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://pastebin.com/0i8jcKpt</a>",
  "id": "596e42732723db8d5e22eb7b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-07-18T17:16:35.222Z",
  "text": "Worked for me: https://pastebin.com/0i8jcKpt",
  "unread": false,
  "urls": [
   {
    "url": "https://pastebin.com/0i8jcKpt"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "I created a new standard queue (not FIFO) called &quot;TestQueue&quot; (<a href=\"https://sqs.us-east-1.amazonaws.com/746425690931/TestQueue\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://sqs.us-east-1.amazonaws.com/746425690931/TestQueue</a>) and sent a single message &quot;This is a test&quot;",
  "id": "596e4297bc4647297400d876",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-07-18T17:17:11.865Z",
  "text": "I created a new standard queue (not FIFO) called \"TestQueue\" (https://sqs.us-east-1.amazonaws.com/746425690931/TestQueue) and sent a single message \"This is a test\"",
  "unread": false,
  "urls": [
   {
    "url": "https://sqs.us-east-1.amazonaws.com/746425690931/TestQueue"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "If I go to &quot;View/Delete Messages&quot; I don&#39;t see any",
  "id": "596e4315f5b3458e305c2c2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-07-18T17:19:17.276Z",
  "text": "If I go to \"View/Delete Messages\" I don't see any",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "No messages recieved<br>panic: runtime error: invalid memory address or nil pointer dereference<br>[signal 0xc0000005 code=0x0 addr=0x8 pc=0x6b395b]",
  "id": "596e432f329651f46e9d07b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-07-18T17:19:43.441Z",
  "text": "No messages recieved\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xc0000005 code=0x0 addr=0x8 pc=0x6b395b]",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> Hey mate I just came out for lunch.. once I&#39;ll get back to my desk and will try it again.. #regarding the panic I worry it shouldn&#39;t be because of the visibility logic..<br><span data-link-type=\"mention\" data-screen-name=\"thank\" class=\"mention\">@thank</span> you so much for taking out time and for looking into it",
  "id": "596e446e89aea4761daf0652",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   },
   {
    "screenName": "thank",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-07-18T17:25:02.005Z",
  "text": "@mrichman Hey mate I just came out for lunch.. once I'll get back to my desk and will try it again.. #regarding the panic I worry it shouldn't be because of the visibility logic..\n@thank you so much for taking out time and for looking into it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Sure. You can always grant me IAM access to your queue if you want some more help",
  "id": "596e44994bcd78af56c19da7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-07-18T17:25:45.274Z",
  "text": "Sure. You can always grant me IAM access to your queue if you want some more help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/akshay-tetration",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22162023?v=4&s=60",
   "displayName": "Akshay Srirangam",
   "gv": "4",
   "id": "5955ae5ed73408ce4f6aedb1",
   "url": "/akshay-tetration",
   "username": "akshay-tetration",
   "v": 1
  },
  "html": "Hey all, Can anyone guide me on using certificate based authentication while using AWS SDK for EC2. Any method of authentication which uses client/server side certificates to authenticate ?",
  "id": "596e4cacbc46472974010e39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-07-18T18:00:12.741Z",
  "text": "Hey all, Can anyone guide me on using certificate based authentication while using AWS SDK for EC2. Any method of authentication which uses client/server side certificates to authenticate ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> can you share me the code file?",
  "id": "596e53ca1c8697534a388f93",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-07-18T18:30:34.471Z",
  "text": "@mrichman can you share me the code file?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> As said, once you get the message it is going into flight mode as the visibility is hidden, so we are unable to read the message till 30 seconds after your first hit",
  "id": "596e596fbf7e6af22cef0070",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-07-18T18:54:39.370Z",
  "text": "@mrichman As said, once you get the message it is going into flight mode as the visibility is hidden, so we are unable to read the message till 30 seconds after your first hit",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"duginivijay\" class=\"mention\">@duginivijay</span> which code? I just ran yours",
  "id": "596e599976a757f80822b733",
  "issues": [],
  "mentions": [
   {
    "screenName": "duginivijay",
    "userId": "56f1be5885d51f252aba3fd1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-07-18T18:55:21.311Z",
  "text": "@duginivijay which code? I just ran yours",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "You probably will just have to poll for the message ID until it becomes available again, and then delete it.",
  "id": "596e5a344bcd78af56c1fe9a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-07-18T18:57:56.838Z",
  "text": "You probably will just have to poll for the message ID until it becomes available again, and then delete it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/duginivijay",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18016668?v=4&s=60",
   "displayName": "Dugini Vijay",
   "gv": "4",
   "id": "56f1be5885d51f252aba3fd1",
   "url": "/duginivijay",
   "username": "duginivijay",
   "v": 2
  },
  "html": "What I&#39;m doing is when I&#39;m executing the code then it would get the message and will go in to flight mode.. so how can I just stop executing the get message and just run delete message code?",
  "id": "596e606f4bcd78af56c22104",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-07-18T19:24:31.673Z",
  "text": "What I'm doing is when I'm executing the code then it would get the message and will go in to flight mode.. so how can I just stop executing the get message and just run delete message code?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "I don&#39;t think you can delete a message when in &quot;in flight&quot; mode",
  "id": "596e6555c101bc4e3a99f00e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-07-18T19:45:25.542Z",
  "text": "I don't think you can delete a message when in \"in flight\" mode",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Does anyone know where I can find a Cognito example for Go? I&#39;m looking to implement signup and authentication for a web app I&#39;m writing in Go.",
  "id": "5970a303bf7e6af22cf8ac36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-07-20T12:33:07.548Z",
  "text": "Does anyone know where I can find a Cognito example for Go? I'm looking to implement signup and authentication for a web app I'm writing in Go.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/kc1116",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11549552?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11549552?v=4&s=60",
   "displayName": "kc1116",
   "gv": "4",
   "id": "591229a4d73408ce4f5e4510",
   "url": "/kc1116",
   "username": "kc1116",
   "v": 11
  },
  "html": "Does anyone know when there will be official support for Go in AWS lambda",
  "id": "5970cbebf5b3458e3066df21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-07-20T15:27:39.482Z",
  "text": "Does anyone know when there will be official support for Go in AWS lambda",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/kc1116",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11549552?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11549552?v=4&s=60",
   "displayName": "kc1116",
   "gv": "4",
   "id": "591229a4d73408ce4f5e4510",
   "url": "/kc1116",
   "username": "kc1116",
   "v": 11
  },
  "html": "?",
  "id": "5970cbf4614889d475d3375f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-07-20T15:27:48.285Z",
  "text": "?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kc1116\" class=\"mention\">@kc1116</span> Not sure, but I&#39;m using Apex to deploy Go functions",
  "id": "5970e27989aea4761dba1d39",
  "issues": [],
  "mentions": [
   {
    "screenName": "kc1116",
    "userId": "591229a4d73408ce4f5e4510",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-07-20T17:03:53.644Z",
  "text": "@kc1116 Not sure, but I'm using Apex to deploy Go functions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<a href=\"http://apex.run/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://apex.run/</a>",
  "id": "5970e288bc464729740c0805",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-07-20T17:04:08.869Z",
  "text": "http://apex.run/",
  "unread": false,
  "urls": [
   {
    "url": "http://apex.run/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "I even have a video tutorial showing how to use it with Go",
  "id": "5970e2a2bf7e6af22cf9f30b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-07-20T17:04:34.805Z",
  "text": "I even have a video tutorial showing how to use it with Go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Is there a way to create a user in a Cognito user pool such that <code>FORCE_CHANGE_PASSWORD</code> is not set by default, or must I programmatically confirm him after signup?",
  "id": "5972095a89aea4761dbeb387",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-07-21T14:02:02.177Z",
  "text": "Is there a way to create a user in a Cognito user pool such that `FORCE_CHANGE_PASSWORD` is not set by default, or must I programmatically confirm him after signup?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "I&#39;ve got a Cognito access token server-side using <code>AdminInitiateAuth</code> and I&#39;m storing that in a session cookie. I&#39;m assuming I need to validate that token on every subsequent request. Do I need to call out to Cognito for every request, or can I validate the token in my app server-side? <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Do you know?",
  "id": "59737b7a76a757f808377422",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-07-22T16:21:14.282Z",
  "text": "I've got a Cognito access token server-side using `AdminInitiateAuth` and I'm storing that in a session cookie. I'm assuming I need to validate that token on every subsequent request. Do I need to call out to Cognito for every request, or can I validate the token in my app server-side? @jasdel Do you know?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/amitsaha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/512598?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/512598?v=4&s=60",
   "displayName": "Amit Saha",
   "gv": "4",
   "id": "5365839e048862e761fa0529",
   "url": "/amitsaha",
   "username": "amitsaha",
   "v": 3
  },
  "html": "hey all, i am having a bit of trouble getting the right results when using multiple filters with <code>DescribeInstancesInput</code>. ",
  "id": "597573991c8697534a536b21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-07-24T04:12:09.686Z",
  "text": "hey all, i am having a bit of trouble getting the right results when using multiple filters with `DescribeInstancesInput`. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/amitsaha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/512598?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/512598?v=4&s=60",
   "displayName": "Amit Saha",
   "gv": "4",
   "id": "5365839e048862e761fa0529",
   "url": "/amitsaha",
   "username": "amitsaha",
   "v": 3
  },
  "html": "<a href=\"https://gist.github.com/amitsaha/8345d5a2d452a38a2fbfa52c2ed8fd68\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/amitsaha/8345d5a2d452a38a2fbfa52c2ed8fd68</a>",
  "id": "597573a6614889d475e3b56d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-07-24T04:12:22.593Z",
  "text": "https://gist.github.com/amitsaha/8345d5a2d452a38a2fbfa52c2ed8fd68",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/amitsaha/8345d5a2d452a38a2fbfa52c2ed8fd68"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/amitsaha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/512598?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/512598?v=4&s=60",
   "displayName": "Amit Saha",
   "gv": "4",
   "id": "5365839e048862e761fa0529",
   "url": "/amitsaha",
   "username": "amitsaha",
   "v": 3
  },
  "html": "when i specify multiple tags, the ordering changes the results i get",
  "id": "597573bfc101bc4e3ab45973",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-07-24T04:12:47.499Z",
  "text": "when i specify multiple tags, the ordering changes the results i get",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/amitsaha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/512598?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/512598?v=4&s=60",
   "displayName": "Amit Saha",
   "gv": "4",
   "id": "5365839e048862e761fa0529",
   "url": "/amitsaha",
   "username": "amitsaha",
   "v": 3
  },
  "html": "I am assuming that specifying multiple tags makes it an AND filtering",
  "id": "597573e5bc464729741bdcae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-07-24T04:13:25.063Z",
  "text": "I am assuming that specifying multiple tags makes it an AND filtering",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/amitsaha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/512598?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/512598?v=4&s=60",
   "displayName": "Amit Saha",
   "gv": "4",
   "id": "5365839e048862e761fa0529",
   "url": "/amitsaha",
   "username": "amitsaha",
   "v": 3
  },
  "html": "Would be to keen to hear if anyone is familiar with this?",
  "id": "597573ff45fc670746be3d19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-07-24T04:13:51.447Z",
  "text": "Would be to keen to hear if anyone is familiar with this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/amitsaha",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/512598?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/512598?v=4&s=60",
   "displayName": "Amit Saha",
   "gv": "4",
   "id": "5365839e048862e761fa0529",
   "url": "/amitsaha",
   "username": "amitsaha",
   "v": 3
  },
  "html": "never mind, figured out an error in my code",
  "id": "59757a83714ea96f781769b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-07-24T04:41:39.049Z",
  "text": "never mind, figured out an error in my code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/meirf",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2043305?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2043305?v=4&s=60",
   "displayName": "meirf",
   "gv": "4",
   "id": "58c24298d73408ce4f4f9dee",
   "url": "/meirf",
   "username": "meirf",
   "v": 3
  },
  "html": "Have any of you run into this:<br>I have code which lists keys using <code>ListObjectsPages</code>-&gt;<code>Contents</code>-&gt;<code>Key</code> and copies those keys using <code>CopyObject</code>. This works in general but for some keys it&#39;s complaining <code>NoSuchKey: The specified key does not exist.</code> The set of keys it&#39;s complaining about include keys with <code>+</code>.",
  "id": "59797325c101bc4e3ac456aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-07-27T04:59:17.945Z",
  "text": "Have any of you run into this:\nI have code which lists keys using `ListObjectsPages`->`Contents`->`Key` and copies those keys using `CopyObject`. This works in general but for some keys it's complaining `NoSuchKey: The specified key does not exist.` The set of keys it's complaining about include keys with `+`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/meirf",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2043305?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2043305?v=4&s=60",
   "displayName": "meirf",
   "gv": "4",
   "id": "58c24298d73408ce4f4f9dee",
   "url": "/meirf",
   "username": "meirf",
   "v": 3
  },
  "html": "I am able to cp using <code>aws s3 cp</code> on command line but not with the SDK.",
  "id": "5979736d45fc670746ce66c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-07-27T05:00:29.559Z",
  "text": "I am able to cp using `aws s3 cp` on command line but not with the SDK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"meirf\" class=\"mention\">@meirf</span> Is that <code>+</code> intended to be a space? Like <code>%20</code> is a space?",
  "id": "597a1d044bcd78af56ef6907",
  "issues": [],
  "mentions": [
   {
    "screenName": "meirf",
    "userId": "58c24298d73408ce4f4f9dee",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-07-27T17:04:04.407Z",
  "text": "@meirf Is that `+` intended to be a space? Like `%20` is a space?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/skiz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/2969?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/2969?v=4&s=60",
   "displayName": "Josh Martin",
   "gv": "4",
   "id": "551d5a3915522ed4b3de4312",
   "url": "/skiz",
   "username": "skiz",
   "v": 2
  },
  "html": "I&#39;m looking at the sdk-for-go library, and I&#39;m trying to see if there is a way to send custom HTTP headers (ie: Range) when making S3 requests.  I&#39;m not seeing anything that would support this. Any ideas?",
  "id": "597a38fc614889d475f7510e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-07-27T19:03:24.028Z",
  "text": "I'm looking at the sdk-for-go library, and I'm trying to see if there is a way to send custom HTTP headers (ie: Range) when making S3 requests.  I'm not seeing anything that would support this. Any ideas?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"skiz\" class=\"mention\">@skiz</span> <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#GetObjectInput\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><code>Range</code></a> is available from the input  shape for  GetObject. ",
  "id": "597a4258329651f46ecaf2df",
  "issues": [],
  "mentions": [
   {
    "screenName": "skiz",
    "userId": "551d5a3915522ed4b3de4312",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-07-27T19:43:20.932Z",
  "text": "@skiz [`Range`](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#GetObjectInput) is available from the input  shape for  GetObject. ",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#GetObjectInput"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Alternatively you can set additional custom headers of API requests generically using  the <code>WithContext</code> SDK API methods as passing in request options that will augment the request the SDK will send.",
  "id": "597a438976a757f808514a83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-07-27T19:48:25.131Z",
  "text": "Alternatively you can set additional custom headers of API requests generically using  the `WithContext` SDK API methods as passing in request options that will augment the request the SDK will send.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<pre><code class=\"go\">result, err := svc.GetObjectWithContext(ctx, &amp;s3.GetObjectInput{\n    Bucket: aws.String(<span class=\"string\">\"myBucket\"</span>),\n    Key:    aws.String(<span class=\"string\">\"myKey\"</span>),\n}, <span class=\"keyword\">func</span>(r *request.Request) {\n    r.HTTPRequest.Header.Set(<span class=\"string\">\"X-My-Header\"</span>, <span class=\"string\">\"some value\"</span>)\n})</code></pre>",
  "id": "597a43a189aea4761ddd52d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-07-27T19:48:49.959Z",
  "text": "```go\nresult, err := svc.GetObjectWithContext(ctx, &s3.GetObjectInput{\n    Bucket: aws.String(\"myBucket\"),\n    Key:    aws.String(\"myKey\"),\n}, func(r *request.Request) {\n\tr.HTTPRequest.Header.Set(\"X-My-Header\", \"some value\")\n})\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Fale",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/77888?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/77888?v=4&s=60",
   "displayName": "Fabio Alessandro Locati",
   "gv": "4",
   "id": "597b52ced73408ce4f6f2cbb",
   "url": "/Fale",
   "username": "Fale",
   "v": 3
  },
  "html": "is it possible to delete all items  in a bucket starting with a certain path?",
  "id": "597b52fcf5b3458e308e43b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-07-28T15:06:36.128Z",
  "text": "is it possible to delete all items  in a bucket starting with a certain path?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Fale\" class=\"mention\">@Fale</span> did you try s3manager&#39;s BatchDelete function? <a href=\"https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3manager/batch.go\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3manager/batch.go</a>",
  "id": "597b5c0a76a757f808552526",
  "issues": [],
  "mentions": [
   {
    "screenName": "Fale",
    "userId": "597b52ced73408ce4f6f2cbb",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-07-28T15:45:14.931Z",
  "text": "@Fale did you try s3manager's BatchDelete function? https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3manager/batch.go",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/blob/master/service/s3/s3manager/batch.go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Fale",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/77888?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/77888?v=4&s=60",
   "displayName": "Fabio Alessandro Locati",
   "gv": "4",
   "id": "597b52ced73408ce4f6f2cbb",
   "url": "/Fale",
   "username": "Fale",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> thanks, and if I&#39;m not mistaken I have to provide a []DeleteObjectInput to it, which I don&#39;t think supports patterns but just keys",
  "id": "597b5eb1f5b3458e308e7602",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-07-28T15:56:33.060Z",
  "text": "@mrichman thanks, and if I'm not mistaken I have to provide a []DeleteObjectInput to it, which I don't think supports patterns but just keys",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Fale\" class=\"mention\">@Fale</span> I think you&#39;re right. I don&#39;t think S3 supports globbing/wildcards. <span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> or <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> would know for sure.",
  "id": "597b5efb1c8697534a6ab5c0",
  "issues": [],
  "mentions": [
   {
    "screenName": "Fale",
    "userId": "597b52ced73408ce4f6f2cbb",
    "userIds": []
   },
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   },
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-07-28T15:57:47.713Z",
  "text": "@Fale I think you're right. I don't think S3 supports globbing/wildcards. @xibz or @jasdel would know for sure.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Fale",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/77888?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/77888?v=4&s=60",
   "displayName": "Fabio Alessandro Locati",
   "gv": "4",
   "id": "597b52ced73408ce4f6f2cbb",
   "url": "/Fale",
   "username": "Fale",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> it seems like on other thing is supported (try to search for &quot;prefix&quot; in the s3 doc and you&#39;ll find a bunch, but it seems like it&#39;s not for deletes :(",
  "id": "597b61454bcd78af56f3c67b",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-07-28T16:07:33.981Z",
  "text": "@mrichman it seems like on other thing is supported (try to search for \"prefix\" in the s3 doc and you'll find a bunch, but it seems like it's not for deletes :(",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/zjensen",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9020924?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9020924?v=4&s=60",
   "displayName": "Zack",
   "gv": "4",
   "id": "597f689ed73408ce4f6f81c7",
   "url": "/zjensen",
   "username": "zjensen"
  },
  "html": "If I want to use server-side encryption with KMS, do I need to persist any keys or anything on my end?",
  "id": "597f694e45fc670746e1bb18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-07-31T17:30:54.407Z",
  "text": "If I want to use server-side encryption with KMS, do I need to persist any keys or anything on my end?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/zjensen",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9020924?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9020924?v=4&s=60",
   "displayName": "Zack",
   "gv": "4",
   "id": "597f689ed73408ce4f6f81c7",
   "url": "/zjensen",
   "username": "zjensen"
  },
  "html": "If not, and KMS manages everything, how do I know if a file has been encrypted, and do I need to do anything different when retrieving that file?",
  "id": "597f69ab614889d47507be16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-07-31T17:32:27.453Z",
  "text": "If not, and KMS manages everything, how do I know if a file has been encrypted, and do I need to do anything different when retrieving that file?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ghoroubi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12492150?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12492150?v=4&s=60",
   "displayName": "Nima Ghoroubi",
   "gv": "4",
   "id": "59801604d73408ce4f6f91dd",
   "url": "/ghoroubi",
   "username": "ghoroubi",
   "v": 3
  },
  "html": "hi guys",
  "id": "5982ed142723db8d5e6eb6ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-08-03T09:29:56.493Z",
  "text": "hi guys",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ghoroubi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12492150?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12492150?v=4&s=60",
   "displayName": "Nima Ghoroubi",
   "gv": "4",
   "id": "59801604d73408ce4f6f91dd",
   "url": "/ghoroubi",
   "username": "ghoroubi",
   "v": 3
  },
  "html": "I have  a question about aws go sdk",
  "id": "5982ed31a7b406262d552286",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-08-03T09:30:25.352Z",
  "text": "I have  a question about aws go sdk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-03T09:33:46.717Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ghoroubi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12492150?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12492150?v=4&s=60",
   "displayName": "Nima Ghoroubi",
   "gv": "4",
   "id": "59801604d73408ce4f6f91dd",
   "url": "/ghoroubi",
   "username": "ghoroubi",
   "v": 3
  },
  "html": "I want an example about collecting and sending logs of an application to cloudwatch using aws-g-sdk",
  "id": "5982ed65329651f46ee7c17b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-08-03T09:31:17.086Z",
  "text": "I want an example about collecting and sending logs of an application to cloudwatch using aws-g-sdk",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ghoroubi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12492150?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12492150?v=4&s=60",
   "displayName": "Nima Ghoroubi",
   "gv": "4",
   "id": "59801604d73408ce4f6f91dd",
   "url": "/ghoroubi",
   "username": "ghoroubi",
   "v": 3
  },
  "html": "please help me",
  "id": "5982ed6a329651f46ee7c18b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-08-03T09:31:22.359Z",
  "text": "please help me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-03T11:40:46.522Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ghoroubi\" class=\"mention\">@ghoroubi</span> The SDK itself doesn&#39;t send logs to Cloudwatch. Here are the SDK&#39;s capabilities: <a href=\"https://github.com/aws/aws-sdk-go/blob/master/service/cloudwatch/cloudwatchiface/interface.go\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/blob/master/service/cloudwatch/cloudwatchiface/interface.go</a> If you have a Go application running on an EC2 instance, you can set up the Cloudwatch agent to consume your logs. Does that help?",
  "id": "59830bacc101bc4e3ae5337e",
  "issues": [],
  "mentions": [
   {
    "screenName": "ghoroubi",
    "userId": "59801604d73408ce4f6f91dd",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-08-03T11:40:27.998Z",
  "text": "@ghoroubi The SDK itself doesn't send logs to Cloudwatch. Here are the SDK's capabilities: https://github.com/aws/aws-sdk-go/blob/master/service/cloudwatch/cloudwatchiface/interface.go If you have a Go application running on an EC2 instance, you can set up the Cloudwatch agent to consume your logs. Does that help?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/blob/master/service/cloudwatch/cloudwatchiface/interface.go"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ghoroubi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12492150?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12492150?v=4&s=60",
   "displayName": "Nima Ghoroubi",
   "gv": "4",
   "id": "59801604d73408ce4f6f91dd",
   "url": "/ghoroubi",
   "username": "ghoroubi",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> , thank you for your guide, Can you help me with some example? I want to send all of logs on an EC2 instance to cloudwatch.",
  "id": "598310d6614889d4751572c5",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-08-03T12:02:30.199Z",
  "text": "@mrichman , thank you for your guide, Can you help me with some example? I want to send all of logs on an EC2 instance to cloudwatch.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ghoroubi\" class=\"mention\">@ghoroubi</span> RTFM <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/QuickStartEC2Instance.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/QuickStartEC2Instance.html</a>",
  "id": "59834aee45fc670746f09094",
  "issues": [],
  "mentions": [
   {
    "screenName": "ghoroubi",
    "userId": "59801604d73408ce4f6f91dd",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-08-03T16:10:22.087Z",
  "text": "@ghoroubi RTFM http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/QuickStartEC2Instance.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/QuickStartEC2Instance.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "Hello. I am generating a presigned URL to download a file stored in S3. The URL gets generated properly, but when I try to download the file I get the below error:",
  "id": "59840e194bcd78af56117800",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-08-04T06:03:05.273Z",
  "text": "Hello. I am generating a presigned URL to download a file stored in S3. The URL gets generated properly, but when I try to download the file I get the below error:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "<p>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</p><p>&lt;Error&gt;&lt;Code&gt;AuthorizationQueryParametersError&lt;/Code&gt;&lt;Message&gt;X-Amz-Algorithm only supports &quot;AWS4-HMAC-SHA256&quot;&lt;/Message&gt;&lt;RequestId&gt;63B6CDF4FFE1D1E6&lt;/RequestId&gt;&lt;HostId&gt;NGS5LZN7b0HL05Bv9/pz4ShejsR691AZG5EF4KSqeMqGKeDBRG2JoGbfkQoGTuj5QGIJjVEf18g=&lt;/HostId&gt;&lt;/Error&gt;</p>",
  "id": "59840e3cf5b3458e30ac6194",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-08-04T06:03:40.149Z",
  "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Error><Code>AuthorizationQueryParametersError</Code><Message>X-Amz-Algorithm only supports \"AWS4-HMAC-SHA256\"</Message><RequestId>63B6CDF4FFE1D1E6</RequestId><HostId>NGS5LZN7b0HL05Bv9/pz4ShejsR691AZG5EF4KSqeMqGKeDBRG2JoGbfkQoGTuj5QGIJjVEf18g=</HostId></Error>",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "Any idea how to debug this?",
  "id": "59840e4c2723db8d5e72fd4b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-08-04T06:03:56.201Z",
  "text": "Any idea how to debug this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "The code is in golang. The same code used to work earlier...I started seeing this error now",
  "id": "59840fd42723db8d5e7302af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-08-04T06:10:28.493Z",
  "text": "The code is in golang. The same code used to work earlier...I started seeing this error now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "How are you downloading the file?",
  "id": "598457a645fc670746f45732",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-08-04T11:16:54.594Z",
  "text": "How are you downloading the file?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "I am trying to download the file by pasting the link in the browser. ",
  "id": "59848dd01c8697534a8ab846",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-08-04T15:08:00.263Z",
  "text": "I am trying to download the file by pasting the link in the browser. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "This used to work for me",
  "id": "59848f48c101bc4e3aeb2dc6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-08-04T15:14:16.655Z",
  "text": "This used to work for me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "I also tried &quot; response, err := http.Get(url)&quot; inside a program and get the same error",
  "id": "59848fcb45fc670746f5617b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-08-04T15:16:27.783Z",
  "text": "I also tried \" response, err := http.Get(url)\" inside a program and get the same error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sfahmi123\" class=\"mention\">@sfahmi123</span> Did you check your CORS configuration on that bucket? <a href=\"https://aws.amazon.com/blogs/aws/amazon-s3-cross-origin-resource-sharing/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://aws.amazon.com/blogs/aws/amazon-s3-cross-origin-resource-sharing/</a>",
  "id": "59849bc21c8697534a8af8fb",
  "issues": [],
  "mentions": [
   {
    "screenName": "sfahmi123",
    "userId": "59037d80d73408ce4f5bb1b7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-08-04T16:07:30.547Z",
  "text": "@sfahmi123 Did you check your CORS configuration on that bucket? https://aws.amazon.com/blogs/aws/amazon-s3-cross-origin-resource-sharing/",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/blogs/aws/amazon-s3-cross-origin-resource-sharing/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": " I have not made any changes specific to  CORS and this used to work before. Is there any specific CORS configuration I should be looking for?",
  "id": "5984c024210ac26920548c2b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-08-04T18:42:44.272Z",
  "text": " I have not made any changes specific to  CORS and this used to work before. Is there any specific CORS configuration I should be looking for?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sfahmi123\" class=\"mention\">@sfahmi123</span> I don&#39;t know your specific requirements, but as a test, try creating one that&#39;s wide open just to make sure it works, then lock it down.",
  "id": "5984c2f845fc670746f63018",
  "issues": [],
  "mentions": [
   {
    "screenName": "sfahmi123",
    "userId": "59037d80d73408ce4f5bb1b7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-08-04T18:54:48.865Z",
  "text": "@sfahmi123 I don't know your specific requirements, but as a test, try creating one that's wide open just to make sure it works, then lock it down.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/TaylorHuston",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3729159?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3729159?v=4&s=60",
   "displayName": "Taylor Huston",
   "gv": "4",
   "id": "546e955ddb8155e6700d6a15",
   "url": "/TaylorHuston",
   "username": "TaylorHuston",
   "v": 3
  },
  "html": "<p>Question: Can anyone point me in the right direction on how to upload and encrypt and then download and unencrypt a file using Go? The information in the SDK isn&#39;t that helpful. This blog post kind of gets you started but I&#39;m still fairly lost.</p><p><a href=\"https://aws.amazon.com/blogs/developer/using-the-aws-sdk-for-go-encryption-client/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://aws.amazon.com/blogs/developer/using-the-aws-sdk-for-go-encryption-client/</a></p>",
  "id": "59850b061c8697534a8c823a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-08-05T00:02:14.481Z",
  "text": "Question: Can anyone point me in the right direction on how to upload and encrypt and then download and unencrypt a file using Go? The information in the SDK isn't that helpful. This blog post kind of gets you started but I'm still fairly lost.\n\nhttps://aws.amazon.com/blogs/developer/using-the-aws-sdk-for-go-encryption-client/",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/blogs/developer/using-the-aws-sdk-for-go-encryption-client/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/TaylorHuston",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3729159?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3729159?v=4&s=60",
   "displayName": "Taylor Huston",
   "gv": "4",
   "id": "546e955ddb8155e6700d6a15",
   "url": "/TaylorHuston",
   "username": "TaylorHuston",
   "v": 3
  },
  "html": "Everything I&#39;ve been able to find so far is more about like, encrypting and decrypting some plaintext. I eventually need to be able to encrypt and decrypt large zip files.",
  "id": "59850b304bcd78af5615627d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-08-05T00:02:56.443Z",
  "text": "Everything I've been able to find so far is more about like, encrypting and decrypting some plaintext. I eventually need to be able to encrypt and decrypt large zip files.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"TaylorHuston\" class=\"mention\">@TaylorHuston</span> are you using the Key Management Service (KMS)? What have you tried so far?",
  "id": "59850fe145fc670746f7200b",
  "issues": [],
  "mentions": [
   {
    "screenName": "TaylorHuston",
    "userId": "546e955ddb8155e6700d6a15",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-08-05T00:22:57.956Z",
  "text": "@TaylorHuston are you using the Key Management Service (KMS)? What have you tried so far?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-05T00:40:23.777Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/TaylorHuston",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3729159?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3729159?v=4&s=60",
   "displayName": "Taylor Huston",
   "gv": "4",
   "id": "546e955ddb8155e6700d6a15",
   "url": "/TaylorHuston",
   "username": "TaylorHuston",
   "v": 3
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span></p><p>I am. So far I can get the file to upload and encrypt. I can then download the file fine. I can also decrypt the file separately from the download, but at that point I don&#39;t entirely know what to do with it. I&#39;ve never used Go before to be hones.</p>",
  "id": "59851234f5b3458e30b05a01",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-08-05T00:32:52.640Z",
  "text": "@mrichman\n\nI am. So far I can get the file to upload and encrypt. I can then download the file fine. I can also decrypt the file separately from the download, but at that point I don't entirely know what to do with it. I've never used Go before to be hones.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2017-08-05T00:35:14.152Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/TaylorHuston",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3729159?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3729159?v=4&s=60",
   "displayName": "Taylor Huston",
   "gv": "4",
   "id": "546e955ddb8155e6700d6a15",
   "url": "/TaylorHuston",
   "username": "TaylorHuston",
   "v": 3
  },
  "html": "<pre><code><span class=\"tag\">func</span> <span class=\"tag\">download</span>(<span class=\"tag\">bucket</span> <span class=\"tag\">string</span>, <span class=\"tag\">item</span> <span class=\"tag\">string</span>) <span class=\"rules\">{\n\n<span class=\"rule\"><span class=\"attribute\">sess </span>:<span class=\"value\">= session.<span class=\"function\">New</span>(&amp;aws.Config{\n    Region: aws.<span class=\"function\">String</span>(<span class=\"string\">\"us-west-2\"</span>),\n    })\n\nfile, err := os.<span class=\"function\">Create</span>(item)\n\nif err != nil {\n    <span class=\"function\">exitErrorf</span>(<span class=\"string\">\"Unable to open file %q, %v\"</span>, err)\n}\n\ndefer file.<span class=\"function\">Close</span>()\n\ninput := &amp;s3.GetObjectInput{\n        Bucket: aws.<span class=\"function\">String</span>(bucket),\n        Key:    aws.<span class=\"function\">String</span>(item),\n    }\n\ndownloader := s3manager.<span class=\"function\">NewDownloader</span>(sess)\n\nnumBytes, err := downloader.<span class=\"function\">Download</span>(file, input)\n\nif err != nil {\n    <span class=\"function\">exitErrorf</span>(<span class=\"string\">\"Unable to download item %q, %v\"</span>, item, err)\n}\n\nfmt.<span class=\"function\">Println</span>(<span class=\"string\">\"Downloaded\"</span>, file.<span class=\"function\">Name</span>(), numBytes, <span class=\"string\">\"bytes\"</span>)  //This works, downloads the file fine, but it is encrypted obviously\n\n\n\n\n\nclient := s3crypto.<span class=\"function\">NewDecryptionClient</span>(sess)\n\nresult, err := client.<span class=\"function\">GetObject</span>(input)\nif err != nil {\n    fmt.<span class=\"function\">Println</span>(err)\n}\n\nb, err := ioutil.<span class=\"function\">ReadAll</span>(result.Body)\nif err != nil {\n    fmt.<span class=\"function\">Println</span>(err)\n}\nfmt.<span class=\"function\">Println</span>(<span class=\"function\">string</span>(b)) //This works, prints out the unencrypted contents of the file\n\n//Syntax to actually save this unencrypted file here?\n\n}</span></span></span></code></pre>",
  "id": "598512aabc4647297454e8c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-08-05T00:34:50.809Z",
  "text": "    func download(bucket string, item string) {\n\n    sess := session.New(&aws.Config{\n        Region: aws.String(\"us-west-2\"),\n        })\n\n    file, err := os.Create(item)\n\n    if err != nil {\n        exitErrorf(\"Unable to open file %q, %v\", err)\n    }\n\n    defer file.Close()\n\n    input := &s3.GetObjectInput{\n            Bucket: aws.String(bucket),\n            Key:    aws.String(item),\n        }\n\n    downloader := s3manager.NewDownloader(sess)\n\n    numBytes, err := downloader.Download(file, input)\n\n    if err != nil {\n        exitErrorf(\"Unable to download item %q, %v\", item, err)\n    }\n\n    fmt.Println(\"Downloaded\", file.Name(), numBytes, \"bytes\")  //This works, downloads the file fine, but it is encrypted obviously\n\n\n\n\n\n    client := s3crypto.NewDecryptionClient(sess)\n\n    result, err := client.GetObject(input)\n    if err != nil {\n        fmt.Println(err)\n    }\n    \n    b, err := ioutil.ReadAll(result.Body)\n    if err != nil {\n        fmt.Println(err)\n    }\n    fmt.Println(string(b)) //This works, prints out the unencrypted contents of the file\n\n    //Syntax to actually save this unencrypted file here?\n\n    }",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"TaylorHuston\" class=\"mention\">@TaylorHuston</span> Your question is better off asked on gophers.slack.com. This channel isn&#39;t really for remedial Go.",
  "id": "5985b67676a757f80878b30c",
  "issues": [],
  "mentions": [
   {
    "screenName": "TaylorHuston",
    "userId": "546e955ddb8155e6700d6a15",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-08-05T12:13:42.838Z",
  "text": "@TaylorHuston Your question is better off asked on gophers.slack.com. This channel isn't really for remedial Go.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/immesys",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=60",
   "displayName": "Michael Andersen",
   "gv": "4",
   "id": "553968e115522ed4b3df7030",
   "url": "/immesys",
   "username": "immesys",
   "v": 19
  },
  "html": "Hi folks I am getting a SignatureDoesNotMatch error with simpledb go sdk",
  "id": "5986532b4bcd78af561916db",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-08-05T23:22:19.895Z",
  "text": "Hi folks I am getting a SignatureDoesNotMatch error with simpledb go sdk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/immesys",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=60",
   "displayName": "Michael Andersen",
   "gv": "4",
   "id": "553968e115522ed4b3df7030",
   "url": "/immesys",
   "username": "immesys",
   "v": 19
  },
  "html": "Given that I don&#39;t control the signature, and that some operations work (eg listdomains works but putattributes does not) I am pretty sure the credentials are fine",
  "id": "5986534e614889d47520b5d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-08-05T23:22:54.864Z",
  "text": "Given that I don't control the signature, and that some operations work (eg listdomains works but putattributes does not) I am pretty sure the credentials are fine",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/immesys",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=60",
   "displayName": "Michael Andersen",
   "gv": "4",
   "id": "553968e115522ed4b3df7030",
   "url": "/immesys",
   "username": "immesys",
   "v": 19
  },
  "html": "the only interesting thing is that I am using MFA",
  "id": "59865363329651f46ef3aaa0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-08-05T23:23:15.228Z",
  "text": "the only interesting thing is that I am using MFA",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/immesys",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=60",
   "displayName": "Michael Andersen",
   "gv": "4",
   "id": "553968e115522ed4b3df7030",
   "url": "/immesys",
   "username": "immesys",
   "v": 19
  },
  "html": "I turned on logging but I can&#39;t really make out anything wrong...",
  "id": "598653bda7b406262d60e10f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-08-05T23:24:45.327Z",
  "text": "I turned on logging but I can't really make out anything wrong...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/immesys",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=60",
   "displayName": "Michael Andersen",
   "gv": "4",
   "id": "553968e115522ed4b3df7030",
   "url": "/immesys",
   "username": "immesys",
   "v": 19
  },
  "html": "Ok I have worked out what makes it break, I have an attribute with binary content",
  "id": "598655a5210ac26920592e92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-08-05T23:32:53.024Z",
  "text": "Ok I have worked out what makes it break, I have an attribute with binary content",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/immesys",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=60",
   "displayName": "Michael Andersen",
   "gv": "4",
   "id": "553968e115522ed4b3df7030",
   "url": "/immesys",
   "username": "immesys",
   "v": 19
  },
  "html": "so probably invalid utf8",
  "id": "598655b9a7b406262d60e4e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-08-05T23:33:13.487Z",
  "text": "so probably invalid utf8",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/immesys",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=60",
   "displayName": "Michael Andersen",
   "gv": "4",
   "id": "553968e115522ed4b3df7030",
   "url": "/immesys",
   "username": "immesys",
   "v": 19
  },
  "html": "Is that a problem? /me looks at documentation",
  "id": "598655c52723db8d5e7ab28a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-08-05T23:33:25.735Z",
  "text": "Is that a problem? /me looks at documentation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/immesys",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4234131?v=4&s=60",
   "displayName": "Michael Andersen",
   "gv": "4",
   "id": "553968e115522ed4b3df7030",
   "url": "/immesys",
   "username": "immesys",
   "v": 19
  },
  "html": "documentation says &quot;Allowed characters are all UTF-8 characters valid in XML documents.&quot; for attribute values, so this is just my bad then. IMHO the error should be nicer, but I will just base64 encode my data. Thanks!",
  "id": "59865682bc4647297458953c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-08-05T23:36:34.281Z",
  "text": "documentation says \"Allowed characters are all UTF-8 characters valid in XML documents.\" for attribute values, so this is just my bad then. IMHO the error should be nicer, but I will just base64 encode my data. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/etsangsplk",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24395937?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24395937?v=4&s=60",
   "displayName": "Prometheus",
   "gv": "4",
   "id": "5984a2ffd73408ce4f701ec6",
   "url": "/etsangsplk",
   "username": "etsangsplk",
   "v": 13
  },
  "html": "Very weird issue in using AWS SDK GO to attach trust policy on role that permitts another Role to assume.  I am using the RoleARN reported from iam.CreateRole  ",
  "id": "5989f1e576a757f80886d7c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-08-08T17:16:21.321Z",
  "text": "Very weird issue in using AWS SDK GO to attach trust policy on role that permitts another Role to assume.  I am using the RoleARN reported from iam.CreateRole  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/etsangsplk",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24395937?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24395937?v=4&s=60",
   "displayName": "Prometheus",
   "gv": "4",
   "id": "5984a2ffd73408ce4f701ec6",
   "url": "/etsangsplk",
   "username": "etsangsplk",
   "v": 13
  },
  "html": "alwasy get AccessDenied: Not authorized to perform sts:AssumeRole status code: 403, ",
  "id": "5989f1fe210ac26920655441",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-08-08T17:16:46.369Z",
  "text": "alwasy get AccessDenied: Not authorized to perform sts:AssumeRole status code: 403, \n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/etsangsplk",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24395937?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24395937?v=4&s=60",
   "displayName": "Prometheus",
   "gv": "4",
   "id": "5984a2ffd73408ce4f701ec6",
   "url": "/etsangsplk",
   "username": "etsangsplk",
   "v": 13
  },
  "html": "but when i put in RoleARN copied from aws console, it awlays pass",
  "id": "5989f213a7b406262d6d19a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-08-08T17:17:07.870Z",
  "text": "but when i put in RoleARN copied from aws console, it awlays pass",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/etsangsplk",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24395937?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24395937?v=4&s=60",
   "displayName": "Prometheus",
   "gv": "4",
   "id": "5984a2ffd73408ce4f701ec6",
   "url": "/etsangsplk",
   "username": "etsangsplk",
   "v": 13
  },
  "html": "both Roles has exactly the same perimission and trsut policy",
  "id": "5989f2241c8697534a9c6bc4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-08-08T17:17:24.671Z",
  "text": "both Roles has exactly the same perimission and trsut policy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/etsangsplk",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24395937?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24395937?v=4&s=60",
   "displayName": "Prometheus",
   "gv": "4",
   "id": "5984a2ffd73408ce4f701ec6",
   "url": "/etsangsplk",
   "username": "etsangsplk",
   "v": 13
  },
  "html": "I tried using RoleID in cplace of account number in RoleARN. same",
  "id": "5989f239210ac26920655548",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-08-08T17:17:45.173Z",
  "text": "I tried using RoleID in cplace of account number in RoleARN. same",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/etsangsplk",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24395937?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24395937?v=4&s=60",
   "displayName": "Prometheus",
   "gv": "4",
   "id": "5984a2ffd73408ce4f701ec6",
   "url": "/etsangsplk",
   "username": "etsangsplk",
   "v": 13
  },
  "html": "anyone tried to use ASW go sdk to create a role that allows another IAM Role to assume?",
  "id": "598a093b329651f46e005153",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-08-08T18:55:55.407Z",
  "text": "anyone tried to use ASW go sdk to create a role that allows another IAM Role to assume?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/hansstimer",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/153323?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/153323?v=4&s=60",
   "displayName": "hansstimer",
   "gv": "4",
   "id": "58209bd2d73408ce4f344170",
   "url": "/hansstimer",
   "username": "hansstimer",
   "v": 8
  },
  "html": "Is there a way to do a lookup of amis? When I want to use a different AWS region I have to manually go find the AMI ids for that region.",
  "id": "598b2497329651f46e047654",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-08-09T15:04:55.808Z",
  "text": "Is there a way to do a lookup of amis? When I want to use a different AWS region I have to manually go find the AMI ids for that region.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/atsushi-ishibashi",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15537626?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15537626?v=4&s=60",
   "displayName": "atsushi-ishibashi",
   "gv": "4",
   "id": "598bf33fd73408ce4f70caab",
   "url": "/atsushi-ishibashi",
   "username": "atsushi-ishibashi"
  },
  "html": "Example codes in docs helped me develop. It seems that examples_test.go is generated by cli/gen-api but only a few service like dynamodb have  examples_test.go. I couldn\u2019t find example codes in kinesis reference. Is it easy to add example_test.go to the remaining services?",
  "id": "598bf8041c8697534aa44451",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-08-10T06:07:00.183Z",
  "text": "Example codes in docs helped me develop. It seems that examples_test.go is generated by cli/gen-api but only a few service like dynamodb have  examples_test.go. I couldn\u2019t find example codes in kinesis reference. Is it easy to add example_test.go to the remaining services?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "I was looking at listing loadbalancers (ELB and ALB) in a AWS account via golang. Is it possible to do that without specifying a Loadbalancer name as input?",
  "id": "598d92e3a7b406262d7b2b66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-08-11T11:20:03.912Z",
  "text": "I was looking at listing loadbalancers (ELB and ALB) in a AWS account via golang. Is it possible to do that without specifying a Loadbalancer name as input?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"linuxbsdfreak\" class=\"mention\">@linuxbsdfreak</span> have you tried reading the doc? <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/elbv2/#ELBV2.DescribeLoadBalancers\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/elbv2/#ELBV2.DescribeLoadBalancers</a> / <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/elb/#ELB.DescribeLoadBalancers\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/elb/#ELB.DescribeLoadBalancers</a><br>This is explicitly mentioned: <code>If no load balancers are specified, the call describes all of your load balancers.</code>",
  "id": "59918d8bbc464729747fe8ad",
  "issues": [],
  "mentions": [
   {
    "screenName": "linuxbsdfreak",
    "userId": "55896aba15522ed4b3e2803d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2017-08-14T11:46:19.688Z",
  "text": "@linuxbsdfreak have you tried reading the doc? http://docs.aws.amazon.com/sdk-for-go/api/service/elbv2/#ELBV2.DescribeLoadBalancers / http://docs.aws.amazon.com/sdk-for-go/api/service/elb/#ELB.DescribeLoadBalancers\nThis is explicitly mentioned: `If no load balancers are specified, the call describes all of your load balancers.`",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/elbv2/#ELBV2.DescribeLoadBalancers"
   },
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/elb/#ELB.DescribeLoadBalancers"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Zensey",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/769152?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/769152?v=4&s=60",
   "displayName": "Anton Litvinov",
   "gv": "4",
   "id": "59919a56d73408ce4f714f65",
   "url": "/Zensey",
   "username": "Zensey"
  },
  "html": "Does AWS support conventional  SMPP protocol for sending SMS-es ?",
  "id": "59919b9376a757f808a1f472",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2017-08-14T12:46:11.001Z",
  "text": "Does AWS support conventional  SMPP protocol for sending SMS-es ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kylegato",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/153946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/153946?v=4&s=60",
   "displayName": "Kyle Gato",
   "gv": "4",
   "id": "57e465de40f3a6eec066c922",
   "url": "/kylegato",
   "username": "kylegato",
   "v": 2
  },
  "html": "Hi everyone",
  "id": "59935e841c8697534abf9c01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2017-08-15T20:50:12.867Z",
  "text": "Hi everyone",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kylegato",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/153946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/153946?v=4&s=60",
   "displayName": "Kyle Gato",
   "gv": "4",
   "id": "57e465de40f3a6eec066c922",
   "url": "/kylegato",
   "username": "kylegato",
   "v": 2
  },
  "html": "I&#39;m trying to use a custom endpoint (S3 proxy w/ caching enabled, internal to my kubernetes cluster) to get S3 objects",
  "id": "59935e9a614889d4754fe161",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-08-15T20:50:34.015Z",
  "text": "I'm trying to use a custom endpoint (S3 proxy w/ caching enabled, internal to my kubernetes cluster) to get S3 objects",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kylegato",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/153946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/153946?v=4&s=60",
   "displayName": "Kyle Gato",
   "gv": "4",
   "id": "57e465de40f3a6eec066c922",
   "url": "/kylegato",
   "username": "kylegato",
   "v": 2
  },
  "html": "I&#39;m having issues with my signing, with Amazon rejecting, and I noticed the host header is included in the params of headers to check the sig against",
  "id": "59935eac9acddb240793432c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-08-15T20:50:52.659Z",
  "text": "I'm having issues with my signing, with Amazon rejecting, and I noticed the host header is included in the params of headers to check the sig against",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kylegato",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/153946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/153946?v=4&s=60",
   "displayName": "Kyle Gato",
   "gv": "4",
   "id": "57e465de40f3a6eec066c922",
   "url": "/kylegato",
   "username": "kylegato",
   "v": 2
  },
  "html": "Does anyone know if there&#39;s a way to provide a custom hostname while still having it sign for &quot;s3.amazonaws.com&quot; ?",
  "id": "59935ebcee5c9a4c5fc3b39e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-08-15T20:51:08.427Z",
  "text": "Does anyone know if there's a way to provide a custom hostname while still having it sign for \"s3.amazonaws.com\" ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kylegato",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/153946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/153946?v=4&s=60",
   "displayName": "Kyle Gato",
   "gv": "4",
   "id": "57e465de40f3a6eec066c922",
   "url": "/kylegato",
   "username": "kylegato",
   "v": 2
  },
  "html": "I want to avoid having to try &quot;hacks&quot; like /etc/hosts entries for s3.amazonaws.com to my cluster IP or something",
  "id": "59935f05162adb6d2efba732",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-08-15T20:52:21.882Z",
  "text": "I want to avoid having to try \"hacks\" like /etc/hosts entries for s3.amazonaws.com to my cluster IP or something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kylegato",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/153946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/153946?v=4&s=60",
   "displayName": "Kyle Gato",
   "gv": "4",
   "id": "57e465de40f3a6eec066c922",
   "url": "/kylegato",
   "username": "kylegato",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I see you&#39;re doing some work with signing, got any ideas?",
  "id": "59937a44c101bc4e3a1fce1a",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2017-08-15T22:48:36.102Z",
  "text": "@jasdel I see you're doing some work with signing, got any ideas?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "how can I restart a ecs service using sdk",
  "id": "5993d3d5162adb6d2efd67fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-08-16T05:10:45.703Z",
  "text": "how can I restart a ecs service using sdk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "help is very much appreciated",
  "id": "5993d436210ac2692089e0f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-08-16T05:12:22.028Z",
  "text": "help is very much appreciated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/james-lawrence",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2835871?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2835871?v=4&s=60",
   "displayName": "James",
   "gv": "4",
   "id": "54f79bd515522ed4b3dcd113",
   "url": "/james-lawrence",
   "username": "james-lawrence",
   "v": 22
  },
  "html": "any good examples of creating a session with the go sdk from a ec2role",
  "id": "59950aabee5c9a4c5fcb692e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2017-08-17T03:16:59.406Z",
  "text": "any good examples of creating a session with the go sdk from a ec2role",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/shettyritesh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11489866?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11489866?v=4&s=60",
   "displayName": "shettyritesh",
   "gv": "4",
   "id": "5997698ed73408ce4f720408",
   "url": "/shettyritesh",
   "username": "shettyritesh"
  },
  "html": "i am looking at the sdk for go to get list of linked accounts in aws but so far i am unable to find the api",
  "id": "599769bb578b44a046c461e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-08-18T22:27:07.863Z",
  "text": "i am looking at the sdk for go to get list of linked accounts in aws but so far i am unable to find the api",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/shettyritesh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11489866?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11489866?v=4&s=60",
   "displayName": "shettyritesh",
   "gv": "4",
   "id": "5997698ed73408ce4f720408",
   "url": "/shettyritesh",
   "username": "shettyritesh"
  },
  "html": "does any one know ?",
  "id": "599769c49acddb2407a63fcb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-08-18T22:27:16.409Z",
  "text": "does any one know ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ghoroubi",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12492150?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12492150?v=4&s=60",
   "displayName": "Nima Ghoroubi",
   "gv": "4",
   "id": "59801604d73408ce4f6f91dd",
   "url": "/ghoroubi",
   "username": "ghoroubi",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"shettyritesh\" class=\"mention\">@shettyritesh</span>  hi, you can solve it by using aws-go-sdk. Have you read the documentation of ?",
  "id": "5997e137ee5c9a4c5fd82bff",
  "issues": [],
  "mentions": [
   {
    "screenName": "shettyritesh",
    "userId": "5997698ed73408ce4f720408",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-08-19T06:56:55.227Z",
  "text": "@shettyritesh  hi, you can solve it by using aws-go-sdk. Have you read the documentation of ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "Hello. I am creating a daemon that starts up other processes. I need to pass those processes credentials. My daemon picks up its aws cred from an ec2InstanceProfile attached to the ec2 running it. Is there any way I can actually hand off those string values to my <code>exec</code>&#39;d processes. I understand this might be unwanted from a security standpoint. But the processes I&#39;m spinning up are written in C and can only get credentials through environment variables.",
  "id": "599b056b210ac26920a8737c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-08-21T16:08:11.477Z",
  "text": "Hello. I am creating a daemon that starts up other processes. I need to pass those processes credentials. My daemon picks up its aws cred from an ec2InstanceProfile attached to the ec2 running it. Is there any way I can actually hand off those string values to my `exec`'d processes. I understand this might be unwanted from a security standpoint. But the processes I'm spinning up are written in C and can only get credentials through environment variables.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "I think I got it. I just walked the chain",
  "id": "599b096776a757f808caf17b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-08-21T16:25:11.918Z",
  "text": "I think I got it. I just walked the chain",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "<code>creds, err := sess.Config.Credentials.Get()</code>",
  "id": "599b096a2723db8d5eca0521",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-08-21T16:25:14.644Z",
  "text": "`creds, err := sess.Config.Credentials.Get()`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "Does anyone have any samples for Terminate/Reboot ec2 instances via golang aws sdk?",
  "id": "599c2975bc46472974ade256",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-08-22T12:54:13.774Z",
  "text": "Does anyone have any samples for Terminate/Reboot ec2 instances via golang aws sdk?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"linuxbsdfreak\" class=\"mention\">@linuxbsdfreak</span> - If you look in the <a href=\"https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/ec2-example-manage-instances.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">dev guide</a>, there should be some examples there. Please let us know if you have any additional questions",
  "id": "599c6201ba0f0f6e38d05bfb",
  "issues": [],
  "mentions": [
   {
    "screenName": "linuxbsdfreak",
    "userId": "55896aba15522ed4b3e2803d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-08-22T16:55:29.273Z",
  "text": "@linuxbsdfreak - If you look in the [dev guide](https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/ec2-example-manage-instances.html), there should be some examples there. Please let us know if you have any additional questions",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/ec2-example-manage-instances.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span>  Thx for the info. That was a help. How do i print the state of the instance. I have the following snippet. <a href=\"https://pastebin.com/YVJ7btB2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://pastebin.com/YVJ7btB2</a>. I tried inst.State in importantVals section. But its not a string value. Its of type. v *ec2.InstanceState . How do i extract the value?",
  "id": "599d71f9162adb6d2e26964c",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-08-23T12:15:53.224Z",
  "text": "@xibz  Thx for the info. That was a help. How do i print the state of the instance. I have the following snippet. https://pastebin.com/YVJ7btB2. I tried inst.State in importantVals section. But its not a string value. Its of type. v *ec2.InstanceState . How do i extract the value?",
  "unread": false,
  "urls": [
   {
    "url": "https://pastebin.com/YVJ7btB2"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "I&#39;m deploying a web app written in Go to Elastic Beanstalk. How do I get my custom log messages into Cloudwatch?",
  "id": "599e28a4bc46472974b6e31f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-08-24T01:15:16.621Z",
  "text": "I'm deploying a web app written in Go to Elastic Beanstalk. How do I get my custom log messages into Cloudwatch?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "any pointers how i can get the state of an ec2 instance. Following is the code snippet <a href=\"https://pastebin.com/YVJ7btB2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://pastebin.com/YVJ7btB2</a>",
  "id": "599ece3e162adb6d2e2c87dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-08-24T13:01:50.741Z",
  "text": "any pointers how i can get the state of an ec2 instance. Following is the code snippet https://pastebin.com/YVJ7btB2",
  "unread": false,
  "urls": [
   {
    "url": "https://pastebin.com/YVJ7btB2"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "how to delete kms keys<pre><code>func deleteKMS(aliasName string) {\n    svc := kms.<span class=\"keyword\">New</span>(session.<span class=\"keyword\">New</span>())\n    input := &amp;kms.DeleteAliasInput{\n        AliasName: aws.String(aliasName),\n    }\n\n    _, err := svc.DeleteAlias(input)\n    <span class=\"keyword\">if</span> err != nil {\n        <span class=\"keyword\">if</span> aerr, ok := err.(awserr.Error); ok {\n            <span class=\"keyword\">switch</span> aerr.Code() {\n            <span class=\"keyword\">case</span> kms.ErrCodeDependencyTimeoutException:\n                fmt.<span class=\"keyword\">Println</span>(kms.ErrCodeDependencyTimeoutException, aerr.Error())\n            <span class=\"keyword\">case</span> kms.ErrCodeNotFoundException:\n                fmt.<span class=\"keyword\">Println</span>(kms.ErrCodeNotFoundException, aerr.Error())\n            <span class=\"keyword\">case</span> kms.ErrCodeInternalException:\n                fmt.<span class=\"keyword\">Println</span>(kms.ErrCodeInternalException, aerr.Error())\n            <span class=\"keyword\">case</span> kms.ErrCodeInvalidStateException:\n                fmt.<span class=\"keyword\">Println</span>(kms.ErrCodeInvalidStateException, aerr.Error())\n            <span class=\"keyword\">default</span>:\n                fmt.<span class=\"keyword\">Println</span>(aerr.Error())\n            }\n        } <span class=\"keyword\">else</span> {\n            <span class=\"comment\">// Print the error, cast err to awserr.Error to get the Code and</span>\n            <span class=\"comment\">// Message from an error.</span>\n            fmt.<span class=\"keyword\">Println</span>(err.Error())\n        }\n        <span class=\"keyword\">return</span>\n    }\n\n}</code></pre>",
  "id": "599edd4cba0f0f6e38db331b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-08-24T14:06:04.817Z",
  "text": "how to delete kms keys\n```\nfunc deleteKMS(aliasName string) {\n\tsvc := kms.New(session.New())\n\tinput := &kms.DeleteAliasInput{\n\t\tAliasName: aws.String(aliasName),\n\t}\n\n\t_, err := svc.DeleteAlias(input)\n\tif err != nil {\n\t\tif aerr, ok := err.(awserr.Error); ok {\n\t\t\tswitch aerr.Code() {\n\t\t\tcase kms.ErrCodeDependencyTimeoutException:\n\t\t\t\tfmt.Println(kms.ErrCodeDependencyTimeoutException, aerr.Error())\n\t\t\tcase kms.ErrCodeNotFoundException:\n\t\t\t\tfmt.Println(kms.ErrCodeNotFoundException, aerr.Error())\n\t\t\tcase kms.ErrCodeInternalException:\n\t\t\t\tfmt.Println(kms.ErrCodeInternalException, aerr.Error())\n\t\t\tcase kms.ErrCodeInvalidStateException:\n\t\t\t\tfmt.Println(kms.ErrCodeInvalidStateException, aerr.Error())\n\t\t\tdefault:\n\t\t\t\tfmt.Println(aerr.Error())\n\t\t\t}\n\t\t} else {\n\t\t\t// Print the error, cast err to awserr.Error to get the Code and\n\t\t\t// Message from an error.\n\t\t\tfmt.Println(err.Error())\n\t\t}\n\t\treturn\n\t}\n\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "when i execute the above function I got the following errro<pre><code>Something Went wrong  SignatureDoesNotMatch: The request signature we calculated <span class=\"keyword\">does</span> <span class=\"keyword\">not</span> match <span class=\"keyword\">the</span> signature you provided. Check your key <span class=\"keyword\">and</span> signing method.\n    status code: <span class=\"number\">403</span>, request <span class=\"property\">id</span>: <span class=\"number\">0</span>DAE15B9AE2B0A4F, host <span class=\"property\">id</span>: <span class=\"number\">7</span>W5osnDXljbPiKbpwTT7s4VCiFB6w3onqlW6opPRi9RCW+a85Bf3ve63acIyXou2I/DXdr7It+E=</code></pre>",
  "id": "599edd6f76a757f808db72f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-08-24T14:06:39.489Z",
  "text": "when i execute the above function I got the following errro\n```\nSomething Went wrong  SignatureDoesNotMatch: The request signature we calculated does not match the signature you provided. Check your key and signing method.\n\tstatus code: 403, request id: 0DAE15B9AE2B0A4F, host id: 7W5osnDXljbPiKbpwTT7s4VCiFB6w3onqlW6opPRi9RCW+a85Bf3ve63acIyXou2I/DXdr7It+E=\n\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "help is very much appreciated gurus",
  "id": "599edd7fee5c9a4c5ff5412b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-08-24T14:06:55.530Z",
  "text": "help is very much appreciated gurus",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/ratidurga_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "Ratika",
   "id": "599ef9b1d73408ce4f72d06b",
   "url": "/ratidurga_twitter",
   "username": "ratidurga_twitter"
  },
  "html": "Hi,  I am trying to specify a source security group in go for <code>AuthorizeSecurityGroupIngressInput</code> for a non-default VPC. Any thoughts how do I do it?",
  "id": "599efa2ea7b406262dc21ac6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-08-24T16:09:18.656Z",
  "text": "Hi,  I am trying to specify a source security group in go for `AuthorizeSecurityGroupIngressInput` for a non-default VPC. Any thoughts how do I do it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ratidurga_twitter\" class=\"mention\">@ratidurga_twitter</span> need to  use this<pre><code>  <span class=\"comment\">// The ID of the security group. Required for a nondefault VPC.</span>\n    GroupId *<span class=\"built_in\">string</span> `<span class=\"built_in\">type</span>:<span class=\"string\">\"string\"</span>`</code></pre>",
  "id": "599f079c162adb6d2e2da894",
  "issues": [],
  "mentions": [
   {
    "screenName": "ratidurga_twitter",
    "userId": "599ef9b1d73408ce4f72d06b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-08-24T17:06:36.626Z",
  "text": "@ratidurga_twitter need to  use this\n```\n  // The ID of the security group. Required for a nondefault VPC.\n    GroupId *string `type:\"string\"`\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/ratidurga_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "Ratika",
   "id": "599ef9b1d73408ce4f72d06b",
   "url": "/ratidurga_twitter",
   "username": "ratidurga_twitter"
  },
  "html": "<code>AuthorizeSecurityGroupIngressInput</code> <code>GroupId</code> refers to the security group to attach rule. right? How to specify <code>sourcesecuritygroup</code>?",
  "id": "599f1648614889d4758256a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-08-24T18:09:12.820Z",
  "text": "`AuthorizeSecurityGroupIngressInput` `GroupId ` refers to the security group to attach rule. right? How to specify `sourcesecuritygroup`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "Any samples how to print the ec2 instance state ? I have pasted the code above",
  "id": "599f1f3876a757f808dcb707",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-08-24T18:47:20.371Z",
  "text": "Any samples how to print the ec2 instance state ? I have pasted the code above",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"linuxbsdfreak\" class=\"mention\">@linuxbsdfreak</span> <code>*inst.State</code> should print something like <pre><code>{\n  <span class=\"attribute\">Code</span>: <span class=\"number\">16</span>,\n  <span class=\"attribute\">Name</span>: <span class=\"string\">\"running\"</span>\n}</code></pre>",
  "id": "599f80f4162adb6d2e2fa9c5",
  "issues": [],
  "mentions": [
   {
    "screenName": "linuxbsdfreak",
    "userId": "55896aba15522ed4b3e2803d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-08-25T01:44:20.879Z",
  "text": "@linuxbsdfreak `*inst.State` should print something like \n```\n{\n  Code: 16,\n  Name: \"running\"\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "<code>*inst.State</code> return <code>*ec2.InstanceState</code> type",
  "id": "599f816d9acddb2407c794e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-08-25T01:46:21.809Z",
  "text": "`*inst.State` return `*ec2.InstanceState` type",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ratidurga_twitter\" class=\"mention\">@ratidurga_twitter</span> may have to create the securitygroup first",
  "id": "59a0404e578b44a046e9735e",
  "issues": [],
  "mentions": [
   {
    "screenName": "ratidurga_twitter",
    "userId": "599ef9b1d73408ce4f72d06b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-08-25T15:20:46.247Z",
  "text": "@ratidurga_twitter may have to create the securitygroup first",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/Burke413_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/464389420716539904/xkeQyG3H.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/464389420716539904/xkeQyG3H_bigger.jpeg",
   "displayName": "Tom Burke",
   "id": "59a04c27d73408ce4f72f62e",
   "url": "/Burke413_twitter",
   "username": "Burke413_twitter"
  },
  "html": "hi! I was wondering if there is any possible way to create an AWS programmatically -- outside of an Organization?",
  "id": "59a04c43578b44a046e9ad9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-08-25T16:11:47.768Z",
  "text": "hi! I was wondering if there is any possible way to create an AWS programmatically -- outside of an Organization?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Create an account?",
  "id": "59a05c939acddb2407cb3b6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-08-25T17:21:23.356Z",
  "text": "Create an account?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/ratidurga_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "Ratika",
   "id": "599ef9b1d73408ce4f72d06b",
   "url": "/ratidurga_twitter",
   "username": "ratidurga_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ffoysal\" class=\"mention\">@ffoysal</span> thanks but security group is already created and in use. Finally solved my issue. Apperently it is as follows ",
  "id": "59a08a10578b44a046eac181",
  "issues": [],
  "mentions": [
   {
    "screenName": "ffoysal",
    "userId": "57475a6ec43b8c6019752519",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-08-25T20:35:28.123Z",
  "text": "@ffoysal thanks but security group is already created and in use. Finally solved my issue. Apperently it is as follows ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-08-25T20:35:59.417Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/ratidurga_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "Ratika",
   "id": "599ef9b1d73408ce4f72d06b",
   "url": "/ratidurga_twitter",
   "username": "ratidurga_twitter"
  },
  "html": "input := &amp;ec2.AuthorizeSecurityGroupIngressInput{<br>        GroupId: aws.String(grpid),<br>        IpPermissions: []<em>ec2.IpPermission{<br>            {<br>                IpProtocol: aws.String(protocol),<br>                ToPort:     aws.Int64(tport),<br>                FromPort:   aws.Int64(fport),<br>                UserIdGroupPairs: []</em>ec2.UserIdGroupPair{<br>                    {<br>                        GroupId: aws.String(ssgname),<br>                    },<br>                },<br>            },<br>        },<br>    }<pre><code>Here, grpid = Id <span class=\"keyword\">of</span> the security-group <span class=\"keyword\">to</span> which <span class=\"keyword\">this</span> rule <span class=\"keyword\">is</span> attaching\n      protocol=tcp, udp etc\n      tport=ToPort\n      fport= FromPort\n      ssgname= SourceSecutityGroup Name</code></pre>",
  "id": "59a08a11bc46472974c15f05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-08-25T20:35:29.781Z",
  "text": "\ninput := &ec2.AuthorizeSecurityGroupIngressInput{\n\t\tGroupId: aws.String(grpid),\n\t\tIpPermissions: []*ec2.IpPermission{\n\t\t\t{\n\t\t\t\tIpProtocol: aws.String(protocol),\n\t\t\t\tToPort:     aws.Int64(tport),\n\t\t\t\tFromPort:   aws.Int64(fport),\n\t\t\t\tUserIdGroupPairs: []*ec2.UserIdGroupPair{\n\t\t\t\t\t{\n\t\t\t\t\t\tGroupId: aws.String(ssgname),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n\t\n\t\n\tHere, grpid = Id of the security-group to which this rule is attaching\n\t      protocol=tcp, udp etc\n\t\t  tport=ToPort\n\t\t  fport= FromPort\n\t\t  ssgname= SourceSecutityGroup Name",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cjacques1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=60",
   "displayName": "cjacques1",
   "gv": "4",
   "id": "59a59b34d73408ce4f737563",
   "url": "/cjacques1",
   "username": "cjacques1",
   "v": 2
  },
  "html": "hey, I&#39;m trying to consume from my kinesis streams with lambda, is there a way to limit how many times it retries?",
  "id": "59a59b4eee5c9a4c5f10de56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-08-29T16:50:22.557Z",
  "text": "hey, I'm trying to consume from my kinesis streams with lambda, is there a way to limit how many times it retries?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cjacques1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=60",
   "displayName": "cjacques1",
   "gv": "4",
   "id": "59a59b34d73408ce4f737563",
   "url": "/cjacques1",
   "username": "cjacques1",
   "v": 2
  },
  "html": "I&#39;d like it to just fail and move on, not keep retrying until the record expires",
  "id": "59a59b5cc101bc4e3a6c047e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-08-29T16:50:36.913Z",
  "text": "I'd like it to just fail and move on, not keep retrying until the record expires",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/bethge",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/522575?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/522575?v=4&s=60",
   "displayName": "Marius Stefan Bethge",
   "gv": "4",
   "id": "59a830c8d73408ce4f73c76e",
   "url": "/bethge",
   "username": "bethge",
   "v": 1
  },
  "html": "Hi, there. Is there some easy way to get my account ID from my credentials?",
  "id": "59a830f2b16f264642f05fb3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-08-31T15:53:22.687Z",
  "text": "Hi, there. Is there some easy way to get my account ID from my credentials?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/bethge",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/522575?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/522575?v=4&s=60",
   "displayName": "Marius Stefan Bethge",
   "gv": "4",
   "id": "59a830c8d73408ce4f73c76e",
   "url": "/bethge",
   "username": "bethge",
   "v": 1
  },
  "html": "Found a way: <a href=\"https://github.com/aws/amazon-ecs-cli/blob/master/ecs-cli/modules/clients/aws/sts/client.go\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/amazon-ecs-cli/blob/master/ecs-cli/modules/clients/aws/sts/client.go</a>",
  "id": "59a833209acddb2407eb848d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-08-31T16:02:40.850Z",
  "text": "Found a way: https://github.com/aws/amazon-ecs-cli/blob/master/ecs-cli/modules/clients/aws/sts/client.go",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/amazon-ecs-cli/blob/master/ecs-cli/modules/clients/aws/sts/client.go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/jvalentine",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/793223?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/793223?v=4&s=60",
   "displayName": "jvalentine",
   "gv": "4",
   "id": "59aea5d2d73408ce4f74651e",
   "url": "/jvalentine",
   "username": "jvalentine"
  },
  "html": "Hey, does the sdk allow bulk upload to s3? I can see the batch stuff, but no way to kick it off",
  "id": "59aea5ebba0f0f6e381bffd5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-09-05T13:26:03.968Z",
  "text": "Hey, does the sdk allow bulk upload to s3? I can see the batch stuff, but no way to kick it off",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/sat51433_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "sateesh",
   "id": "59af9351d73408ce4f7480c0",
   "url": "/sat51433_twitter",
   "username": "sat51433_twitter"
  },
  "html": "Hi,  is there any chance to write a go lambda function on amazon lambda.",
  "id": "59af93a066c1c7c4771d87e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-09-06T06:20:16.294Z",
  "text": "Hi,  is there any chance to write a go lambda function on amazon lambda.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Yes look at apex.run ",
  "id": "59aff4a6210ac26920ff1de2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-09-06T13:14:14.290Z",
  "text": "Yes look at apex.run ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/shettyritesh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11489866?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11489866?v=4&s=60",
   "displayName": "shettyritesh",
   "gv": "4",
   "id": "5997698ed73408ce4f720408",
   "url": "/shettyritesh",
   "username": "shettyritesh"
  },
  "html": "Hi ... I have been unable to get account name of an account which hasn&#39;t enabled organizations. I am able to get account name for accounts which have organizations enabled. Some help appreciated !! ",
  "id": "59b04b0f614889d475ca4b63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-09-06T19:22:55.685Z",
  "text": "Hi ... I have been unable to get account name of an account which hasn't enabled organizations. I am able to get account name for accounts which have organizations enabled. Some help appreciated !! ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "Hi everyone, can I do a search on dynamodb using a column that is not the table key?",
  "id": "59b073c3162adb6d2e758ae8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-09-06T22:16:35.300Z",
  "text": "Hi everyone, can I do a search on dynamodb using a column that is not the table key?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kaverappa-ib",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/15953628?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/15953628?v=4&s=60",
   "displayName": "kaverappa-ib",
   "gv": "4",
   "id": "582c3412d73408ce4f363f27",
   "url": "/kaverappa-ib",
   "username": "kaverappa-ib",
   "v": 7
  },
  "html": "hi, can someone help me list all the snapshot and filter them based on string",
  "id": "59b153288f4427b462e107d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-07T14:09:44.908Z",
  "text": "hi, can someone help me list all the snapshot and filter them based on string",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cjacques1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=60",
   "displayName": "cjacques1",
   "gv": "4",
   "id": "59a59b34d73408ce4f737563",
   "url": "/cjacques1",
   "username": "cjacques1",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sateesh\" class=\"mention\">@sateesh</span> I use <a href=\"https://github.com/eawsy/aws-lambda-go-shim\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/eawsy/aws-lambda-go-shim</a>",
  "id": "59b171ec4e50cfde271490f1",
  "issues": [],
  "mentions": [
   {
    "screenName": "sateesh",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-07T16:21:00.651Z",
  "text": "@sateesh I use https://github.com/eawsy/aws-lambda-go-shim",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/eawsy/aws-lambda-go-shim"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cjacques1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=60",
   "displayName": "cjacques1",
   "gv": "4",
   "id": "59a59b34d73408ce4f737563",
   "url": "/cjacques1",
   "username": "cjacques1",
   "v": 2
  },
  "html": "I&#39;m parsing Kinesis streams, so I use these submodules for it &quot;<a href=\"http://github.com/eawsy/aws-lambda-go-core/service/lambda/runtime\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/eawsy/aws-lambda-go-core/service/lambda/runtime</a>&quot;<br>    &quot;<a href=\"http://github.com/eawsy/aws-lambda-go-event/service/lambda/runtime/event/kinesisstreamsevt\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/eawsy/aws-lambda-go-event/service/lambda/runtime/event/kinesisstreamsevt</a>&quot;",
  "id": "59b172199acddb2407123e72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-07T16:21:45.364Z",
  "text": "I'm parsing Kinesis streams, so I use these submodules for it \"github.com/eawsy/aws-lambda-go-core/service/lambda/runtime\"\n\t\"github.com/eawsy/aws-lambda-go-event/service/lambda/runtime/event/kinesisstreamsevt\"",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/eawsy/aws-lambda-go-core/service/lambda/runtime"
   },
   {
    "url": "http://github.com/eawsy/aws-lambda-go-event/service/lambda/runtime/event/kinesisstreamsevt"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cjacques1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=60",
   "displayName": "cjacques1",
   "gv": "4",
   "id": "59a59b34d73408ce4f737563",
   "url": "/cjacques1",
   "username": "cjacques1",
   "v": 2
  },
  "html": "and then you just make a func <code>func Handle(evt *kinesisstreamsevt.Event, ctx *runtime.Context) (interface{}, error) {</code>",
  "id": "59b1722cbc464729740835f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-09-07T16:22:04.416Z",
  "text": "and then you just make a func ```func Handle(evt *kinesisstreamsevt.Event, ctx *runtime.Context) (interface{}, error) {```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cjacques1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=60",
   "displayName": "cjacques1",
   "gv": "4",
   "id": "59a59b34d73408ce4f737563",
   "url": "/cjacques1",
   "username": "cjacques1",
   "v": 2
  },
  "html": "you run it using the python2.7 option",
  "id": "59b17259bac826f0548e8302",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-09-07T16:22:49.209Z",
  "text": "you run it using the python2.7 option",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/shencan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11796215?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11796215?v=4&s=60",
   "displayName": "shencan",
   "gv": "4",
   "id": "595bae56d73408ce4f6b8f2c",
   "url": "/shencan",
   "username": "shencan",
   "v": 4
  },
  "html": "hi I use  s3.ListObjectsInput get s3 object . the default the MaxKeys value is 1000, I  setting 999999 to request. but the result  is limit 1000. how can  get all object?",
  "id": "59b279f2bac826f054930f34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-08T11:07:30.580Z",
  "text": "hi I use  s3.ListObjectsInput get s3 object . the default the MaxKeys value is 1000, I  setting 999999 to request. but the result  is limit 1000. how can  get all object?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/shencan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11796215?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11796215?v=4&s=60",
   "displayName": "shencan",
   "gv": "4",
   "id": "595bae56d73408ce4f6b8f2c",
   "url": "/shencan",
   "username": "shencan",
   "v": 4
  },
  "html": "the result IsTruncated is true. but the <code>NextMarker</code> is None",
  "id": "59b27a6abac826f054931100",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-08T11:09:30.102Z",
  "text": "the result IsTruncated is true. but the `NextMarker` is None",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"shencan\" class=\"mention\">@shencan</span> - There is an example here <a href=\"https://github.com/aws/aws-sdk-go/blob/master/example/service/s3/listObjects/listObjects.go\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/blob/master/example/service/s3/listObjects/listObjects.go</a>",
  "id": "59b28438bac826f054933c8b",
  "issues": [],
  "mentions": [
   {
    "screenName": "shencan",
    "userId": "595bae56d73408ce4f6b8f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-08T11:51:20.199Z",
  "text": "@shencan - There is an example here https://github.com/aws/aws-sdk-go/blob/master/example/service/s3/listObjects/listObjects.go",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/blob/master/example/service/s3/listObjects/listObjects.go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "which i used to scan the s3 buckets ",
  "id": "59b28459bac826f054933d57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-08T11:51:53.692Z",
  "text": "which i used to scan the s3 buckets ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/shencan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11796215?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11796215?v=4&s=60",
   "displayName": "shencan",
   "gv": "4",
   "id": "595bae56d73408ce4f6b8f2c",
   "url": "/shencan",
   "username": "shencan",
   "v": 4
  },
  "html": "thank you",
  "id": "59b2845fbc464729740cfd40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-08T11:51:59.926Z",
  "text": "thank you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "how can i get the autoscaling group name to which an instance belongs to from an ec2 instance?",
  "id": "59b29382c101bc4e3aa2a738",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-08T12:56:34.565Z",
  "text": "how can i get the autoscaling group name to which an instance belongs to from an ec2 instance?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lakshmisampath",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7337627?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7337627?v=4&s=60",
   "displayName": "lakshmisampath",
   "gv": "4",
   "id": "58f7ad94d73408ce4f59876e",
   "url": "/lakshmisampath",
   "username": "lakshmisampath",
   "v": 1
  },
  "html": "can anyone tell me what&#39;s the api for retrieving availability zones in a region?",
  "id": "59b30c2ec101bc4e3aa4eab0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-09-08T21:31:26.325Z",
  "text": "can anyone tell me what's the api for retrieving availability zones in a region?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/lakshmisampath",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7337627?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7337627?v=4&s=60",
   "displayName": "lakshmisampath",
   "gv": "4",
   "id": "58f7ad94d73408ce4f59876e",
   "url": "/lakshmisampath",
   "username": "lakshmisampath",
   "v": 1
  },
  "html": "I can list the regions using endpoints but regions doesn&#39;t have zone info",
  "id": "59b30c85614889d475d674ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-09-08T21:32:53.477Z",
  "text": "I can list the regions using endpoints but regions doesn't have zone info",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "  i looked at the sample <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/autoscaling/#example_AutoScaling_DescribeAutoScalingInstances_shared00\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/autoscaling/#example_AutoScaling_DescribeAutoScalingInstances_shared00</a>",
  "id": "59b662dd614889d475e313a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-11T10:18:05.571Z",
  "text": "  i looked at the sample https://docs.aws.amazon.com/sdk-for-go/api/service/autoscaling/#example_AutoScaling_DescribeAutoScalingInstances_shared00",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/autoscaling/#example_AutoScaling_DescribeAutoScalingInstances_shared00"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "how do i get the Autoscaling group name from it?",
  "id": "59b662ef614889d475e313e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-11T10:18:23.197Z",
  "text": "how do i get the Autoscaling group name from it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/sat51433_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "sateesh",
   "id": "59af9351d73408ce4f7480c0",
   "url": "/sat51433_twitter",
   "username": "sat51433_twitter"
  },
  "html": "hi, any one is working on aws lambda functions using golang ?",
  "id": "59b673a0177fb9fe7ea7d609",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-09-11T11:29:36.949Z",
  "text": "hi, any one is working on aws lambda functions using golang ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "Any clues on getting the ASG from an instance?",
  "id": "59b6747c319100804e1ee775",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-09-11T11:33:16.633Z",
  "text": "Any clues on getting the ASG from an instance?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/sat51433_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "sateesh",
   "id": "59af9351d73408ce4f7480c0",
   "url": "/sat51433_twitter",
   "username": "sat51433_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cjacques1\" class=\"mention\">@cjacques1</span>  , Hi &quot;<a href=\"http://github.com/eawsy/aws-lambda-go-event/service/lambda/runtime/event/kinesisstreamsevt\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/eawsy/aws-lambda-go-event/service/lambda/runtime/event/kinesisstreamsevt</a>&quot; is not working",
  "id": "59b67aa0319100804e1f0b73",
  "issues": [],
  "mentions": [
   {
    "screenName": "cjacques1",
    "userId": "59a59b34d73408ce4f737563",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-11T11:59:28.993Z",
  "text": "@cjacques1  , Hi \"github.com/eawsy/aws-lambda-go-event/service/lambda/runtime/event/kinesisstreamsevt\" is not working",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/eawsy/aws-lambda-go-event/service/lambda/runtime/event/kinesisstreamsevt"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/sat51433_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "sateesh",
   "id": "59af9351d73408ce4f7480c0",
   "url": "/sat51433_twitter",
   "username": "sat51433_twitter"
  },
  "html": "Hi, i am trying to create a lambda function using aws apigateway proxy method. even though i pass query parameters, it shows null  ",
  "id": "59b67b8bbc464729741cad85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-11T12:03:23.516Z",
  "text": "Hi, i am trying to create a lambda function using aws apigateway proxy method. even though i pass query parameters, it shows null  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/sat51433_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "sateesh",
   "id": "59af9351d73408ce4f7480c0",
   "url": "/sat51433_twitter",
   "username": "sat51433_twitter"
  },
  "html": "<a href=\"https://user-images.githubusercontent.com/29975072/30273442-a0e47e6a-9716-11e7-8a5d-d6d436411e4b.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://user-images.githubusercontent.com/29975072/30273442-a0e47e6a-9716-11e7-8a5d-d6d436411e4b.png</a>",
  "id": "59b67b92210ac26920196e08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-11T12:03:30.137Z",
  "text": "https://user-images.githubusercontent.com/29975072/30273442-a0e47e6a-9716-11e7-8a5d-d6d436411e4b.png",
  "unread": false,
  "urls": [
   {
    "url": "https://user-images.githubusercontent.com/29975072/30273442-a0e47e6a-9716-11e7-8a5d-d6d436411e4b.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "how do i parse result, _:= svc.DescribeAutoScalingInstances(input) which is of type (type *autoscaling.DescribeAutoScalingInstancesOutput). i really cannot find any examples? Can someone guide me?",
  "id": "59b69d0dc101bc4e3ab2c052",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-09-11T14:26:21.339Z",
  "text": "how do i parse result, _:= svc.DescribeAutoScalingInstances(input) which is of type (type *autoscaling.DescribeAutoScalingInstancesOutput). i really cannot find any examples? Can someone guide me?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sdeljo",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16270129?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16270129?v=4&s=60",
   "displayName": "sdeljo",
   "gv": "4",
   "id": "599b2491d73408ce4f725856",
   "url": "/sdeljo",
   "username": "sdeljo",
   "v": 1
  },
  "html": "Hey Guys,<br>In case you&#39;re using Slack &amp; AWS: We built a slash(/) command tool for Slack that searches your AWS. You can find instances (by tags etc..), queues (+refresh to monitor them) and more ... If you want to play with it you can get it from here (<a href=\"https://www.beehive.ai/aws-on-slack\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.beehive.ai/aws-on-slack</a>). Setup is straight FW (IAM + Slack app). Would love to get feedback and ideas/<em>or requests</em>.<br>Cheers,",
  "id": "59b716f8cfeed2eb65f949e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-09-11T23:06:32.733Z",
  "text": "Hey Guys,\nIn case you're using Slack & AWS: We built a slash(/) command tool for Slack that searches your AWS. You can find instances (by tags etc..), queues (+refresh to monitor them) and more ... If you want to play with it you can get it from here (https://www.beehive.ai/aws-on-slack). Setup is straight FW (IAM + Slack app). Would love to get feedback and ideas/*or requests*.\nCheers,",
  "unread": false,
  "urls": [
   {
    "url": "https://www.beehive.ai/aws-on-slack"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/vikas027",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6998650?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6998650?v=4&s=60",
   "displayName": "Vikas Kumar",
   "gv": "4",
   "id": "592aba1bd73408ce4f62dc39",
   "url": "/vikas027",
   "username": "vikas027",
   "v": 5
  },
  "html": "Hey guys, can anyone pls point me to a simple example of decrypting ssm get-parameter ? ",
  "id": "59b71f71c101bc4e3ab59db5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-09-11T23:42:41.520Z",
  "text": "Hey guys, can anyone pls point me to a simple example of decrypting ssm get-parameter ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dfense",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2816620?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2816620?v=4&s=60",
   "displayName": "dfense",
   "gv": "4",
   "id": "59b749a8d73408ce4f755952",
   "url": "/dfense",
   "username": "dfense"
  },
  "html": "Looking for a link on how to connect to AWS-IoT via golang mqtt message",
  "id": "59b749cb1081499f1f1e3994",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-09-12T02:43:23.667Z",
  "text": "Looking for a link on how to connect to AWS-IoT via golang mqtt message",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/dfense",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2816620?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2816620?v=4&s=60",
   "displayName": "dfense",
   "gv": "4",
   "id": "59b749a8d73408ce4f755952",
   "url": "/dfense",
   "username": "dfense"
  },
  "html": "have account setup and can use web based example currently",
  "id": "59b749e1319100804e2387c1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-09-12T02:43:45.884Z",
  "text": "have account setup and can use web based example currently",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "I have a question on using presgined URL to download objects from S3. There is an expiry time that we can set for presigned URL. If I have a huge file to be downloaded and suppose the download takes anywhere from 1 minute to 30minutes. In this case, can i set the presigned url expiry time to 30sec and start the download in 30sec. I mean is  the presigned URL expiry time checked only when the download is initiated. Does it matter how if the file download takes way longer than the expiry time? ",
  "id": "59b77bd6bac826f054a8465a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-09-12T06:16:54.592Z",
  "text": "I have a question on using presgined URL to download objects from S3. There is an expiry time that we can set for presigned URL. If I have a huge file to be downloaded and suppose the download takes anywhere from 1 minute to 30minutes. In this case, can i set the presigned url expiry time to 30sec and start the download in 30sec. I mean is  the presigned URL expiry time checked only when the download is initiated. Does it matter how if the file download takes way longer than the expiry time? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/sfahmi123",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25776100?v=4&s=60",
   "displayName": "sfahmi123",
   "gv": "4",
   "id": "59037d80d73408ce4f5bb1b7",
   "url": "/sfahmi123",
   "username": "sfahmi123",
   "v": 1
  },
  "html": "I tested with 30sec expiry and file download time of around 2 to 3min and it worked. I wanted to make sure there is no validation check done after some fixed amount of time (after which the  download is initiated)",
  "id": "59b77c12614889d475e8cc7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-09-12T06:17:54.347Z",
  "text": "I tested with 30sec expiry and file download time of around 2 to 3min and it worked. I wanted to make sure there is no validation check done after some fixed amount of time (after which the  download is initiated)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "how do i get the latest s3 object in a bucket with the go aws-sdk ?",
  "id": "59b7fa61b59d55b823e8ed4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-09-12T15:16:49.510Z",
  "text": "how do i get the latest s3 object in a bucket with the go aws-sdk ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"dfense\" class=\"mention\">@dfense</span> you may be able to create custom AWS v4 signed requests using the SDK&#39;s built in V4 signer, <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/signer/v4/#NewSigner\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/aws/signer/v4/#NewSigner</a>",
  "id": "59b81353b59d55b823e98a13",
  "issues": [],
  "mentions": [
   {
    "screenName": "dfense",
    "userId": "59b749a8d73408ce4f755952",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-09-12T17:03:15.087Z",
  "text": "@dfense you may be able to create custom AWS v4 signed requests using the SDK's built in V4 signer, http://docs.aws.amazon.com/sdk-for-go/api/aws/signer/v4/#NewSigner",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/signer/v4/#NewSigner"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sfahmi123\" class=\"mention\">@sfahmi123</span> I think the presigned URL is only used when the request is initially made. So you should be able to download the object&#39;s content stream after the initial signature has expired. This pattern would also mean that the downloader probably won&#39;t be able to retry a failed download as the original signature will of expired. You many also need to adjust for clockskew as 30 seconds is a pretty sure duration that a small amount of clock skew could cause to fail.",
  "id": "59b8148a177fb9fe7eb0debd",
  "issues": [],
  "mentions": [
   {
    "screenName": "sfahmi123",
    "userId": "59037d80d73408ce4f5bb1b7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-09-12T17:08:26.230Z",
  "text": "@sfahmi123 I think the presigned URL is only used when the request is initially made. So you should be able to download the object's content stream after the initial signature has expired. This pattern would also mean that the downloader probably won't be able to retry a failed download as the original signature will of expired. You many also need to adjust for clockskew as 30 seconds is a pretty sure duration that a small amount of clock skew could cause to fail.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"linuxbsdfreak\" class=\"mention\">@linuxbsdfreak</span> The best way to get the latest version of an S3 object is to use <code>GetObject</code> API without a <code>VersionId</code> parameter. By default s3 buckets are not versioned and only contain the latest version. If you version your bucket doing a <code>GetObject</code> without an explicit version will return the most recent version of the object. The <code>VersionId</code> parameter is used to retrieve a specific version of the object.",
  "id": "59b8157fbc4647297425a386",
  "issues": [],
  "mentions": [
   {
    "screenName": "linuxbsdfreak",
    "userId": "55896aba15522ed4b3e2803d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-09-12T17:12:31.628Z",
  "text": "@linuxbsdfreak The best way to get the latest version of an S3 object is to use `GetObject` API without a `VersionId` parameter. By default s3 buckets are not versioned and only contain the latest version. If you version your bucket doing a `GetObject` without an explicit version will return the most recent version of the object. The `VersionId` parameter is used to retrieve a specific version of the object.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/the1337beauty_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/2163201626/logo-small.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/2163201626/logo-small_bigger.png",
   "displayName": "Andrea Kimberlin",
   "id": "58dbb7f4d73408ce4f549306",
   "url": "/the1337beauty_twitter",
   "username": "the1337beauty_twitter",
   "v": 1
  },
  "html": "does anyone now how to check the status of a Data Pipeline after activating it using ActivateDataPipeline?",
  "id": "59b82bd4b59d55b823ea1c5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-09-12T18:47:48.687Z",
  "text": "does anyone now how to check the status of a Data Pipeline after activating it using ActivateDataPipeline?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/the1337beauty_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/2163201626/logo-small.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/2163201626/logo-small_bigger.png",
   "displayName": "Andrea Kimberlin",
   "id": "58dbb7f4d73408ce4f549306",
   "url": "/the1337beauty_twitter",
   "username": "the1337beauty_twitter",
   "v": 1
  },
  "html": "similar to CLI command &#39;list-runs&#39; but I don&#39;t see this function in the API",
  "id": "59b82be2c101bc4e3abb326d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-09-12T18:48:01.999Z",
  "text": "similar to CLI command 'list-runs' but I don't see this function in the API",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"the1337beauty_twitter\" class=\"mention\">@the1337beauty_twitter</span> This would be a good question for stack overflow. you&#39;ll reach a pretty good wide audience with that",
  "id": "59b834081081499f1f233a80",
  "issues": [],
  "mentions": [
   {
    "screenName": "the1337beauty_twitter",
    "userId": "58dbb7f4d73408ce4f549306",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-09-12T19:22:48.212Z",
  "text": "@the1337beauty_twitter This would be a good question for stack overflow. you'll reach a pretty good wide audience with that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/boscomateo",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/19394266?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/19394266?v=4&s=60",
   "displayName": "Mateo Bosco",
   "gv": "4",
   "id": "59b989e3d73408ce4f75a475",
   "url": "/boscomateo",
   "username": "boscomateo"
  },
  "html": "hola",
  "id": "59b98a02614889d475f44c18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-09-13T19:41:54.342Z",
  "text": "hola",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi ya <span data-link-type=\"mention\" data-screen-name=\"boscomateo\" class=\"mention\">@boscomateo</span>, welcome",
  "id": "59b98fd2319100804e2fc566",
  "issues": [],
  "mentions": [
   {
    "screenName": "boscomateo",
    "userId": "59b989e3d73408ce4f75a475",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-09-13T20:06:42.715Z",
  "text": "Hi ya @boscomateo, welcome",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-09-16T21:47:40.802Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/elliott-beach",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13651458?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13651458?v=4&s=60",
   "displayName": "Elliott Beach",
   "gv": "4",
   "id": "5695273916b6c7089cc23666",
   "url": "/elliott-beach",
   "username": "elliott-beach",
   "v": 8
  },
  "html": "Hola, where does aws-sdk-go get the json API descriptions of the endpoints? Reason for the question is I was looking into <span data-link-type=\"issue\" data-issue=\"1391\" class=\"issue\">#1391</span>",
  "id": "59bd9be6210ac269203d4b52",
  "issues": [
   {
    "number": "1391"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-09-16T21:47:18.617Z",
  "text": "Hola, where does aws-sdk-go get the json API descriptions of the endpoints? Reason for the question is I was looking into #1391",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"e-beach\" class=\"mention\">@e-beach</span> good question...like a swagger definition?",
  "id": "59bf0917bac826f054cdacfc",
  "issues": [],
  "mentions": [
   {
    "screenName": "e-beach",
    "userId": "5695273916b6c7089cc23666",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-09-17T23:45:27.887Z",
  "text": "@e-beach good question...like a swagger definition?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/elliott-beach",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13651458?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13651458?v=4&s=60",
   "displayName": "Elliott Beach",
   "gv": "4",
   "id": "5695273916b6c7089cc23666",
   "url": "/elliott-beach",
   "username": "elliott-beach",
   "v": 8
  },
  "html": "Yes",
  "id": "59bf0972177fb9fe7ed2f1aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-09-17T23:46:58.604Z",
  "text": "Yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/elliott-beach",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13651458?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13651458?v=4&s=60",
   "displayName": "Elliott Beach",
   "gv": "4",
   "id": "5695273916b6c7089cc23666",
   "url": "/elliott-beach",
   "username": "elliott-beach",
   "v": 8
  },
  "html": "The Machine readable API definition which is used to generate a lot of the sdk",
  "id": "59bf098ac101bc4e3adc17e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-09-17T23:47:22.375Z",
  "text": "The Machine readable API definition which is used to generate a lot of the sdk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/challarao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4150151?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4150151?v=4&s=60",
   "displayName": "challarao",
   "gv": "4",
   "id": "574c1bdfc43b8c601975b29a",
   "url": "/challarao",
   "username": "challarao",
   "v": 7
  },
  "html": "Hello guys",
  "id": "59bfc0e7b59d55b8230e93cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-09-18T12:49:43.125Z",
  "text": "Hello guys",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/challarao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4150151?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4150151?v=4&s=60",
   "displayName": "challarao",
   "gv": "4",
   "id": "574c1bdfc43b8c601975b29a",
   "url": "/challarao",
   "username": "challarao",
   "v": 7
  },
  "html": "is there get notified from aws go api when a chunk  is  retried?",
  "id": "59bfc0fa177fb9fe7ed66bc4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-18T12:50:02.788Z",
  "text": "is there get notified from aws go api when a chunk  is  retried?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/challarao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4150151?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4150151?v=4&s=60",
   "displayName": "challarao",
   "gv": "4",
   "id": "574c1bdfc43b8c601975b29a",
   "url": "/challarao",
   "username": "challarao",
   "v": 7
  },
  "html": "is there a way*",
  "id": "59bfc0ff177fb9fe7ed66bf3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-18T12:50:07.584Z",
  "text": "is there a way*",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/challarao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4150151?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4150151?v=4&s=60",
   "displayName": "challarao",
   "gv": "4",
   "id": "574c1bdfc43b8c601975b29a",
   "url": "/challarao",
   "username": "challarao",
   "v": 7
  },
  "html": "other than may be implementing a custom retrier?",
  "id": "59bfc1171081499f1f472c2d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-18T12:50:31.077Z",
  "text": "other than may be implementing a custom retrier?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/challarao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4150151?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4150151?v=4&s=60",
   "displayName": "challarao",
   "gv": "4",
   "id": "574c1bdfc43b8c601975b29a",
   "url": "/challarao",
   "username": "challarao",
   "v": 7
  },
  "html": "I know that the messages are logged in debug log when enabled, but I want to get a notification of a retry",
  "id": "59bfc12d177fb9fe7ed66cab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-09-18T12:50:53.124Z",
  "text": "I know that the messages are logged in debug log when enabled, but I want to get a notification of a retry",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/challarao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4150151?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4150151?v=4&s=60",
   "displayName": "challarao",
   "gv": "4",
   "id": "574c1bdfc43b8c601975b29a",
   "url": "/challarao",
   "username": "challarao",
   "v": 7
  },
  "html": "any help?",
  "id": "59bfc130210ac2692046ae41",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-09-18T12:50:56.103Z",
  "text": "any help?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"e-beach\" class=\"mention\">@e-beach</span> The models for the service clients are defined in model/api/&lt;serviceName&gt;/&lt;date&gt;/api-2.json These models define most aspects of a service API that the SDKs will generate Go code from. In the case of <span data-link-type=\"issue\" data-issue=\"1391\" class=\"issue\">#1391</span>, pagination is added via the pagination.json file in the same folder.",
  "id": "59bffabbcfeed2eb6524a81e",
  "issues": [
   {
    "number": "1391"
   }
  ],
  "mentions": [
   {
    "screenName": "e-beach",
    "userId": "5695273916b6c7089cc23666",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-09-18T16:56:27.731Z",
  "text": "@e-beach The models for the service clients are defined in model/api/<serviceName>/<date>/api-2.json These models define most aspects of a service API that the SDKs will generate Go code from. In the case of #1391, pagination is added via the pagination.json file in the same folder.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "In the case of <span data-link-type=\"issue\" data-issue=\"1391\" class=\"issue\">#1391</span> I&#39;ll reach out internally to the SDK teams and see if there is any status on that pagination model, or why they are not already defined.",
  "id": "59bffd011081499f1f48a08c",
  "issues": [
   {
    "number": "1391"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-18T17:06:09.360Z",
  "text": "In the case of #1391 I'll reach out internally to the SDK teams and see if there is any status on that pagination model, or why they are not already defined.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"challarao\" class=\"mention\">@challarao</span> your application to inject a request handler to the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Handlers\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">AfterRetry</a>  handler. This handler will be called each time the SDK determines if a request should be retried. This handler will only be called if the request fails for some reason. you can check <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Request\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Request.Retryable</a> and  <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Retryer\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Request.Retryer.ShouldRetry</a> to determine if SDK expects to retry the request.",
  "id": "59c00e28614889d475136554",
  "issues": [],
  "mentions": [
   {
    "screenName": "challarao",
    "userId": "574c1bdfc43b8c601975b29a",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-18T18:19:20.224Z",
  "text": "@challarao your application to inject a request handler to the [AfterRetry](http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Handlers)  handler. This handler will be called each time the SDK determines if a request should be retried. This handler will only be called if the request fails for some reason. you can check [Request.Retryable](http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Request) and  [Request.Retryer.ShouldRetry](http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Retryer) to determine if SDK expects to retry the request.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Handlers"
   },
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Request"
   },
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Retryer"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/elliott-beach",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13651458?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13651458?v=4&s=60",
   "displayName": "Elliott Beach",
   "gv": "4",
   "id": "5695273916b6c7089cc23666",
   "url": "/elliott-beach",
   "username": "elliott-beach",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thanks!",
  "id": "59c010c67b7d98d30d0ed4ac",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-09-18T18:30:30.820Z",
  "text": "@jasdel thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/challarao",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4150151?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4150151?v=4&s=60",
   "displayName": "challarao",
   "gv": "4",
   "id": "574c1bdfc43b8c601975b29a",
   "url": "/challarao",
   "username": "challarao",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thanks",
  "id": "59c0b5f4c101bc4e3ae452e7",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-09-19T06:15:16.971Z",
  "text": "@jasdel thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kelwang",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8237958?v=4&s=60",
   "displayName": "kelwang",
   "gv": "4",
   "id": "555e798015522ed4b3e0c232",
   "url": "/kelwang",
   "username": "kelwang",
   "v": 7
  },
  "html": "I received an email from AWS, asking me to use an updated CA to connect redshift. I am using the golang postgres driver with sslmode=disable. Should I worry about the new changes?",
  "id": "59c19842bac826f054da690a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-19T22:20:50.060Z",
  "text": "I received an email from AWS, asking me to use an updated CA to connect redshift. I am using the golang postgres driver with sslmode=disable. Should I worry about the new changes?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/moos3",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5654?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5654?v=4&s=60",
   "displayName": "Richard",
   "gv": "4",
   "id": "5627a59016b6c7089cb7c7c2",
   "url": "/moos3",
   "username": "moos3",
   "v": 23
  },
  "html": "question how can check if a az is available ? so I\u2019m working from the example on the documentation, I want to validate a users input to make sure that az given is valid.",
  "id": "59c28995bc4647297458ae5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-09-20T15:30:29.509Z",
  "text": "question how can check if a az is available ? so I\u2019m working from the example on the documentation, I want to validate a users input to make sure that az given is valid.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/moos3",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5654?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5654?v=4&s=60",
   "displayName": "Richard",
   "gv": "4",
   "id": "5627a59016b6c7089cb7c7c2",
   "url": "/moos3",
   "username": "moos3",
   "v": 23
  },
  "html": "the filter syntax is a bit odd to me",
  "id": "59c289a11081499f1f54321e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-20T15:30:41.259Z",
  "text": "the filter syntax is a bit odd to me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/00imvj00",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5981019?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5981019?v=4&s=60",
   "displayName": "VJ",
   "gv": "4",
   "id": "5561331e15522ed4b3e0dd82",
   "url": "/00imvj00",
   "username": "00imvj00",
   "v": 15
  },
  "html": "hello, how do i set ACL &#39;public-read&#39; for perticular file while uploading",
  "id": "59c38379bac826f054e2c5b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-09-21T09:16:41.373Z",
  "text": "hello, how do i set ACL 'public-read' for perticular file while uploading",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/kakakakakku",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1573290?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1573290?v=4&s=60",
   "displayName": "Yoshiaki Yoshida",
   "gv": "4",
   "id": "5580450a15522ed4b3e1fee6",
   "url": "/kakakakakku",
   "username": "kakakakakku",
   "v": 14
  },
  "html": "<p>Hi, I&#39;m <span data-link-type=\"mention\" data-screen-name=\"kakakakakku\" class=\"mention\">@kakakakakku</span>.<br>Please give me a advice.</p><p>I&#39;m try using method of SQS <code>ReceiveMessage</code> in worker process.<br>Sometimes, <code>ReceiveMessage</code> return error below.</p><pre><code>ExpiredToken: The security token included <span class=\"keyword\">in</span> the <span class=\"built_in\">request</span> <span class=\"keyword\">is</span> expired</code></pre>",
  "id": "59c3b516177fb9fe7ee93e74",
  "issues": [],
  "mentions": [
   {
    "screenName": "kakakakakku",
    "userId": "5580450a15522ed4b3e1fee6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-09-21T12:48:22.292Z",
  "text": "Hi, I'm @kakakakakku.\nPlease give me a advice.\n\nI'm try using method of SQS `ReceiveMessage` in worker process.\nSometimes, `ReceiveMessage` return error below.\n\n```\nExpiredToken: The security token included in the request is expired\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/kakakakakku",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1573290?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1573290?v=4&s=60",
   "displayName": "Yoshiaki Yoshida",
   "gv": "4",
   "id": "5580450a15522ed4b3e1fee6",
   "url": "/kakakakakku",
   "username": "kakakakakku",
   "v": 14
  },
  "html": "What is need any additional code when generating the new session?<br>My sample code are below.<br>And I&#39;m using IAM Role with ECS.<pre><code><span class=\"tag\">newSession</span>, <span class=\"rule\"><span class=\"attribute\">err </span>:<span class=\"value\">= session.<span class=\"function\">NewSessionWithOptions</span>(session.Options{\n    Config:  *aws.<span class=\"function\">NewConfig</span>().<span class=\"function\">WithRegion</span>(region),\n})\nif err != nil {\n    // ...\n}\nsess := session.<span class=\"function\">Must</span>(newSession, err)\ns = sqs.<span class=\"function\">New</span>(sess)</span></span></code></pre>",
  "id": "59c3b5a91081499f1f593205",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-09-21T12:50:49.538Z",
  "text": "What is need any additional code when generating the new session?\nMy sample code are below.\nAnd I'm using IAM Role with ECS.\n\n```\nnewSession, err := session.NewSessionWithOptions(session.Options{\n\tConfig:  *aws.NewConfig().WithRegion(region),\n})\nif err != nil {\n\t// ...\n}\nsess := session.Must(newSession, err)\ns = sqs.New(sess)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/the1337beauty_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/2163201626/logo-small.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/2163201626/logo-small_bigger.png",
   "displayName": "Andrea Kimberlin",
   "id": "58dbb7f4d73408ce4f549306",
   "url": "/the1337beauty_twitter",
   "username": "the1337beauty_twitter",
   "v": 1
  },
  "html": "hello, looking for help on using Route53 ChangeResourceRecordSets function",
  "id": "59c506eb1081499f1f5ee3bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-09-22T12:49:47.058Z",
  "text": "hello, looking for help on using Route53 ChangeResourceRecordSets function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/alexpop",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/107378?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/107378?v=4&s=60",
   "displayName": "Alex Pop",
   "gv": "4",
   "id": "56e0c24d85d51f252ab808f3",
   "url": "/alexpop",
   "username": "alexpop",
   "v": 9
  },
  "html": "<p>Hello, I&#39;m writing code to query ec2 instances:</p><pre><code class=\"go\">params := &amp;ec2.DescribeInstancesInput{Filters: filters}\ninstances, err := ec2Client.DescribeInstances(params)</code></pre><p>Because of tag filters, I can&#39;t use the MaxResults param. Is there a max number of instances limit that I&#39;ll hit with this query? My test account has 350 instances and I retrieved all of them.</p>",
  "id": "59c8e279c101bc4e3a05f0d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-09-25T11:03:21.899Z",
  "text": "Hello, I'm writing code to query ec2 instances:\n```go\nparams := &ec2.DescribeInstancesInput{Filters: filters}\ninstances, err := ec2Client.DescribeInstances(params)\n```\nBecause of tag filters, I can't use the MaxResults param. Is there a max number of instances limit that I'll hit with this query? My test account has 350 instances and I retrieved all of them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/shencan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11796215?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11796215?v=4&s=60",
   "displayName": "shencan",
   "gv": "4",
   "id": "595bae56d73408ce4f6b8f2c",
   "url": "/shencan",
   "username": "shencan",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"alexpop\" class=\"mention\">@alexpop</span>   check  NextToken   parameter   if  NextToken is not nil   you need use NextToken  request again",
  "id": "59c8fbe5b59d55b823358a2e",
  "issues": [],
  "mentions": [
   {
    "screenName": "alexpop",
    "userId": "56e0c24d85d51f252ab808f3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-09-25T12:51:49.634Z",
  "text": "@alexpop   check  NextToken   parameter   if  NextToken is not nil   you need use NextToken  request again",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/alexpop",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/107378?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/107378?v=4&s=60",
   "displayName": "Alex Pop",
   "gv": "4",
   "id": "56e0c24d85d51f252ab808f3",
   "url": "/alexpop",
   "username": "alexpop",
   "v": 9
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"shencan\" class=\"mention\">@shencan</span>, so there&#39;s a default limit. Do you know what that is? 1000?",
  "id": "59c8fcf3614889d475387f5a",
  "issues": [],
  "mentions": [
   {
    "screenName": "shencan",
    "userId": "595bae56d73408ce4f6b8f2c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-09-25T12:56:19.478Z",
  "text": "thanks @shencan, so there's a default limit. Do you know what that is? 1000?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/shencan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11796215?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11796215?v=4&s=60",
   "displayName": "shencan",
   "gv": "4",
   "id": "595bae56d73408ce4f6b8f2c",
   "url": "/shencan",
   "username": "shencan",
   "v": 4
  },
  "html": "yes 1000",
  "id": "59c90286f7299e8f536db566",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-09-25T13:20:06.504Z",
  "text": "yes 1000",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"alexpop\" class=\"mention\">@alexpop</span> Also you can use the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#EC2.DescribeInstancesPages\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><code>DescribeInstancesPages</code> </a> method instead of managing the paging yoru self. This method takes a callback function that will be executed for each page serially.  You can return <code>false</code> in the callback function to stop pagging.",
  "id": "59c92fa5bc4647297473b918",
  "issues": [],
  "mentions": [
   {
    "screenName": "alexpop",
    "userId": "56e0c24d85d51f252ab808f3",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-09-25T16:32:37.423Z",
  "text": "@alexpop Also you can use the [`DescribeInstancesPages` ](http://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#EC2.DescribeInstancesPages) method instead of managing the paging yoru self. This method takes a callback function that will be executed for each page serially.  You can return `false` in the callback function to stop pagging.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#EC2.DescribeInstancesPages"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/kakakakakku",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1573290?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1573290?v=4&s=60",
   "displayName": "Yoshiaki Yoshida",
   "gv": "4",
   "id": "5580450a15522ed4b3e1fee6",
   "url": "/kakakakakku",
   "username": "kakakakakku",
   "v": 14
  },
  "html": "Does anyone have advice or hints about my question.<pre><code>ExpiredToken: The security token included <span class=\"keyword\">in</span> the <span class=\"built_in\">request</span> <span class=\"keyword\">is</span> expired</code></pre>",
  "id": "59caed1ecfeed2eb655458d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-09-27T00:13:18.055Z",
  "text": "Does anyone have advice or hints about my question.\n```\nExpiredToken: The security token included in the request is expired\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "may check if this variable <code>AWS_SESSION_TOKEN</code> exist in your environment if so it is expired",
  "id": "59cd01b4bac826f0540d0374",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-09-28T14:05:40.845Z",
  "text": "may check if this variable `AWS_SESSION_TOKEN` exist in your environment if so it is expired",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "hi there, I&#39;m new to this channel",
  "id": "59cd27bcf7299e8f53834e14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-09-28T16:47:56.139Z",
  "text": "hi there, I'm new to this channel",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "I wonder if anyone experienced problems with <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#AuthorizeSecurityGroupEgressInput\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#AuthorizeSecurityGroupEgressInput</a>",
  "id": "59cd27c8210ac2692082994d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-09-28T16:48:08.159Z",
  "text": "I wonder if anyone experienced problems with http://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#AuthorizeSecurityGroupEgressInput",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#AuthorizeSecurityGroupEgressInput"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-09-28T16:54:16.126Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "it tells me that there&#39;s an argument called <code>CidrIp</code>",
  "id": "59cd27de614889d4754e728b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-09-28T16:48:30.979Z",
  "text": "it tells me that there's an argument called `CidrIp`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "<pre><code>    <span class=\"comment\">// The CIDR IPv4 address range. We recommend that you specify the CIDR range</span>\n    <span class=\"comment\">// in a set of IP permissions instead.</span>\n    CidrIp *string `<span class=\"string\">locationName:</span><span class=\"string\">\"cidrIp\"</span> <span class=\"string\">type:</span><span class=\"string\">\"string\"</span>`</code></pre>",
  "id": "59cd27eef7299e8f53835078",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-09-28T16:48:46.890Z",
  "text": "```\n    // The CIDR IPv4 address range. We recommend that you specify the CIDR range\n    // in a set of IP permissions instead.\n    CidrIp *string `locationName:\"cidrIp\" type:\"string\"`\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-09-28T16:54:55.400Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "but executing a call with such argument returns this from the api: <code>UnknownParameter: The parameter CidrIp is not recognized</code>",
  "id": "59cd2814f7299e8f5383517c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-09-28T16:49:24.588Z",
  "text": "but executing a call with such argument returns this from the api: `UnknownParameter: The parameter CidrIp is not recognized`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "looking at <a href=\"http://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-egress.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-egress.html</a>, the argument should be called <code>Cidr</code>",
  "id": "59cd2839614889d4754e74fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-09-28T16:50:01.478Z",
  "text": "looking at http://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-egress.html, the argument should be called `Cidr`",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-egress.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "never mind, figured it out with <code>IpPermissions</code>",
  "id": "59cd39e9177fb9fe7e1485d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-09-28T18:05:29.648Z",
  "text": "never mind, figured it out with `IpPermissions`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/network4sudip256",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26790552?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26790552?v=4&s=60",
   "displayName": "network4sudip256",
   "gv": "4",
   "id": "59d06afed73408ce4f7818cd",
   "url": "/network4sudip256",
   "username": "network4sudip256"
  },
  "html": "Hi",
  "id": "59d06b0a210ac2692091dde1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-10-01T04:11:54.903Z",
  "text": "Hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/network4sudip256",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26790552?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26790552?v=4&s=60",
   "displayName": "network4sudip256",
   "gv": "4",
   "id": "59d06afed73408ce4f7818cd",
   "url": "/network4sudip256",
   "username": "network4sudip256"
  },
  "html": "I need some help on the AWS Batch API",
  "id": "59d06b43bac826f0541d9782",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-10-01T04:12:51.230Z",
  "text": "I need some help on the AWS Batch API",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/network4sudip256",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26790552?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26790552?v=4&s=60",
   "displayName": "network4sudip256",
   "gv": "4",
   "id": "59d06afed73408ce4f7818cd",
   "url": "/network4sudip256",
   "username": "network4sudip256"
  },
  "html": "can anyone help me please?",
  "id": "59d06b4fc171ee8b299c02ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-10-01T04:13:03.934Z",
  "text": "can anyone help me please?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "I don&#39;t quite grok <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/autoscaling/#DescribeAutoScalingGroupsOutput\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/autoscaling/#DescribeAutoScalingGroupsOutput</a> ... so the output is just a string effectively? I need to parse it myself ?",
  "id": "59d1f8a1bbbf9f1a38109626",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-02T08:28:17.322Z",
  "text": "I don't quite grok https://docs.aws.amazon.com/sdk-for-go/api/service/autoscaling/#DescribeAutoScalingGroupsOutput ... so the output is just a string effectively? I need to parse it myself ?",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/autoscaling/#DescribeAutoScalingGroupsOutput"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span> no, the output contains a slice of <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/autoscaling/#Group\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/autoscaling/#Group</a> and the next result set token, if paging is enabled",
  "id": "59d22028bac826f05424e027",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-10-02T11:16:56.848Z",
  "text": "@kaihendry no, the output contains a slice of https://docs.aws.amazon.com/sdk-for-go/api/service/autoscaling/#Group and the next result set token, if paging is enabled",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/autoscaling/#Group"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "hello, is there a way to get a Role ARN from a set of credentials?  I am getting credentials from the ~/.aws/credentials",
  "id": "59d2aa2f614889d475687ff5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-02T21:05:51.205Z",
  "text": "hello, is there a way to get a Role ARN from a set of credentials?  I am getting credentials from the ~/.aws/credentials",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "I have an Config struct that contains Credentials ",
  "id": "59d2ab457f323fc375fbc2a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-02T21:10:29.263Z",
  "text": "I have an Config struct that contains Credentials ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-10-02T22:16:29.317Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"jdonboch\" class=\"mention\">@jdonboch</span> </p><pre><code><span class=\"rule\"><span class=\"attribute\">sess </span>:<span class=\"value\">= session.<span class=\"function\">Must</span>(session.<span class=\"function\">NewSessionWithOptions</span>(session.Options{\n      Config: aws.Config{ Region: region },\n      Profile: *profile,\n    }))\nstsSvc := sts.<span class=\"function\">New</span>(sess)\noutput, err := stsSvc.<span class=\"function\">GetCallerIdentity</span>(&amp;sts.GetCallerIdentityInput{})</span></span></code></pre><p>will get you as far as ARN, user id and account, you should be able to find out the rest, considering you have the right permissions granted</p>",
  "id": "59d2ba91b20c642429b57bc5",
  "issues": [],
  "mentions": [
   {
    "screenName": "jdonboch",
    "userId": "55a6c1285e0d51bd787b7c3d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-02T22:15:45.318Z",
  "text": "@jdonboch \n```\nsess := session.Must(session.NewSessionWithOptions(session.Options{\n      Config: aws.Config{ Region: region },\n      Profile: *profile,\n    }))\nstsSvc := sts.New(sess)\noutput, err := stsSvc.GetCallerIdentity(&sts.GetCallerIdentityInput{})\n```\nwill get you as far as ARN, user id and account, you should be able to find out the rest, considering you have the right permissions granted",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdonboch",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/5818830?v=4&s=60",
   "displayName": "Jared Donboch",
   "gv": "4",
   "id": "55a6c1285e0d51bd787b7c3d",
   "url": "/jdonboch",
   "username": "jdonboch",
   "v": 4
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"radekg\" class=\"mention\">@radekg</span> ",
  "id": "59d2d8ce614889d4756965ef",
  "issues": [],
  "mentions": [
   {
    "screenName": "radekg",
    "userId": "56b31350e610378809bfcff8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-03T00:24:46.556Z",
  "text": "thanks @radekg ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-10-04T22:06:00.595Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/oleynikd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3976868?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3976868?v=4&s=60",
   "displayName": "Denis",
   "gv": "4",
   "id": "55f1d2d60fc9f982beb04afc",
   "url": "/oleynikd",
   "username": "oleynikd",
   "v": 2
  },
  "html": "Hi, please help!<br>What is the Golang equivalent of Java&#39;s <code>getResourceUrl()</code>? How do I get the public URL of an uploaded file? Thanks",
  "id": "59d55a28b59d55b82373bc76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-10-04T22:01:12.376Z",
  "text": "Hi, please help!\nWhat is the Golang equivalent of Java's `getResourceUrl()`? How do I get the public URL of an uploaded file? Thanks",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"oleynikd\" class=\"mention\">@oleynikd</span> are you looking for public URL of an object in S3, or a presigned URL that will expire?",
  "id": "59d55cddbbbf9f1a3822db7e",
  "issues": [],
  "mentions": [
   {
    "screenName": "oleynikd",
    "userId": "55f1d2d60fc9f982beb04afc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-10-04T22:12:45.690Z",
  "text": "@oleynikd are you looking for public URL of an object in S3, or a presigned URL that will expire?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-10-05T07:33:08.623Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/oleynikd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3976868?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3976868?v=4&s=60",
   "displayName": "Denis",
   "gv": "4",
   "id": "55f1d2d60fc9f982beb04afc",
   "url": "/oleynikd",
   "username": "oleynikd",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I&#39;m looking for public <strong>not presigned</strong> URL. Thanks",
  "id": "59d5e02de44c43700af71a45",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-10-05T07:33:01.905Z",
  "text": "@jasdel I'm looking for public **not presigned** URL. Thanks",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2017-10-05T07:39:48.405Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/oleynikd",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3976868?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3976868?v=4&s=60",
   "displayName": "Denis",
   "gv": "4",
   "id": "55f1d2d60fc9f982beb04afc",
   "url": "/oleynikd",
   "username": "oleynikd",
   "v": 2
  },
  "html": "I ended up with this: <code>return fmt.Sprintf(&quot;https://s3-%s.amazonaws.com/%s/%s&quot;, region, bucket, key)</code>. But this leaves lots of questions like path escaping...",
  "id": "59d5e1bdbbbf9f1a382506ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-10-05T07:39:41.327Z",
  "text": "I ended up with this: `return fmt.Sprintf(\"https://s3-%s.amazonaws.com/%s/%s\", region, bucket, key)`. But this leaves lots of questions like path escaping...",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "Silly question, is there a way to check <a href=\"http://status.aws.amazon.com/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://status.aws.amazon.com/</a> in go? I couldn&#39;t find much in the go-SDK, did I miss anything? It seems possible in python",
  "id": "59d6716501110b72317f0b33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-10-05T17:52:37.770Z",
  "text": "Silly question, is there a way to check http://status.aws.amazon.com/ in go? I couldn't find much in the go-SDK, did I miss anything? It seems possible in python",
  "unread": false,
  "urls": [
   {
    "url": "http://status.aws.amazon.com/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xlr-8\" class=\"mention\">@xlr-8</span> are you looking for an API like the Health API?",
  "id": "59d671d7614889d4757c7179",
  "issues": [],
  "mentions": [
   {
    "screenName": "xlr-8",
    "userId": "57592a76c2f0db084a1cf428",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-10-05T17:54:31.616Z",
  "text": "@xlr-8 are you looking for an API like the Health API?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "Yeah, I&#39;m basically hoping to have a call for the different services/region telling me if everything is healthy or not",
  "id": "59d671f601110b72317f0e8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-05T17:55:02.806Z",
  "text": "Yeah, I'm basically hoping to have a call for the different services/region telling me if everything is healthy or not",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "I think there&#39;s an RSS feed",
  "id": "59d67209210ac26920afd242",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-05T17:55:21.029Z",
  "text": "I think there's an RSS feed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "I know, I just would have liked it to be a simple API call and not have to subscribe via RSS over go",
  "id": "59d6722fb59d55b8237919b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-05T17:55:59.961Z",
  "text": "I know, I just would have liked it to be a simple API call and not have to subscribe via RSS over go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "There&#39;s the Health API but you need a business or enterprise plan",
  "id": "59d67296e44c43700afa50e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-05T17:57:42.324Z",
  "text": "There's the Health API but you need a business or enterprise plan",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/health/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/health/</a>",
  "id": "59d6729dbac826f0543c2359",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-10-05T17:57:49.791Z",
  "text": "http://docs.aws.amazon.com/sdk-for-go/api/service/health/",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/health/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "Oh great! I missed it, thanks",
  "id": "59d672b5bbbf9f1a38282641",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-05T17:58:13.464Z",
  "text": "Oh great! I missed it, thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Using an RSS library might be easier though",
  "id": "59d672cb614889d4757c7737",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-10-05T17:58:35.611Z",
  "text": "Using an RSS library might be easier though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "I also saw they had json provided: <a href=\"http://status.aws.amazon.com/data.json\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://status.aws.amazon.com/data.json</a>",
  "id": "59d672e1210ac26920afd549",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-10-05T17:58:57.143Z",
  "text": "I also saw they had json provided: http://status.aws.amazon.com/data.json",
  "unread": false,
  "urls": [
   {
    "url": "http://status.aws.amazon.com/data.json"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Even better",
  "id": "59d672f3614889d4757c77b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-10-05T17:59:15.469Z",
  "text": "Even better",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "You can marshal that into a struct",
  "id": "59d67300f7299e8f53b15d3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-10-05T17:59:28.009Z",
  "text": "You can marshal that into a struct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "I don&#39;t know how violent the struct will be but that&#39;s indeed a possibility",
  "id": "59d67395e44c43700afa5586",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-10-05T18:01:57.464Z",
  "text": "I don't know how violent the struct will be but that's indeed a possibility",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "Thanks for the heads up!",
  "id": "59d6739bf7299e8f53b16101",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-10-05T18:02:03.311Z",
  "text": "Thanks for the heads up!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "My pleasure",
  "id": "59d673a7bac826f0543c2951",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-10-05T18:02:15.752Z",
  "text": "My pleasure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/prasadpict31",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14183372?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14183372?v=4&s=60",
   "displayName": "prasadpict31",
   "gv": "4",
   "id": "59ce2a7ed73408ce4f77e35c",
   "url": "/prasadpict31",
   "username": "prasadpict31"
  },
  "html": "Hi",
  "id": "59db1572614889d4758fc171",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-10-09T06:21:38.521Z",
  "text": "Hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/prasadpict31",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14183372?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14183372?v=4&s=60",
   "displayName": "prasadpict31",
   "gv": "4",
   "id": "59ce2a7ed73408ce4f77e35c",
   "url": "/prasadpict31",
   "username": "prasadpict31"
  },
  "html": "I am very new to Golang and Redshift. Can anyone plz send me sample code to connect redshift and perfrom anyone CRUD operation?",
  "id": "59db15c1b20c642429dc2486",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-10-09T06:22:57.241Z",
  "text": "I am very new to Golang and Redshift. Can anyone plz send me sample code to connect redshift and perfrom anyone CRUD operation?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/stjimmy88",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9452439?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9452439?v=4&s=60",
   "displayName": "Mert",
   "gv": "4",
   "id": "59dc8548d73408ce4f795bd0",
   "url": "/stjimmy88",
   "username": "stjimmy88"
  },
  "html": "Hi all, does anyone know about how to enable cluster option for Elasticache Redis instances through API ?",
  "id": "59dc857101110b7231997b1b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-10-10T08:31:45.461Z",
  "text": "Hi all, does anyone know about how to enable cluster option for Elasticache Redis instances through API ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/stjimmy88",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9452439?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9452439?v=4&s=60",
   "displayName": "Mert",
   "gv": "4",
   "id": "59dc8548d73408ce4f795bd0",
   "url": "/stjimmy88",
   "username": "stjimmy88"
  },
  "html": "i don&#39;t see any attribute that allows the cluster option",
  "id": "59dc8576e44c43700a14f8d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-10-10T08:31:50.021Z",
  "text": "i don't see any attribute that allows the cluster option",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stjimmy88\" class=\"mention\">@stjimmy88</span> <a href=\"http://docs.aws.amazon.com/cli/latest/reference/elasticache/create-replication-group.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/cli/latest/reference/elasticache/create-replication-group.html</a>",
  "id": "59dd4ce4f7299e8f53d04457",
  "issues": [],
  "mentions": [
   {
    "screenName": "stjimmy88",
    "userId": "59dc8548d73408ce4f795bd0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-10-10T22:42:44.642Z",
  "text": "@stjimmy88 http://docs.aws.amazon.com/cli/latest/reference/elasticache/create-replication-group.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/cli/latest/reference/elasticache/create-replication-group.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stjimmy88\" class=\"mention\">@stjimmy88</span> from <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Clusters.Create.CON.RedisCluster.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Clusters.Create.CON.RedisCluster.html</a>:<br>To create the equivalent using the ElastiCache API or AWS CLI instead of the ElastiCache console, see:<ul>\n<li>API: CreateReplicationGroup</li>\n<li>CLI: create-replication-group</li>\n</ul>\n",
  "id": "59dd4d0f614889d4759bb57c",
  "issues": [],
  "mentions": [
   {
    "screenName": "stjimmy88",
    "userId": "59dc8548d73408ce4f795bd0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-10-10T22:43:27.586Z",
  "text": "@stjimmy88 from http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Clusters.Create.CON.RedisCluster.html: \nTo create the equivalent using the ElastiCache API or AWS CLI instead of the ElastiCache console, see:\n- API: CreateReplicationGroup\n- CLI: create-replication-group",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Clusters.Create.CON.RedisCluster.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"prasadpict31\" class=\"mention\">@prasadpict31</span> apparently this can be done with lib/pq: <a href=\"https://stackoverflow.com/questions/42988417/crud-operations-on-redshift-databases-using-golang\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/questions/42988417/crud-operations-on-redshift-databases-using-golang</a>",
  "id": "59dd4dfde44c43700a198b44",
  "issues": [],
  "mentions": [
   {
    "screenName": "prasadpict31",
    "userId": "59ce2a7ed73408ce4f77e35c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-10-10T22:47:25.427Z",
  "text": "@prasadpict31 apparently this can be done with lib/pq: https://stackoverflow.com/questions/42988417/crud-operations-on-redshift-databases-using-golang",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/questions/42988417/crud-operations-on-redshift-databases-using-golang"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/stjimmy88",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9452439?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9452439?v=4&s=60",
   "displayName": "Mert",
   "gv": "4",
   "id": "59dc8548d73408ce4f795bd0",
   "url": "/stjimmy88",
   "username": "stjimmy88"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"radekg\" class=\"mention\">@radekg</span> thanks for the answer, sorry that my question was actually a bit incomplete... i&#39;m dealing with Goland API, writing a Service Broker for Cloud Foundry... according to this document -&gt; <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html</a>    it is not possible to set <code>cluster-mode:on</code> for Redis but only for <code>memcache</code> or am i missing something?",
  "id": "59dde115f7299e8f53d2e4a2",
  "issues": [],
  "mentions": [
   {
    "screenName": "radekg",
    "userId": "56b31350e610378809bfcff8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-11T09:15:01.194Z",
  "text": "@radekg thanks for the answer, sorry that my question was actually a bit incomplete... i'm dealing with Goland API, writing a Service Broker for Cloud Foundry... according to this document -> http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html    it is not possible to set `cluster-mode:on` for Redis but only for `memcache` or am i missing something?",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/prasadpict31",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/14183372?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/14183372?v=4&s=60",
   "displayName": "prasadpict31",
   "gv": "4",
   "id": "59ce2a7ed73408ce4f77e35c",
   "url": "/prasadpict31",
   "username": "prasadpict31"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"radekg\" class=\"mention\">@radekg</span> Thanks for help, will try",
  "id": "59dde3fe01110b7231a0b654",
  "issues": [],
  "mentions": [
   {
    "screenName": "radekg",
    "userId": "56b31350e610378809bfcff8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-11T09:27:26.502Z",
  "text": "@radekg Thanks for help, will try",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stjimmy88\" class=\"mention\">@stjimmy88</span> from the very page you sent the link to<pre><code>Engine\nThe name of the <span class=\"operator\"><span class=\"keyword\">cache</span> <span class=\"keyword\">engine</span> <span class=\"keyword\">to</span> be used <span class=\"keyword\">for</span> this <span class=\"keyword\">cache</span> cluster, such <span class=\"keyword\">as</span> memcached <span class=\"keyword\">or</span> redis.\n\nRequired: Yes\n\nType: <span class=\"keyword\">String</span>\n\n<span class=\"keyword\">Update</span> requires: Replacement</span></code></pre>",
  "id": "59de0a9c3cb340a2610f5e78",
  "issues": [],
  "mentions": [
   {
    "screenName": "stjimmy88",
    "userId": "59dc8548d73408ce4f795bd0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-11T12:12:12.272Z",
  "text": "@stjimmy88 from the very page you sent the link to\n```\nEngine\nThe name of the cache engine to be used for this cache cluster, such as memcached or redis.\n\nRequired: Yes\n\nType: String\n\nUpdate requires: Replacement\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "I don&#39;t have more details than that, sorry",
  "id": "59de0ab101110b7231a1884b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-10-11T12:12:33.751Z",
  "text": "I don't have more details than that, sorry",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/shivkumarsingh7",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10324098?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10324098?v=4&s=60",
   "displayName": "shiv kumar singh",
   "gv": "4",
   "id": "589416fad73408ce4f47ce99",
   "url": "/shivkumarsingh7",
   "username": "shivkumarsingh7",
   "v": 7
  },
  "html": "hi all, I m getting error while inserting data in dynamodb<br>ValidationException: One or more parameter values were invalid: Missing the key player_id in the item<br>    status code: 400",
  "id": "59de0f0ef7299e8f53d3f04e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-11T12:31:10.452Z",
  "text": "hi all, I m getting error while inserting data in dynamodb \nValidationException: One or more parameter values were invalid: Missing the key player_id in the item\n\tstatus code: 400",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/shivkumarsingh7",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10324098?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10324098?v=4&s=60",
   "displayName": "shiv kumar singh",
   "gv": "4",
   "id": "589416fad73408ce4f47ce99",
   "url": "/shivkumarsingh7",
   "username": "shivkumarsingh7",
   "v": 7
  },
  "html": "w := widget{player_id: 1, name: &quot;playername1&quot;}<br>        err := table.Put(w).Run()",
  "id": "59de0f3b177fb9fe7e656cdf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-10-11T12:31:55.212Z",
  "text": "w := widget{player_id: 1, name: \"playername1\"}\n\t\terr := table.Put(w).Run()",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/stjimmy88",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9452439?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9452439?v=4&s=60",
   "displayName": "Mert",
   "gv": "4",
   "id": "59dc8548d73408ce4f795bd0",
   "url": "/stjimmy88",
   "username": "stjimmy88"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"shivkumarsingh7\" class=\"mention\">@shivkumarsingh7</span> it&#39;s obviously a validation exception, what&#39;s your question?",
  "id": "59de18463cb340a2610fb12c",
  "issues": [],
  "mentions": [
   {
    "screenName": "shivkumarsingh7",
    "userId": "589416fad73408ce4f47ce99",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-10-11T13:10:30.091Z",
  "text": "@shivkumarsingh7 it's obviously a validation exception, what's your question?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/shivkumarsingh7",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10324098?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10324098?v=4&s=60",
   "displayName": "shiv kumar singh",
   "gv": "4",
   "id": "589416fad73408ce4f47ce99",
   "url": "/shivkumarsingh7",
   "username": "shivkumarsingh7",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stjimmy88\" class=\"mention\">@stjimmy88</span>  I m running above mention code and getting that error. But player_id is given in input",
  "id": "59de199f210ac26920d24532",
  "issues": [],
  "mentions": [
   {
    "screenName": "stjimmy88",
    "userId": "59dc8548d73408ce4f795bd0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-10-11T13:16:15.609Z",
  "text": "@stjimmy88  I m running above mention code and getting that error. But player_id is given in input",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"shivkumarsingh7\" class=\"mention\">@shivkumarsingh7</span> what&#39;s the library you&#39;re using here? you&#39;re obviously not using <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/</a>",
  "id": "59df628d177fb9fe7e6c8663",
  "issues": [],
  "mentions": [
   {
    "screenName": "shivkumarsingh7",
    "userId": "589416fad73408ce4f47ce99",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-10-12T12:39:41.977Z",
  "text": "@shivkumarsingh7 what's the library you're using here? you're obviously not using http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ammartinez008",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2224522?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2224522?v=4&s=60",
   "displayName": "Alex Martinez",
   "gv": "4",
   "id": "58126bf4d73408ce4f3150fb",
   "url": "/ammartinez008",
   "username": "ammartinez008",
   "v": 7
  },
  "html": "Hi, by any chance has anyone had any experience with comparing the speeds between the different upload options for s3? I see that there are Upload, PutObject, and a couple of others with Context. Also, is there any function in the go sdk that is equivalent to the aws cli command s3 sync? Would definitely appreciate any input on this.",
  "id": "59dfa990b20c642429f4926d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-10-12T17:42:40.560Z",
  "text": "Hi, by any chance has anyone had any experience with comparing the speeds between the different upload options for s3? I see that there are Upload, PutObject, and a couple of others with Context. Also, is there any function in the go sdk that is equivalent to the aws cli command s3 sync? Would definitely appreciate any input on this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/bscott",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/191290?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/191290?v=4&s=60",
   "displayName": "Brian Scott",
   "gv": "4",
   "id": "59e51407d73408ce4f7a4a7e",
   "url": "/bscott",
   "username": "bscott",
   "v": 1
  },
  "html": "Anyone have an idea of how to assume role with s3.NewDownloader",
  "id": "59e51427210ac26920f3d168",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-16T20:18:47.443Z",
  "text": "Anyone have an idea of how to assume role with s3.NewDownloader",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/g/u/BenoitDrappeau_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "benoit drappeau",
   "id": "59e8a870d73408ce4f7abd55",
   "url": "/BenoitDrappeau_twitter",
   "username": "BenoitDrappeau_twitter"
  },
  "html": "Hi all, does anyone know in cloud directory on how to get a node&#39;s linkname using its objectidentifier? ",
  "id": "59e8a8d801110b7231d69134",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-19T13:30:00.907Z",
  "text": "Hi all, does anyone know in cloud directory on how to get a node's linkname using its objectidentifier? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-10-19T18:57:14.007Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/mrichman_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp_bigger.jpg",
   "displayName": "Mark Richman",
   "id": "59d78ef8d73408ce4f78e36c",
   "url": "/mrichman_twitter",
   "username": "mrichman_twitter",
   "v": 2
  },
  "html": "What&#39;s the best way to store timestamps in DynamoDB? Should I use an ISO8601 string or a number holding the unix timestamp? I&#39;ve also seen something like this: <code>&quot;LastPostDateTime&quot;: {&quot;S&quot;: &quot;201710110123&quot;}</code>. I was thinking milliseconds because I might want to write the value using <code>aws.TimeUnixMilli()</code>, and I read CloudWatch likes logs in milliseconds.",
  "id": "59e8f3c3b20c64242922f9b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-19T18:49:39.030Z",
  "text": "What's the best way to store timestamps in DynamoDB? Should I use an ISO8601 string or a number holding the unix timestamp? I've also seen something like this: `\"LastPostDateTime\": {\"S\": \"201710110123\"}`. I was thinking milliseconds because I might want to write the value using `aws.TimeUnixMilli()`, and I read CloudWatch likes logs in milliseconds.",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman_twitter\" class=\"mention\">@mrichman_twitter</span>  If you&#39;re using the SDK&#39;s <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbattribute/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">dynamodbattribute</a> package <code>time.Time</code> types will default to <code>RFC3339</code> format.",
  "id": "59e8ff61d6c36fca3171a23e",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman_twitter",
    "userId": "59d78ef8d73408ce4f78e36c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2017-10-19T19:39:13.206Z",
  "text": "@mrichman_twitter  If you're using the SDK's [dynamodbattribute](http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbattribute/) package `time.Time` types will default to `RFC3339` format.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbattribute/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I&#39;d suggest a formatted time instead of Epoch  since its more portable and you don&#39;t have to worry about epoch with or without milliseconds",
  "id": "59e8ffcf5c40c1ba79c0803b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-10-19T19:41:03.590Z",
  "text": "I'd suggest a formatted time instead of Epoch  since its more portable and you don't have to worry about epoch with or without milliseconds",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "with that said if you do want to use epoch the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbattribute/#UnixTime\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><code>UnixTime</code></a> type is a great consistent way to do that.",
  "id": "59e9005301110b7231d8b18d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-10-19T19:43:15.796Z",
  "text": "with that said if you do want to use epoch the [`UnixTime`](http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbattribute/#UnixTime) type is a great consistent way to do that.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbattribute/#UnixTime"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "alternatively you could use <code>UnixTime</code> as a template and create your own type that provides millisecond epoch",
  "id": "59e90083e44c43700a53f5dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-10-19T19:44:03.397Z",
  "text": "alternatively you could use `UnixTime` as a template and create your own type that provides millisecond epoch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/mrichman_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp_bigger.jpg",
   "displayName": "Mark Richman",
   "id": "59d78ef8d73408ce4f78e36c",
   "url": "/mrichman_twitter",
   "username": "mrichman_twitter",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I&#39;m thinking epoch would facilitate using it as a sort key, no?",
  "id": "59e90092177fb9fe7e9d32f1",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-19T19:44:18.324Z",
  "text": "@jasdel I'm thinking epoch would facilitate using it as a sort key, no?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/mrichman_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp_bigger.jpg",
   "displayName": "Mark Richman",
   "id": "59d78ef8d73408ce4f78e36c",
   "url": "/mrichman_twitter",
   "username": "mrichman_twitter",
   "v": 2
  },
  "html": "If i used RFC3339 string as a sort key, it would just be alphabetical sort, no?",
  "id": "59e900ad32e080696eff929a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-19T19:44:45.498Z",
  "text": "If i used RFC3339 string as a sort key, it would just be alphabetical sort, no?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/mrichman_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp_bigger.jpg",
   "displayName": "Mark Richman",
   "id": "59d78ef8d73408ce4f78e36c",
   "url": "/mrichman_twitter",
   "username": "mrichman_twitter",
   "v": 2
  },
  "html": "^^ first time I ever wrote &quot;, no?&quot; in two consecutive sentences :)",
  "id": "59e900cd01110b7231d8b5b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-19T19:45:17.285Z",
  "text": "^^ first time I ever wrote \", no?\" in two consecutive sentences :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "epoch as a sort key would be much better, you&#39;re right",
  "id": "59e900d9f7299e8f530ad768",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-19T19:45:29.500Z",
  "text": "epoch as a sort key would be much better, you're right",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "If using epoch you want to make sure its stored as a DynamoDB AttirbuteValue Number (<code>N</code>) not String (<code>S</code>) though.  the <code>UnixTime</code>&#39;s marshalers provide this",
  "id": "59e9012b177fb9fe7e9d37a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-19T19:46:51.421Z",
  "text": "If using epoch you want to make sure its stored as a DynamoDB AttirbuteValue Number (`N`) not String (`S`) though.  the `UnixTime`'s marshalers provide this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/mrichman_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp_bigger.jpg",
   "displayName": "Mark Richman",
   "id": "59d78ef8d73408ce4f78e36c",
   "url": "/mrichman_twitter",
   "username": "mrichman_twitter",
   "v": 2
  },
  "html": "I also noticed that <code>aws describe-table</code>&#39;s json format and <code>aws create-table  --cli-input-json</code> use slightly different formats. Any idea why?",
  "id": "59e9012e32e080696eff9545",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-19T19:46:54.237Z",
  "text": "I also noticed that `aws describe-table`'s json format and `aws create-table  --cli-input-json` use slightly different formats. Any idea why?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "sorry that i cannot answer, not too familiar with the AWS CLI&#39;s formats",
  "id": "59e90148e44c43700a53f942",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-19T19:47:20.784Z",
  "text": "sorry that i cannot answer, not too familiar with the AWS CLI's formats",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/mrichman_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp_bigger.jpg",
   "displayName": "Mark Richman",
   "id": "59d78ef8d73408ce4f78e36c",
   "url": "/mrichman_twitter",
   "username": "mrichman_twitter",
   "v": 2
  },
  "html": "that&#39;s okay, really just looking for a way to bootstrap my &quot;schema&quot;",
  "id": "59e9015d614889d475d6feac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-19T19:47:41.730Z",
  "text": "that's okay, really just looking for a way to bootstrap my \"schema\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/mrichman_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp_bigger.jpg",
   "displayName": "Mark Richman",
   "id": "59d78ef8d73408ce4f78e36c",
   "url": "/mrichman_twitter",
   "username": "mrichman_twitter",
   "v": 2
  },
  "html": "i.e., create a table if it doesn&#39;t exist, but then i realized those operations can take a long time, and are not ideal for invoking when my app starts",
  "id": "59e90180d6c36fca3171acba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-19T19:48:16.293Z",
  "text": "i.e., create a table if it doesn't exist, but then i realized those operations can take a long time, and are not ideal for invoking when my app starts",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Ah i see, with the SDK&#39;s <code>dynamodbattribute</code> package you can use Go types to put and get DynamoDB items with. the package has (un)marshalers to make this easier. This way you can model your items in code",
  "id": "59e90199177fb9fe7e9d3963",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-19T19:48:41.036Z",
  "text": "Ah i see, with the SDK's `dynamodbattribute` package you can use Go types to put and get DynamoDB items with. the package has (un)marshalers to make this easier. This way you can model your items in code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/mrichman_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp_bigger.jpg",
   "displayName": "Mark Richman",
   "id": "59d78ef8d73408ce4f78e36c",
   "url": "/mrichman_twitter",
   "username": "mrichman_twitter",
   "v": 2
  },
  "html": "Cool I&#39;ll check that package out. So for now, I&#39;m just going to write a shell script to call <code>aws create-table</code>for each of my tables, unless you know a more elegant way.",
  "id": "59e901c5b20c642429234bee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-19T19:49:25.828Z",
  "text": "Cool I'll check that package out. So for now, I'm just going to write a shell script to call `aws create-table`for each of my tables, unless you know a more elegant way.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/mrichman_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp_bigger.jpg",
   "displayName": "Mark Richman",
   "id": "59d78ef8d73408ce4f78e36c",
   "url": "/mrichman_twitter",
   "username": "mrichman_twitter",
   "v": 2
  },
  "html": "I&#39;m creating some lab materials for a course, and I don&#39;t want the student to have to go to the console and click a hundred things just to create their tables, keys, etc.",
  "id": "59e901e832e080696eff99af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-19T19:50:00.782Z",
  "text": "I'm creating some lab materials for a course, and I don't want the student to have to go to the console and click a hundred things just to create their tables, keys, etc.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "If its a boot strapping process its probably the simplest way to setup the environment.",
  "id": "59e90209210ac2692008f73e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-10-19T19:50:33.438Z",
  "text": "If its a boot strapping process its probably the simplest way to setup the environment.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/mrichman_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/804475190394687488/4mKv7xFp_bigger.jpg",
   "displayName": "Mark Richman",
   "id": "59d78ef8d73408ce4f78e36c",
   "url": "/mrichman_twitter",
   "username": "mrichman_twitter",
   "v": 2
  },
  "html": "Yeah, that&#39;s what I thought. Thanks!",
  "id": "59e9021f01110b7231d8be0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-19T19:50:55.757Z",
  "text": "Yeah, that's what I thought. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ppetko",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7661777?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7661777?v=4&s=60",
   "displayName": "ppetko",
   "gv": "4",
   "id": "59ea47e5d73408ce4f7afab1",
   "url": "/ppetko",
   "username": "ppetko",
   "v": 1
  },
  "html": "Hi Folks, I was wondering if somebody could help out. I&#39;m using the aws go sdk and the results output are not valid json, even though I have setup the output=json.  Example -<a href=\"https://play.golang.org/p/bgE9NabHsj\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://play.golang.org/p/bgE9NabHsj</a>",
  "id": "59ea49a1210ac269200fa506",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-10-20T19:08:17.235Z",
  "text": "Hi Folks, I was wondering if somebody could help out. I'm using the aws go sdk and the results output are not valid json, even though I have setup the output=json.  Example -https://play.golang.org/p/bgE9NabHsj",
  "unread": false,
  "urls": [
   {
    "url": "https://play.golang.org/p/bgE9NabHsj"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"ppetko\" class=\"mention\">@ppetko</span> the <code>output</code> shared config flag is CLI specific. It isn&#39;t used by the SDK.",
  "id": "59ea4afb5c40c1ba79c75a42",
  "issues": [],
  "mentions": [
   {
    "screenName": "ppetko",
    "userId": "59ea47e5d73408ce4f7afab1",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-10-20T19:14:03.236Z",
  "text": "Hi @ppetko the `output` shared config flag is CLI specific. It isn't used by the SDK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ppetko",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7661777?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7661777?v=4&s=60",
   "displayName": "ppetko",
   "gv": "4",
   "id": "59ea47e5d73408ce4f7afab1",
   "url": "/ppetko",
   "username": "ppetko",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>, is there a way to tell the SDK to output json the results in json? Thanks. ",
  "id": "59ea4b9ee44c43700a5a934d",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-20T19:16:46.308Z",
  "text": "@jasdel, is there a way to tell the SDK to output json the results in json? Thanks. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "No sorry, not automatically in the SDK. Your application would need t manage the marshaling to JSON it self.",
  "id": "59ea4c0601110b7231df7997",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-20T19:18:30.129Z",
  "text": "No sorry, not automatically in the SDK. Your application would need t manage the marshaling to JSON it self.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ppetko",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7661777?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7661777?v=4&s=60",
   "displayName": "ppetko",
   "gv": "4",
   "id": "59ea47e5d73408ce4f7afab1",
   "url": "/ppetko",
   "username": "ppetko",
   "v": 1
  },
  "html": "Thanks  <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> !",
  "id": "59ea4c7ce44c43700a5a97fc",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-20T19:20:28.348Z",
  "text": "Thanks  @jasdel !",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/bscott",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/191290?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/191290?v=4&s=60",
   "displayName": "Brian Scott",
   "gv": "4",
   "id": "59e51407d73408ce4f7a4a7e",
   "url": "/bscott",
   "username": "bscott",
   "v": 1
  },
  "html": "I need to find a way to assume a role when using the S3 Download Manager in the SDK, Any Idea?",
  "id": "59ea987bd6c36fca3179d47a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-10-21T00:44:43.251Z",
  "text": "I need to find a way to assume a role when using the S3 Download Manager in the SDK, Any Idea?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Hey <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> is there a wrapper or convenience function around <code>QueryInput</code>? This seems verbose to me:<pre><code><span class=\"rule\"><span class=\"attribute\">queryInput </span>:<span class=\"value\">= &amp;dynamodb.QueryInput{\n        TableName: aws.<span class=\"function\">String</span>(<span class=\"string\">\"Users\"</span>),\n        KeyConditions: map[string]*dynamodb.Condition{\n            <span class=\"string\">\"ID\"</span>: {\n                ComparisonOperator: aws.<span class=\"function\">String</span>(<span class=\"string\">\"EQ\"</span>),\n                AttributeValueList: []*dynamodb.AttributeValue{\n                    {\n                        S: aws.<span class=\"function\">String</span>(<span class=\"string\">\"508a3a21-d66e-4100-9d2c-67bac6480d82\"</span>),\n                    },\n                },\n            },\n        },\n    }</span></span></code></pre>",
  "id": "59ec9445210ac2692018948a",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-22T12:51:17.310Z",
  "text": "Hey @jasdel is there a wrapper or convenience function around `QueryInput`? This seems verbose to me:\n```\nqueryInput := &dynamodb.QueryInput{\n\t\tTableName: aws.String(\"Users\"),\n\t\tKeyConditions: map[string]*dynamodb.Condition{\n\t\t\t\"ID\": {\n\t\t\t\tComparisonOperator: aws.String(\"EQ\"),\n\t\t\t\tAttributeValueList: []*dynamodb.AttributeValue{\n\t\t\t\t\t{\n\t\t\t\t\t\tS: aws.String(\"508a3a21-d66e-4100-9d2c-67bac6480d82\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"bscott\" class=\"mention\">@bscott</span> it takes a session as an argument, you can construct a session using RemoteCredentialsProvider",
  "id": "59ecc6a35c40c1ba79d136f2",
  "issues": [],
  "mentions": [
   {
    "screenName": "bscott",
    "userId": "59e51407d73408ce4f7a4a7e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-22T16:26:11.043Z",
  "text": "@bscott it takes a session as an argument, you can construct a session using RemoteCredentialsProvider",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"bscott\" class=\"mention\">@bscott</span> but what do you mean &quot;assume role&quot;, are you using instance roles / ecs task roles?",
  "id": "59ecc6d8210ac2692019725b",
  "issues": [],
  "mentions": [
   {
    "screenName": "bscott",
    "userId": "59e51407d73408ce4f7a4a7e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-22T16:27:04.176Z",
  "text": "@bscott but what do you mean \"assume role\", are you using instance roles / ecs task roles?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/bscott",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/191290?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/191290?v=4&s=60",
   "displayName": "Brian Scott",
   "gv": "4",
   "id": "59e51407d73408ce4f7a4a7e",
   "url": "/bscott",
   "username": "bscott",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"radekg\" class=\"mention\">@radekg</span> I have a S3 bucket in which I have to use Account Federation role to access it",
  "id": "59ed23a8d6c36fca3183cbb8",
  "issues": [],
  "mentions": [
   {
    "screenName": "radekg",
    "userId": "56b31350e610378809bfcff8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-22T23:03:04.368Z",
  "text": "@radekg I have a S3 bucket in which I have to use Account Federation role to access it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/bscott",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/191290?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/191290?v=4&s=60",
   "displayName": "Brian Scott",
   "gv": "4",
   "id": "59e51407d73408ce4f7a4a7e",
   "url": "/bscott",
   "username": "bscott",
   "v": 1
  },
  "html": "I have to create session then create the creds ",
  "id": "59ed2425b20c642429358335",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-22T23:05:09.355Z",
  "text": "I have to create session then create the creds ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/bscott",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/191290?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/191290?v=4&s=60",
   "displayName": "Brian Scott",
   "gv": "4",
   "id": "59e51407d73408ce4f7a4a7e",
   "url": "/bscott",
   "username": "bscott",
   "v": 1
  },
  "html": "<code>// Session Assume role\ncreds := stscreds.NewCredentials(sess, &quot;ARN&quot;)</code>",
  "id": "59ed242cb20c642429358348",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-22T23:05:16.739Z",
  "text": "```// Session Assume role\ncreds := stscreds.NewCredentials(sess, \"ARN\")```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/bscott",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/191290?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/191290?v=4&s=60",
   "displayName": "Brian Scott",
   "gv": "4",
   "id": "59e51407d73408ce4f7a4a7e",
   "url": "/bscott",
   "username": "bscott",
   "v": 1
  },
  "html": "<code>svc := s3.New(sess, &amp;aws.Config{Credentials: creds})\n    input := &amp;s3.ListObjectsInput{\n        Bucket:  sourceBucket,\n        MaxKeys: aws.Int64(50),\n        Prefix:  sourceBucketPath,\n    }</code>",
  "id": "59ed24468808bed73d161b92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-10-22T23:05:42.449Z",
  "text": "```\tsvc := s3.New(sess, &aws.Config{Credentials: creds})\n\tinput := &s3.ListObjectsInput{\n\t\tBucket:  sourceBucket,\n\t\tMaxKeys: aws.Int64(50),\n\t\tPrefix:  sourceBucketPath,\n\t}```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/bscott",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/191290?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/191290?v=4&s=60",
   "displayName": "Brian Scott",
   "gv": "4",
   "id": "59e51407d73408ce4f7a4a7e",
   "url": "/bscott",
   "username": "bscott",
   "v": 1
  },
  "html": "like that ",
  "id": "59ed2449b20c642429358489",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-22T23:05:45.052Z",
  "text": "like that ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/bscott",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/191290?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/191290?v=4&s=60",
   "displayName": "Brian Scott",
   "gv": "4",
   "id": "59e51407d73408ce4f7a4a7e",
   "url": "/bscott",
   "username": "bscott",
   "v": 1
  },
  "html": "but the s3.DownloadManager doesn&#39;t accept creds ",
  "id": "59ed245f8808bed73d161c15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-22T23:06:07.090Z",
  "text": "but the s3.DownloadManager doesn't accept creds ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/bscott",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/191290?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/191290?v=4&s=60",
   "displayName": "Brian Scott",
   "gv": "4",
   "id": "59e51407d73408ce4f7a4a7e",
   "url": "/bscott",
   "username": "bscott",
   "v": 1
  },
  "html": "only a session",
  "id": "59ed2463210ac269201b0d84",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-22T23:06:11.967Z",
  "text": "only a session",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-10-23T00:15:53.590Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"bscott\" class=\"mention\">@bscott</span> you can do this:</p><pre><code><span class=\"keyword\">import</span> (\n  <span class=\"string\">\"github.com/aws/aws-sdk-go/aws\"</span>\n  <span class=\"string\">\"github.com/aws/aws-sdk-go/aws/defaults\"</span>\n  <span class=\"string\">\"github.com/aws/aws-sdk-go/aws/credentials\"</span>\n  <span class=\"string\">\"github.com/aws/aws-sdk-go/aws/session\"</span>\n)\n...\n<span class=\"func\"><span class=\"keyword\">func</span> <span class=\"title\">RetrieveRemoteCredentials</span><span class=\"params\">(region *string)</span></span> (credentials.<span class=\"type\">Value</span>, error) {\n  configp  := defaults.<span class=\"type\">Config</span>().<span class=\"type\">WithRegion</span>(*region)\n  provider := defaults.<span class=\"type\">RemoteCredProvider</span>(*configp, defaults.<span class=\"type\">Handlers</span>())\n  <span class=\"keyword\">return</span> provider.<span class=\"type\">Retrieve</span>()\n}\n...\n<span class=\"func\"><span class=\"keyword\">func</span> <span class=\"title\">ToSession</span><span class=\"params\">(creds credentials.Value, region *string)</span></span> session.<span class=\"type\">Session</span> {\n  <span class=\"keyword\">return</span> session.<span class=\"type\">Must</span>(session.<span class=\"type\">NewSessionWithOptions</span>(session.<span class=\"type\">Options</span>{\n    <span class=\"type\">Config</span>: aws.<span class=\"type\">Config</span>{ <span class=\"type\">Credentials</span>: credentials.<span class=\"type\">NewStaticCredentialsFromCreds</span>(creds), <span class=\"type\">Region</span>: region },\n  }))\n}\n...</code></pre><p>then you can do just <code>s3.New(sess)</code></p><p>but this will expire so you need to re-run</p>",
  "id": "59ed348bb20c64242935c273",
  "issues": [],
  "mentions": [
   {
    "screenName": "bscott",
    "userId": "59e51407d73408ce4f7a4a7e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-10-23T00:15:07.270Z",
  "text": "@bscott you can do this:\n```\nimport (\n  \"github.com/aws/aws-sdk-go/aws\"\n  \"github.com/aws/aws-sdk-go/aws/defaults\"\n  \"github.com/aws/aws-sdk-go/aws/credentials\"\n  \"github.com/aws/aws-sdk-go/aws/session\"\n)\n...\nfunc RetrieveRemoteCredentials(region *string) (credentials.Value, error) {\n  configp  := defaults.Config().WithRegion(*region)\n  provider := defaults.RemoteCredProvider(*configp, defaults.Handlers())\n  return provider.Retrieve()\n}\n...\nfunc ToSession(creds credentials.Value, region *string) session.Session {\n  return session.Must(session.NewSessionWithOptions(session.Options{\n    Config: aws.Config{ Credentials: credentials.NewStaticCredentialsFromCreds(creds), Region: region },\n  }))\n}\n...\n```\nthen you can do just `s3.New(sess)`\n\nbut this will expire so you need to re-run",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/radekg",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/62946?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/62946?v=4&s=60",
   "displayName": "Rad Gruchalski",
   "gv": "4",
   "id": "56b31350e610378809bfcff8",
   "url": "/radekg",
   "username": "radekg",
   "v": 7
  },
  "html": "bonus is, <code>RemoteCredProvider</code> resolves instance IAM role and ECS task roles",
  "id": "59ed351201110b7231eb0375",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-23T00:17:22.689Z",
  "text": "bonus is, `RemoteCredProvider` resolves instance IAM role and ECS task roles",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "hello, I am attempting to use the go sdk to delete all objects in an s3 bucket with a particular key prefix (i would like to wildcard). I\u2019ve read that is id not possible in 1 operation but there are bulk delete options.  Was wondering if someone could explain the distinction between 2 apis",
  "id": "59ee3dd6614889d475eef2bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-10-23T19:07:02.566Z",
  "text": "hello, I am attempting to use the go sdk to delete all objects in an s3 bucket with a particular key prefix (i would like to wildcard). I\u2019ve read that is id not possible in 1 operation but there are bulk delete options.  Was wondering if someone could explain the distinction between 2 apis",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "<a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#BatchDelete\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#BatchDelete</a>",
  "id": "59ee3dfc8808bed73d1bbb01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-23T19:07:40.400Z",
  "text": "https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#BatchDelete",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#BatchDelete"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "and",
  "id": "59ee3dfdd6c36fca31897142",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-23T19:07:41.511Z",
  "text": "and",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "<a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.DeleteObjects\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.DeleteObjects</a>",
  "id": "59ee3e26210ac26920209fbf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-23T19:08:22.097Z",
  "text": "https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.DeleteObjects",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.DeleteObjects"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "which is better? my gut tells me DeleteObjects as its a single https request",
  "id": "59ee3e355c40c1ba79d89d4f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-23T19:08:37.991Z",
  "text": "which is better? my gut tells me DeleteObjects as its a single https request",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "I can\u2019t seem to find usage for BatchDelete really",
  "id": "59ee3e47d6c36fca31897350",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-10-23T19:08:55.636Z",
  "text": "I can\u2019t seem to find usage for BatchDelete really",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"MadMub\" class=\"mention\">@MadMub</span> the <code>BatchDelete</code> is a helper utility that will perform the deletes. The utility abstracts away the multiple API calls. The multiple calls are still performed but under the hood.",
  "id": "59ee43f5f7299e8f5322b922",
  "issues": [],
  "mentions": [
   {
    "screenName": "MadMub",
    "userId": "572a0dabc43b8c6019711f8e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-10-23T19:33:09.811Z",
  "text": "@MadMub the `BatchDelete` is a helper utility that will perform the deletes. The utility abstracts away the multiple API calls. The multiple calls are still performed but under the hood.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "does it use DeleteObjects under the hood?",
  "id": "59ee449432e080696e17821e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-10-23T19:35:48.151Z",
  "text": "does it use DeleteObjects under the hood?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "or if I wanted to delete 800 objects would it iterate 800 requests, in which case DeleteObjects single http request is the way to go I would think",
  "id": "59ee44b3e44c43700a6b7d49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-10-23T19:36:19.318Z",
  "text": "or if I wanted to delete 800 objects would it iterate 800 requests, in which case DeleteObjects single http request is the way to go I would think",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "I\u2019ll read the source",
  "id": "59ee44c6614889d475ef1a54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-10-23T19:36:38.462Z",
  "text": "I\u2019ll read the source",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Correct <code>BatchDelete</code> will use <code>DeleteObjects</code> under the hood. I think the default iterator is a <code>ListObjects</code> API call. The <code>BatchDelete</code> will use the iterator to collect the objects that are to be deleted putting them into batches for <code>DeleteObjects</code>. So N number of DeleteObjects API calls would be made. Where <code>N</code> is <code>NumObjects / BatchSize</code>",
  "id": "59ee459be44c43700a6b8254",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-10-23T19:40:11.659Z",
  "text": "Correct `BatchDelete` will use `DeleteObjects` under the hood. I think the default iterator is a `ListObjects` API call. The `BatchDelete` will use the iterator to collect the objects that are to be deleted putting them into batches for `DeleteObjects`. So N number of DeleteObjects API calls would be made. Where `N` is `NumObjects / BatchSize`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "ah okay, can I use BatchDelete as a way of deleting items that meet a particular criteria?",
  "id": "59ee45c0d6c36fca31899c49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-10-23T19:40:48.236Z",
  "text": "ah okay, can I use BatchDelete as a way of deleting items that meet a particular criteria?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "if someone could point me to example usage I can check that out",
  "id": "59ee45cdf7299e8f5322c46d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-10-23T19:41:01.381Z",
  "text": "if someone could point me to example usage I can check that out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "you are saying it uses ListObjects, I was going to do that to get the total list of objects, then filter out anything i dont want to delete, then call DeleteObjects. But maybe BatchDelete is the secret sauce I need",
  "id": "59ee45f88808bed73d1be8d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-10-23T19:41:44.342Z",
  "text": "you are saying it uses ListObjects, I was going to do that to get the total list of objects, then filter out anything i dont want to delete, then call DeleteObjects. But maybe BatchDelete is the secret sauce I need",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Sure, the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#BatchDeleteIterator\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><code>BatchDeleteIterator</code></a> is an interface that you can provide a custom implementation to. ",
  "id": "59ee45fed6c36fca31899dce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-10-23T19:41:50.015Z",
  "text": "Sure, the [`BatchDeleteIterator`](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#BatchDeleteIterator) is an interface that you can provide a custom implementation to. ",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#BatchDeleteIterator"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "Awesome!",
  "id": "59ee47605c40c1ba79d8d631",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-10-23T19:47:44.346Z",
  "text": "Awesome!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "I\u2019m glad I asked otherwise I would have reimplemented all of what BatchDelete did already",
  "id": "59ee477cf7299e8f5322ceac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-10-23T19:48:12.152Z",
  "text": "I\u2019m glad I asked otherwise I would have reimplemented all of what BatchDelete did already",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": ":) glad to help",
  "id": "59ee4ab8d6c36fca3189b809",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-10-23T20:02:00.801Z",
  "text": ":) glad to help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "I\u2019m actually just going to use <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#NewDeleteListIterator\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#NewDeleteListIterator</a>",
  "id": "59ee4cb032e080696e17b226",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-10-23T20:10:24.662Z",
  "text": "I\u2019m actually just going to use http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#NewDeleteListIterator",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#NewDeleteListIterator"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "and <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#ListObjectsInput\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#ListObjectsInput</a> \u2019s prefix option to limit only objects with keyPrefix, no need to implement the interface",
  "id": "59ee4cec210ac2692020f3bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-10-23T20:11:24.652Z",
  "text": "and http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#ListObjectsInput \u2019s prefix option to limit only objects with keyPrefix, no need to implement the interface",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#ListObjectsInput"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "thanks for the info <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> !",
  "id": "59ee4cf432e080696e17b39b",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-10-23T20:11:32.282Z",
  "text": "thanks for the info @jasdel !",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "Anyone seen this error &quot;stream error: stream ID 3; PROTOCOL_ERROR&quot; before?",
  "id": "59ef1d088808bed73d1fecbf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-10-24T10:59:20.421Z",
  "text": "Anyone seen this error \"stream error: stream ID 3; PROTOCOL_ERROR\" before?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "seeing it only when I use AWS SDK with http.Get",
  "id": "59ef2544b20c6424293f80cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-10-24T11:34:28.103Z",
  "text": "seeing it only when I use AWS SDK with http.Get",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/the1337beauty_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/2163201626/logo-small.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/2163201626/logo-small_bigger.png",
   "displayName": "Andrea Kimberlin",
   "id": "58dbb7f4d73408ce4f549306",
   "url": "/the1337beauty_twitter",
   "username": "the1337beauty_twitter",
   "v": 1
  },
  "html": "anyone use the rdsutils to connect to aurora mysql with IAM?",
  "id": "59ef7b39210ac2692026fb76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-10-24T17:41:13.688Z",
  "text": "anyone use the rdsutils to connect to aurora mysql with IAM?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-10-24T19:33:59.074Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span> which AWS Service are you seeing that with? That looks like an HTTP2 error. You could try setting the environment variable <a href=\"https://golang.org/pkg/net/http/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">GODEBUG=http2debug=1</a> before running your application. This will output HTTP2 debug information.",
  "id": "59ef95908808bed73d22cf96",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-10-24T19:33:36.109Z",
  "text": "@kaihendry which AWS Service are you seeing that with? That looks like an HTTP2 error. You could try setting the environment variable [GODEBUG=http2debug=1](https://golang.org/pkg/net/http/) before running your application. This will output HTTP2 debug information.",
  "unread": false,
  "urls": [
   {
    "url": "https://golang.org/pkg/net/http/"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> turned out it was because there a URL being passed with a newline. DOH.",
  "id": "59efe9758808bed73d247895",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-10-25T01:31:33.973Z",
  "text": "@jasdel turned out it was because there a URL being passed with a newline. DOH.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/jmetzmeier",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3281448?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3281448?v=4&s=60",
   "displayName": "Jordan Metzmeier",
   "gv": "4",
   "id": "58f4e0f8d73408ce4f58fcdc",
   "url": "/jmetzmeier",
   "username": "jmetzmeier",
   "v": 1
  },
  "html": "did they break the API docs for go?",
  "id": "59eff32d0182fa5f4d743bfb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-10-25T02:13:01.095Z",
  "text": "did they break the API docs for go?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "is there a good S3 API to ensure an object is not being overwritten? Or if it exists? <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.WaitUntilObjectExists\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.WaitUntilObjectExists</a> is confusing to me",
  "id": "59efff1c01110b7231f94ffe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-10-25T03:03:56.375Z",
  "text": "is there a good S3 API to ensure an object is not being overwritten? Or if it exists? https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.WaitUntilObjectExists is confusing to me",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.WaitUntilObjectExists"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "I need something run at a set time in the future. It&#39;s not repeated. There will be very many of them. Think recording of TV shows. What is the best API to easily do that?",
  "id": "59f02b7c8808bed73d2577a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-10-25T06:13:16.300Z",
  "text": "I need something run at a set time in the future. It's not repeated. There will be very many of them. Think recording of TV shows. What is the best API to easily do that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Is there any way to specify <code>aws.LogDebug</code> via an environment variable?",
  "id": "59f0ba9c210ac269202d8068",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-10-25T16:23:56.131Z",
  "text": "Is there any way to specify `aws.LogDebug` via an environment variable?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sahilg1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/19416298?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/19416298?v=4&s=60",
   "displayName": "Sahil Gupta",
   "gv": "4",
   "id": "59f0ea23d73408ce4f7bb479",
   "url": "/sahilg1",
   "username": "sahilg1"
  },
  "html": "does anyone know how to create a session without using the shared credentials file?<br>Does the NewSession( ) function pick up the credentials from the environment variables?",
  "id": "59f0f1bb210ac269202ecb0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-10-25T20:19:07.978Z",
  "text": "does anyone know how to create a session without using the shared credentials file?\nDoes the NewSession( ) function pick up the credentials from the environment variables?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/sat51433_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "sateesh",
   "id": "59af9351d73408ce4f7480c0",
   "url": "/sat51433_twitter",
   "username": "sat51433_twitter"
  },
  "html": "Hi, any one help me how to create login using aws go sdk cognito identity provider",
  "id": "59f2fdd1e44c43700a83f2fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-27T09:35:13.692Z",
  "text": "Hi, any one help me how to create login using aws go sdk cognito identity provider",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/SCKelemen",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4325375?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4325375?v=4&s=60",
   "displayName": "Samuel Kelemen",
   "gv": "4",
   "id": "56844e0d16b6c7089cc0a5dc",
   "url": "/SCKelemen",
   "username": "SCKelemen",
   "v": 13
  },
  "html": "Does anyone have an example of posting a file to S3, with all of the configuration hardcoded? I&#39;m not able to use environment variables or config files, and for now I&#39;d like to just hardcode all the values to make the requst.",
  "id": "59f4ace9b20c6424295bfc25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-10-28T16:14:33.802Z",
  "text": "Does anyone have an example of posting a file to S3, with all of the configuration hardcoded? I'm not able to use environment variables or config files, and for now I'd like to just hardcode all the values to make the requst.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"SCKelemen\" class=\"mention\">@SCKelemen</span> what&#39;s wrong with the examples upon <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.PutObject\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.PutObject</a>",
  "id": "59f80225976e63937e0a0a96",
  "issues": [],
  "mentions": [
   {
    "screenName": "SCKelemen",
    "userId": "56844e0d16b6c7089cc0a5dc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-31T04:55:01.309Z",
  "text": "@SCKelemen what's wrong with the examples upon https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.PutObject",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.PutObject"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sat51433_twitter\" class=\"mention\">@sat51433_twitter</span> Cognito on AWS in my experience is a world of pain",
  "id": "59f8023fe44c43700a9ac775",
  "issues": [],
  "mentions": [
   {
    "screenName": "sat51433_twitter",
    "userId": "59af9351d73408ce4f7480c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-10-31T04:55:27.354Z",
  "text": "@sat51433_twitter Cognito on AWS in my experience is a world of pain",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/sat51433_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "sateesh",
   "id": "59af9351d73408ce4f7480c0",
   "url": "/sat51433_twitter",
   "username": "sat51433_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span>  I am facing a problem with InitiateAuth function in aws go sdk.  ",
  "id": "59f80c66d6c36fca31b939ce",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-31T05:38:46.624Z",
  "text": "@kaihendry  I am facing a problem with InitiateAuth function in aws go sdk.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sat51433_twitter\" class=\"mention\">@sat51433_twitter</span> sorry, can&#39;t help",
  "id": "59f81397b20c6424296b3cf6",
  "issues": [],
  "mentions": [
   {
    "screenName": "sat51433_twitter",
    "userId": "59af9351d73408ce4f7480c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-31T06:09:27.972Z",
  "text": "@sat51433_twitter sorry, can't help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/sat51433_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "sateesh",
   "id": "59af9351d73408ce4f7480c0",
   "url": "/sat51433_twitter",
   "username": "sat51433_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span>  No issue. I will try ",
  "id": "59f813cfd6c36fca31b9548e",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-31T06:10:23.271Z",
  "text": "@kaihendry  No issue. I will try ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<a href=\"https://stackoverflow.com/questions/47029424/how-to-share-session-with-a-http-fetch-and-store-to-s3-operation\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/questions/47029424/how-to-share-session-with-a-http-fetch-and-store-to-s3-operation</a>",
  "id": "59f81fbb4ff065ac1898704d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-10-31T07:01:15.270Z",
  "text": "https://stackoverflow.com/questions/47029424/how-to-share-session-with-a-http-fetch-and-store-to-s3-operation",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/questions/47029424/how-to-share-session-with-a-http-fetch-and-store-to-s3-operation"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/kc1116",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11549552?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11549552?v=4&s=60",
   "displayName": "kc1116",
   "gv": "4",
   "id": "591229a4d73408ce4f5e4510",
   "url": "/kc1116",
   "username": "kc1116",
   "v": 11
  },
  "html": "has anyone used elastic load balancer in here ? ",
  "id": "59f8d633e44c43700a9f7e45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-10-31T19:59:47.856Z",
  "text": "has anyone used elastic load balancer in here ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kc1116\" class=\"mention\">@kc1116</span> shouldn&#39;t you be using ALB?",
  "id": "59f93685d6c36fca31bf893c",
  "issues": [],
  "mentions": [
   {
    "screenName": "kc1116",
    "userId": "591229a4d73408ce4f5e4510",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-11-01T02:50:45.974Z",
  "text": "@kc1116 shouldn't you be using ALB?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> - We currently do not have that feature, enabling logging via environment variable. I&#39;ve went ahead and created this issue that you can track <a href=\"http://#1623\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a> ",
  "id": "59fa0436976e63937e14dc0b",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-01T17:28:22.725Z",
  "text": "@mrichman - We currently do not have that feature, enabling logging via environment variable. I've went ahead and created this issue that you can track [here](#1623) ",
  "unread": false,
  "urls": [
   {
    "url": "http://#1623"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sat51433_twitter\" class=\"mention\">@sat51433_twitter</span>: What is the issue you are seeing with <code>InitiateAuth</code>?",
  "id": "59fa04874ff065ac18a2ad05",
  "issues": [],
  "mentions": [
   {
    "screenName": "sat51433_twitter",
    "userId": "59af9351d73408ce4f7480c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-01T17:29:43.078Z",
  "text": "@sat51433_twitter: What is the issue you are seeing with `InitiateAuth`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sahilg1\" class=\"mention\">@sahilg1</span>: Environment variables have the highest priority. So setting that or specifying a profile, <code>AWS_PROFILE</code>, will retrieve those credentials. You can also programmatically grab your credentials from where ever. Please see <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/aws/credentials\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>",
  "id": "59fa055a4ff065ac18a2b2ab",
  "issues": [],
  "mentions": [
   {
    "screenName": "sahilg1",
    "userId": "59f0ea23d73408ce4f7bb479",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-01T17:33:14.721Z",
  "text": "@sahilg1: Environment variables have the highest priority. So setting that or specifying a profile, `AWS_PROFILE`, will retrieve those credentials. You can also programmatically grab your credentials from where ever. Please see [here](https://docs.aws.amazon.com/sdk-for-go/api/aws/credentials)",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/aws/credentials"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span>: Regarding not overwriting objects, the <code>WaitUntilObjectExists</code> allows for you to create something and wait in case you need to bootstrap other objects that depend on the object being created. Im sure there are more use cases, but that is the one that jumps out at me. Further, what is it that you are trying to do that requires that objects not be overwritten?",
  "id": "59fa07d9b20c64242975bf14",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-01T17:43:53.099Z",
  "text": "@kaihendry: Regarding not overwriting objects, the `WaitUntilObjectExists` allows for you to create something and wait in case you need to bootstrap other objects that depend on the object being created. Im sure there are more use cases, but that is the one that jumps out at me. Further, what is it that you are trying to do that requires that objects not be overwritten?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jmetzmeier\" class=\"mention\">@jmetzmeier</span> - Docs have been updated and is working :)",
  "id": "59fa0839614889d47529fd0f",
  "issues": [],
  "mentions": [
   {
    "screenName": "jmetzmeier",
    "userId": "58f4e0f8d73408ce4f58fcdc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-01T17:45:29.646Z",
  "text": "@jmetzmeier - Docs have been updated and is working :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> I actually opened one a few days ago <span data-link-type=\"issue\" data-issue=\"1611\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#1611</span>",
  "id": "59fa0c2d2a69af844b370210",
  "issues": [
   {
    "number": "1611",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-01T18:02:21.380Z",
  "text": "@xibz I actually opened one a few days ago https://github.com/aws/aws-sdk-go/issues/1611",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> - Awesome! I went ahead and closed that one :)",
  "id": "59fa0c63614889d4752a1564",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-01T18:03:15.468Z",
  "text": "@mrichman - Awesome! I went ahead and closed that one :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sat51433_twitter\" class=\"mention\">@sat51433_twitter</span> I can help you with Cognito. It&#39;s a terrible pain to use from the SDK. I cover it in my Pluralsight course (not yet released), but I can share some code with you that ecapsulates signup/signin using ADMIN_NO_SRP_AUTH",
  "id": "59fa0d1732e080696e51aa0c",
  "issues": [],
  "mentions": [
   {
    "screenName": "sat51433_twitter",
    "userId": "59af9351d73408ce4f7480c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-01T18:06:15.695Z",
  "text": "@sat51433_twitter I can help you with Cognito. It's a terrible pain to use from the SDK. I cover it in my Pluralsight course (not yet released), but I can share some code with you that ecapsulates signup/signin using ADMIN_NO_SRP_AUTH",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span>: That would be a huge help. Is this something that would make sense in the examples folder <a href=\"https://github.com/aws/aws-sdk-go/tree/master/example/service\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>?",
  "id": "59fa0ebc976e63937e151cd1",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-01T18:13:16.071Z",
  "text": "@mrichman: That would be a huge help. Is this something that would make sense in the examples folder [here](https://github.com/aws/aws-sdk-go/tree/master/example/service)?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/tree/master/example/service"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "agreed, this would be awesome to have a curated example for Cognito in the SDK.",
  "id": "59fa0ee2d6c36fca31c3fc62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-01T18:13:54.016Z",
  "text": "agreed, this would be awesome to have a curated example for Cognito in the SDK.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Almost definitely. I just have to work out potential copyright issues.",
  "id": "59fa13d9d6c36fca31c41abb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-01T18:35:05.018Z",
  "text": "Almost definitely. I just have to work out potential copyright issues.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "My use case is a self-hosted form which creates a user using <code>AdminCreateUser()</code> setting <code>email_verified=true</code>, <code>AdminInitiateAuth()</code> using <code>ADMIN_NO_SRP_AUTH</code> to get the session value, then <code>AdminRespondToAuthChallenge()</code> to flip <code>NEW_PASSWORD_REQUIRED</code> to <code>CONFIRMED</code>.",
  "id": "59fa1478614889d4752a45ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-01T18:37:44.878Z",
  "text": "My use case is a self-hosted form which creates a user using `AdminCreateUser()` setting `email_verified=true`, `AdminInitiateAuth()` using `ADMIN_NO_SRP_AUTH` to get the session value, then `AdminRespondToAuthChallenge()` to flip `NEW_PASSWORD_REQUIRED` to `CONFIRMED`.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<code>AdminRespondToAuthChallenge()</code> gives me back the JWT ID and Access tokens, which I store in session.",
  "id": "59fa14beb20c6424297613d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-01T18:38:54.155Z",
  "text": "`AdminRespondToAuthChallenge()` gives me back the JWT ID and Access tokens, which I store in session.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "The signin process is similar to the signup process, but only uses <code>AdminInitiateAuth()</code> to get back the JWT:",
  "id": "59fa152c976e63937e154459",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-01T18:40:44.325Z",
  "text": "The signin process is similar to the signup process, but only uses `AdminInitiateAuth()` to get back the JWT:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<pre><code><span class=\"rule\"><span class=\"attribute\">aia </span>:<span class=\"value\">= &amp;cognitoidentityprovider.AdminInitiateAuthInput{\n        AuthFlow: aws.<span class=\"function\">String</span>(<span class=\"string\">\"ADMIN_NO_SRP_AUTH\"</span>),\n        AuthParameters: map[string]*string{\n            <span class=\"string\">\"USERNAME\"</span>: aws.<span class=\"function\">String</span>(username),\n            <span class=\"string\">\"PASSWORD\"</span>: aws.<span class=\"function\">String</span>(password),\n        },\n        ClientId:   aws.<span class=\"function\">String</span>(clientID),\n        UserPoolId: aws.<span class=\"function\">String</span>(userPoolID),\n    }\n\n    log.<span class=\"function\">Info</span>(<span class=\"string\">\"AdminInitiateAuth: \"</span>, username)\n    authresp, autherr := cip.<span class=\"function\">AdminInitiateAuth</span>(aia) // cip is an instance of the CognitoIdentityProvider\n\n    if autherr != nil {\n        log.<span class=\"function\">Error</span>(autherr.<span class=\"function\">Error</span>())\n        return <span class=\"string\">\"\"</span>, autherr\n    }\n\n    accessToken := aws.<span class=\"function\">StringValue</span>(authresp.AuthenticationResult.AccessToken)\n\n    log.<span class=\"function\">Debug</span>(<span class=\"string\">\"AccessToken: \"</span>, accessToken)</span></span></code></pre>",
  "id": "59fa15685a1758ed0f784ce0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-01T18:41:44.068Z",
  "text": "```\naia := &cognitoidentityprovider.AdminInitiateAuthInput{\n\t\tAuthFlow: aws.String(\"ADMIN_NO_SRP_AUTH\"),\n\t\tAuthParameters: map[string]*string{\n\t\t\t\"USERNAME\": aws.String(username),\n\t\t\t\"PASSWORD\": aws.String(password),\n\t\t},\n\t\tClientId:   aws.String(clientID),\n\t\tUserPoolId: aws.String(userPoolID),\n\t}\n\n\tlog.Info(\"AdminInitiateAuth: \", username)\n\tauthresp, autherr := cip.AdminInitiateAuth(aia) // cip is an instance of the CognitoIdentityProvider\n\n\tif autherr != nil {\n\t\tlog.Error(autherr.Error())\n\t\treturn \"\", autherr\n\t}\n\n\taccessToken := aws.StringValue(authresp.AuthenticationResult.AccessToken)\n\n\tlog.Debug(\"AccessToken: \", accessToken)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "RE: Cognito. The only SDK developer guide that has Cognito samples is for .NET: <a href=\"https://docs.aws.amazon.com/sdk-for-net/v3/developer-guide/cognito-apis-intro.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-net/v3/developer-guide/cognito-apis-intro.html</a>. I&#39;ll see if I can&#39;t port them to Go (and Ruby, as I work on those docs also) in the next week or so.",
  "id": "59fa1ae3f7299e8f535da604",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-01T19:05:07.857Z",
  "text": "RE: Cognito. The only SDK developer guide that has Cognito samples is for .NET: https://docs.aws.amazon.com/sdk-for-net/v3/developer-guide/cognito-apis-intro.html. I'll see if I can't port them to Go (and Ruby, as I work on those docs also) in the next week or so.",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-net/v3/developer-guide/cognito-apis-intro.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Doug-AWS\" class=\"mention\">@Doug-AWS</span> I&#39;ve done a bit of work on this for my own use, so I&#39;m happy to assist. Consider it my interview to join your team ;) ",
  "id": "59fa1b23d6c36fca31c44696",
  "issues": [],
  "mentions": [
   {
    "screenName": "Doug-AWS",
    "userId": "565e0cbd16b6c7089cbcf1c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-01T19:06:11.980Z",
  "text": "@Doug-AWS I've done a bit of work on this for my own use, so I'm happy to assist. Consider it my interview to join your team ;) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> You got it. Feel free to make a pull request in our doc sample GitHub repo: <a href=\"https://github.com/awsdocs/aws-doc-sdk-examples\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/awsdocs/aws-doc-sdk-examples</a> (I would create them in a new folder, Go/example_code/cognito).",
  "id": "59fa1bca976e63937e157022",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-01T19:08:58.272Z",
  "text": "@mrichman You got it. Feel free to make a pull request in our doc sample GitHub repo: https://github.com/awsdocs/aws-doc-sdk-examples (I would create them in a new folder, Go/example_code/cognito).",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/awsdocs/aws-doc-sdk-examples"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Doug-AWS\" class=\"mention\">@Doug-AWS</span> Sure thing. Do you guys keep a feature backlog somewhere? I&#39;d hate to duplicate someone else&#39;s effort or work on something low priority.",
  "id": "59fa1c09d6c36fca31c44cf1",
  "issues": [],
  "mentions": [
   {
    "screenName": "Doug-AWS",
    "userId": "565e0cbd16b6c7089cbcf1c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-01T19:10:01.893Z",
  "text": "@Doug-AWS Sure thing. Do you guys keep a feature backlog somewhere? I'd hate to duplicate someone else's effort or work on something low priority.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> We do, but it&#39;s internal. I&#39;m the only writer working on the Go Developer Guide, so I&#39;ll let myself know (haha, I&#39;m so funny huh?). Let me double-check with legal about using code supplied by a non-Amazoner so I don&#39;t get us in trouble.",
  "id": "59fa1c8e5a1758ed0f78707a",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-01T19:12:14.675Z",
  "text": "@mrichman We do, but it's internal. I'm the only writer working on the Go Developer Guide, so I'll let myself know (haha, I'm so funny huh?). Let me double-check with legal about using code supplied by a non-Amazoner so I don't get us in trouble.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Doug-AWS\" class=\"mention\">@Doug-AWS</span> I also have to check with Pluralsight to see how much of the code I wrote for my course can be &quot;shared&quot;.",
  "id": "59fa1cb7f7299e8f535db062",
  "issues": [],
  "mentions": [
   {
    "screenName": "Doug-AWS",
    "userId": "565e0cbd16b6c7089cbcf1c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-01T19:12:55.514Z",
  "text": "@Doug-AWS I also have to check with Pluralsight to see how much of the code I wrote for my course can be \"shared\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> Good idea. I&#39;ll bet back as soon as I find out anything, but you know lawyers.",
  "id": "59fa1ceee44c43700aa61593",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-01T19:13:50.073Z",
  "text": "@mrichman Good idea. I'll bet back as soon as I find out anything, but you know lawyers.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Doug-AWS\" class=\"mention\">@Doug-AWS</span> I&#39;m sure your lawyers can beat up Pluralsight&#39;s lawyers :smile: There&#39;s really nothing stopping someone off the street from watching my course, downloading the code, massaging it a bit, and committing it to GitHub for the world to enjoy. I just don&#39;t want to be the one in violation of copyright or my own contract.",
  "id": "59fa1d48976e63937e157a63",
  "issues": [],
  "mentions": [
   {
    "screenName": "Doug-AWS",
    "userId": "565e0cbd16b6c7089cbcf1c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-01T19:15:20.608Z",
  "text": "@Doug-AWS I'm sure your lawyers can beat up Pluralsight's lawyers :smile: There's really nothing stopping someone off the street from watching my course, downloading the code, massaging it a bit, and committing it to GitHub for the world to enjoy. I just don't want to be the one in violation of copyright or my own contract.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> I just don&#39;t want to make the business section of the Seattle Times: &quot;Rogue Amazon employee indicted in conspiracy to defraud small company&quot;.",
  "id": "59fa1db4e44c43700aa61c28",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-11-01T19:17:08.445Z",
  "text": "@mrichman I just don't want to make the business section of the Seattle Times: \"Rogue Amazon employee indicted in conspiracy to defraud small company\".",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sahilg1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/19416298?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/19416298?v=4&s=60",
   "displayName": "Sahil Gupta",
   "gv": "4",
   "id": "59f0ea23d73408ce4f7bb479",
   "url": "/sahilg1",
   "username": "sahilg1"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> Thanks!",
  "id": "59fa3691b20c64242976d4b0",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-01T21:03:13.483Z",
  "text": "@xibz Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Doug-AWS\" class=\"mention\">@Doug-AWS</span> are you going to be at Re:Invent? Would be nice to have a Gopher gathering",
  "id": "59fab1c5e44c43700aa8e3e9",
  "issues": [],
  "mentions": [
   {
    "screenName": "Doug-AWS",
    "userId": "565e0cbd16b6c7089cbcf1c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-02T05:48:53.610Z",
  "text": "@Doug-AWS are you going to be at Re:Invent? Would be nice to have a Gopher gathering",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/rniedosmialek",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1743627?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1743627?v=4&s=60",
   "displayName": "Robert Niedosmialek",
   "gv": "4",
   "id": "59fb6d14d73408ce4f7ce1d9",
   "url": "/rniedosmialek",
   "username": "rniedosmialek",
   "v": 3
  },
  "html": "Can anyone tell me if ReadSeekCloser is deprecated what should be used if anything? The example I am looking at is s3.PutObjectInput",
  "id": "59fb6d8c4ff065ac18aa60b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-02T19:10:04.970Z",
  "text": "Can anyone tell me if ReadSeekCloser is deprecated what should be used if anything? The example I am looking at is s3.PutObjectInput",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karldotm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/168637?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/168637?v=4&s=60",
   "displayName": "Karl",
   "gv": "4",
   "id": "59fbb31ed73408ce4f7ce89c",
   "url": "/karldotm",
   "username": "karldotm",
   "v": 1
  },
  "html": "Working with the WorkDocs API and despite having Admin on WorkDocs.* in IAM I am unable to perform any option with the Node SDK beyond describeUsers",
  "id": "59fbb4402a69af844b40186f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-03T00:11:44.986Z",
  "text": "Working with the WorkDocs API and despite having Admin on WorkDocs.* in IAM I am unable to perform any option with the Node SDK beyond describeUsers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karldotm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/168637?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/168637?v=4&s=60",
   "displayName": "Karl",
   "gv": "4",
   "id": "59fbb31ed73408ce4f7ce89c",
   "url": "/karldotm",
   "username": "karldotm",
   "v": 1
  },
  "html": "any suggestions?",
  "id": "59fbb446b20c6424297ee42f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-03T00:11:50.244Z",
  "text": "any suggestions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"rniedosmialek\" class=\"mention\">@rniedosmialek</span> why would it be deprecated? That&#39;s the one",
  "id": "59fbb5e04ff065ac18abef51",
  "issues": [],
  "mentions": [
   {
    "screenName": "rniedosmialek",
    "userId": "59fb6d14d73408ce4f7ce1d9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-03T00:18:40.359Z",
  "text": "@rniedosmialek why would it be deprecated? That's the one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"karldotm\" class=\"mention\">@karldotm</span> almost certainly a permission problem? TIP: <code>sess := session.Must(session.NewSession(&amp;aws.Config{CredentialsChainVerboseErrors: aws.Bool(true)}))</code>",
  "id": "59fbb613b20c6424297eeec0",
  "issues": [],
  "mentions": [
   {
    "screenName": "karldotm",
    "userId": "59fbb31ed73408ce4f7ce89c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-03T00:19:31.172Z",
  "text": "@karldotm almost certainly a permission problem? TIP: `sess := session.Must(session.NewSession(&aws.Config{CredentialsChainVerboseErrors: aws.Bool(true)}))`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karldotm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/168637?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/168637?v=4&s=60",
   "displayName": "Karl",
   "gv": "4",
   "id": "59fbb31ed73408ce4f7ce89c",
   "url": "/karldotm",
   "username": "karldotm",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span> Not sure what language that is; I am wrorking with JavaScript (Node) - I don&#39;t need it specifically spelled out but perhaps some direction on which SDK to use. I&#39;ve been working with <a href=\"http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/WorkDocs.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/WorkDocs.html</a> which allows a few functions using my IAM credentials but others I get Permission Denied. I expect those functions I may need to, rather than using the AuthenticationToken parameter that is mentioned. I was able to manually go through an authentication process using the OAuth with a callback but that is impractical for a Lambda.",
  "id": "59fc6ffa32e080696e5df5e8",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-03T13:32:42.990Z",
  "text": "@kaihendry Not sure what language that is; I am wrorking with JavaScript (Node) - I don't need it specifically spelled out but perhaps some direction on which SDK to use. I've been working with http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/WorkDocs.html which allows a few functions using my IAM credentials but others I get Permission Denied. I expect those functions I may need to, rather than using the AuthenticationToken parameter that is mentioned. I was able to manually go through an authentication process using the OAuth with a callback but that is impractical for a Lambda.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/WorkDocs.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karldotm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/168637?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/168637?v=4&s=60",
   "displayName": "Karl",
   "gv": "4",
   "id": "59fbb31ed73408ce4f7ce89c",
   "url": "/karldotm",
   "username": "karldotm",
   "v": 1
  },
  "html": "Ah just realized I&#39;m in the Go forum",
  "id": "59fc714e32e080696e5dfc77",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-11-03T13:38:22.197Z",
  "text": "Ah just realized I'm in the Go forum",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/rniedosmialek",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1743627?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1743627?v=4&s=60",
   "displayName": "Robert Niedosmialek",
   "gv": "4",
   "id": "59fb6d14d73408ce4f7ce1d9",
   "url": "/rniedosmialek",
   "username": "rniedosmialek",
   "v": 3
  },
  "html": "The deprecated message is mentioned as I am using this to upload to S3. It is when I define the Body param for the object input it is flagged as deprecated &quot;Body:   aws.ReaderSeekerCloser(strings.NewReader(filename)),&quot;. If I updated the method based on what the current sdk supports I have to define is as ",
  "id": "59fc73f332e080696e5e0a8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-11-03T13:49:39.293Z",
  "text": "The deprecated message is mentioned as I am using this to upload to S3. It is when I define the Body param for the object input it is flagged as deprecated \"Body:   aws.ReaderSeekerCloser(strings.NewReader(filename)),\". If I updated the method based on what the current sdk supports I have to define is as ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/rniedosmialek",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1743627?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1743627?v=4&s=60",
   "displayName": "Robert Niedosmialek",
   "gv": "4",
   "id": "59fb6d14d73408ce4f7ce1d9",
   "url": "/rniedosmialek",
   "username": "rniedosmialek",
   "v": 3
  },
  "html": "&quot;Body:   aws.ReaderSeekerCloser{strings.NewReader(filename)},&quot; to have it work properly. Sorry for the break in my response.",
  "id": "59fc740be44c43700ab20f45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-11-03T13:50:03.038Z",
  "text": "\"Body:   aws.ReaderSeekerCloser{strings.NewReader(filename)},\" to have it work properly. Sorry for the break in my response.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/rniedosmialek",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1743627?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1743627?v=4&s=60",
   "displayName": "Robert Niedosmialek",
   "gv": "4",
   "id": "59fb6d14d73408ce4f7ce1d9",
   "url": "/rniedosmialek",
   "username": "rniedosmialek",
   "v": 3
  },
  "html": "On compilation I receive &quot;cannot convert strings.NewReader(filename) (type *strings.Reader) to type aws.ReaderSeekerCloser&quot; as the failure",
  "id": "59fc8041d6c36fca31d0af51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-11-03T14:42:09.803Z",
  "text": "On compilation I receive \"cannot convert strings.NewReader(filename) (type *strings.Reader) to type aws.ReaderSeekerCloser\" as the failure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/Muhilan20047884_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "Muhilan",
   "id": "5a0047ebd73408ce4f7d5820",
   "url": "/Muhilan20047884_twitter",
   "username": "Muhilan20047884_twitter"
  },
  "html": "hi",
  "id": "5a0048232a69af844b53f6bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-11-06T11:31:47.136Z",
  "text": "hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/Muhilan20047884_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "Muhilan",
   "id": "5a0047ebd73408ce4f7d5820",
   "url": "/Muhilan20047884_twitter",
   "username": "Muhilan20047884_twitter"
  },
  "html": "how to get AuthenticationToken in workdocs SDK",
  "id": "5a004837d6c36fca31e0bd4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-11-06T11:32:07.186Z",
  "text": "how to get AuthenticationToken in workdocs SDK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/Muhilan20047884_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "Muhilan",
   "id": "5a0047ebd73408ce4f7d5820",
   "url": "/Muhilan20047884_twitter",
   "username": "Muhilan20047884_twitter"
  },
  "html": "I am using C# to access workdocs SDK. I am trying to get access of root folder using describeRootFolders  method. It is asking AuthenticationToken. How to generate it",
  "id": "5a004915d6c36fca31e0c16c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-11-06T11:35:49.472Z",
  "text": "I am using C# to access workdocs SDK. I am trying to get access of root folder using describeRootFolders  method. It is asking AuthenticationToken. How to generate it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/Muhilan20047884_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "Muhilan",
   "id": "5a0047ebd73408ce4f7d5820",
   "url": "/Muhilan20047884_twitter",
   "username": "Muhilan20047884_twitter"
  },
  "html": "where I can get help on workdocs SDK?",
  "id": "5a004dc686d308b755b3b5fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-11-06T11:55:50.485Z",
  "text": "where I can get help on workdocs SDK?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Muhilan20047884_twitter\" class=\"mention\">@Muhilan20047884_twitter</span> I suggest asking on <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=172\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Amazon Worddoc Forums</a> would be a good place, or stackoverflow too.",
  "id": "5a00a41a614889d47548b492",
  "issues": [],
  "mentions": [
   {
    "screenName": "Muhilan20047884_twitter",
    "userId": "5a0047ebd73408ce4f7d5820",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-06T18:04:10.898Z",
  "text": "@Muhilan20047884_twitter I suggest asking on [Amazon Worddoc Forums](https://forums.aws.amazon.com/forum.jspa?forumID=172) would be a good place, or stackoverflow too.",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=172"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/harsh-px",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26801153?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26801153?v=4&s=60",
   "displayName": "Harsh Desai",
   "gv": "4",
   "id": "5a00ef99d73408ce4f7d6fb4",
   "url": "/harsh-px",
   "username": "harsh-px"
  },
  "html": "Hello. I have a question regarding the usage of <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/ssm/#SSM.SendCommand\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/ssm/#SSM.SendCommand</a>. I need to issue a command to the aws instance and grab the standard output. Looking at the API, I don&#39;t see a clear way of doing this without using a S3 bucket. Does anyone have an example for doing this?",
  "id": "5a00f236f7299e8f537de6b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-06T23:37:26.128Z",
  "text": "Hello. I have a question regarding the usage of http://docs.aws.amazon.com/sdk-for-go/api/service/ssm/#SSM.SendCommand. I need to issue a command to the aws instance and grab the standard output. Looking at the API, I don't see a clear way of doing this without using a S3 bucket. Does anyone have an example for doing this?",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/ssm/#SSM.SendCommand"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<a href=\"https://twitter.com/samihaahtinen/status/927854452278562816\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://twitter.com/samihaahtinen/status/927854452278562816</a>",
  "id": "5a01a682df09362e67da937f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 6,
  "sent": "2017-11-07T12:26:42.349Z",
  "text": "https://twitter.com/samihaahtinen/status/927854452278562816",
  "unread": false,
  "urls": [
   {
    "url": "https://twitter.com/samihaahtinen/status/927854452278562816"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-11-07T14:42:58.847Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "anyone an idea on how to work around this issue with buffers? <span data-link-type=\"issue\" data-issue=\"377\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#377</span><br>Or <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> do you have any suggestions?",
  "id": "5a01c62cdf09362e67db5e91",
  "issues": [
   {
    "number": "377",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2017-11-07T14:41:48.750Z",
  "text": "anyone an idea on how to work around this issue with buffers? https://github.com/aws/aws-sdk-go/issues/377\nOr @jasdel do you have any suggestions?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> Thanks for the link :)  Working with pointers in an API can be awkward at times, but from our research without a builder patter it is really the best way to communicate intention of setting a field since several APIs support zero value (empty string) inputs.",
  "id": "5a01ed4686d308b755bc4c7f",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2017-11-07T17:28:38.810Z",
  "text": "@mrichman Thanks for the link :)  Working with pointers in an API can be awkward at times, but from our research without a builder patter it is really the best way to communicate intention of setting a field since several APIs support zero value (empty string) inputs.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I\u2019m not disagreeing. Just figured you want want to respond or even offer a rationale in the docs. You don\u2019t want anyone thinking it\u2019s an antipattern.",
  "id": "5a01ed9d86d308b755bc4efd",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 6,
  "sent": "2017-11-07T17:30:05.378Z",
  "text": "@jasdel I\u2019m not disagreeing. Just figured you want want to respond or even offer a rationale in the docs. You don\u2019t want anyone thinking it\u2019s an antipattern.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jonaskint\" class=\"mention\">@jonaskint</span> this is still outstanding we have PR <span data-link-type=\"issue\" data-issue=\"1554\" class=\"issue\">#1554</span> which addresses the issue for RESTXML and RESTJSON, marshaling. The work is still pending as a bug was found in code generation, and protocol marshaling.  WE&#39;ve not yet started the work for improving the SDK&#39;s unmarshalers yet.",
  "id": "5a01eddf5a1758ed0f9d658a",
  "issues": [
   {
    "number": "1554"
   }
  ],
  "mentions": [
   {
    "screenName": "jonaskint",
    "userId": "58662242d73408ce4f402939",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2017-11-07T17:31:11.867Z",
  "text": "@jonaskint this is still outstanding we have PR #1554 which addresses the issue for RESTXML and RESTJSON, marshaling. The work is still pending as a bug was found in code generation, and protocol marshaling.  WE've not yet started the work for improving the SDK's unmarshalers yet.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> Ah, haha sorry didn&#39;t realize that was a negative comment :) thanks",
  "id": "5a01edefb20c6424299c57d0",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2017-11-07T17:31:27.581Z",
  "text": "@mrichman Ah, haha sorry didn't realize that was a negative comment :) thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> maybe I\u2019m misunderstanding his tweet, but I\ufe0f read it as if he wrote it sarcastically ",
  "id": "5a01ee345a1758ed0f9d6725",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2017-11-07T17:32:36.653Z",
  "text": "@jasdel maybe I\u2019m misunderstanding his tweet, but I\ufe0f read it as if he wrote it sarcastically ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I think you&#39;re right, i re-read it miss read it the first time",
  "id": "5a01eefae44c43700acb6667",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 7,
  "sent": "2017-11-07T17:35:54.233Z",
  "text": "I think you're right, i re-read it miss read it the first time",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Thanks for the update! Is there any help needed on making these unmarshalers? I am currently a go rookie but am willing to do an effort as it would solve my problems as well.",
  "id": "5a01efc0e44c43700acb6b11",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2017-11-07T17:39:12.516Z",
  "text": "@jasdel Thanks for the update! Is there any help needed on making these unmarshalers? I am currently a go rookie but am willing to do an effort as it would solve my problems as well.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jonaskint\" class=\"mention\">@jonaskint</span> are you seeing the issue specifically with S3, or with additional APIs. In addition were you able to profile the issue to identify any particular API that cause causing the problem more than others?",
  "id": "5a01effef7299e8f5382ed7c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jonaskint",
    "userId": "58662242d73408ce4f402939",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2017-11-07T17:40:14.743Z",
  "text": "@jonaskint are you seeing the issue specifically with S3, or with additional APIs. In addition were you able to profile the issue to identify any particular API that cause causing the problem more than others?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> s3 in my case. We are working with the <code>aws.WriteAtBuffer</code> approach and files that are 200mb in size take up 1.6 to 2 GB of memory. Another issue is that it doesn&#39;t release the memory as well",
  "id": "5a01f0add6c36fca31e9a820",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 7,
  "sent": "2017-11-07T17:43:09.788Z",
  "text": "@jasdel s3 in my case. We are working with the ```aws.WriteAtBuffer``` approach and files that are 200mb in size take up 1.6 to 2 GB of memory. Another issue is that it doesn't release the memory as well",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks!, For the unmarshalers I think we&#39;re at a design phase of how we can implement code generated unmarshalers that won&#39;t use reflection.",
  "id": "5a01f0cb976e63937e3b6d0a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-11-07T17:43:39.586Z",
  "text": "Thanks!, For the unmarshalers I think we're at a design phase of how we can implement code generated unmarshalers that won't use reflection.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "wow that significant. Would you be able to share a small example  that exercises what your doing?",
  "id": "5a01f0e2976e63937e3b6da5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-11-07T17:44:02.595Z",
  "text": "wow that significant. Would you be able to share a small example  that exercises what your doing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "is that physical or virtal memory by the way?",
  "id": "5a01f0f2976e63937e3b6e3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2017-11-07T17:44:18.602Z",
  "text": "is that physical or virtal memory by the way?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "physical",
  "id": "5a01f0feb20c6424299c68ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-07T17:44:30.752Z",
  "text": "physical",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "we are shipping files varying from a few kb&#39;s up to 2GB ",
  "id": "5a01f125b20c6424299c6aac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-07T17:45:09.640Z",
  "text": "we are shipping files varying from a few kb's up to 2GB ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "And i think the biggest issue is the downloading from s3",
  "id": "5a01f13532e080696e773e29",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-07T17:45:25.882Z",
  "text": "And i think the biggest issue is the downloading from s3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "I&#39;ll get some code snippets",
  "id": "5a01f13c5a1758ed0f9d7c13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-07T17:45:32.170Z",
  "text": "I'll get some code snippets",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "thanks! if you wouldn&#39;t mind creating a GitHub issue and linking it to <span data-link-type=\"issue\" data-issue=\"1300\" class=\"issue\">#1300</span> that would be very helpful.",
  "id": "5a01f319976e63937e3b7b61",
  "issues": [
   {
    "number": "1300"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-07T17:53:29.463Z",
  "text": "thanks! if you wouldn't mind creating a GitHub issue and linking it to #1300 that would be very helpful.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> A slimmed down example would be:<pre><code>func (r *Record) DownloadFromS3(dl *s3manager.Downloader) (*aws.WriteAtBuffer, <span class=\"keyword\">error</span>) {\n    buffer := &amp;aws.WriteAtBuffer{}\n\n    input := &amp;s3.GetObjectInput{\n        Bucket: aws.<span class=\"built_in\">String</span>(r.S3.Bucket.Name),\n        Key:    aws.<span class=\"built_in\">String</span>(r.S3.Object.Key),\n    }\n\n    _, <span class=\"built_in\">err</span> := dl.Download(buffer, input)\n\n    <span class=\"keyword\">if</span> <span class=\"built_in\">err</span> != nil {\n        <span class=\"built_in\">log</span>.Warning(<span class=\"string\">\"S3 download error: %s\"</span>, <span class=\"built_in\">err</span>)\n        return nil, <span class=\"built_in\">err</span>\n    }\n\n    <span class=\"built_in\">log</span>.Info(<span class=\"string\">\"File %s downloaded into buffer\"</span>, r.S3.Object.Key)\n\n    return buffer, nil\n}</code></pre>",
  "id": "5a01f350f7299e8f53830160",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-07T17:54:24.581Z",
  "text": "@jasdel A slimmed down example would be:\n```\nfunc (r *Record) DownloadFromS3(dl *s3manager.Downloader) (*aws.WriteAtBuffer, error) {\n\tbuffer := &aws.WriteAtBuffer{}\n\n\tinput := &s3.GetObjectInput{\n\t\tBucket: aws.String(r.S3.Bucket.Name),\n\t\tKey:    aws.String(r.S3.Object.Key),\n\t}\n\n\t_, err := dl.Download(buffer, input)\n\n\tif err != nil {\n\t\tlog.Warning(\"S3 download error: %s\", err)\n\t\treturn nil, err\n\t}\n\n\tlog.Info(\"File %s downloaded into buffer\", r.S3.Object.Key)\n\n\treturn buffer, nil\n}\n```\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "i&#39;ll create an extra issue",
  "id": "5a01f358d6c36fca31e9b76b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-07T17:54:32.690Z",
  "text": "i'll create an extra issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "As a potential workaround did you try setting <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/#WriteAtBuffer\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">WriterAtBuffer</a>&#39;s GrowthCoeff to a higher value. Maybe something like 2.0?",
  "id": "5a01f391614889d4754f7e37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-07T17:55:29.734Z",
  "text": "As a potential workaround did you try setting [WriterAtBuffer](http://docs.aws.amazon.com/sdk-for-go/api/aws/#WriteAtBuffer)'s GrowthCoeff to a higher value. Maybe something like 2.0?",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/#WriteAtBuffer"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "this makes the WriteAtBuffer more agressive allocating its buffer which should reduce the number of allocs it performs, but may create larger unused data.",
  "id": "5a01f40a614889d4754f806c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-07T17:57:30.486Z",
  "text": "this makes the WriteAtBuffer more agressive allocating its buffer which should reduce the number of allocs it performs, but may create larger unused data.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "ok i&#39;ll try that one",
  "id": "5a01f424e44c43700acb8737",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-07T17:57:56.651Z",
  "text": "ok i'll try that one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I think the <code>WriteAtBuffer</code> is good for small streams, but large &gt; 1GB buffers it will not be very efficient. It would be better to use files for buffers that big.  Does your application need to keep the file&#39;s buffer in memory?  Would it make sense to create a temporary file, use download manager to download the content, then return the file handle?",
  "id": "5a01f4e186d308b755bc777d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 9,
  "sent": "2017-11-07T18:01:05.326Z",
  "text": "I think the `WriteAtBuffer` is good for small streams, but large > 1GB buffers it will not be very efficient. It would be better to use files for buffers that big.  Does your application need to keep the file's buffer in memory?  Would it make sense to create a temporary file, use download manager to download the content, then return the file handle?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "An additional optimization we could make to <code>WriteAtBuffer</code> is to have an initial size, and provide some way to reuse buffers.",
  "id": "5a01f630df09362e67dc9542",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-07T18:06:40.263Z",
  "text": "An additional optimization we could make to `WriteAtBuffer` is to have an initial size, and provide some way to reuse buffers.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "will test those options tonight :) thanks for the help!",
  "id": "5a020e4332e080696e77efa0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-07T19:49:23.223Z",
  "text": "will test those options tonight :) thanks for the help!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "And <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> we&#39;ll probably need the in memory buffer as our queues can be high throughput. Our current use-case can use the file approach but streaming will be a must somewhere in the next weeks for another application that we&#39;re using s3.",
  "id": "5a020ea586d308b755bd09d9",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-07T19:51:01.446Z",
  "text": "And @jasdel we'll probably need the in memory buffer as our queues can be high throughput. Our current use-case can use the file approach but streaming will be a must somewhere in the next weeks for another application that we're using s3.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "if we would have had c5 instances in frankfurt with nvme storage, it would be an option to write them to tmp files",
  "id": "5a020ece614889d475501c2c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-07T19:51:42.316Z",
  "text": "if we would have had c5 instances in frankfurt with nvme storage, it would be an option to write them to tmp files",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-11-07T20:10:12.835Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jonaskint\" class=\"mention\">@jonaskint</span> Also you can use <code>NewWriteAtBuffer</code> To provide an initial buffer for the <code>WriteAtBuffer</code> to use. In addition you could also checkout <code>sync.Pool</code> to reuse the buffers between streams.  This is a rough example, <a href=\"https://play.golang.org/p/-rF-dK8m9N\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://play.golang.org/p/-rF-dK8m9N</a>",
  "id": "5a02128c614889d47550347f",
  "issues": [],
  "mentions": [
   {
    "screenName": "jonaskint",
    "userId": "58662242d73408ce4f402939",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2017-11-07T20:07:40.466Z",
  "text": "@jonaskint Also you can use `NewWriteAtBuffer` To provide an initial buffer for the `WriteAtBuffer` to use. In addition you could also checkout `sync.Pool` to reuse the buffers between streams.  This is a rough example, https://play.golang.org/p/-rF-dK8m9N",
  "unread": false,
  "urls": [
   {
    "url": "https://play.golang.org/p/-rF-dK8m9N"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> a good read about pools: <a href=\"https://www.captaincodeman.com/2017/06/02/golang-buffer-pool-gotcha\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.captaincodeman.com/2017/06/02/golang-buffer-pool-gotcha</a> the gotcha can be painful :p",
  "id": "5a022f76f7299e8f538485e6",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-07T22:11:02.272Z",
  "text": "@jasdel a good read about pools: https://www.captaincodeman.com/2017/06/02/golang-buffer-pool-gotcha the gotcha can be painful :p",
  "unread": false,
  "urls": [
   {
    "url": "https://www.captaincodeman.com/2017/06/02/golang-buffer-pool-gotcha"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "ah yeah that case of continuing to use the buffer after putting it back in the pool would be the biggest risk",
  "id": "5a02391332e080696e78fac6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-07T22:52:03.709Z",
  "text": "ah yeah that case of continuing to use the buffer after putting it back in the pool would be the biggest risk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-11-07T23:05:51.785Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/simar7",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1254783?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1254783?v=4&s=60",
   "displayName": "Simarpreet Singh",
   "gv": "4",
   "id": "54e1335b15522ed4b3dc0d16",
   "url": "/simar7",
   "username": "simar7",
   "v": 5
  },
  "html": "hey folks, is there an equivalent of  getContentMD5() in the golang bindings as in the Java version?<br> <a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/ObjectMetadata.html#getContentMD5--\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/ObjectMetadata.html#getContentMD5--</a> ",
  "id": "5a023c405a1758ed0f9f3d3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-07T23:05:36.670Z",
  "text": "hey folks, is there an equivalent of  getContentMD5() in the golang bindings as in the Java version?\n http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/ObjectMetadata.html#getContentMD5-- ",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/ObjectMetadata.html#getContentMD5--"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/simar7",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1254783?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1254783?v=4&s=60",
   "displayName": "Simarpreet Singh",
   "gv": "4",
   "id": "54e1335b15522ed4b3dc0d16",
   "url": "/simar7",
   "username": "simar7",
   "v": 5
  },
  "html": "I&#39;m trying to check if there&#39;s a way to check the md5 sum of an s3 object before fetching it",
  "id": "5a023ce632e080696e790d49",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-07T23:08:22.426Z",
  "text": "I'm trying to check if there's a way to check the md5 sum of an s3 object before fetching it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"simar7\" class=\"mention\">@simar7</span> the SDK does not have this feature. I believe the <code>etag</code> header represents the MD5 of the object in S3.  Though this field is not md5 of the object if server side encryption is used.",
  "id": "5a023e065a1758ed0f9f44ba",
  "issues": [],
  "mentions": [
   {
    "screenName": "simar7",
    "userId": "54e1335b15522ed4b3dc0d16",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-11-07T23:13:10.130Z",
  "text": "@simar7 the SDK does not have this feature. I believe the `etag` header represents the MD5 of the object in S3.  Though this field is not md5 of the object if server side encryption is used.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/simar7",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1254783?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1254783?v=4&s=60",
   "displayName": "Simarpreet Singh",
   "gv": "4",
   "id": "54e1335b15522ed4b3dc0d16",
   "url": "/simar7",
   "username": "simar7",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I see. Yeah I was also looking around for  <code>etag</code> but couldn&#39;t find any accessor methods that would return that either.",
  "id": "5a023e73976e63937e3d5f5a",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-07T23:14:59.950Z",
  "text": "@jasdel I see. Yeah I was also looking around for  ```etag``` but couldn't find any accessor methods that would return that either.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/simar7",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1254783?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1254783?v=4&s=60",
   "displayName": "Simarpreet Singh",
   "gv": "4",
   "id": "54e1335b15522ed4b3dc0d16",
   "url": "/simar7",
   "username": "simar7",
   "v": 5
  },
  "html": "something like this <a href=\"http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/ObjectMetadata.html#getETag--\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/ObjectMetadata.html#getETag--</a>",
  "id": "5a023e88614889d475513bca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-07T23:15:20.200Z",
  "text": "something like this http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/ObjectMetadata.html#getETag--",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/ObjectMetadata.html#getETag--"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "this isn&#39;t cleary exposed in the SDK. In it the best way to get the Etag header is to use the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.HeadObjectRequest\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">HeadObjectRequest</a> method of S3 call <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Request.Send\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Send()</a> to make the API call, and retrieve the header value from the <code>HTTPResponse</code> field of the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Request\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Request</a> value returned by <code>HeadObjectRequest</code>",
  "id": "5a023f6b614889d475514002",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-07T23:19:07.602Z",
  "text": "this isn't cleary exposed in the SDK. In it the best way to get the Etag header is to use the [HeadObjectRequest](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.HeadObjectRequest) method of S3 call [Send()](http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Request.Send) to make the API call, and retrieve the header value from the `HTTPResponse` field of the [Request](http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Request) value returned by `HeadObjectRequest`",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.HeadObjectRequest"
   },
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Request.Send"
   },
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Request"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/simar7",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1254783?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1254783?v=4&s=60",
   "displayName": "Simarpreet Singh",
   "gv": "4",
   "id": "54e1335b15522ed4b3dc0d16",
   "url": "/simar7",
   "username": "simar7",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thank you. I&#39;ll try that out.",
  "id": "5a024353976e63937e3d7bc5",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-07T23:35:47.123Z",
  "text": "@jasdel thank you. I'll try that out.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"simar7\" class=\"mention\">@simar7</span> actually now that i relaize it the eTag field is available via the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.HeadObject\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">HeadObject</a> response, via the <code>ETag</code> member of <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#HeadObjectOutput\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">HeadObjectOutput</a>",
  "id": "5a0250af86d308b755be8b61",
  "issues": [],
  "mentions": [
   {
    "screenName": "simar7",
    "userId": "54e1335b15522ed4b3dc0d16",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-08T00:32:47.181Z",
  "text": "@simar7 actually now that i relaize it the eTag field is available via the [HeadObject](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.HeadObject) response, via the `ETag` member of [HeadObjectOutput](http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#HeadObjectOutput)",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.HeadObject"
   },
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/s3/#HeadObjectOutput"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "No need to reach direclty into the headers like i mentioned above",
  "id": "5a0250c3e44c43700acdaccb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-08T00:33:07.812Z",
  "text": "No need to reach direclty into the headers like i mentioned above",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> just rolled out  a fix on staging where i lowered memory consumption from 12GB to 870MB with the buffer pool approach :D Thanks for the hint!",
  "id": "5a03166db20c642429a295dc",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-08T14:36:29.487Z",
  "text": "@jasdel just rolled out  a fix on staging where i lowered memory consumption from 12GB to 870MB with the buffer pool approach :D Thanks for the hint!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "awesome! glad to hear the difference was so significant :)",
  "id": "5a0339a232e080696e7e546a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-11-08T17:06:42.782Z",
  "text": "awesome! glad to hear the difference was so significant :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thats a nice delta. glad it was helpful. ",
  "id": "5a0339d9614889d475569ce7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-11-08T17:07:37.989Z",
  "text": "Thats a nice delta. glad it was helpful. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "It&#39;s maybe something that can be implemented in the sdk as well?",
  "id": "5a0357a3f7299e8f538ae73b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2017-11-08T19:14:43.103Z",
  "text": "It's maybe something that can be implemented in the sdk as well?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "Is there a good way to print out the role of which my golang is running under?",
  "id": "5a03de6a614889d47559f27e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-09T04:49:46.494Z",
  "text": "Is there a good way to print out the role of which my golang is running under?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span> you can alwas do a curl at 169.254.169.254/latest/meta-data/...",
  "id": "5a04235186d308b755c82457",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-09T09:43:45.948Z",
  "text": "@kaihendry you can alwas do a curl at 169.254.169.254/latest/meta-data/...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "But your instance or go script should have to permissions to list those",
  "id": "5a042366f7299e8f538ebc76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-09T09:44:06.369Z",
  "text": "But your instance or go script should have to permissions to list those",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "Hey everyone! I&#39;m new here and I can&#39;t seem to find a solution to an issue I&#39;m having with pre-signed S3 URLs",
  "id": "5a049836df09362e67eae6f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-09T18:02:30.429Z",
  "text": "Hey everyone! I'm new here and I can't seem to find a solution to an issue I'm having with pre-signed S3 URLs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "Wondering if anyone can hint me in the right direction",
  "id": "5a049840e44c43700ad9ef5d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-09T18:02:40.898Z",
  "text": "Wondering if anyone can hint me in the right direction",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "Should I post code here? I&#39;m using the PutObjectRequest method of the S3 Session. But whenever I try to upload to S3 using the presigned-url I get 403",
  "id": "5a04988c32e080696e85a20a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-09T18:03:56.913Z",
  "text": "Should I post code here? I'm using the PutObjectRequest method of the S3 Session. But whenever I try to upload to S3 using the presigned-url I get 403",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "I&#39;m going crazy, since the same code in Node.JS seems to be working...",
  "id": "5a0498a086d308b755caf932",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-09T18:04:16.206Z",
  "text": "I'm going crazy, since the same code in Node.JS seems to be working...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"heynemann\" class=\"mention\">@heynemann</span> sure feel free to post your example directly or via a play.golang.org link.  In the reponse from S3 you can also take a look at the response body generally it gives a hint about what it expects. In addition are you using <code>Presign</code> or <code>PresignRequest</code>?  I suggest using <code>PresignRequest</code> as it provides a list of headers that need to be sent along iwth the presigned request if there are any",
  "id": "5a049d2bf257ad910974f9a4",
  "issues": [],
  "mentions": [
   {
    "screenName": "heynemann",
    "userId": "56700dc016b6c7089cbec531",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-09T18:23:39.170Z",
  "text": "@heynemann sure feel free to post your example directly or via a play.golang.org link.  In the reponse from S3 you can also take a look at the response body generally it gives a hint about what it expects. In addition are you using `Presign` or `PresignRequest`?  I suggest using `PresignRequest` as it provides a list of headers that need to be sent along iwth the presigned request if there are any",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thanks! I tried both methods",
  "id": "5a04a311d6c36fca31f89694",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-09T18:48:49.323Z",
  "text": "@jasdel thanks! I tried both methods",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "I&#39;m posting the play link in a sec",
  "id": "5a04a31e32e080696e85dd5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-09T18:49:02.620Z",
  "text": "I'm posting the play link in a sec",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "<a href=\"https://play.golang.org/p/HoBJj-DN17\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://play.golang.org/p/HoBJj-DN17</a>",
  "id": "5a04a40bb20c642429ab3ab7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-09T18:52:59.001Z",
  "text": "https://play.golang.org/p/HoBJj-DN17",
  "unread": false,
  "urls": [
   {
    "url": "https://play.golang.org/p/HoBJj-DN17"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "There might be some errors in it because I modified a little, but the gist of it is there",
  "id": "5a04a41cf7299e8f5391dddf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-09T18:53:16.668Z",
  "text": "There might be some errors in it because I modified a little, but the gist of it is there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "I get this error: &quot;&lt;Error&gt;&lt;Code&gt;SignatureDoesNotMatch&lt;/Code&gt;&lt;Message&gt;The request signature we calculated does not match the signature you provided. Check your key and signing method.&lt;/Message&gt;...&lt;/Error&gt;&quot;",
  "id": "5a04a447f7299e8f5391df12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-09T18:53:59.158Z",
  "text": "I get this error: \"<Error><Code>SignatureDoesNotMatch</Code><Message>The request signature we calculated does not match the signature you provided. Check your key and signing method.</Message>...</Error>\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I suggest trying <code>PresignRequest</code> and make sure that all of the returned headers are added to the request made with the presigned URL. I think Metadat fields are required to be sent as headers not Querystring",
  "id": "5a04a565d6c36fca31f8a43c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-09T18:58:45.227Z",
  "text": "I suggest trying `PresignRequest` and make sure that all of the returned headers are added to the request made with the presigned URL. I think Metadat fields are required to be sent as headers not Querystring",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "I&#39;ll try that",
  "id": "5a04a58c614889d4755e74cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-09T18:59:24.795Z",
  "text": "I'll try that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "After adding the headers returned I get: &lt;Error&gt;&lt;Code&gt;AccessDenied&lt;/Code&gt;&lt;Message&gt;Access Denied&lt;/Message&gt;&lt;RequestId&gt;28F8E5C5C17AE49A&lt;/RequestId&gt;&lt;HostId&gt;/3vTzL2HwwakrjEXN50F+ihIyv4RrsuoTnrUScseYgaluscM74JXgtJziz1yhdUlVn3A+sL+M2s=&lt;/HostId&gt;&lt;/Error&gt;",
  "id": "5a04a775e44c43700ada41be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-11-09T19:07:33.891Z",
  "text": "After adding the headers returned I get: <Error><Code>AccessDenied</Code><Message>Access Denied</Message><RequestId>28F8E5C5C17AE49A</RequestId><HostId>/3vTzL2HwwakrjEXN50F+ihIyv4RrsuoTnrUScseYgaluscM74JXgtJziz1yhdUlVn3A+sL+M2s=</HostId></Error>",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": ":(",
  "id": "5a04a77adf09362e67eb3ee8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-11-09T19:07:38.258Z",
  "text": ":(",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "I got it... By removing ACL, ContentType and Metadata I got 200",
  "id": "5a04a8e3f7299e8f5391f853",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-11-09T19:13:39.778Z",
  "text": "I got it... By removing ACL, ContentType and Metadata I got 200",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": ":/",
  "id": "5a04a8e6f7299e8f5391f862",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-11-09T19:13:42.376Z",
  "text": ":/",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "So it&#39;s not a problem with the Keys...",
  "id": "5a04a8ede44c43700ada4ae5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-11-09T19:13:49.037Z",
  "text": "So it's not a problem with the Keys...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "Adding the ACL screws it up",
  "id": "5a04aa31f257ad91097545b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-11-09T19:19:13.007Z",
  "text": "Adding the ACL screws it up",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "curl -vvv -H&quot;x-amz-acl:public-read&quot; --upload-file &quot;./requirements.txt&quot; &quot;$URL&quot; fails with 403 AccessDenied",
  "id": "5a04aa4a32e080696e860ba0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-11-09T19:19:38.861Z",
  "text": "curl -vvv -H\"x-amz-acl:public-read\" --upload-file \"./requirements.txt\" \"$URL\" fails with 403 AccessDenied",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "even though that&#39;s what comes in the headers of PresignRequest",
  "id": "5a04aa587081b66876cf54c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-11-09T19:19:52.665Z",
  "text": "even though that's what comes in the headers of PresignRequest",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "It was actually permission to the bucket from my user",
  "id": "5a04aeaa86d308b755cb7c99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-11-09T19:38:18.046Z",
  "text": "It was actually permission to the bucket from my user",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "Sorry :(",
  "id": "5a04aeae614889d4755eabdc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-11-09T19:38:22.256Z",
  "text": "Sorry :(",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "The messages from S3 are really cryptical though",
  "id": "5a04aeb77081b66876cf6cd3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-11-09T19:38:31.771Z",
  "text": "The messages from S3 are really cryptical though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/heynemann",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/60965?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/60965?v=4&s=60",
   "displayName": "Bernardo Heynemann",
   "gv": "4",
   "id": "56700dc016b6c7089cbec531",
   "url": "/heynemann",
   "username": "heynemann",
   "v": 21
  },
  "html": "Thanks for all the help!",
  "id": "5a04aebef257ad91097560a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-11-09T19:38:38.754Z",
  "text": "Thanks for all the help!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"heynemann\" class=\"mention\">@heynemann</span> np, glad you found the cause :)",
  "id": "5a04bbce7081b66876cfb842",
  "issues": [],
  "mentions": [
   {
    "screenName": "heynemann",
    "userId": "56700dc016b6c7089cbec531",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-11-09T20:34:22.641Z",
  "text": "@heynemann np, glad you found the cause :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "Hello, I have been using the dynamodb service in the golang sdk. By default I had setup my table with bare minimum provisioned throughput. I was wondering, is the golang sdk configured to retry failed/throttled requests hundreds of times? Is there documentation on the default retry/config logic",
  "id": "5a05d726026aeaa02ffa20a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-11-10T16:43:18.067Z",
  "text": "Hello, I have been using the dynamodb service in the golang sdk. By default I had setup my table with bare minimum provisioned throughput. I was wondering, is the golang sdk configured to retry failed/throttled requests hundreds of times? Is there documentation on the default retry/config logic",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "I\u2019m noticing during load tests exceptionally high throttled requests",
  "id": "5a05d73b86d308b755d168c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2017-11-10T16:43:39.005Z",
  "text": "I\u2019m noticing during load tests exceptionally high throttled requests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "almost as if the sdk is cascading the problem by retrying after a throttled request, which also fails since the table was so under provisioned.",
  "id": "5a05d7a4b20c642429b17704",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2017-11-10T16:45:24.100Z",
  "text": "almost as if the sdk is cascading the problem by retrying after a throttled request, which also fails since the table was so under provisioned.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"MadMub\" class=\"mention\">@MadMub</span> for DynamoDB the SDK will retry at most 10 times per request if the request fails or is throttled. You can control this by setting the <code>MaxRetries</code> of the <code>aws.Config</code> value.  In addition if you&#39;d like ot provide more granular retry strategy you can implement your own <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Retryer\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">request.Retryer</a>",
  "id": "5a05e249f257ad91097ba118",
  "issues": [],
  "mentions": [
   {
    "screenName": "MadMub",
    "userId": "572a0dabc43b8c6019711f8e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-11-10T17:30:48.998Z",
  "text": "Hi @MadMub for DynamoDB the SDK will retry at most 10 times per request if the request fails or is throttled. You can control this by setting the `MaxRetries` of the `aws.Config` value.  In addition if you'd like ot provide more granular retry strategy you can implement your own [request.Retryer](http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Retryer)",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/request/#Retryer"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MadMub",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2809870?v=4&s=60",
   "displayName": "Alex Pilon",
   "gv": "4",
   "id": "572a0dabc43b8c6019711f8e",
   "url": "/MadMub",
   "username": "MadMub",
   "v": 12
  },
  "html": "Okay thank you <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> that number seems to correlate to what we are seeing",
  "id": "5a05e9e986d308b755d1d309",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2017-11-10T18:03:21.083Z",
  "text": "Okay thank you @jasdel that number seems to correlate to what we are seeing",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/fredhsu",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/66304?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/66304?v=4&s=60",
   "displayName": "Fred Hsu",
   "gv": "4",
   "id": "5a0c7969d73408ce4f7ebf97",
   "url": "/fredhsu",
   "username": "fredhsu"
  },
  "html": "Hi, is it possible to create an EC2 instance using the Go SDK?  I see the functionality in boto3, but can&#39;t find an equivalent function in the Go docs",
  "id": "5a0c7993505b630c05e83738",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-11-15T17:29:55.679Z",
  "text": "Hi, is it possible to create an EC2 instance using the Go SDK?  I see the functionality in boto3, but can't find an equivalent function in the Go docs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fredhsu\" class=\"mention\">@fredhsu</span> you definitely can, which CLI command are you using? the CLI might be hiding the low level details of which API calls are made, but both CLI and SDKs have the same API support with the exception of the CLI including some customizations.",
  "id": "5a0c7b83df09362e67113979",
  "issues": [],
  "mentions": [
   {
    "screenName": "fredhsu",
    "userId": "5a0c7969d73408ce4f7ebf97",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2017-11-15T17:38:11.686Z",
  "text": "@fredhsu you definitely can, which CLI command are you using? the CLI might be hiding the low level details of which API calls are made, but both CLI and SDKs have the same API support with the exception of the CLI including some customizations.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/fredhsu",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/66304?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/66304?v=4&s=60",
   "displayName": "Fred Hsu",
   "gv": "4",
   "id": "5a0c7969d73408ce4f7ebf97",
   "url": "/fredhsu",
   "username": "fredhsu"
  },
  "html": "Honestly I haven&#39;t been using the CLI, just looking through the libraries on the Go SDK.  Let me see if I can figure out the equivalent CLI command",
  "id": "5a0c7c2af257ad91099ba107",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-11-15T17:40:58.239Z",
  "text": "Honestly I haven't been using the CLI, just looking through the libraries on the Go SDK.  Let me see if I can figure out the equivalent CLI command",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/fredhsu",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/66304?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/66304?v=4&s=60",
   "displayName": "Fred Hsu",
   "gv": "4",
   "id": "5a0c7969d73408ce4f7ebf97",
   "url": "/fredhsu",
   "username": "fredhsu"
  },
  "html": "ah ok, its <code>RunInstances</code>.. I was looking for something that started with <code>Create</code>, thanks!",
  "id": "5a0c7cbd982ea2653f8276f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-11-15T17:43:25.665Z",
  "text": "ah ok, its `RunInstances`.. I was looking for something that started with `Create`, thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "great! glad to help let us know if you have other questions or feedback ",
  "id": "5a0c7d52ba39a53f1aa35ec9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2017-11-15T17:45:54.729Z",
  "text": "great! glad to help let us know if you have other questions or feedback ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2017-11-16T19:55:06.762Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Anyone know an easy way to parse out this SQS message body? I need to get the bucket and key. Maybe there&#39;s a struct in the SDK I can marshal into?<pre><code>{\n\n \"<span class=\"attribute\">Records</span>\": <span class=\"value\">[\n\n   {\n\n     \"<span class=\"attribute\">eventVersion</span>\": <span class=\"value\"><span class=\"string\">\"2.0\"</span></span>,\n\n     \"<span class=\"attribute\">eventSource</span>\": <span class=\"value\"><span class=\"string\">\"aws:s3\"</span></span>,\n\n     \"<span class=\"attribute\">awsRegion</span>\": <span class=\"value\"><span class=\"string\">\"us-east-1\"</span></span>,\n\n     \"<span class=\"attribute\">eventTime</span>\": <span class=\"value\"><span class=\"string\">\"2017-11-16T19:46:11.729Z\"</span></span>,\n\n     \"<span class=\"attribute\">eventName</span>\": <span class=\"value\"><span class=\"string\">\"ObjectCreated:Put\"</span></span>,\n\n     \"<span class=\"attribute\">userIdentity</span>\": <span class=\"value\">{\n\n       \"<span class=\"attribute\">principalId</span>\": <span class=\"value\"><span class=\"string\">\"ATGG22T\"</span>\n\n     </span>}</span>,\n\n     \"<span class=\"attribute\">requestParameters</span>\": <span class=\"value\">{\n\n       \"<span class=\"attribute\">sourceIPAddress</span>\": <span class=\"value\"><span class=\"string\">\"12.0.1.22\"</span>\n\n     </span>}</span>,\n\n     \"<span class=\"attribute\">responseElements</span>\": <span class=\"value\">{\n\n       \"<span class=\"attribute\">x-amz-request-id</span>\": <span class=\"value\"><span class=\"string\">\"7A09725F55B0709A\"</span></span>,\n\n       \"<span class=\"attribute\">x-amz-id-2</span>\": <span class=\"value\"><span class=\"string\">\"sZ6w0iogg+UPHPDcwIdPjiUBYI4KjBcXEel96i2nFc=\"</span>\n\n     </span>}</span>,\n\n     \"<span class=\"attribute\">s3</span>\": <span class=\"value\">{\n\n       \"<span class=\"attribute\">s3SchemaVersion</span>\": <span class=\"value\"><span class=\"string\">\"1.0\"</span></span>,\n\n       \"<span class=\"attribute\">configurationId</span>\": <span class=\"value\"><span class=\"string\">\"ObjectCreate\"</span></span>,\n\n       \"<span class=\"attribute\">bucket</span>\": <span class=\"value\">{\n\n         \"<span class=\"attribute\">name</span>\": <span class=\"value\"><span class=\"string\">\"mybucket\"</span></span>,\n\n         \"<span class=\"attribute\">ownerIdentity</span>\": <span class=\"value\">{\n\n           \"<span class=\"attribute\">principalId</span>\": <span class=\"value\"><span class=\"string\">\"ATGG22T\"</span>\n\n         </span>}</span>,\n\n         \"<span class=\"attribute\">arn</span>\": <span class=\"value\"><span class=\"string\">\"arn:aws:s3:::mybucket\"</span>\n\n       </span>}</span>,\n\n       \"<span class=\"attribute\">object</span>\": <span class=\"value\">{\n\n         \"<span class=\"attribute\">key</span>\": <span class=\"value\"><span class=\"string\">\"myobject.png\"</span></span>,\n\n         \"<span class=\"attribute\">size</span>\": <span class=\"value\"><span class=\"number\">808647</span></span>,\n\n         \"<span class=\"attribute\">eTag</span>\": <span class=\"value\"><span class=\"string\">\"a032ebe3677b44a9ebda25a81592c0f3\"</span></span>,\n\n         \"<span class=\"attribute\">sequencer</span>\": <span class=\"value\"><span class=\"string\">\"005A0DEB0386E39CB4\"</span>\n\n       </span>}\n\n     </span>}\n\n   </span>}\n\n ]\n\n</span>}</code></pre>",
  "id": "5a0dece371ad3f8736f2c37e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2017-11-16T19:54:11.922Z",
  "text": "Anyone know an easy way to parse out this SQS message body? I need to get the bucket and key. Maybe there's a struct in the SDK I can marshal into?\n```\n{\n\n \"Records\": [\n\n   {\n\n     \"eventVersion\": \"2.0\",\n\n     \"eventSource\": \"aws:s3\",\n\n     \"awsRegion\": \"us-east-1\",\n\n     \"eventTime\": \"2017-11-16T19:46:11.729Z\",\n\n     \"eventName\": \"ObjectCreated:Put\",\n\n     \"userIdentity\": {\n\n       \"principalId\": \"ATGG22T\"\n\n     },\n\n     \"requestParameters\": {\n\n       \"sourceIPAddress\": \"12.0.1.22\"\n\n     },\n\n     \"responseElements\": {\n\n       \"x-amz-request-id\": \"7A09725F55B0709A\",\n\n       \"x-amz-id-2\": \"sZ6w0iogg+UPHPDcwIdPjiUBYI4KjBcXEel96i2nFc=\"\n\n     },\n\n     \"s3\": {\n\n       \"s3SchemaVersion\": \"1.0\",\n\n       \"configurationId\": \"ObjectCreate\",\n\n       \"bucket\": {\n\n         \"name\": \"mybucket\",\n\n         \"ownerIdentity\": {\n\n           \"principalId\": \"ATGG22T\"\n\n         },\n\n         \"arn\": \"arn:aws:s3:::mybucket\"\n\n       },\n\n       \"object\": {\n\n         \"key\": \"myobject.png\",\n\n         \"size\": 808647,\n\n         \"eTag\": \"a032ebe3677b44a9ebda25a81592c0f3\",\n\n         \"sequencer\": \"005A0DEB0386E39CB4\"\n\n       }\n\n     }\n\n   }\n\n ]\n\n}\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "I was also thinking of using something like <code>jq</code> if there&#39;s a Go implementation.",
  "id": "5a0def91614889d4758d0c94",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-11-16T20:05:37.920Z",
  "text": "I was also thinking of using something like `jq` if there's a Go implementation.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> I suggest writing a Go struct type that represents the data you want. <code>jq</code> is an option, but is much slower and with a Go type you have compile time validation the types are correct in the applicaiton",
  "id": "5a0df212614889d4758d1a16",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-11-16T20:16:18.098Z",
  "text": "@mrichman I suggest writing a Go struct type that represents the data you want. `jq` is an option, but is much slower and with a Go type you have compile time validation the types are correct in the applicaiton",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Here is an example to a Go type being used to parse an SQS message&#39;s contents. <a href=\"https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/worker/job_message_queue.go#L65-L72\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Receiving the Messages</a>,  <a href=\"https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/worker/job_message_parse.go#L41-L58\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Go type for Parsing the S3 event</a>",
  "id": "5a0df2c5ba39a53f1aab6125",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-11-16T20:19:17.484Z",
  "text": "Here is an example to a Go type being used to parse an SQS message's contents. [Receiving the Messages](https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/worker/job_message_queue.go#L65-L72),  [Go type for Parsing the S3 event](https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/worker/job_message_parse.go#L41-L58)",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/worker/job_message_queue.go#L65-L72"
   },
   {
    "url": "https://github.com/awslabs/aws-go-wordfreq-sample/blob/master/cmd/worker/job_message_parse.go#L41-L58"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "In most cases it is better to use static type that dynamic reflection code.",
  "id": "5a0df2ea540c78242d115a44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-11-16T20:19:54.758Z",
  "text": "In most cases it is better to use static type that dynamic reflection code.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Ah, cool. I just used this: <a href=\"https://mholt.github.io/json-to-go/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://mholt.github.io/json-to-go/</a>",
  "id": "5a0df570cc1d527f6b7c99a6",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-11-16T20:30:40.080Z",
  "text": "@jasdel Ah, cool. I just used this: https://mholt.github.io/json-to-go/",
  "unread": false,
  "urls": [
   {
    "url": "https://mholt.github.io/json-to-go/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "It creates way more fields than I need. I&#39;ll go with the abbreviated version in your example. Thanks!",
  "id": "5a0df5ddf257ad9109a3d4b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-11-16T20:32:29.797Z",
  "text": "It creates way more fields than I need. I'll go with the abbreviated version in your example. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Nice handy tool, thanks for linking it",
  "id": "5a0dfe19505b630c05f096dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-11-16T21:07:37.139Z",
  "text": "Nice handy tool, thanks for linking it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Charlesworth",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7522339?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7522339?v=4&s=60",
   "displayName": "Charlie Cochrane",
   "gv": "4",
   "id": "5a0f00bbd73408ce4f7f0d0e",
   "url": "/Charlesworth",
   "username": "Charlesworth"
  },
  "html": "<p>Hi AWS, found docs error on s3 docs:<br>&quot;Once the Downloader instance is created you can call Upload concurrently from multiple goroutines safely. &quot;</p><p>I think this should be Download not Upload</p>",
  "id": "5a0f0108540c78242d16af80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-11-17T15:32:24.506Z",
  "text": "Hi AWS, found docs error on s3 docs: \n\"Once the Downloader instance is created you can call Upload concurrently from multiple goroutines safely. \"\n\nI think this should be Download not Upload\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for pointing that out <span data-link-type=\"mention\" data-screen-name=\"Charlesworth\" class=\"mention\">@Charlesworth</span> If you&#39;d like to create a PR/Issue for the SDK that would be very helpful for fixing that.",
  "id": "5a0f04bdcc1d527f6b81e6df",
  "issues": [],
  "mentions": [
   {
    "screenName": "Charlesworth",
    "userId": "5a0f00bbd73408ce4f7f0d0e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-11-17T15:48:13.348Z",
  "text": "Thanks for pointing that out @Charlesworth If you'd like to create a PR/Issue for the SDK that would be very helpful for fixing that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/ericedgar_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/84605794/IMG_4355.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/84605794/IMG_4355_bigger.jpg",
   "displayName": "Eric Edgar",
   "id": "5a0f23bfd73408ce4f7f12c8",
   "url": "/ericedgar_twitter",
   "username": "ericedgar_twitter"
  },
  "html": "I am trying to create a go program that uses multiple aws profiles.  I have created multiple sessions, but it seems that its reusing the last session that gets created",
  "id": "5a0f2406f257ad9109aa0870",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-11-17T18:01:42.365Z",
  "text": "I am trying to create a go program that uses multiple aws profiles.  I have created multiple sessions, but it seems that its reusing the last session that gets created",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/ericedgar_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/84605794/IMG_4355.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/84605794/IMG_4355_bigger.jpg",
   "displayName": "Eric Edgar",
   "id": "5a0f23bfd73408ce4f7f12c8",
   "url": "/ericedgar_twitter",
   "username": "ericedgar_twitter"
  },
  "html": "eg the last profile is always used in my loop...  is there an example what I am trying to do somewhere?  ",
  "id": "5a0f242dba39a53f1ab1773f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-11-17T18:02:21.627Z",
  "text": "eg the last profile is always used in my loop...  is there an example what I am trying to do somewhere?  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/ericedgar_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/84605794/IMG_4355.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/84605794/IMG_4355_bigger.jpg",
   "displayName": "Eric Edgar",
   "id": "5a0f23bfd73408ce4f7f12c8",
   "url": "/ericedgar_twitter",
   "username": "ericedgar_twitter"
  },
  "html": "basically my goal is to get all of the running ec2 instances across multiple accounts",
  "id": "5a0f2443f257ad9109aa096e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-11-17T18:02:43.894Z",
  "text": "basically my goal is to get all of the running ec2 instances across multiple accounts",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ericedgar_twitter\" class=\"mention\">@ericedgar_twitter</span> One common thing to check is how your loop is providing the session variable to the content within the loop.  The issue you&#39;re running into sounds very similar to <a href=\"https://github.com/golang/go/wiki/CommonMistakes#using-goroutines-on-loop-iterator-variables\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">reusing variables between loop iterations</a>.",
  "id": "5a0f2fbd540c78242d17c3ca",
  "issues": [],
  "mentions": [
   {
    "screenName": "ericedgar_twitter",
    "userId": "5a0f23bfd73408ce4f7f12c8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-11-17T18:51:41.702Z",
  "text": "@ericedgar_twitter One common thing to check is how your loop is providing the session variable to the content within the loop.  The issue you're running into sounds very similar to [reusing variables between loop iterations](https://github.com/golang/go/wiki/CommonMistakes#using-goroutines-on-loop-iterator-variables)\\.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/golang/go/wiki/CommonMistakes#using-goroutines-on-loop-iterator-variables"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-11-20T19:29:37.202Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/bitfusion-brian",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/25204541?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/25204541?v=4&s=60",
   "displayName": "bitfusion-brian",
   "gv": "4",
   "id": "5a132c27d73408ce4f7f7a2a",
   "url": "/bitfusion-brian",
   "username": "bitfusion-brian"
  },
  "html": "Hey yall, is there any way to persist credentials locally with the SDK?  My program checks to see if the user has any AWS creds set using the standard cred chain. If they are not set, it asks them for their access key id and secret access key. I then want to store those creds on disk in the standard location using the SDK.",
  "id": "5a132cfecc1d527f6b948355",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-11-20T19:29:02.511Z",
  "text": "Hey yall, is there any way to persist credentials locally with the SDK?  My program checks to see if the user has any AWS creds set using the standard cred chain. If they are not set, it asks them for their access key id and secret access key. I then want to store those creds on disk in the standard location using the SDK.",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "hi, i have a test like so: if <em>result.Jobs[0].Container.LogStreamName == &quot;&quot; ... but sometimes LogStreamName doesn&#39;t exist. So how do I test that &quot;</em>result.Jobs[0].Container.LogStreamName&quot; exists to begin with ?",
  "id": "5a13d701df09362e6734cce2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-11-21T07:34:25.684Z",
  "text": "hi, i have a test like so: if *result.Jobs[0].Container.LogStreamName == \"\" ... but sometimes LogStreamName doesn't exist. So how do I test that \"*result.Jobs[0].Container.LogStreamName\" exists to begin with ?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/bitfusion-brian",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/25204541?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/25204541?v=4&s=60",
   "displayName": "bitfusion-brian",
   "gv": "4",
   "id": "5a132c27d73408ce4f7f7a2a",
   "url": "/bitfusion-brian",
   "username": "bitfusion-brian"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span> <code>if result.Jobs[0].Container.LogStreamName == nil || *result.Jobs[0].Container.LogStreamName == &quot;&quot;</code>",
  "id": "5a146d3ee606d60e34f0e0d0",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-11-21T18:15:26.749Z",
  "text": "@kaihendry `if result.Jobs[0].Container.LogStreamName == nil || *result.Jobs[0].Container.LogStreamName == \"\"`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/bitfusion-brian",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/25204541?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/25204541?v=4&s=60",
   "displayName": "bitfusion-brian",
   "gv": "4",
   "id": "5a132c27d73408ce4f7f7a2a",
   "url": "/bitfusion-brian",
   "username": "bitfusion-brian"
  },
  "html": "for the most part, all the strings in aws inputs and results are actually string pointers",
  "id": "5a146d61540c78242d308806",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-11-21T18:16:01.620Z",
  "text": "for the most part, all the strings in aws inputs and results are actually string pointers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/bitfusion-brian",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/25204541?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/25204541?v=4&s=60",
   "displayName": "bitfusion-brian",
   "gv": "4",
   "id": "5a132c27d73408ce4f7f7a2a",
   "url": "/bitfusion-brian",
   "username": "bitfusion-brian"
  },
  "html": "pointers can be nil, but strings cannot. the zero value for a string in go is &quot;&quot;",
  "id": "5a146d98e606d60e34f0e33c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-11-21T18:16:56.006Z",
  "text": "pointers can be nil, but strings cannot. the zero value for a string in go is \"\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/varunturlapati",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16810494?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16810494?v=4&s=60",
   "displayName": "Varun Turlapati",
   "gv": "4",
   "id": "5a160d17d73408ce4f7fe068",
   "url": "/varunturlapati",
   "username": "varunturlapati",
   "v": 4
  },
  "html": "I am trying to get a Json format of the DescribeInstancesOutput but I am unable to find a way to do it (unless I missed something obvious). Please help",
  "id": "5a160d8bcc1d527f6ba3eb24",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-11-22T23:51:39.660Z",
  "text": "I am trying to get a Json format of the DescribeInstancesOutput but I am unable to find a way to do it (unless I missed something obvious). Please help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/varunturlapati",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16810494?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16810494?v=4&s=60",
   "displayName": "Varun Turlapati",
   "gv": "4",
   "id": "5a160d17d73408ce4f7fe068",
   "url": "/varunturlapati",
   "username": "varunturlapati",
   "v": 4
  },
  "html": "<pre><code>    <span class=\"rule\"><span class=\"attribute\">descrInstInput </span>:<span class=\"value\">= &amp;ec2.DescribeInstancesInput{\n        InstanceIds: instIDs,\n    }\n    descrInstOutput, err := a.svc.<span class=\"function\">DescribeInstances</span>(descrInstInput)</span></span></code></pre>At this point how do I dump the contents of descrInstOutput as a Json",
  "id": "5a160dd0df09362e6740ff71",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-11-22T23:52:48.526Z",
  "text": "```\n    descrInstInput := &ec2.DescribeInstancesInput{\n        InstanceIds: instIDs,\n    }\n    descrInstOutput, err := a.svc.DescribeInstances(descrInstInput)\n```\nAt this point how do I dump the contents of descrInstOutput as a Json",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "are you (un)marshalling your data?",
  "id": "5a160e0b232e79134dbe667f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-11-22T23:53:47.887Z",
  "text": "are you (un)marshalling your data?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/varunturlapati",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16810494?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16810494?v=4&s=60",
   "displayName": "Varun Turlapati",
   "gv": "4",
   "id": "5a160d17d73408ce4f7fe068",
   "url": "/varunturlapati",
   "username": "varunturlapati",
   "v": 4
  },
  "html": "That is my next step but it doesn&#39;t seem to be recognizing it as a json",
  "id": "5a160e42982ea2653fb31381",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-11-22T23:54:42.220Z",
  "text": "That is my next step but it doesn't seem to be recognizing it as a json",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/varunturlapati",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16810494?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16810494?v=4&s=60",
   "displayName": "Varun Turlapati",
   "gv": "4",
   "id": "5a160d17d73408ce4f7fe068",
   "url": "/varunturlapati",
   "username": "varunturlapati",
   "v": 4
  },
  "html": "<pre><code>    <span class=\"tag\">var</span> myRes []*ec2<span class=\"class\">.Reservation</span>\n    json.<span class=\"function\"><span class=\"title\">Unmarshal</span><span class=\"params\">([]byte(fmt.Sprintf(<span class=\"string\">\"%v\"</span>, descrInstOutput.Reservations)</span></span>), myRes)</code></pre>",
  "id": "5a160e5f982ea2653fb313c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-11-22T23:55:11.335Z",
  "text": "```\n    var myRes []*ec2.Reservation\n    json.Unmarshal([]byte(fmt.Sprintf(\"%v\", descrInstOutput.Reservations)), myRes)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/varunturlapati",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16810494?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16810494?v=4&s=60",
   "displayName": "Varun Turlapati",
   "gv": "4",
   "id": "5a160d17d73408ce4f7fe068",
   "url": "/varunturlapati",
   "username": "varunturlapati",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jonaskint\" class=\"mention\">@jonaskint</span>  Is there a flag/config to specify that the output should be a json in the first place",
  "id": "5a160f49df09362e67410461",
  "issues": [],
  "mentions": [
   {
    "screenName": "jonaskint",
    "userId": "58662242d73408ce4f402939",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2017-11-22T23:59:05.163Z",
  "text": "@jonaskint  Is there a flag/config to specify that the output should be a json in the first place",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/varunturlapati",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16810494?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16810494?v=4&s=60",
   "displayName": "Varun Turlapati",
   "gv": "4",
   "id": "5a160d17d73408ce4f7fe068",
   "url": "/varunturlapati",
   "username": "varunturlapati",
   "v": 4
  },
  "html": "<pre><code><span class=\"typedef\"><span class=\"keyword\">type</span> <span class=\"type\">Instances</span> struct <span class=\"container\">{\n    <span class=\"type\">Reservations</span> []<span class=\"type\">ReservationsType</span>\n}</span></span>\n\n<span class=\"typedef\"><span class=\"keyword\">type</span> <span class=\"type\">ReservationsType</span> struct <span class=\"container\">{\n    <span class=\"type\">OwnerId</span>       <span class=\"title\">string</span>\n    <span class=\"type\">ReservationId</span> <span class=\"title\">string</span>\n    <span class=\"type\">Groups</span>        []<span class=\"title\">string</span>\n    <span class=\"type\">RequesterId</span>   <span class=\"title\">string</span>\n    <span class=\"type\">Instances</span>     []<span class=\"type\">InstancesType</span>\n}</span></span>\n\n<span class=\"typedef\"><span class=\"keyword\">type</span> <span class=\"type\">InstancesType</span> struct <span class=\"container\">{\n    <span class=\"type\">Monitoring</span>            <span class=\"type\">MonitoringType</span>\n    <span class=\"type\">PublicDnsName</span>         <span class=\"title\">string</span>\n    <span class=\"type\">RootDeviceType</span>        <span class=\"title\">string</span>\n    <span class=\"type\">State</span>                 <span class=\"type\">StateType</span>\n    <span class=\"type\">EbsOptimized</span>          <span class=\"title\">bool</span>\n    <span class=\"type\">LaunchTime</span>            <span class=\"title\">string</span>\n    <span class=\"type\">PublicIpAddress</span>       <span class=\"title\">string</span>\n    <span class=\"type\">PrivateIpAddress</span>      <span class=\"title\">string</span>\n    <span class=\"type\">ProductCodes</span>          []<span class=\"title\">string</span>\n    <span class=\"type\">VpdId</span>                 <span class=\"title\">string</span>\n    <span class=\"type\">StateTransitionReason</span> <span class=\"title\">string</span>\n    <span class=\"type\">InstanceId</span>            <span class=\"title\">string</span>\n    <span class=\"type\">ImageId</span>               <span class=\"title\">string</span>\n    <span class=\"type\">BlockDeviceMappings</span>   []*<span class=\"type\">BlockDeviceMapping</span>\n}</span></span>\n\n<span class=\"typedef\"><span class=\"keyword\">type</span> <span class=\"type\">BlockDeviceMapping</span> struct <span class=\"container\">{\n    <span class=\"type\">DeviceName</span> *<span class=\"title\">string</span>\n    <span class=\"type\">Ebs</span>        *<span class=\"type\">EbsBlockDevice</span>\n}</span></span>\n\n<span class=\"typedef\"><span class=\"keyword\">type</span> <span class=\"type\">EbsBlockDevice</span> struct <span class=\"container\">{\n    <span class=\"type\">AttachTime</span>          *<span class=\"title\">time</span>.<span class=\"type\">Time</span>\n    <span class=\"type\">DeleteOnTermination</span> *<span class=\"title\">bool</span>\n    <span class=\"type\">Status</span>              *<span class=\"title\">string</span>\n    <span class=\"type\">VolumeId</span>            *<span class=\"title\">string</span>\n}</span></span>\n// <span class=\"type\">Somewhere</span> below these defs <span class=\"type\">I</span> read the file that was previously written and \n<span class=\"title\">var</span> instances <span class=\"type\">Instances</span>\n<span class=\"title\">json</span>.<span class=\"type\">Unmarshal</span>(file, &amp;instances)</code></pre>",
  "id": "5a161041232e79134dbe6f8f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2017-11-23T00:03:13.837Z",
  "text": "```\ntype Instances struct {\n    Reservations []ReservationsType\n}\n\ntype ReservationsType struct {\n    OwnerId       string\n    ReservationId string\n    Groups        []string\n    RequesterId   string\n    Instances     []InstancesType\n}\n\ntype InstancesType struct {\n    Monitoring            MonitoringType\n    PublicDnsName         string\n    RootDeviceType        string\n    State                 StateType\n    EbsOptimized          bool\n    LaunchTime            string\n    PublicIpAddress       string\n    PrivateIpAddress      string\n    ProductCodes          []string\n    VpdId                 string\n    StateTransitionReason string\n    InstanceId            string\n    ImageId               string\n    BlockDeviceMappings   []*BlockDeviceMapping\n}\n\ntype BlockDeviceMapping struct {\n    DeviceName *string\n    Ebs        *EbsBlockDevice\n}\n\ntype EbsBlockDevice struct {\n    AttachTime          *time.Time\n    DeleteOnTermination *bool\n    Status              *string\n    VolumeId            *string\n}\n// Somewhere below these defs I read the file that was previously written and \nvar instances Instances\njson.Unmarshal(file, &instances)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/varunturlapati",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16810494?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16810494?v=4&s=60",
   "displayName": "Varun Turlapati",
   "gv": "4",
   "id": "5a160d17d73408ce4f7fe068",
   "url": "/varunturlapati",
   "username": "varunturlapati",
   "v": 4
  },
  "html": "Fixed it. I had to Marshal the DescribeInstancesOutput and then dump the byte array into a file.",
  "id": "5a16518d614889d475b56025",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-11-23T04:41:49.666Z",
  "text": "Fixed it. I had to Marshal the DescribeInstancesOutput and then dump the byte array into a file.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "Has anyone written a custom authorizer in Golang for API gateway?",
  "id": "5a1661562837ee5106ba36cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-11-23T05:49:10.598Z",
  "text": "Has anyone written a custom authorizer in Golang for API gateway?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ipsitaparida",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13838099?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13838099?v=4&s=60",
   "displayName": "ipsitaparida",
   "gv": "4",
   "id": "5a180ef0d73408ce4f80175e",
   "url": "/ipsitaparida",
   "username": "ipsitaparida"
  },
  "html": "newSession,err := session.NewSession(s3Config)",
  "id": "5a180f44540c78242d42a692",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-11-24T12:23:32.732Z",
  "text": "newSession,err := session.NewSession(s3Config)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ipsitaparida",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13838099?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13838099?v=4&s=60",
   "displayName": "ipsitaparida",
   "gv": "4",
   "id": "5a180ef0d73408ce4f80175e",
   "url": "/ipsitaparida",
   "username": "ipsitaparida"
  },
  "html": "I am not getting any error when I give an incorrect region",
  "id": "5a180f58e606d60e3402dbef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-11-24T12:23:52.738Z",
  "text": "I am not getting any error when I give an incorrect region",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ipsitaparida",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13838099?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13838099?v=4&s=60",
   "displayName": "ipsitaparida",
   "gv": "4",
   "id": "5a180ef0d73408ce4f80175e",
   "url": "/ipsitaparida",
   "username": "ipsitaparida"
  },
  "html": "s3 config contains the credentials, endpoint, region, S3ForcePAthStyle",
  "id": "5a180f9bffa3e37919b464f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-11-24T12:24:59.508Z",
  "text": "s3 config contains the credentials, endpoint, region, S3ForcePAthStyle",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ipsitaparida",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13838099?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13838099?v=4&s=60",
   "displayName": "ipsitaparida",
   "gv": "4",
   "id": "5a180ef0d73408ce4f80175e",
   "url": "/ipsitaparida",
   "username": "ipsitaparida"
  },
  "html": "Can anyone help me out",
  "id": "5a181070982ea2653fbc8634",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-11-24T12:28:32.312Z",
  "text": "Can anyone help me out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ipsitaparida\" class=\"mention\">@ipsitaparida</span> I don&#39;t think the region is checked at this point, you will need to use that newSession object and get the error at runtime ",
  "id": "5a19951f540c78242d4951b4",
  "issues": [],
  "mentions": [
   {
    "screenName": "ipsitaparida",
    "userId": "5a180ef0d73408ce4f80175e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-11-25T16:06:55.318Z",
  "text": "@ipsitaparida I don't think the region is checked at this point, you will need to use that newSession object and get the error at runtime ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Although I guess this kind of check makes sense to be added to the session.NewSession code",
  "id": "5a19957e541a6f033711cfb3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-11-25T16:08:30.205Z",
  "text": "Although I guess this kind of check makes sense to be added to the session.NewSession code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "An unhappy customer <a href=\"https://twitter.com/fallenhitokiri/status/934695224990949378\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://twitter.com/fallenhitokiri/status/934695224990949378</a>",
  "id": "5a1acfe9e606d60e340e4e5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-11-26T14:30:01.880Z",
  "text": "An unhappy customer https://twitter.com/fallenhitokiri/status/934695224990949378",
  "unread": false,
  "urls": [
   {
    "url": "https://twitter.com/fallenhitokiri/status/934695224990949378"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ipsitaparida",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13838099?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13838099?v=4&s=60",
   "displayName": "ipsitaparida",
   "gv": "4",
   "id": "5a180ef0d73408ce4f80175e",
   "url": "/ipsitaparida",
   "username": "ipsitaparida"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> how to check region in newSession object?",
  "id": "5a1bab008b3a9e2c0c2010a3",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-11-27T06:04:48.408Z",
  "text": "@cristim how to check region in newSession object?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ipsitaparida\" class=\"mention\">@ipsitaparida</span> this is not implemented at the moment, but I guess it could be done using the RegionsForService function, see <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/aws/endpoints/#RegionsForService\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/aws/endpoints/#RegionsForService</a>",
  "id": "5a1bd2bb8b3a9e2c0c20d55c",
  "issues": [],
  "mentions": [
   {
    "screenName": "ipsitaparida",
    "userId": "5a180ef0d73408ce4f80175e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-11-27T08:54:19.085Z",
  "text": "@ipsitaparida this is not implemented at the moment, but I guess it could be done using the RegionsForService function, see https://docs.aws.amazon.com/sdk-for-go/api/aws/endpoints/#RegionsForService",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/aws/endpoints/#RegionsForService"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "Any Gophers at Re:Invent in Las Vegas? <a href=\"https://youtu.be/WGP8PNIbqnE\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://youtu.be/WGP8PNIbqnE</a>",
  "id": "5a1c2ad2e606d60e3414acf2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-11-27T15:10:10.996Z",
  "text": "Any Gophers at Re:Invent in Las Vegas? https://youtu.be/WGP8PNIbqnE",
  "unread": false,
  "urls": [
   {
    "url": "https://youtu.be/WGP8PNIbqnE"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/prathiba-nuovo",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6180700?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6180700?v=4&s=60",
   "displayName": "prathiba-nuovo",
   "gv": "4",
   "id": "5a1e66a1d73408ce4f80cfa6",
   "url": "/prathiba-nuovo",
   "username": "prathiba-nuovo",
   "v": 2
  },
  "html": "Hey",
  "id": "5a1e66a6cc1d527f6bcad60f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-11-29T07:49:58.050Z",
  "text": "Hey",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/prathiba-nuovo",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6180700?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6180700?v=4&s=60",
   "displayName": "prathiba-nuovo",
   "gv": "4",
   "id": "5a1e66a1d73408ce4f80cfa6",
   "url": "/prathiba-nuovo",
   "username": "prathiba-nuovo",
   "v": 2
  },
  "html": "Can anyone help me in finding why I&#39;m getting error like 400 while uploading certs to iam",
  "id": "5a1e8f43232e79134de735f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-11-29T10:43:15.254Z",
  "text": "Can anyone help me in finding why I'm getting error like 400 while uploading certs to iam",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"prathiba-nuovo\" class=\"mention\">@prathiba-nuovo</span> what error are you getting? You can also ask your question on stack overflow, there is a tag for the SDK.  and AWS, <a href=\"http://stackoverflow.com/questions/tagged/aws-sdk-go\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://stackoverflow.com/questions/tagged/aws-sdk-go</a>",
  "id": "5a1ef4ad71ad3f8736461906",
  "issues": [],
  "mentions": [
   {
    "screenName": "prathiba-nuovo",
    "userId": "5a1e66a1d73408ce4f80cfa6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-11-29T17:55:57.308Z",
  "text": "@prathiba-nuovo what error are you getting? You can also ask your question on stack overflow, there is a tag for the SDK.  and AWS, http://stackoverflow.com/questions/tagged/aws-sdk-go",
  "unread": false,
  "urls": [
   {
    "url": "http://stackoverflow.com/questions/tagged/aws-sdk-go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/vsiddharth",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13288711?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13288711?v=4&s=60",
   "displayName": "Vinothkumar Siddharth",
   "gv": "4",
   "id": "588a3946d73408ce4f46437d",
   "url": "/vsiddharth",
   "username": "vsiddharth",
   "v": 2
  },
  "html": "Has anyone seen the error below using CW metrics<br>InvalidParameterCombination: At least one of the parameters MetricData.member.1.Value and MetricData.member.1.StatisticValues must be specified. ",
  "id": "5a1f330b3ae2aa6b3f681de8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-11-29T22:22:03.825Z",
  "text": "Has anyone seen the error below using CW metrics\nInvalidParameterCombination: At least one of the parameters MetricData.member.1.Value and MetricData.member.1.StatisticValues must be specified. \n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "We have a few CloudWatch examples in the Go developer guide. Does <a href=\"http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/cw-example-getting-metrics.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/cw-example-getting-metrics.html</a> help? ",
  "id": "5a217c6ccc1d527f6bdb7af2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-12-01T15:59:40.490Z",
  "text": "We have a few CloudWatch examples in the Go developer guide. Does http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/cw-example-getting-metrics.html help? ",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/cw-example-getting-metrics.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"prathiba\" class=\"mention\">@prathiba</span> The Go dev guide has an example of uploading a cert: <a href=\"http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/iam-example-server-certificates.html#iam-example-update-certificate\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/iam-example-server-certificates.html#iam-example-update-certificate</a>",
  "id": "5a217cf2ba39a53f1a0a44fd",
  "issues": [],
  "mentions": [
   {
    "screenName": "prathiba",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-12-01T16:01:54.226Z",
  "text": "@prathiba The Go dev guide has an example of uploading a cert: http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/iam-example-server-certificates.html#iam-example-update-certificate",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/iam-example-server-certificates.html#iam-example-update-certificate"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ipsitaparida\" class=\"mention\">@ipsitaparida</span> Cristian is correct. When you say &quot;incorrect region&quot; do you mean using something like &quot;us-east-1&quot; instead of &quot;us-west-1&quot; or are you talking about passing in something like &quot;my-groovy-region&quot;? If the latter you can always get the list of correct regions using endpoints.AwsPartition.Regions() and validate your input.",
  "id": "5a21840187680e6230bbdd51",
  "issues": [],
  "mentions": [
   {
    "screenName": "ipsitaparida",
    "userId": "5a180ef0d73408ce4f80175e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-12-01T16:32:01.764Z",
  "text": "@ipsitaparida Cristian is correct. When you say \"incorrect region\" do you mean using something like \"us-east-1\" instead of \"us-west-1\" or are you talking about passing in something like \"my-groovy-region\"? If the latter you can always get the list of correct regions using endpoints.AwsPartition.Regions() and validate your input.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> Not sure what Timo&#39;s issue is. I don&#39;t see enough detail in his complaint to help. I&#39;ll reach out and try to figure out his problem. Our bits are on GitHub, so if anyone has an issue, feel free to file a PR and we&#39;ll take a look.",
  "id": "5a21876b540c78242d70e2e8",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-12-01T16:46:35.436Z",
  "text": "@mrichman Not sure what Timo's issue is. I don't see enough detail in his complaint to help. I'll reach out and try to figure out his problem. Our bits are on GitHub, so if anyone has an issue, feel free to file a PR and we'll take a look.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/ipsitaparida",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13838099?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13838099?v=4&s=60",
   "displayName": "ipsitaparida",
   "gv": "4",
   "id": "5a180ef0d73408ce4f80175e",
   "url": "/ipsitaparida",
   "username": "ipsitaparida"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Doug-AWS\" class=\"mention\">@Doug-AWS</span>  By incorrect region I meant if my region is &quot;us-east-1&quot; but if I pass &quot;us-west -1&quot; (which is incorrect) then it should throw error",
  "id": "5a21924fcc1d527f6bdbf9f6",
  "issues": [],
  "mentions": [
   {
    "screenName": "Doug-AWS",
    "userId": "565e0cbd16b6c7089cbcf1c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-12-01T17:33:03.708Z",
  "text": "@Doug-AWS  By incorrect region I meant if my region is \"us-east-1\" but if I pass \"us-west -1\" (which is incorrect) then it should throw error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "Last week at Re-Invent there was talk of a V2 API, I can&#39;t see a branch or evidence of this, anyone have an idea? <a href=\"https://github.com/aws/aws-sdk-go/branches/all\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/branches/all</a>",
  "id": "5a24d293c65707ba2b0b38fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-04T04:44:03.708Z",
  "text": "Last week at Re-Invent there was talk of a V2 API, I can't see a branch or evidence of this, anyone have an idea? https://github.com/aws/aws-sdk-go/branches/all",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/branches/all"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/pragya-techahead",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/22209351?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/22209351?v=4&s=60",
   "displayName": "pragya-techahead",
   "gv": "4",
   "id": "5a24db88d73408ce4f8190ac",
   "url": "/pragya-techahead",
   "username": "pragya-techahead"
  },
  "html": "Hi all,<br>I have uploaded a CSV file by creating and writing it  on app server and uploading on S3.<br> CSV file is very large so it is creating memory problem for my app so what I want is to create a CSV file on S3 and write to them directly.<br>Please help me with that.<br>Thanks in advance!",
  "id": "5a24dc4bcc1d527f6be9c070",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-12-04T05:25:31.497Z",
  "text": "Hi all, \nI have uploaded a CSV file by creating and writing it  on app server and uploading on S3.\n CSV file is very large so it is creating memory problem for my app so what I want is to create a CSV file on S3 and write to them directly.\nPlease help me with that.\nThanks in advance!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "Any examples. How i can publish json data to a SQS queue via the AWS go sdk? Would like to have some thing like  {&quot;url&quot; : &quot;<a href=\"http://example.com\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://example.com</a>&quot; }. ?",
  "id": "5a256ffb71ad3f87366510b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-04T15:55:39.430Z",
  "text": "Any examples. How i can publish json data to a SQS queue via the AWS go sdk? Would like to have some thing like  {\"url\" : \"http://example.com\" }. ?",
  "unread": false,
  "urls": [
   {
    "url": "http://example.com"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "Any advice?",
  "id": "5a258d113ae2aa6b3f866f8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-12-04T17:59:45.482Z",
  "text": "Any advice?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"linuxbsdfreak\" class=\"mention\">@linuxbsdfreak</span> the SDK docs should be a good start ",
  "id": "5a25a37c3a80a84b5bb7f2ef",
  "issues": [],
  "mentions": [
   {
    "screenName": "linuxbsdfreak",
    "userId": "55896aba15522ed4b3e2803d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-04T19:35:24.726Z",
  "text": "@linuxbsdfreak the SDK docs should be a good start ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#SQS.SendMessage\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#SQS.SendMessage</a>",
  "id": "5a25a4143ae2aa6b3f86fd16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-12-04T19:37:56.730Z",
  "text": "https://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#SQS.SendMessage",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#SQS.SendMessage"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2017-12-04T19:43:38.211Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "The best way to find real world examples is using godoc <a href=\"https://godoc.org/github.com/aws/aws-sdk-go/service/sqs?importers\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://godoc.org/github.com/aws/aws-sdk-go/service/sqs?importers</a>",
  "id": "5a25a4ae87680e6230ce9977",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-12-04T19:40:30.255Z",
  "text": "The best way to find real world examples is using godoc https://godoc.org/github.com/aws/aws-sdk-go/service/sqs?importers",
  "unread": false,
  "urls": [
   {
    "url": "https://godoc.org/github.com/aws/aws-sdk-go/service/sqs?importers"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> naise tip",
  "id": "5a25e3d187680e6230cff9c0",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2017-12-05T00:09:53.444Z",
  "text": "@cristim naise tip",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/karanece",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1551412?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1551412?v=4&s=60",
   "displayName": "karanece",
   "gv": "4",
   "id": "5a25e4f3d73408ce4f81ba0b",
   "url": "/karanece",
   "username": "karanece"
  },
  "html": "the example for this <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/expression/#Contains\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/expression/#Contains</a> is not correct",
  "id": "5a25e50effa3e37919f81219",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-12-05T00:15:10.948Z",
  "text": "the example for this https://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/expression/#Contains is not correct",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/expression/#Contains"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/karanece",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1551412?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1551412?v=4&s=60",
   "displayName": "karanece",
   "gv": "4",
   "id": "5a25e4f3d73408ce4f81ba0b",
   "url": "/karanece",
   "username": "karanece"
  },
  "html": "Contains() signature, accepts string as second argument but the example shows ValueBuilder as input",
  "id": "5a25e58371ad3f873667d869",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2017-12-05T00:17:07.432Z",
  "text": "Contains() signature, accepts string as second argument but the example shows ValueBuilder as input",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span> thanks, in my opinion as a golang Dev knowing about Godoc is more important/useful than using stack overflow to get help ",
  "id": "5a262a94540c78242d85ea60",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-05T05:11:48.072Z",
  "text": "@kaihendry thanks, in my opinion as a golang Dev knowing about Godoc is more important/useful than using stack overflow to get help ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> on your travels with godoc, have you seen some nice <em>bulk</em> s3 copying functions? had this in mind for <a href=\"https://github.com/awsdocs/aws-doc-sdk-examples/issues/107#issuecomment-349041426\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/awsdocs/aws-doc-sdk-examples/issues/107#issuecomment-349041426</a>",
  "id": "5a262c9c87680e6230d120e6",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-05T05:20:28.407Z",
  "text": "@cristim on your travels with godoc, have you seen some nice *bulk* s3 copying functions? had this in mind for https://github.com/awsdocs/aws-doc-sdk-examples/issues/107#issuecomment-349041426",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/awsdocs/aws-doc-sdk-examples/issues/107#issuecomment-349041426"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I didn&#39;t use s3 so much so far, my main project is deeply using just a handful of ec2 and autoscaling API calls",
  "id": "5a262d05ba39a53f1a1f7d91",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-05T05:22:13.427Z",
  "text": "I didn't use s3 so much so far, my main project is deeply using just a handful of ec2 and autoscaling API calls",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "It would be nice if Godoc could find usages of a certain function but so far it&#39;s just aware of the package level ",
  "id": "5a262d66cc1d527f6bf0c803",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-05T05:23:50.013Z",
  "text": "It would be nice if Godoc could find usages of a certain function but so far it's just aware of the package level ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> i usually use github search tbh",
  "id": "5a262e03cc1d527f6bf0cbbb",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-05T05:26:27.803Z",
  "text": "@cristim i usually use github search tbh",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> i wrote a little internal tool that helps us visualise our ALBs, AS, targets et al on one page",
  "id": "5a262e2b87680e6230d126af",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-05T05:27:07.233Z",
  "text": "@cristim i wrote a little internal tool that helps us visualise our ALBs, AS, targets et al on one page",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span> funny that you mention, one of my colleagues wrote a similar tool ",
  "id": "5a262e8affa3e37919f93b9e",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-12-05T05:28:42.230Z",
  "text": "@kaihendry funny that you mention, one of my colleagues wrote a similar tool ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "But it was mostly for ec2 and classic Elbs ",
  "id": "5a262eb8cc1d527f6bf0cdeb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-12-05T05:29:28.802Z",
  "text": "But it was mostly for ec2 and classic Elbs ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<a href=\"https://pypi.python.org/pypi/AWSomeOverview/1.2.5\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://pypi.python.org/pypi/AWSomeOverview/1.2.5</a>",
  "id": "5a262efa87680e6230d128be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2017-12-05T05:30:34.380Z",
  "text": "https://pypi.python.org/pypi/AWSomeOverview/1.2.5",
  "unread": false,
  "urls": [
   {
    "url": "https://pypi.python.org/pypi/AWSomeOverview/1.2.5"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "funny that you mention that, we also wrote something similar to fetch multiple information from AWS/AWS region, accounts aren&#39;t yet supported but modification shouldn&#39;t be too big",
  "id": "5a26441fffa3e37919f99b59",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-05T07:00:47.374Z",
  "text": "funny that you mention that, we also wrote something similar to fetch multiple information from AWS/AWS region, accounts aren't yet supported but modification shouldn't be too big",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "still needs documentation improvement but that&#39;s a start: <a href=\"https://github.com/cycloidio/raws/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/cycloidio/raws/</a>",
  "id": "5a26446087680e6230d184c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-05T07:01:52.177Z",
  "text": "still needs documentation improvement but that's a start: https://github.com/cycloidio/raws/",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/cycloidio/raws/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "what&#39;s your tool <span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span> ?",
  "id": "5a2644673ae2aa6b3f89f5fb",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2017-12-05T07:01:59.309Z",
  "text": "what's your tool @kaihendry ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xlr-8\" class=\"mention\">@xlr-8</span> doesn&#39;t have a good name and its internal. I&#39;ll ask to see if it can be made public maybe.",
  "id": "5a268fc5232e79134d0edac1",
  "issues": [],
  "mentions": [
   {
    "screenName": "xlr-8",
    "userId": "57592a76c2f0db084a1cf428",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2017-12-05T12:23:33.290Z",
  "text": "@xlr-8 doesn't have a good name and its internal. I'll ask to see if it can be made public maybe.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "Sure",
  "id": "5a26930f3ae2aa6b3f8ba049",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-12-05T12:37:35.066Z",
  "text": "Sure",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "Thx!",
  "id": "5a2693123a80a84b5bbc78e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2017-12-05T12:37:38.766Z",
  "text": "Thx!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "Is there a canonical example for dealing with a paginating API somewhere? .e.g NextToken",
  "id": "5a27a7bcffa3e37919010d34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-06T08:18:04.206Z",
  "text": "Is there a canonical example for dealing with a paginating API somewhere? .e.g NextToken",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "Check out the recently updated example of deleting all the objects in an S3 bucket: <a href=\"http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/s3-example-basic-bucket-operations.html#s3-examples-bucket-ops-delete-all-bucket-items\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/s3-example-basic-bucket-operations.html#s3-examples-bucket-ops-delete-all-bucket-items</a>",
  "id": "5a27fc8cba39a53f1a2903cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-06T14:19:56.152Z",
  "text": "Check out the recently updated example of deleting all the objects in an S3 bucket: http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/s3-example-basic-bucket-operations.html#s3-examples-bucket-ops-delete-all-bucket-items",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/s3-example-basic-bucket-operations.html#s3-examples-bucket-ops-delete-all-bucket-items"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Doug-AWS\" class=\"mention\">@Doug-AWS</span> i can&#39;t see nexttoken being featured there, but no matter, i wrote my own solution",
  "id": "5a2803d53a80a84b5bc40ae8",
  "issues": [],
  "mentions": [
   {
    "screenName": "Doug-AWS",
    "userId": "565e0cbd16b6c7089cbcf1c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-06T14:51:01.700Z",
  "text": "@Doug-AWS i can't see nexttoken being featured there, but no matter, i wrote my own solution",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jesselucas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5431883?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5431883?v=4&s=60",
   "displayName": "Jesse Lucas",
   "gv": "4",
   "id": "551ef6f615522ed4b3de531a",
   "url": "/jesselucas",
   "username": "jesselucas",
   "v": 16
  },
  "html": "I read the news of Lambda supporting the Go language for writing functions but I can\u2019t find any information on this. Is this planned for the future or is this something I can do now?",
  "id": "5a28277aba39a53f1a2a2132",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-06T17:23:06.877Z",
  "text": "I read the news of Lambda supporting the Go language for writing functions but I can\u2019t find any information on this. Is this planned for the future or is this something I can do now?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "I don&#39;t think you can do it now, I couldn&#39;t find it on the various console nor AWS resources. If you do find anything it might be a hack of some sort, in which I&#39;m interested in :)",
  "id": "5a2827a5ffa3e3791903f933",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2017-12-06T17:23:49.797Z",
  "text": "I don't think you can do it now, I couldn't find it on the various console nor AWS resources. If you do find anything it might be a hack of some sort, in which I'm interested in :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jesselucas",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5431883?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5431883?v=4&s=60",
   "displayName": "Jesse Lucas",
   "gv": "4",
   "id": "551ef6f615522ed4b3de531a",
   "url": "/jesselucas",
   "username": "jesselucas",
   "v": 16
  },
  "html": "Thank you <span data-link-type=\"mention\" data-screen-name=\"xlr-8\" class=\"mention\">@xlr-8</span> I\u2019m using <a href=\"https://github.com/eawsy/aws-lambda-go-shim\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/eawsy/aws-lambda-go-shim</a> but hoping to use the official solution ",
  "id": "5a28296fba39a53f1a2a2dbf",
  "issues": [],
  "mentions": [
   {
    "screenName": "xlr-8",
    "userId": "57592a76c2f0db084a1cf428",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2017-12-06T17:31:27.057Z",
  "text": "Thank you @xlr-8 I\u2019m using https://github.com/eawsy/aws-lambda-go-shim but hoping to use the official solution ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/eawsy/aws-lambda-go-shim"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "Yeah but the runtime is Python so it kinda mess things up a little bit",
  "id": "5a2829e03ae2aa6b3f9456f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-12-06T17:33:20.043Z",
  "text": "Yeah but the runtime is Python so it kinda mess things up a little bit",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/danlg",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12525045?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12525045?v=4&s=60",
   "displayName": "Daniel Rosenberg",
   "gv": "4",
   "id": "5694d56316b6c7089cc22abd",
   "url": "/danlg",
   "username": "danlg",
   "v": 3
  },
  "html": "Hi guys, do you know how to set the function name of Lambda ? FunctionName: aws.String(&quot;arn:aws:lambda:eu-west-2:account-id:function:my-function-name&quot;) in InvokeInput",
  "id": "5a2831e13a80a84b5bc52dc9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-12-06T18:07:29.464Z",
  "text": "Hi guys, do you know how to set the function name of Lambda ? FunctionName: aws.String(\"arn:aws:lambda:eu-west-2:account-id:function:my-function-name\") in InvokeInput",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/danlg",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12525045?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12525045?v=4&s=60",
   "displayName": "Daniel Rosenberg",
   "gv": "4",
   "id": "5694d56316b6c7089cc22abd",
   "url": "/danlg",
   "username": "danlg",
   "v": 3
  },
  "html": "I get the error ResourceNotFoundException ResourceNotFoundException: Function not found:",
  "id": "5a2831f2c65707ba2b1d5189",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-12-06T18:07:46.419Z",
  "text": "I get the error ResourceNotFoundException ResourceNotFoundException: Function not found:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "I don&#39;t know, I haven&#39;t tried with go directly but: <a href=\"http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/lambda-go-example-create-function.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/lambda-go-example-create-function.html</a>",
  "id": "5a2833b2ba39a53f1a2a6ce7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-12-06T18:15:14.885Z",
  "text": "I don't know, I haven't tried with go directly but: http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/lambda-go-example-create-function.html",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/lambda-go-example-create-function.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonaskint",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15214890?v=4&s=60",
   "displayName": "Jonas Kint",
   "gv": "4",
   "id": "58662242d73408ce4f402939",
   "url": "/jonaskint",
   "username": "jonaskint",
   "v": 12
  },
  "html": "does anyone have a workaround for the high memory consumption/leakage in the s3manager downloader?",
  "id": "5a2918bb540c78242d957645",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2017-12-07T10:32:27.589Z",
  "text": "does anyone have a workaround for the high memory consumption/leakage in the s3manager downloader?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": " <span data-link-type=\"mention\" data-screen-name=\"jonaskint\" class=\"mention\">@jonaskint</span>, is you&#39;re application using the <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/aws/#WriteAtBuffer\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><code>aws.WriteAtBuffer</code></a>? or a file to write the downloaded contents to?  If you&#39;re using the <code>WriteAtBuffer</code> it will buffer all content to memory. Using a sync.Pool with the WriteAtBuffer value will help reduce the cost of allocating new buffers for each object downloaded",
  "id": "5a297065ffa3e379190adf55",
  "issues": [],
  "mentions": [
   {
    "screenName": "jonaskint",
    "userId": "58662242d73408ce4f402939",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-12-07T16:46:29.578Z",
  "text": " @jonaskint, is you're application using the [`aws.WriteAtBuffer`](http://docs.aws.amazon.com/sdk-for-go/api/aws/#WriteAtBuffer)? or a file to write the downloaded contents to?  If you're using the `WriteAtBuffer` it will buffer all content to memory. Using a sync.Pool with the WriteAtBuffer value will help reduce the cost of allocating new buffers for each object downloaded",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/aws/#WriteAtBuffer"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/leerobertw_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/697911301222207488/jXzCChtr.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/697911301222207488/jXzCChtr_bigger.jpg",
   "displayName": "Robert Lee",
   "id": "5a296fd3d73408ce4f823e41",
   "url": "/leerobertw_twitter",
   "username": "leerobertw_twitter"
  },
  "html": "I need to indicate in the s3.PutObjectInput that the object needs to allow the bucket to read the object. Both the ACL and the  GrantRead fields look like they should be what I need, but both are strings. Which field should I use, and what value for the string should I use?",
  "id": "5a2970ed232e79134d1e8bff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-12-07T16:48:45.590Z",
  "text": "I need to indicate in the s3.PutObjectInput that the object needs to allow the bucket to read the object. Both the ACL and the  GrantRead fields look like they should be what I need, but both are strings. Which field should I use, and what value for the string should I use?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/leerobertw_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/697911301222207488/jXzCChtr.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/697911301222207488/jXzCChtr_bigger.jpg",
   "displayName": "Robert Lee",
   "id": "5a296fd3d73408ce4f823e41",
   "url": "/leerobertw_twitter",
   "username": "leerobertw_twitter"
  },
  "html": "I should mention that I am putting the object in an S3 bucket in a different account.",
  "id": "5a29714b540c78242d9775fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-12-07T16:50:19.565Z",
  "text": "I should mention that I am putting the object in an S3 bucket in a different account.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/BorisWJ",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4215332?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4215332?v=4&s=60",
   "displayName": "BorisWJ",
   "gv": "4",
   "id": "5a2a7448d73408ce4f825f71",
   "url": "/BorisWJ",
   "username": "BorisWJ"
  },
  "html": "HI all, I use  goland to write go programs,but when I write a program to describeinstance goland tell me &quot;Error AuthFailure: AWS was not able to validate the provided access credentials&quot;,but when i go run in the os x terminal is ok,why?",
  "id": "5a2a74e7232e79134d23d718",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2017-12-08T11:17:59.349Z",
  "text": "HI all, I use  goland to write go programs,but when I write a program to describeinstance goland tell me \"Error AuthFailure: AWS was not able to validate the provided access credentials\",but when i go run in the os x terminal is ok,why?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/BorisWJ",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4215332?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4215332?v=4&s=60",
   "displayName": "BorisWJ",
   "gv": "4",
   "id": "5a2a7448d73408ce4f825f71",
   "url": "/BorisWJ",
   "username": "BorisWJ"
  },
  "html": "??",
  "id": "5a2a75dc232e79134d23dd25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2017-12-08T11:22:04.961Z",
  "text": "??",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"BorisWJ\" class=\"mention\">@BorisWJ</span> probably because AWS_ACCESS_KEY_ID &amp; AWS_SECRET_ACCESS_KEY are not set in goland ?",
  "id": "5a2a83a387680e6230e814ac",
  "issues": [],
  "mentions": [
   {
    "screenName": "BorisWJ",
    "userId": "5a2a7448d73408ce4f825f71",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2017-12-08T12:20:51.990Z",
  "text": "@BorisWJ probably because AWS_ACCESS_KEY_ID & AWS_SECRET_ACCESS_KEY are not set in goland ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"leerobertw_twitter\" class=\"mention\">@leerobertw_twitter</span> you probably need something like <code>ACL:         aws.String(s3.ObjectCannedACLPublicRead),</code>",
  "id": "5a2a83d9ffa3e37919107f26",
  "issues": [],
  "mentions": [
   {
    "screenName": "leerobertw_twitter",
    "userId": "5a296fd3d73408ce4f823e41",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-12-08T12:21:45.500Z",
  "text": "@leerobertw_twitter you probably need something like ` ACL:         aws.String(s3.ObjectCannedACLPublicRead),`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> <span data-link-type=\"mention\" data-screen-name=\"jonaskint\" class=\"mention\">@jonaskint</span> stupid question: why use the manager over the getobject method? ",
  "id": "5a2a87de540c78242d9ce355",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   },
   {
    "screenName": "jonaskint",
    "userId": "58662242d73408ce4f402939",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2017-12-08T12:38:54.643Z",
  "text": "@jasdel @jonaskint stupid question: why use the manager over the getobject method? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/brianterry",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18149926?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18149926?v=4&s=60",
   "displayName": "Brian Terry",
   "gv": "4",
   "id": "5a2ae1a9d73408ce4f826fff",
   "url": "/brianterry",
   "username": "brianterry",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kaihendry\" class=\"mention\">@kaihendry</span>, have you tried point you app to the shared Crendential file?<br>creds := credentials.NewSharedCredentials(defaults.SharedCredentialsFilename(), &quot;default&quot;) ",
  "id": "5a2ae1ec3a80a84b5bd3723b",
  "issues": [],
  "mentions": [
   {
    "screenName": "kaihendry",
    "userId": "5667ac0d16b6c7089cbdfef5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2017-12-08T19:03:08.366Z",
  "text": "@kaihendry, have you tried point you app to the shared Crendential file?\ncreds := credentials.NewSharedCredentials(defaults.SharedCredentialsFilename(), \"default\") ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"brianterry\" class=\"mention\">@brianterry</span> nope",
  "id": "5a2b52b43ae2aa6b3fa4c920",
  "issues": [],
  "mentions": [
   {
    "screenName": "brianterry",
    "userId": "5a2ae1a9d73408ce4f826fff",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2017-12-09T03:04:20.182Z",
  "text": "@brianterry nope",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/freddiewanah",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11172573?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11172573?v=4&s=60",
   "displayName": "freddiewanah",
   "gv": "4",
   "id": "5a2bfb2bd73408ce4f828aab",
   "url": "/freddiewanah",
   "username": "freddiewanah"
  },
  "html": "HEY guys, new to golang. While I was trying to run godep save, it keeps telling me <code>godep: Package (github.com/aws/aws-sdk-go/aws) not found</code> Any idea how that happens?",
  "id": "5a2bfb73a2be4668287e40b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-12-09T15:04:19.795Z",
  "text": "HEY guys, new to golang. While I was trying to run godep save, it keeps telling me `godep: Package (github.com/aws/aws-sdk-go/aws) not found` Any idea how that happens?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "Why isn&#39;t the X-Ray SDK part of the standard Go SDK? <a href=\"https://github.com/aws/aws-xray-sdk-go\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-xray-sdk-go</a>",
  "id": "5a2c1d7dffa3e379191809be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2017-12-09T17:29:33.000Z",
  "text": "Why isn't the X-Ray SDK part of the standard Go SDK? https://github.com/aws/aws-xray-sdk-go",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-xray-sdk-go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/stanpalatnik",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/989540?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/989540?v=4&s=60",
   "displayName": "Stanislav Palatnik",
   "gv": "4",
   "id": "55d8e4970fc9f982beae472d",
   "url": "/stanpalatnik",
   "username": "stanpalatnik",
   "v": 21
  },
  "html": "Hey this is more a best practices question. For SQS long polling, is there any disadvantage to setting the waitTimeSeconds as high as possible? Worst case is it it&#39;s just idle if there&#39;s nothing to pull down. I&#39;m trying to understand why the default is set to 20 seconds. Feels arbitrary unless there&#39;s something else going on",
  "id": "5a2c54d83a80a84b5bd9b315",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-12-09T21:25:44.253Z",
  "text": "Hey this is more a best practices question. For SQS long polling, is there any disadvantage to setting the waitTimeSeconds as high as possible? Worst case is it it's just idle if there's nothing to pull down. I'm trying to understand why the default is set to 20 seconds. Feels arbitrary unless there's something else going on",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/stanpalatnik",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/989540?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/989540?v=4&s=60",
   "displayName": "Stanislav Palatnik",
   "gv": "4",
   "id": "55d8e4970fc9f982beae472d",
   "url": "/stanpalatnik",
   "username": "stanpalatnik",
   "v": 21
  },
  "html": "The only thing I can think of is network instability ",
  "id": "5a2c556c232e79134d2cba3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-12-09T21:28:12.398Z",
  "text": "The only thing I can think of is network instability ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"freddiewanah\" class=\"mention\">@freddiewanah</span> you don&#39;t really need to use a dep manager unless you have breakages, which you shouldn&#39;t",
  "id": "5a2c8b55a2be46682880d0bc",
  "issues": [],
  "mentions": [
   {
    "screenName": "freddiewanah",
    "userId": "5a2bfb2bd73408ce4f828aab",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-12-10T01:18:13.093Z",
  "text": "@freddiewanah you don't really need to use a dep manager unless you have breakages, which you shouldn't",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "Anyone implemented something like aws-cli&#39;s s3 sync in golang? ",
  "id": "5a2e32a0a2be4668288789b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-12-11T07:24:16.429Z",
  "text": "Anyone implemented something like aws-cli's s3 sync in golang? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"mrichman\" class=\"mention\">@mrichman</span> It is: <a href=\"http://docs.aws.amazon.com/sdk-for-go/api/service/xray/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/sdk-for-go/api/service/xray/</a>",
  "id": "5a2ec38787680e6230fb8c38",
  "issues": [],
  "mentions": [
   {
    "screenName": "mrichman",
    "userId": "56a12cabe610378809bd8381",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2017-12-11T17:42:31.015Z",
  "text": "@mrichman It is: http://docs.aws.amazon.com/sdk-for-go/api/service/xray/",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/sdk-for-go/api/service/xray/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stanpalatnik\" class=\"mention\">@stanpalatnik</span> My strategy for long polling is to start with a small value and exponentially increase it as you get empty responses. The canonical information is in the service topic <a href=\"http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html</a>.",
  "id": "5a2ec40fc65707ba2b3c6751",
  "issues": [],
  "mentions": [
   {
    "screenName": "stanpalatnik",
    "userId": "55d8e4970fc9f982beae472d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-12-11T17:44:47.243Z",
  "text": "@stanpalatnik My strategy for long polling is to start with a small value and exponentially increase it as you get empty responses. The canonical information is in the service topic http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html.",
  "unread": false,
  "urls": [
   {
    "url": "http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jesselucas\" class=\"mention\">@jesselucas</span> We typically do not pre-announce features. If we do have a beta release, we&#39;ll broadcast it on our dev blog <a href=\"https://aws.amazon.com/blogs/developer/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://aws.amazon.com/blogs/developer/</a>.",
  "id": "5a2ec4dea2be4668288ae0ac",
  "issues": [],
  "mentions": [
   {
    "screenName": "jesselucas",
    "userId": "551ef6f615522ed4b3de531a",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 31,
  "sent": "2017-12-11T17:48:14.729Z",
  "text": "@jesselucas We typically do not pre-announce features. If we do have a beta release, we'll broadcast it on our dev blog https://aws.amazon.com/blogs/developer/.",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/blogs/developer/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"danlg\" class=\"mention\">@danlg</span> It&#39;s the name of your function. You can get that info by using our example <a href=\"https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/lambda-go-example-show-functions.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/lambda-go-example-show-functions.html</a>",
  "id": "5a2ec539232e79134d37bf49",
  "issues": [],
  "mentions": [
   {
    "screenName": "danlg",
    "userId": "5694d56316b6c7089cc22abd",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 31,
  "sent": "2017-12-11T17:49:45.170Z",
  "text": "@danlg It's the name of your function. You can get that info by using our example https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/lambda-go-example-show-functions.html",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/lambda-go-example-show-functions.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"freddiewanah\" class=\"mention\">@freddiewanah</span> What&#39;s the output from &quot;echo $GOPATH&quot; Mac/Linux or &quot;echo %gopath%&quot; on Windows? ",
  "id": "5a2ec742232e79134d37cb60",
  "issues": [],
  "mentions": [
   {
    "screenName": "freddiewanah",
    "userId": "5a2bfb2bd73408ce4f828aab",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 31,
  "sent": "2017-12-11T17:58:26.995Z",
  "text": "@freddiewanah What's the output from \"echo $GOPATH\" Mac/Linux or \"echo %gopath%\" on Windows? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "I just wrote a Go sample of listing your users with administrator privileges: <a href=\"https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/iam-example-managing-users.html#iam-example-get-admins\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/iam-example-managing-users.html#iam-example-get-admins</a>",
  "id": "5a2ec7b7c65707ba2b3c7d19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2017-12-11T18:00:23.244Z",
  "text": "I just wrote a Go sample of listing your users with administrator privileges: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/iam-example-managing-users.html#iam-example-get-admins",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/iam-example-managing-users.html#iam-example-get-admins"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ksaubhri123",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/29043026?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/29043026?v=4&s=60",
   "displayName": "Kalpesh Saubhri",
   "gv": "4",
   "id": "5a2fd6c4d73408ce4f82f54d",
   "url": "/ksaubhri123",
   "username": "ksaubhri123"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Doug-AWS\" class=\"mention\">@Doug-AWS</span> you have to set your GOPATH if it is not already set",
  "id": "5a2fd91dc65707ba2b41de34",
  "issues": [],
  "mentions": [
   {
    "screenName": "Doug-AWS",
    "userId": "565e0cbd16b6c7089cbcf1c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 32,
  "sent": "2017-12-12T13:26:53.011Z",
  "text": "@Doug-AWS you have to set your GOPATH if it is not already set",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mrichman",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11228?v=4&s=60",
   "displayName": "Mark Richman",
   "gv": "4",
   "id": "56a12cabe610378809bd8381",
   "url": "/mrichman",
   "username": "mrichman",
   "v": 32
  },
  "html": "\\",
  "id": "5a330195c254d1100e26e074",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2017-12-14T22:56:21.356Z",
  "text": "\\",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ARowden",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/19190697?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/19190697?v=4&s=60",
   "displayName": "Andrew Rowden",
   "gv": "4",
   "id": "5a36e05ad73408ce4f83c02f",
   "url": "/ARowden",
   "username": "ARowden",
   "v": 1
  },
  "html": "Has anyone been able to successfully publish to an IoT messages with this package? I have spent two days trying to get this to work and can&#39;t figure it out. If anyone has an example please share it! I&#39;m currently able to publish without an error, but the iotdataplane.PublishOutput is empty and I&#39;m not seeing the message appear in the topic with the console test client.   ",
  "id": "5a36e18f232e79134d5fa13b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-12-17T21:28:47.096Z",
  "text": "Has anyone been able to successfully publish to an IoT messages with this package? I have spent two days trying to get this to work and can't figure it out. If anyone has an example please share it! I'm currently able to publish without an error, but the iotdataplane.PublishOutput is empty and I'm not seeing the message appear in the topic with the console test client.   ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hunterhug",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9883096?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9883096?v=4&s=60",
   "displayName": "JoyPPT",
   "gv": "4",
   "id": "59faef0dd73408ce4f7cd0b8",
   "url": "/hunterhug",
   "username": "hunterhug",
   "v": 4
  },
  "html": "can  anyone tell me what&#39;s meaning for this <code>2 x 40 SSD</code> in  <a href=\"https://aws.amazon.com/ec2/pricing/on-demand/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://aws.amazon.com/ec2/pricing/on-demand/</a><hr>\n<h2>m3.xlarge    4    13    15    2 x 40 SSD    $0.266 per Hour</h2>\n",
  "id": "5a377424c65707ba2b661fbd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2017-12-18T07:54:12.615Z",
  "text": "can  anyone tell me what's meaning for this `2 x 40 SSD` in  https://aws.amazon.com/ec2/pricing/on-demand/\n\n------------------------------------\nm3.xlarge\t4\t13\t15\t2 x 40 SSD\t$0.266 per Hour\n-----------------------------------",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/ec2/pricing/on-demand/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/npgm",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1728509?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1728509?v=4&s=60",
   "displayName": "Nathan McCloskey",
   "gv": "4",
   "id": "564b60b916b6c7089cbb102b",
   "url": "/npgm",
   "username": "npgm",
   "v": 9
  },
  "html": "is there any reason to use goamz/goamz or AdRoll/goamz over this official sdk?",
  "id": "5a37de9b1a4e6c82232376b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2017-12-18T15:28:27.613Z",
  "text": "is there any reason to use goamz/goamz or AdRoll/goamz over this official sdk?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/stanpalatnik",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/989540?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/989540?v=4&s=60",
   "displayName": "Stanislav Palatnik",
   "gv": "4",
   "id": "55d8e4970fc9f982beae472d",
   "url": "/stanpalatnik",
   "username": "stanpalatnik",
   "v": 21
  },
  "html": "I&#39;m writing fallback handling for when one SQS region is down. Is there a quick way to tell if aws(sqs) is truly down if there&#39;s some other network communication issue. I know <code>AmazonClientException</code> is thrown in network failure, but that sounds to general to be confident we have an outage. I need to be able to make the deicsion to switch regions quick since we enqueue rapidly. Is there a general strategy to handle this?",
  "id": "5a394bd0232e79134d6be88e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2017-12-19T17:26:40.157Z",
  "text": "I'm writing fallback handling for when one SQS region is down. Is there a quick way to tell if aws(sqs) is truly down if there's some other network communication issue. I know `AmazonClientException` is thrown in network failure, but that sounds to general to be confident we have an outage. I need to be able to make the deicsion to switch regions quick since we enqueue rapidly. Is there a general strategy to handle this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cjacques1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=60",
   "displayName": "cjacques1",
   "gv": "4",
   "id": "59a59b34d73408ce4f737563",
   "url": "/cjacques1",
   "username": "cjacques1",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"hunterhug\" class=\"mention\">@hunterhug</span> that&#39;s the storage it comes with.  If you look at m4.xlarge you&#39;ll notice it says EBS only, meaning you need to attach an EBS drive to the instance, if you don&#39;t need SSDs I&#39;d reccomend using the m4, since it&#39;s cheaper (the m4.xlarge are like 0.2 per hour right now)",
  "id": "5a3962ca1a4e6c82232b7d56",
  "issues": [],
  "mentions": [
   {
    "screenName": "hunterhug",
    "userId": "59faef0dd73408ce4f7cd0b8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2017-12-19T19:04:42.611Z",
  "text": "@hunterhug that's the storage it comes with.  If you look at m4.xlarge you'll notice it says EBS only, meaning you need to attach an EBS drive to the instance, if you don't need SSDs I'd reccomend using the m4, since it's cheaper (the m4.xlarge are like 0.2 per hour right now)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/bravekjh",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11882987?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11882987?v=4&s=60",
   "displayName": "Jay Kim  (Data Scientist)",
   "gv": "4",
   "id": "595a4f26d73408ce4f6b5a31",
   "url": "/bravekjh",
   "username": "bravekjh",
   "v": 8
  },
  "html": "Hi everyone.  I joined this room first time today,  nice to meet you all",
  "id": "5a4b3e3bba39a53f1ac7820c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-01-02T08:09:31.782Z",
  "text": "Hi everyone.  I joined this room first time today,  nice to meet you all",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/baodinh",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9375770?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9375770?v=4&s=60",
   "displayName": "baodinh",
   "gv": "4",
   "id": "5a4d034ed73408ce4f85e7ca",
   "url": "/baodinh",
   "username": "baodinh"
  },
  "html": "hi i want to build API connect Go + aws rds + aws lambda",
  "id": "5a4d037e232e79134dc007cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-01-03T16:23:26.244Z",
  "text": "hi i want to build API connect Go + aws rds + aws lambda",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/baodinh",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9375770?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9375770?v=4&s=60",
   "displayName": "baodinh",
   "gv": "4",
   "id": "5a4d034ed73408ce4f85e7ca",
   "url": "/baodinh",
   "username": "baodinh"
  },
  "html": "but it does not look like have the official way to deploy GO in aws lambda",
  "id": "5a4d0394edd22308110a52c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-03T16:23:48.696Z",
  "text": "but it does not look like have the official way to deploy GO in aws lambda",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Hi <span data-link-type=\"mention\" data-screen-name=\"baodinh\" class=\"mention\">@baodinh</span> Go to lambda has not been released yet, but at re:Invent 2017  in November support for Go was pre-announced. Lambda is actively working on this feature, and will announce when they have full support for Go.",
  "id": "5a4d2166ba39a53f1ad10f4d",
  "issues": [],
  "mentions": [
   {
    "screenName": "baodinh",
    "userId": "5a4d034ed73408ce4f85e7ca",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2018-01-03T18:31:02.995Z",
  "text": "Hi @baodinh Go to lambda has not been released yet, but at re:Invent 2017  in November support for Go was pre-announced. Lambda is actively working on this feature, and will announce when they have full support for Go.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "Can someone help me with using the s3crypto client? I am getting a &#39;key doesn&#39;t exist&#39; error on any object in my s3. Using the normal downloader works as expected though.",
  "id": "5a4d29920163b02810ab032c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-03T19:05:54.369Z",
  "text": "Can someone help me with using the s3crypto client? I am getting a 'key doesn't exist' error on any object in my s3. Using the normal downloader works as expected though.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "I am instantiating the client like it is being done <a href=\"https://godoc.org/github.com/aws/aws-sdk-go/service/s3#hdr-S3_Crypto_Client\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a> just without creating a new session, but using an existing session.",
  "id": "5a4d29cfba39a53f1ad13eed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-03T19:06:55.016Z",
  "text": "I am instantiating the client like it is being done [here](https://godoc.org/github.com/aws/aws-sdk-go/service/s3#hdr-S3_Crypto_Client) just without creating a new session, but using an existing session.",
  "unread": false,
  "urls": [
   {
    "url": "https://godoc.org/github.com/aws/aws-sdk-go/service/s3#hdr-S3_Crypto_Client"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "The files are being encrypted on the server, then I expect them to be un-encrypted automatically through the client.",
  "id": "5a4d2a7b5355812e574a2b66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-03T19:09:47.138Z",
  "text": "The files are being encrypted on the server, then I expect them to be un-encrypted automatically through the client.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/SudolKarol_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/499125578369220611/43NLG0j1.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/499125578369220611/43NLG0j1_bigger.png",
   "displayName": "Karol Sudol",
   "id": "5821165ad73408ce4f345c57",
   "url": "/SudolKarol_twitter",
   "username": "SudolKarol_twitter"
  },
  "html": "has anyone seen any recent <code>golang</code> implementation  of <code>mqtt-over-websocket</code> using <code>sdk-for-go</code> such as this python sdk: <a href=\"https://github.com/aws/aws-iot-device-sdk-python/blob/master/samples/basicPubSub/basicPubSub.py\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-iot-device-sdk-python/blob/master/samples/basicPubSub/basicPubSub.py</a> ?",
  "id": "5a4e94d7ba39a53f1ad886bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-01-04T20:55:51.238Z",
  "text": "has anyone seen any recent `golang` implementation  of `mqtt-over-websocket` using `sdk-for-go` such as this python sdk: https://github.com/aws/aws-iot-device-sdk-python/blob/master/samples/basicPubSub/basicPubSub.py ?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-iot-device-sdk-python/blob/master/samples/basicPubSub/basicPubSub.py"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "<p>Someone mind helping me with creating volume, Im inputing this into CreateVolume() function </p><pre><code><span class=\"rule\"><span class=\"attribute\">input </span>:<span class=\"value\">= &amp;ec2.CreateVolumeInput{\n        AvailabilityZone: aws.<span class=\"function\">String</span>(<span class=\"string\">\"us-east-1a\"</span>),\n        SnapshotId:       aws.<span class=\"function\">String</span>(snapshotID),\n        VolumeType:       aws.<span class=\"function\">String</span>(<span class=\"string\">\"gp2\"</span>),\n        TagSpecifications\n    }</span></span></code></pre><p>how can i add tags to the <code>TagSpecifications</code>?</p>",
  "id": "5a4f197d0505ad8b45b82aac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-01-05T06:21:49.169Z",
  "text": "Someone mind helping me with creating volume, Im inputing this into CreateVolume() function \n```\t\ninput := &ec2.CreateVolumeInput{\n\t\tAvailabilityZone: aws.String(\"us-east-1a\"),\n\t\tSnapshotId:       aws.String(snapshotID),\n\t\tVolumeType:       aws.String(\"gp2\"),\n\t\tTagSpecifications\n\t}\n```\nhow can i add tags to the `TagSpecifications`?\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/kanapuliAthavan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17735366?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17735366?v=4&s=60",
   "displayName": "Athavan Kanapuli",
   "gv": "4",
   "id": "580cd090d73408ce4f3039bf",
   "url": "/kanapuliAthavan",
   "username": "kanapuliAthavan",
   "v": 5
  },
  "html": "Hi.  I am trying to do an  PUT object request from go aws sdk",
  "id": "5a4f254729ec6ac311bee563",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-05T07:12:07.105Z",
  "text": "Hi.  I am trying to do an  PUT object request from go aws sdk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/kanapuliAthavan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17735366?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17735366?v=4&s=60",
   "displayName": "Athavan Kanapuli",
   "gv": "4",
   "id": "580cd090d73408ce4f3039bf",
   "url": "/kanapuliAthavan",
   "username": "kanapuliAthavan",
   "v": 5
  },
  "html": "By default , will the PUTObject has any headers",
  "id": "5a4f255a0163b02810b4a93c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-05T07:12:26.001Z",
  "text": "By default , will the PUTObject has any headers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/kanapuliAthavan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17735366?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17735366?v=4&s=60",
   "displayName": "Athavan Kanapuli",
   "gv": "4",
   "id": "580cd090d73408ce4f3039bf",
   "url": "/kanapuliAthavan",
   "username": "kanapuliAthavan",
   "v": 5
  },
  "html": "?",
  "id": "5a4f255bce68c3bc747ec887",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-05T07:12:27.178Z",
  "text": "?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kanapuliAthavan\" class=\"mention\">@kanapuliAthavan</span> the PutObject API will not add any additional Metadata headers, and I believe the <code>Content-Type</code> defaults to application/octet.  These parameters can all be specified via the PutObject API input parameters.",
  "id": "5a4fbaeb03838b2f2a7555ec",
  "issues": [],
  "mentions": [
   {
    "screenName": "kanapuliAthavan",
    "userId": "580cd090d73408ce4f3039bf",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2018-01-05T17:50:35.503Z",
  "text": "@kanapuliAthavan the PutObject API will not add any additional Metadata headers, and I believe the `Content-Type` defaults to application/octet.  These parameters can all be specified via the PutObject API input parameters.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"popopanda\" class=\"mention\">@popopanda</span> you can create <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#TagSpecification\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">TagSpecifications</a> by creating <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#Tag\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Tags</a> to resource type pairings.",
  "id": "5a4fbbb2b48e8c3566a47afd",
  "issues": [],
  "mentions": [
   {
    "screenName": "popopanda",
    "userId": "591b6e17d73408ce4f600963",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-05T17:53:54.300Z",
  "text": "@popopanda you can create [TagSpecifications](https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#TagSpecification) by creating [Tags](https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#Tag) to resource type pairings.",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#TagSpecification"
   },
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#Tag"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Thanks for the response, do you have an example, or would it look something like </p><pre><code>    <span class=\"rule\"><span class=\"attribute\">input </span>:<span class=\"value\">= &amp;ec2.CreateVolumeInput{\n        AvailabilityZone: aws.<span class=\"function\">String</span>(<span class=\"string\">\"us-east-1a\"</span>),\n        SnapshotId:       aws.<span class=\"function\">String</span>(snapshotID),\n        VolumeType:       aws.<span class=\"function\">String</span>(<span class=\"string\">\"gp2\"</span>),\n        TagSpecifications: []*ec2.TagSpecification{\n            *ec2.Tag: {\n                Key:   aws.<span class=\"function\">String</span>(<span class=\"string\">\"Name\"</span>),\n                Value: aws.<span class=\"function\">String</span>(<span class=\"string\">\"test1\"</span>),\n            },\n        },</span></span></code></pre><p>?</p>",
  "id": "5a4fef5bba39a53f1adef62e",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-05T21:34:19.957Z",
  "text": "@jasdel Thanks for the response, do you have an example, or would it look something like \n```\n\tinput := &ec2.CreateVolumeInput{\n\t\tAvailabilityZone: aws.String(\"us-east-1a\"),\n\t\tSnapshotId:       aws.String(snapshotID),\n\t\tVolumeType:       aws.String(\"gp2\"),\n\t\tTagSpecifications: []*ec2.TagSpecification{\n\t\t\t*ec2.Tag: {\n\t\t\t\tKey:   aws.String(\"Name\"),\n\t\t\t\tValue: aws.String(\"test1\"),\n\t\t\t},\n\t\t},\n```\n?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"popopanda\" class=\"mention\">@popopanda</span> I don&#39;t have an example, but i think the setup would be closer to:<pre><code class=\"go\">    input := &amp;ec2.CreateVolumeInput{\n        AvailabilityZone: aws.String(<span class=\"string\">\"us-east-1a\"</span>),\n        SnapshotId:       aws.String(snapshotID),\n        VolumeType:       aws.String(<span class=\"string\">\"gp2\"</span>),\n        TagSpecifications: []*ec2.TagSpecification{\n            {\n                ResourceType: aws.String(ec2.FlowLogsResourceTypeVpc),\n                Tags: []*ec2.Tag{\n                    {\n                        Key:   aws.String(<span class=\"string\">\"Name\"</span>),\n                        Value: aws.String(<span class=\"string\">\"test1\"</span>),\n                    },\n                },\n            },\n        },\n    }</code></pre>",
  "id": "5a4ff26b03838b2f2a768bdf",
  "issues": [],
  "mentions": [
   {
    "screenName": "popopanda",
    "userId": "591b6e17d73408ce4f600963",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-05T21:47:23.316Z",
  "text": "@popopanda I don't have an example, but i think the setup would be closer to:\n```go\n\tinput := &ec2.CreateVolumeInput{\n\t\tAvailabilityZone: aws.String(\"us-east-1a\"),\n\t\tSnapshotId:       aws.String(snapshotID),\n\t\tVolumeType:       aws.String(\"gp2\"),\n\t\tTagSpecifications: []*ec2.TagSpecification{\n\t\t\t{\n\t\t\t\tResourceType: aws.String(ec2.FlowLogsResourceTypeVpc),\n\t\t\t\tTags: []*ec2.Tag{\n\t\t\t\t\t{\n\t\t\t\t\t\tKey:   aws.String(\"Name\"),\n\t\t\t\t\t\tValue: aws.String(\"test1\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/popopanda",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/15364875?v=4&s=60",
   "displayName": "Jeffrey Leung",
   "gv": "4",
   "id": "591b6e17d73408ce4f600963",
   "url": "/popopanda",
   "username": "popopanda",
   "v": 1
  },
  "html": "ah that makes sense, I had to also wrap my head around slices of struct types to understand. Thanks for the explanation",
  "id": "5a4ff863232e79134dcf28b6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-05T22:12:51.363Z",
  "text": "ah that makes sense, I had to also wrap my head around slices of struct types to understand. Thanks for the explanation",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hunterhug",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9883096?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9883096?v=4&s=60",
   "displayName": "JoyPPT",
   "gv": "4",
   "id": "59faef0dd73408ce4f7cd0b8",
   "url": "/hunterhug",
   "username": "hunterhug",
   "v": 4
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"cjacques1\" class=\"mention\">@cjacques1</span> ",
  "id": "5a51b3f85a9ebe4f7556d2b1",
  "issues": [],
  "mentions": [
   {
    "screenName": "cjacques1",
    "userId": "59a59b34d73408ce4f737563",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2018-01-07T05:45:28.105Z",
  "text": "Thanks @cjacques1 ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cjacques1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=60",
   "displayName": "cjacques1",
   "gv": "4",
   "id": "59a59b34d73408ce4f737563",
   "url": "/cjacques1",
   "username": "cjacques1",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"baodinh\" class=\"mention\">@baodinh</span> I&#39;ve done golang with aws lambda, it&#39;s not officially supported, but this repo got it working <a href=\"https://github.com/eawsy/aws-lambda-go-shim\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/eawsy/aws-lambda-go-shim</a>",
  "id": "5a52845f83152df26d417890",
  "issues": [],
  "mentions": [
   {
    "screenName": "baodinh",
    "userId": "5a4d034ed73408ce4f85e7ca",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2018-01-07T20:34:39.959Z",
  "text": "@baodinh I've done golang with aws lambda, it's not officially supported, but this repo got it working https://github.com/eawsy/aws-lambda-go-shim",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/eawsy/aws-lambda-go-shim"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cjacques1",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/28601675?v=4&s=60",
   "displayName": "cjacques1",
   "gv": "4",
   "id": "59a59b34d73408ce4f737563",
   "url": "/cjacques1",
   "username": "cjacques1",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"baodinh\" class=\"mention\">@baodinh</span> If you decide to give that a try and have trouble let me know, I can fix my code and post it as an example",
  "id": "5a52858283152df26d417cf0",
  "issues": [],
  "mentions": [
   {
    "screenName": "baodinh",
    "userId": "5a4d034ed73408ce4f85e7ca",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-07T20:39:30.930Z",
  "text": "@baodinh If you decide to give that a try and have trouble let me know, I can fix my code and post it as an example",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ffoysal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6124333?v=4&s=60",
   "displayName": "ffoysal",
   "gv": "4",
   "id": "57475a6ec43b8c6019752519",
   "url": "/ffoysal",
   "username": "ffoysal",
   "v": 4
  },
  "html": "how can i push a docker image into ecr using golang sdk ? I am having difficulty creating  ImageManifest file",
  "id": "5a53107d290a1f45616033d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-01-08T06:32:29.441Z",
  "text": "how can i push a docker image into ecr using golang sdk ? I am having difficulty creating  ImageManifest file",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"crwgregory\" class=\"mention\">@crwgregory</span> I just added a bunch of encryption examples to the Go Dev Guide: <a href=\"https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/s3-examples-encryption.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/s3-examples-encryption.html</a>",
  "id": "5a54eff783152df26d4dff35",
  "issues": [],
  "mentions": [
   {
    "screenName": "crwgregory",
    "userId": "56d8586ae610378809c4d375",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-09T16:38:15.701Z",
  "text": "@crwgregory I just added a bunch of encryption examples to the Go Dev Guide: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/s3-examples-encryption.html",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/s3-examples-encryption.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Amitgb14",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5564407?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5564407?v=4&s=60",
   "displayName": "Amit Ghadge",
   "gv": "4",
   "id": "5a3a6161d73408ce4f842ed2",
   "url": "/Amitgb14",
   "username": "Amitgb14",
   "v": 10
  },
  "html": "Hi, I use 10 goroutines to handle 1k object on s3 storage, each goroutines upload 10MB size file and set 100ms sleep between each u[load operation. but when tcp channel count comes to 2944 it stuck. I set MaxIdleConns:          10000,",
  "id": "5a55b5db83152df26d521af4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-10T06:42:35.944Z",
  "text": "Hi, I use 10 goroutines to handle 1k object on s3 storage, each goroutines upload 10MB size file and set 100ms sleep between each u[load operation. but when tcp channel count comes to 2944 it stuck. I set MaxIdleConns:          10000,",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Amitgb14",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5564407?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5564407?v=4&s=60",
   "displayName": "Amit Ghadge",
   "gv": "4",
   "id": "5a3a6161d73408ce4f842ed2",
   "url": "/Amitgb14",
   "username": "Amitgb14",
   "v": 10
  },
  "html": "sorry it was 369 channel open.",
  "id": "5a55ceefd0514c785b114b8a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-10T08:29:35.061Z",
  "text": "sorry it was 369 channel open.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Amitgb14",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5564407?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5564407?v=4&s=60",
   "displayName": "Amit Ghadge",
   "gv": "4",
   "id": "5a3a6161d73408ce4f842ed2",
   "url": "/Amitgb14",
   "username": "Amitgb14",
   "v": 10
  },
  "html": "This issue is solve, problem was in my code. ",
  "id": "5a560324d0514c785b1267c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-10T12:12:20.328Z",
  "text": "This issue is solve, problem was in my code. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/alethenorio",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2749771?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2749771?v=4&s=60",
   "displayName": "Alexandre Thenorio",
   "gv": "4",
   "id": "56e18a6585d51f252ab8242d",
   "url": "/alethenorio",
   "username": "alethenorio",
   "v": 18
  },
  "html": "More of an AWS question then the Go SDK itself but is there any way to write a policy which can be assumed by other accounts but gives different permissions depending on which account is assuming the role?",
  "id": "5a564b24ce68c3bc74a097dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-01-10T17:19:32.186Z",
  "text": "More of an AWS question then the Go SDK itself but is there any way to write a policy which can be assumed by other accounts but gives different permissions depending on which account is assuming the role?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ByteFlinger\" class=\"mention\">@ByteFlinger</span>  I don&#39;t think so. I think you&#39;d need the accounts to assume different roles with each role having its own unique policy. I don&#39;t think policies can contain conditionals",
  "id": "5a565933d0514c785b146d09",
  "issues": [],
  "mentions": [
   {
    "screenName": "ByteFlinger",
    "userId": "56e18a6585d51f252ab8242d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2018-01-10T18:19:31.103Z",
  "text": "@ByteFlinger  I don't think so. I think you'd need the accounts to assume different roles with each role having its own unique policy. I don't think policies can contain conditionals",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Think of roles more as Groups, not User them selves.",
  "id": "5a56595eba39a53f1afd2d54",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-10T18:20:14.975Z",
  "text": "Think of roles more as Groups, not User them selves.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/niciyan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/21082418?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/21082418?v=4&s=60",
   "displayName": "niciyan",
   "gv": "4",
   "id": "5a571799d73408ce4f878e1c",
   "url": "/niciyan",
   "username": "niciyan",
   "v": 4
  },
  "html": "How can i create recordset for Route53 with AWS sdk for Golang?",
  "id": "5a5717e35a9ebe4f7572766c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-01-11T07:53:07.623Z",
  "text": "How can i create recordset for Route53 with AWS sdk for Golang?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/niciyan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/21082418?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/21082418?v=4&s=60",
   "displayName": "niciyan",
   "gv": "4",
   "id": "5a571799d73408ce4f878e1c",
   "url": "/niciyan",
   "username": "niciyan",
   "v": 4
  },
  "html": "I want to create A record. any code snippet welcome.",
  "id": "5a57181eba39a53f1a00b5ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-11T07:54:06.373Z",
  "text": "I want to create A record. any code snippet welcome.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/JAizen",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/23258939?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/23258939?v=4&s=60",
   "displayName": "Jason Hutchings",
   "gv": "4",
   "id": "5914ae65d73408ce4f5ed78f",
   "url": "/JAizen",
   "username": "JAizen",
   "v": 6
  },
  "html": "Hi guys. i&#39;m trying to list s3 locations but i&#39;m getting a nil pointer if the bucket isn&#39;t in the region i&#39;ve created the session with. Do i have to create a new session with that buckets region to actually get a value?",
  "id": "5a58915e290a1f45617d2123",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-12T10:43:42.073Z",
  "text": "Hi guys. i'm trying to list s3 locations but i'm getting a nil pointer if the bucket isn't in the region i've created the session with. Do i have to create a new session with that buckets region to actually get a value?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"JAizen\" class=\"mention\">@JAizen</span> You are correct. Although bucket names must be unique, and S3 bucket ARNs do not include a region, buckets still have a region affinity. Before you attempt any action on a bucket, you should first ensure that the LocationConstraint returned isn&#39;t nil, which means your bucket is NOT in the region in which you created your S3 client.",
  "id": "5a5ce606ba39a53f1a1aefcd",
  "issues": [],
  "mentions": [
   {
    "screenName": "JAizen",
    "userId": "5914ae65d73408ce4f5ed78f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-15T17:33:58.897Z",
  "text": "@JAizen You are correct. Although bucket names must be unique, and S3 bucket ARNs do not include a region, buckets still have a region affinity. Before you attempt any action on a bucket, you should first ensure that the LocationConstraint returned isn't nil, which means your bucket is NOT in the region in which you created your S3 client.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"niciyan\" class=\"mention\">@niciyan</span> Have you looked at the SDK examples? For Route53, go to the main topic, <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/route53/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/route53/</a>, click &quot;Examples&quot;, and you&#39;ll see a number of examples of creating record sets. Let us know if you run into any problems.",
  "id": "5a5ce6cdba39a53f1a1af275",
  "issues": [],
  "mentions": [
   {
    "screenName": "niciyan",
    "userId": "5a571799d73408ce4f878e1c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-15T17:37:17.233Z",
  "text": "@niciyan Have you looked at the SDK examples? For Route53, go to the main topic, https://docs.aws.amazon.com/sdk-for-go/api/service/route53/, click \"Examples\", and you'll see a number of examples of creating record sets. Let us know if you run into any problems.",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/route53/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/shencan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11796215?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11796215?v=4&s=60",
   "displayName": "shencan",
   "gv": "4",
   "id": "595bae56d73408ce4f6b8f2c",
   "url": "/shencan",
   "username": "shencan",
   "v": 4
  },
  "html": "<code>costexplorer  GetCostAndUsageInput</code>   <code>GroupBy []*GroupDefinition</code>type:&quot;list&quot;<code>`,  parameter  my code is</code>GroupBy: []&amp;costexplorer.GroupDefinition{<br>            Key:  aws.String(&quot;SERVICE&quot;),<br>            Type: aws.String(&quot;DIMENSION&quot;),<br>        }`",
  "id": "5a5de2f8b48e8c3566e754bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-16T11:33:12.023Z",
  "text": "`costexplorer  GetCostAndUsageInput`   `GroupBy []*GroupDefinition `type:\"list\"``,  parameter  my code is   `GroupBy: []&costexplorer.GroupDefinition{\n\t\t\tKey:  aws.String(\"SERVICE\"),\n\t\t\tType: aws.String(\"DIMENSION\"),\n\t\t}`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/shencan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11796215?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11796215?v=4&s=60",
   "displayName": "shencan",
   "gv": "4",
   "id": "595bae56d73408ce4f6b8f2c",
   "url": "/shencan",
   "username": "shencan",
   "v": 4
  },
  "html": "Isn&#39;t it the right way\uff1f",
  "id": "5a5de342290a1f456194d6ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-01-16T11:34:26.445Z",
  "text": "Isn't it the right way\uff1f",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "It looks correct, though you might want to add some services if you group by service",
  "id": "5a5e2df3ce68c3bc74c4dd21",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-16T16:53:07.576Z",
  "text": "It looks correct, though you might want to add some services if you group by service",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "Maybe with something like: <pre><code>        <span class=\"built_in\">Filter</span>: &amp;costexplorer.Expression{\n            <span class=\"keyword\">Or</span>: []*costexplorer.Expression{\n                {\n                    Dimensions: &amp;costexplorer.DimensionValues{\n                        Key:    aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"SERVICE\"</span>),\n                        Values: []*<span class=\"built_in\">string</span>{aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"Amazon Elastic Compute Cloud - Compute\"</span>)},\n                    },\n                },\n                {\n                    Dimensions: &amp;costexplorer.DimensionValues{\n                        Key:    aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"SERVICE\"</span>),\n                        Values: []*<span class=\"built_in\">string</span>{aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"Amazon Relational Database Service\"</span>)},\n                    },\n                },\n                {\n                    Dimensions: &amp;costexplorer.DimensionValues{\n                        Key:    aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"SERVICE\"</span>),\n                        Values: []*<span class=\"built_in\">string</span>{aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"Amazon Simple Storage Service\"</span>)},\n                    },\n                },\n            },</code></pre>",
  "id": "5a5e2e1a5ade18be398298d0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-16T16:53:46.588Z",
  "text": "Maybe with something like: \n```\n\t\tFilter: &costexplorer.Expression{\n\t\t\tOr: []*costexplorer.Expression{\n\t\t\t\t{\n\t\t\t\t\tDimensions: &costexplorer.DimensionValues{\n\t\t\t\t\t\tKey:    aws.String(\"SERVICE\"),\n\t\t\t\t\t\tValues: []*string{aws.String(\"Amazon Elastic Compute Cloud - Compute\")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tDimensions: &costexplorer.DimensionValues{\n\t\t\t\t\t\tKey:    aws.String(\"SERVICE\"),\n\t\t\t\t\t\tValues: []*string{aws.String(\"Amazon Relational Database Service\")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tDimensions: &costexplorer.DimensionValues{\n\t\t\t\t\t\tKey:    aws.String(\"SERVICE\"),\n\t\t\t\t\t\tValues: []*string{aws.String(\"Amazon Simple Storage Service\")},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/JAizen",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/23258939?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/23258939?v=4&s=60",
   "displayName": "Jason Hutchings",
   "gv": "4",
   "id": "5914ae65d73408ce4f5ed78f",
   "url": "/JAizen",
   "username": "JAizen",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Doug-AWS\" class=\"mention\">@Doug-AWS</span> thanks for the clarification Doug :)",
  "id": "5a5f2f691dcb91f1775edb9e",
  "issues": [],
  "mentions": [
   {
    "screenName": "Doug-AWS",
    "userId": "565e0cbd16b6c7089cbcf1c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 30,
  "sent": "2018-01-17T11:11:37.806Z",
  "text": "@Doug-AWS thanks for the clarification Doug :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xaxes",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1886899?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1886899?v=4&s=60",
   "displayName": "\u0141ukasz Margiela",
   "gv": "4",
   "id": "53d2d565107e137846ba7f82",
   "url": "/xaxes",
   "username": "xaxes",
   "v": 9
  },
  "html": "Hey! I&#39;m new to AWS API (which is overwhelmingly big), and I&#39;m struggling with something that seems to be trivial \u2014 basing on the instance name, I&#39;d like to reattach its volumes that are in a given attachment state (<code>attaching</code> for example). First thing I want to achieve is to get volumes of that instance, and that&#39;s where I&#39;m stuck. Could someone explain me how to do it?",
  "id": "5a5f8deb5ade18be398a4959",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-01-17T17:54:51.360Z",
  "text": "Hey! I'm new to AWS API (which is overwhelmingly big), and I'm struggling with something that seems to be trivial \u2014 basing on the instance name, I'd like to reattach its volumes that are in a given attachment state (`attaching` for example). First thing I want to achieve is to get volumes of that instance, and that's where I'm stuck. Could someone explain me how to do it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-01-19T09:18:24.524Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/eraclitux",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1591038?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1591038?v=4&s=60",
   "displayName": "Andrea Masi",
   "gv": "4",
   "id": "5a61b6acd73408ce4f891541",
   "url": "/eraclitux",
   "username": "eraclitux"
  },
  "html": "I&#39;m having trouble finding a way to rename an RDS instance, seems that <code>DBInstanceIdentifier</code> field in <code>*ModifyDBInstanceInput</code> &quot;Must match the identifier of an existing DBInstance&quot;, so how is supposed to be changed?",
  "id": "5a61b7cf517037a212c7405f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-01-19T09:18:07.341Z",
  "text": "I'm having trouble finding a way to rename an RDS instance, seems that `DBInstanceIdentifier ` field in `*ModifyDBInstanceInput` \"Must match the identifier of an existing DBInstance\", so how is supposed to be changed?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/reedobrien",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/45174?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/45174?v=4&s=60",
   "displayName": "Reed O'Brien",
   "gv": "4",
   "id": "563b986916b6c7089cb99d62",
   "url": "/reedobrien",
   "username": "reedobrien",
   "v": 8
  },
  "html": "<p>So I&#39;ve tun into a problem a couple times. Mocking interfaces is something I&#39;ve done for some time now. However I am mocking an aws-sdk-go interface and I have a race because it is all pointers all the way down. I think. So something like:</p><pre><code>type dummyCowl <span class=\"class\"><span class=\"keyword\">struct</span> </span>{ ...}\n\n<span class=\"func\"><span class=\"keyword\">func</span> <span class=\"params\">(d *dummyCowlAPI)</span></span> <span class=\"type\">PutLogEvents</span>(<span class=\"keyword\">in</span> *cloudwatchlogs.<span class=\"type\">PutLogEventsInput</span>) (*cloudwatchlogs.<span class=\"type\">PutLogEventsOutput</span>, error) {\n\n    d.plei = <span class=\"keyword\">in</span>.<span class=\"type\">LogEvents</span>[:]\n\n    <span class=\"keyword\">return</span> d.pleo, <span class=\"built_in\">nil</span>\n\n}</code></pre><p>Then in tests I can do something like:</p><pre><code><span class=\"tag\">func</span> <span class=\"tag\">TestStuff</span> (t *testing.T) {\n\n    ...\n\n    <span class=\"tag\">equals</span>(t, <span class=\"function\">len</span>(api.plei), <span class=\"tag\">2</span>)\n\n    <span class=\"tag\">equals</span>(t, *api.plei[<span class=\"number\">0</span>].Message, <span class=\"string\">\"1\"</span>)\n\n    <span class=\"tag\">equals</span>(t, *api.plei[<span class=\"number\">1</span>].Message, <span class=\"string\">\"2\"</span>)\n\n    ...</code></pre><p>This works when the incoming parameter is not a pointer. When it is -- as in this example -- it causes a race in the test code.</p><p>Is there a common way to work around this when writing code that uses aws-sdk-go?</p>",
  "id": "5a62843f9cdc721e4fa3be15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-01-19T23:50:23.331Z",
  "text": "So I've tun into a problem a couple times. Mocking interfaces is something I've done for some time now. However I am mocking an aws-sdk-go interface and I have a race because it is all pointers all the way down. I think. So something like:\n```\ntype dummyCowl struct { ...}\n\nfunc (d *dummyCowlAPI) PutLogEvents(in *cloudwatchlogs.PutLogEventsInput) (*cloudwatchlogs.PutLogEventsOutput, error) {\n\n    d.plei = in.LogEvents[:]\n\n    return d.pleo, nil\n\n}\n```\nThen in tests I can do something like:\n```\nfunc TestStuff (t *testing.T) {\n\n\t...\n\n\tequals(t, len(api.plei), 2)\n\n\tequals(t, *api.plei[0].Message, \"1\")\n\n\tequals(t, *api.plei[1].Message, \"2\")\n\n\t...\n```\nThis works when the incoming parameter is not a pointer. When it is -- as in this example -- it causes a race in the test code.\n\nIs there a common way to work around this when writing code that uses aws-sdk-go?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jonlindeheim",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/34133579?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/34133579?v=4&s=60",
   "displayName": "jonlindeheim",
   "gv": "4",
   "id": "5a6635e4d73408ce4f899488",
   "url": "/jonlindeheim",
   "username": "jonlindeheim",
   "v": 1
  },
  "html": "Are there any plans for implementing support for the producer API:s (putMedia) for AWS Kinesis Video Streams in the aws-go-sdk?",
  "id": "5a66372e0ad3e04b1b5521ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-01-22T19:10:38.027Z",
  "text": "Are there any plans for implementing support for the producer API:s (putMedia) for AWS Kinesis Video Streams in the aws-go-sdk?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jonlindeheim\" class=\"mention\">@jonlindeheim</span> the AWS SDK for Go doesn&#39;t implement this API, and it is only available in the Java and C++ Producer SDKs managed by the Kinesis Video team. I suggest reaching out to Kinesis Video directory with a Go  version of their producer SDK. The best way to do this is vai the <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=169\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">AWS Forums for Kinesis</a>.",
  "id": "5a664010ae53c159031ec28a",
  "issues": [],
  "mentions": [
   {
    "screenName": "jonlindeheim",
    "userId": "5a6635e4d73408ce4f899488",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 31,
  "sent": "2018-01-22T19:48:32.410Z",
  "text": "@jonlindeheim the AWS SDK for Go doesn't implement this API, and it is only available in the Java and C++ Producer SDKs managed by the Kinesis Video team. I suggest reaching out to Kinesis Video directory with a Go  version of their producer SDK. The best way to do this is vai the [AWS Forums for Kinesis](https://forums.aws.amazon.com/forum.jspa?forumID=169).",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=169"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/daidokoro",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=60",
   "displayName": "Shaun Remekie",
   "gv": "4",
   "id": "584f0023d73408ce4f3c94c8",
   "url": "/daidokoro",
   "username": "daidokoro",
   "v": 11
  },
  "html": "Probably old news by now but literally screamed and had a nerdgasm when I saw this. <a href=\"https://aws.amazon.com/blogs/compute/announcing-go-support-for-aws-lambda/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://aws.amazon.com/blogs/compute/announcing-go-support-for-aws-lambda/</a>",
  "id": "5a6766bd98927d574527a8fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-01-23T16:45:49.763Z",
  "text": "Probably old news by now but literally screamed and had a nerdgasm when I saw this. https://aws.amazon.com/blogs/compute/announcing-go-support-for-aws-lambda/",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/blogs/compute/announcing-go-support-for-aws-lambda/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": ":) give it a try <span data-link-type=\"mention\" data-screen-name=\"daidokoro\" class=\"mention\">@daidokoro</span> the Lambda Go team is always looking for feedback.  I&#39;ve experimented with it, and like how easy it is to get a Go lambda up and running.",
  "id": "5a6774fcc95f22546dd61474",
  "issues": [],
  "mentions": [
   {
    "screenName": "daidokoro",
    "userId": "584f0023d73408ce4f3c94c8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2018-01-23T17:46:36.962Z",
  "text": ":) give it a try @daidokoro the Lambda Go team is always looking for feedback.  I've experimented with it, and like how easy it is to get a Go lambda up and running.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/JAizen",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/23258939?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/23258939?v=4&s=60",
   "displayName": "Jason Hutchings",
   "gv": "4",
   "id": "5914ae65d73408ce4f5ed78f",
   "url": "/JAizen",
   "username": "JAizen",
   "v": 6
  },
  "html": "Hey guys, does anyone know the format i need to return from a lambda for lex to work? i&#39;m getting  <code>An error has occurred: Invalid Lambda Response: Received invalid response from Lambda: Can not construct instance of IntentResponse: no String-argument constructor/factory method to deserialize from String value</code>",
  "id": "5a69e7895a9ebe4f75d2959e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-25T14:19:53.726Z",
  "text": "Hey guys, does anyone know the format i need to return from a lambda for lex to work? i'm getting  ```An error has occurred: Invalid Lambda Response: Received invalid response from Lambda: Can not construct instance of IntentResponse: no String-argument constructor/factory method to deserialize from String value```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "random question, do you know guys how to fetch tags values for the cost-explorer service?",
  "id": "5a6af9576117191e61b52458",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-26T09:48:07.486Z",
  "text": "random question, do you know guys how to fetch tags values for the cost-explorer service?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/daidokoro",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4018554?v=4&s=60",
   "displayName": "Shaun Remekie",
   "gv": "4",
   "id": "584f0023d73408ce4f3c94c8",
   "url": "/daidokoro",
   "username": "daidokoro",
   "v": 11
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Ive already moved 2 of our productions lambdas over to the new setup, we were previously using the <a href=\"http://github.com/eawsy\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/eawsy</a>  shim. Gotta say, it was painless, took me less than 2 hours to update the code base and greatly simplified the deployment process. Looking forward to doing much more with this.",
  "id": "5a6afb6098927d57453aee93",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-26T09:56:48.201Z",
  "text": "@jasdel Ive already moved 2 of our productions lambdas over to the new setup, we were previously using the github.com/eawsy  shim. Gotta say, it was painless, took me less than 2 hours to update the code base and greatly simplified the deployment process. Looking forward to doing much more with this.",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/eawsy"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> - Same here as  <span data-link-type=\"mention\" data-screen-name=\"daidokoro\" class=\"mention\">@daidokoro</span>  for an open-source project, from eawsy shim to Lambda go, ez pz.",
  "id": "5a6afe304a6b0dd32b4cd5f2",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   },
   {
    "screenName": "daidokoro",
    "userId": "584f0023d73408ce4f3c94c8",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-26T10:08:48.022Z",
  "text": "@jasdel - Same here as  @daidokoro  for an open-source project, from eawsy shim to Lambda go, ez pz.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "Trying soon the X-Ray support",
  "id": "5a6afe3c5a9ebe4f75d88234",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-01-26T10:09:00.473Z",
  "text": "Trying soon the X-Ray support",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Thanks for the feedback <span data-link-type=\"mention\" data-screen-name=\"daidokoro\" class=\"mention\">@daidokoro</span>  and <span data-link-type=\"mention\" data-screen-name=\"xlr-8\" class=\"mention\">@xlr-8</span> I&#39;ll forward this onto the AWS Lambda Go team. Have either of you switch to any other framework such as <a href=\"http://gosparta.io\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Sparta</a> or are your Lambdas standalone Go applications?",
  "id": "5a6b73cd40259f1a33af6078",
  "issues": [],
  "mentions": [
   {
    "screenName": "daidokoro",
    "userId": "584f0023d73408ce4f3c94c8",
    "userIds": []
   },
   {
    "screenName": "xlr-8",
    "userId": "57592a76c2f0db084a1cf428",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2018-01-26T18:30:37.682Z",
  "text": "Thanks for the feedback @daidokoro  and @xlr-8 I'll forward this onto the AWS Lambda Go team. Have either of you switch to any other framework such as [Sparta](gosparta.io) or are your Lambdas standalone Go applications?",
  "unread": false,
  "urls": [
   {
    "url": "http://gosparta.io"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> No, only standalone Go application so far here",
  "id": "5a6c3ada494bd0f5302f039c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2018-01-27T08:39:54.818Z",
  "text": "@jasdel No, only standalone Go application so far here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/thales17",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/782602?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/782602?v=4&s=60",
   "displayName": "Adam Richardson",
   "gv": "4",
   "id": "579a667140f3a6eec05cf3ca",
   "url": "/thales17",
   "username": "thales17",
   "v": 10
  },
  "html": "Hello everyone, does anyone have any tips on how to Unmarshal the NewImage/ OldImage from a <code>DynamoDBStreamRecord</code>?  My first instinct was to use the <code>dynamodbattribute.UnmarshapMap</code> but that expects a type of <code>map[string]*dynamodb.AttributeValue</code> whereas the <code>DynamoDBStreamRecord.NewImage</code> is type of <code>map[string]events.DynamoDBAttributeValue</code>.  Thanks for any help on this",
  "id": "5a6f313cac509d207d902149",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-29T14:35:40.171Z",
  "text": "Hello everyone, does anyone have any tips on how to Unmarshal the NewImage/ OldImage from a `DynamoDBStreamRecord`?  My first instinct was to use the `dynamodbattribute.UnmarshapMap` but that expects a type of `map[string]*dynamodb.AttributeValue` whereas the `DynamoDBStreamRecord.NewImage` is type of `map[string]events.DynamoDBAttributeValue`.  Thanks for any help on this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"thales17\" class=\"mention\">@thales17</span> the <code>events</code> package is the package from the <code>aws-lambda-go</code> package correct?  The two types are not directly compatible because the types and signatures are different. I think aws-lambda-go library did this to prevent a forced dependency on the aws-sdk-go library. ",
  "id": "5a6f656c98927d57454fce01",
  "issues": [],
  "mentions": [
   {
    "screenName": "thales17",
    "userId": "579a667140f3a6eec05cf3ca",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-29T18:18:20.450Z",
  "text": "@thales17 the `events` package is the package from the `aws-lambda-go` package correct?  The two types are not directly compatible because the types and signatures are different. I think aws-lambda-go library did this to prevent a forced dependency on the aws-sdk-go library. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "The best workaround is to define your own version of the <code>event</code> that you&#39;re receiving, copied form the lambda source, and replace the <code>map[string]events.DynamoDBAttributeValue</code> member types with <code>map[string]*dynamodb.AttributeValue</code> in your own version of the event.",
  "id": "5a6f659b4a6b0dd32b61e9f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-29T18:19:07.048Z",
  "text": "The best workaround is to define your own version of the `event` that you're receiving, copied form the lambda source, and replace the `map[string]events.DynamoDBAttributeValue` member types with `map[string]*dynamodb.AttributeValue` in your own version of the event.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/thales17",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/782602?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/782602?v=4&s=60",
   "displayName": "Adam Richardson",
   "gv": "4",
   "id": "579a667140f3a6eec05cf3ca",
   "url": "/thales17",
   "username": "thales17",
   "v": 10
  },
  "html": "Thanks <span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>!  I will try that out",
  "id": "5a6f8e9447505419173d196c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-29T21:13:56.428Z",
  "text": "Thanks @jasdel!  I will try that out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/thales17",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/782602?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/782602?v=4&s=60",
   "displayName": "Adam Richardson",
   "gv": "4",
   "id": "579a667140f3a6eec05cf3ca",
   "url": "/thales17",
   "username": "thales17",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Looking at the aws-lambda-go code, is it as simple as making a custom event and having our handler accept that as a parameter?",
  "id": "5a6f996e98927d574551235b",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-29T22:00:14.921Z",
  "text": "@jasdel Looking at the aws-lambda-go code, is it as simple as making a custom event and having our handler accept that as a parameter?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Correct <span data-link-type=\"mention\" data-screen-name=\"thales17\" class=\"mention\">@thales17</span> aws-lambda-go handler functions can take any Go type which can be serialized to JSON. If there is custom logic you many need to add  MarshalJSON method",
  "id": "5a6f9b7047505419173d714d",
  "issues": [],
  "mentions": [
   {
    "screenName": "thales17",
    "userId": "579a667140f3a6eec05cf3ca",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-29T22:08:48.087Z",
  "text": "Correct @thales17 aws-lambda-go handler functions can take any Go type which can be serialized to JSON. If there is custom logic you many need to add  MarshalJSON method",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "but i don&#39;t htink that is needed for dynamodb attribute values",
  "id": "5a6f9b786117191e61cbad2f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-29T22:08:56.458Z",
  "text": "but i don't htink that is needed for dynamodb attribute values",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/thales17",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/782602?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/782602?v=4&s=60",
   "displayName": "Adam Richardson",
   "gv": "4",
   "id": "579a667140f3a6eec05cf3ca",
   "url": "/thales17",
   "username": "thales17",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Awesome, seems like its working.  Thanks again for the help",
  "id": "5a6f9d2a4a6b0dd32b635abe",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-29T22:16:10.980Z",
  "text": "@jasdel Awesome, seems like its working.  Thanks again for the help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-01-30T17:50:02.311Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/alwindoss",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/899883?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/899883?v=4&s=60",
   "displayName": "Alwin Doss",
   "gv": "4",
   "id": "5588412415522ed4b3e267f2",
   "url": "/alwindoss",
   "username": "alwindoss",
   "v": 17
  },
  "html": "I am trying to authenticate a user using aws cognito using the golang aws sdk through InitiateAuth and RespondToAuthChallenge. I am stuck at the RespondToAuthChallenge part especially in calculating PASSWORD_CLAIM_SIGNATURE could someone help. For some reason I am getting the error:<br><code>NotAuthorizedException: Incorrect username or password.\n    status code: 400, request id: e745a206-05e5-11e8-bb0e-593a3e8b995c</code>",
  "id": "5a70b0354a6b0dd32b69498e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-30T17:49:41.128Z",
  "text": "I am trying to authenticate a user using aws cognito using the golang aws sdk through InitiateAuth and RespondToAuthChallenge. I am stuck at the RespondToAuthChallenge part especially in calculating PASSWORD_CLAIM_SIGNATURE could someone help. For some reason I am getting the error: \n```NotAuthorizedException: Incorrect username or password.\n\tstatus code: 400, request id: e745a206-05e5-11e8-bb0e-593a3e8b995c```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/alwindoss",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/899883?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/899883?v=4&s=60",
   "displayName": "Alwin Doss",
   "gv": "4",
   "id": "5588412415522ed4b3e267f2",
   "url": "/alwindoss",
   "username": "alwindoss",
   "v": 17
  },
  "html": "<blockquote>\nI am trying to authenticate a user using aws cognito using the golang aws sdk through InitiateAuth and RespondToAuthChallenge. I am stuck at the RespondToAuthChallenge part especially in calculating PASSWORD_CLAIM_SIGNATURE could someone help. For some reason I am getting the error:<br><code>NotAuthorizedException: Incorrect username or password.\n    status code: 400, request id: e745a206-05e5-11e8-bb0e-593a3e8b995c</code><br>Please can somebody help me with this?</blockquote>\n",
  "id": "5a70b13598927d57455737df",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-01-30T17:53:57.335Z",
  "text": "> I am trying to authenticate a user using aws cognito using the golang aws sdk through InitiateAuth and RespondToAuthChallenge. I am stuck at the RespondToAuthChallenge part especially in calculating PASSWORD_CLAIM_SIGNATURE could someone help. For some reason I am getting the error: \n```NotAuthorizedException: Incorrect username or password.\n\tstatus code: 400, request id: e745a206-05e5-11e8-bb0e-593a3e8b995c``` \nPlease can somebody help me with this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/stephanbaker",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2078709?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2078709?v=4&s=60",
   "displayName": "Stephan Baker",
   "gv": "4",
   "id": "579a4c7e40f3a6eec05cefed",
   "url": "/stephanbaker",
   "username": "stephanbaker",
   "v": 4
  },
  "html": "<p>I&#39;m having some trouble using the dynamodb expression builder to perform a combination of IfNotExists and ListAppend in order to append to a list of strings.  Currently, the logic I&#39;m attempting to create is</p><pre><code>    <span class=\"number\">1</span>) Using expression.IfNotExists, either keep the original <span class=\"keyword\">list</span> <span class=\"built_in\">or</span> <span class=\"keyword\">set</span> the value of the attribute <span class=\"keyword\">to</span> <span class=\"keyword\">an</span> <span class=\"built_in\">empty</span> <span class=\"keyword\">list</span>\n    <span class=\"number\">2</span>) Now that I know I have <span class=\"keyword\">a</span> <span class=\"keyword\">list</span>, use expression.ListAppend <span class=\"keyword\">to</span> <span class=\"built_in\">insert</span> the <span class=\"keyword\">new</span> entries.</code></pre><p>I had previously done this in Node.js using the following update params:</p><pre><code>    const updateParams = {\n        TableName: MY_TABLE,\n        Key: {\n            <span class=\"string\">'myKey'</span>: req.key,\n        },\n        ExpressionAttributeValues: {\n            <span class=\"string\">':newValues'</span>: newValues,\n            <span class=\"string\">':emptyList'</span>: []\n        },\n        UpdateExpression: `<span class=\"built_in\">set</span> myList = list_append(<span class=\"keyword\">if</span>_not_exists(myList, :emptyList), :newValues)`\n        ReturnValues: <span class=\"string\">'ALL_NEW'</span>\n    };</code></pre><p>Here is my attempt to port this code to Go and use the UpdateBuilder</p><pre><code>    name := expression.<span class=\"function\"><span class=\"title\">Name</span><span class=\"params\">(<span class=\"string\">\"myList\"</span>)</span></span>\n    emptyList := expression.<span class=\"function\"><span class=\"title\">Value</span><span class=\"params\">([]string{})</span></span>\n    newValues := expression.<span class=\"function\"><span class=\"title\">Value</span><span class=\"params\">([]string{<span class=\"string\">\"testValue\"</span>})</span></span>\n    update = update.<span class=\"function\"><span class=\"title\">Set</span><span class=\"params\">(name, expression.ListAppend(expression.IfNotExists(name, emptyList)</span></span>, newValues))</code></pre><p>After building the update expression, I print the expression, names, and values to see the result, but it appears as if the builder has ignored my emptyList value and instead uses { NULL: true }  This results in a ValidationException, since the expression.ListAppend function cannot be run on a non-List value.</p><pre><code>    <span class=\"type\">ValidationException</span>: <span class=\"type\">An</span> operand <span class=\"keyword\">in</span> the update expression has an incorrect <span class=\"typedef\"><span class=\"keyword\">data</span> <span class=\"keyword\">type</span></span></code></pre><p>Does anyone else know the correct way to perform this combination of IfNotExists and ListAppend logic?  It seems as though the builder just can&#39;t handle an expression.Value representing an empty slice, but it&#39;s possible that I&#39;m just using it incorrectly.</p>",
  "id": "5a723b66b3c4a0d376c52384",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-01-31T21:55:50.488Z",
  "text": "I'm having some trouble using the dynamodb expression builder to perform a combination of IfNotExists and ListAppend in order to append to a list of strings.  Currently, the logic I'm attempting to create is\n```\n    1) Using expression.IfNotExists, either keep the original list or set the value of the attribute to an empty list\n    2) Now that I know I have a list, use expression.ListAppend to insert the new entries.\n```\n\nI had previously done this in Node.js using the following update params:\n```\n    const updateParams = {\n        TableName: MY_TABLE,\n        Key: {\n            'myKey': req.key,\n        },\n        ExpressionAttributeValues: {\n            ':newValues': newValues,\n            ':emptyList': []\n        },\n        UpdateExpression: `set myList = list_append(if_not_exists(myList, :emptyList), :newValues)`\n        ReturnValues: 'ALL_NEW'\n    };\n```\n\nHere is my attempt to port this code to Go and use the UpdateBuilder\n```\n    name := expression.Name(\"myList\")\n    emptyList := expression.Value([]string{})\n    newValues := expression.Value([]string{\"testValue\"})\n    update = update.Set(name, expression.ListAppend(expression.IfNotExists(name, emptyList), newValues))\n```\n\nAfter building the update expression, I print the expression, names, and values to see the result, but it appears as if the builder has ignored my emptyList value and instead uses { NULL: true }  This results in a ValidationException, since the expression.ListAppend function cannot be run on a non-List value.\n```\n    ValidationException: An operand in the update expression has an incorrect data type\n```\n\nDoes anyone else know the correct way to perform this combination of IfNotExists and ListAppend logic?  It seems as though the builder just can't handle an expression.Value representing an empty slice, but it's possible that I'm just using it incorrectly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"stephanbaker\" class=\"mention\">@stephanbaker</span> the <code>operand</code> error your application is getting may be related to the <code>emptyList</code> value. I think the issue you&#39;re running into is related to <span data-link-type=\"issue\" data-issue=\"682\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#682</span>. Specifically where the SDK&#39;s DynamoDB AttributeValue marshaler defaults to marshaling empty slices as NULL. Since the expression package uses the <code>dynamodbattribute.Marshal</code> under the hood, i don&#39;t think the proposed solution of a flag would help in your case. I think the best solution is to define a custom type that implements the <code>dynamodbattribute.Marshaler</code> interface, <a href=\"https://play.golang.org/p/RQtGrPP8ee6\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://play.golang.org/p/RQtGrPP8ee6</a> is an example of that.",
  "id": "5a72453fac509d207da22680",
  "issues": [
   {
    "number": "682",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [
   {
    "screenName": "stephanbaker",
    "userId": "579a4c7e40f3a6eec05cefed",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-31T22:37:51.208Z",
  "text": "@stephanbaker the `operand` error your application is getting may be related to the `emptyList` value. I think the issue you're running into is related to aws/aws-sdk-go#682. Specifically where the SDK's DynamoDB AttributeValue marshaler defaults to marshaling empty slices as NULL. Since the expression package uses the `dynamodbattribute.Marshal` under the hood, i don't think the proposed solution of a flag would help in your case. I think the best solution is to define a custom type that implements the `dynamodbattribute.Marshaler` interface, https://play.golang.org/p/RQtGrPP8ee6 is an example of that.",
  "unread": false,
  "urls": [
   {
    "url": "https://play.golang.org/p/RQtGrPP8ee6"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/stephanbaker",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2078709?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2078709?v=4&s=60",
   "displayName": "Stephan Baker",
   "gv": "4",
   "id": "579a4c7e40f3a6eec05cefed",
   "url": "/stephanbaker",
   "username": "stephanbaker",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> Thanks for the help!  The issue you referenced is definitely related, and the custom type definition you proposed appears to work great.",
  "id": "5a7257c998927d574560df5c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2018-01-31T23:56:57.164Z",
  "text": "@jasdel Thanks for the help!  The issue you referenced is definitely related, and the custom type definition you proposed appears to work great.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xlr-8",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1583638?v=4&s=60",
   "displayName": "xlr-8",
   "gv": "4",
   "id": "57592a76c2f0db084a1cf428",
   "url": "/xlr-8",
   "username": "xlr-8",
   "v": 6
  },
  "html": "Is there a way to use the cost-explorer API and actually have the total for each group? And eventually the total over the full period? I cannot quite find it",
  "id": "5a731d8798927d574564c096",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-02-01T14:00:39.758Z",
  "text": "Is there a way to use the cost-explorer API and actually have the total for each group? And eventually the total over the full period? I cannot quite find it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ezuhl",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18294654?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18294654?v=4&s=60",
   "displayName": "ezuhl",
   "gv": "4",
   "id": "58120c62d73408ce4f313c88",
   "url": "/ezuhl",
   "username": "ezuhl",
   "v": 1
  },
  "html": "Was anyone able to use DAX as drop in for Dynamo at the api level?",
  "id": "5a733d154750541917523f84",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-02-01T16:15:17.297Z",
  "text": "Was anyone able to use DAX as drop in for Dynamo at the api level?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-02-01T16:15:40.574Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ezuhl",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18294654?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18294654?v=4&s=60",
   "displayName": "ezuhl",
   "gv": "4",
   "id": "58120c62d73408ce4f313c88",
   "url": "/ezuhl",
   "username": "ezuhl",
   "v": 1
  },
  "html": "for Golang api",
  "id": "5a733d234750541917523fa6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-02-01T16:15:31.448Z",
  "text": "for Golang api",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ezuhl",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/18294654?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/18294654?v=4&s=60",
   "displayName": "ezuhl",
   "gv": "4",
   "id": "58120c62d73408ce4f313c88",
   "url": "/ezuhl",
   "username": "ezuhl",
   "v": 1
  },
  "html": "Documentation make it sound like that you can configure the dynamo client to send to DAX, but I can&#39;t figure out how",
  "id": "5a733df3ce68c3bc743190c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-02-01T16:18:59.853Z",
  "text": "Documentation make it sound like that you can configure the dynamo client to send to DAX, but I can't figure out how",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Yesterday I spent multiple hours trying to come up with a fine-grained IAM policy for one of our IAM roles that are supposed to automate deployments of a relatively large Terraform stacks and then I gave up and ended up using in the &quot;*&quot; permissions after adding some 50 permissions by hand one by one. Is there a way to get the SDK cleanly log all the API calls it performs during a run and the resources impacted by those calls, to automatically generate the bulk, if not all of such IAM policies? ",
  "id": "5a742424ce68c3bc7436029a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-02-02T08:41:08.934Z",
  "text": "Yesterday I spent multiple hours trying to come up with a fine-grained IAM policy for one of our IAM roles that are supposed to automate deployments of a relatively large Terraform stacks and then I gave up and ended up using in the \"*\" permissions after adding some 50 permissions by hand one by one. Is there a way to get the SDK cleanly log all the API calls it performs during a run and the resources impacted by those calls, to automatically generate the bulk, if not all of such IAM policies? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nickrobinson",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/479287?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/479287?v=4&s=60",
   "displayName": "Nick Robinson",
   "gv": "4",
   "id": "559ebb0215522ed4b3e3bd2b",
   "url": "/nickrobinson",
   "username": "nickrobinson",
   "v": 22
  },
  "html": "Anyone have any ideas why the following code would fail to publish to IoT. Program runs successfully and no error is returned, but I never see my message arrive in the IoT Test console:<pre><code><span class=\"rule\"><span class=\"attribute\">iotDataClient </span>:<span class=\"value\">= iotdataplane.<span class=\"function\">New</span>(session.<span class=\"function\">Must</span>(session.<span class=\"function\">NewSession</span>(&amp;aws.Config{\n        Region:   aws.<span class=\"function\">String</span>(<span class=\"string\">\"us-east-1\"</span>),\n        Endpoint: aws.<span class=\"function\">String</span>(<span class=\"string\">\"my-endpoint.iot.us-east-1.amazonaws.com\"</span>),\n    })))\n\nparams := &amp;iotdataplane.PublishInput{\n    Topic:   aws.<span class=\"function\">String</span>(<span class=\"string\">\"/test\"</span>), // Required\n    Payload: []<span class=\"function\">byte</span>(<span class=\"string\">\"PAYLOAD\"</span>),\n}\n\ntest, err := iotDataClient.<span class=\"function\">Publish</span>(params)</span></span></code></pre>",
  "id": "5a749e227dcd63481f0d16dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-02-02T17:21:38.123Z",
  "text": "Anyone have any ideas why the following code would fail to publish to IoT. Program runs successfully and no error is returned, but I never see my message arrive in the IoT Test console:\n\n```\niotDataClient := iotdataplane.New(session.Must(session.NewSession(&aws.Config{\n\t\tRegion:   aws.String(\"us-east-1\"),\n\t\tEndpoint: aws.String(\"my-endpoint.iot.us-east-1.amazonaws.com\"),\n\t})))\n\nparams := &iotdataplane.PublishInput{\n\tTopic:   aws.String(\"/test\"), // Required\n\tPayload: []byte(\"PAYLOAD\"),\n}\n\ntest, err := iotDataClient.Publish(params)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nickrobinson",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/479287?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/479287?v=4&s=60",
   "displayName": "Nick Robinson",
   "gv": "4",
   "id": "559ebb0215522ed4b3e3bd2b",
   "url": "/nickrobinson",
   "username": "nickrobinson",
   "v": 22
  },
  "html": "Created a new issue for this (<span data-link-type=\"issue\" data-issue=\"1769\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#1769</span>). Looks like the sdk is stripping the leading &#39;/&#39; of my topic name resulting in my message getting published to test instead of &#39;/test&#39;",
  "id": "5a74a57fb3c4a0d376d210a4",
  "issues": [
   {
    "number": "1769",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-02-02T17:53:03.187Z",
  "text": "Created a new issue for this (https://github.com/aws/aws-sdk-go/issues/1769). Looks like the sdk is stripping the leading '/' of my topic name resulting in my message getting published to test instead of '/test'",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chrissnell",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1072626?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1072626?v=4&s=60",
   "displayName": "Chris Snell",
   "gv": "4",
   "id": "59e96c48d73408ce4f7ad410",
   "url": "/chrissnell",
   "username": "chrissnell",
   "v": 6
  },
  "html": "Howdy.  I&#39;m trying to access Elasticsearch from within a (Go) lambda and I need to sign my HTTP requests to assume the IAM identity needed to access ES.  Is there an http.Client implementation or some helper function within the SDK that will make this easier for me?",
  "id": "5a751c8fa3447aac7535381a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-02-03T02:21:03.423Z",
  "text": "Howdy.  I'm trying to access Elasticsearch from within a (Go) lambda and I need to sign my HTTP requests to assume the IAM identity needed to access ES.  Is there an http.Client implementation or some helper function within the SDK that will make this easier for me?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/chrissnell",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1072626?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1072626?v=4&s=60",
   "displayName": "Chris Snell",
   "gv": "4",
   "id": "59e96c48d73408ce4f7ad410",
   "url": "/chrissnell",
   "username": "chrissnell",
   "v": 6
  },
  "html": "Nevermind.  I think I found it.  I will just implement my own http.Transport and use the Signer in the AWS SDK.  <a href=\"https://github.com/olivere/elastic/wiki/Using-with-AWS-Elasticsearch-Service\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/olivere/elastic/wiki/Using-with-AWS-Elasticsearch-Service</a>",
  "id": "5a7527e398927d57456f7d28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-02-03T03:09:23.588Z",
  "text": "Nevermind.  I think I found it.  I will just implement my own http.Transport and use the Signer in the AWS SDK.  https://github.com/olivere/elastic/wiki/Using-with-AWS-Elasticsearch-Service",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/olivere/elastic/wiki/Using-with-AWS-Elasticsearch-Service"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/islamL1_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/535906392520290304/7BRMlVLp.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/535906392520290304/7BRMlVLp_bigger.jpeg",
   "displayName": "islam Lahouar",
   "id": "5a78e518d73408ce4f8bd7d0",
   "url": "/islamL1_twitter",
   "username": "islamL1_twitter"
  },
  "html": "Hi ! anyone know how we can getItem from a global secondary index ?",
  "id": "5a78e5fa93be87284d7dc795",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-02-05T23:17:14.070Z",
  "text": "Hi ! anyone know how we can getItem from a global secondary index ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span>  I&#39;d imagine cloud trail could provide this information.  Additionally, checkout &quot;Adding Handlers&quot; at <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/aws/session/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/aws/session/</a>.  You could log all calls made with any service generated by that session.",
  "id": "5a7ca0407084124a34529343",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2018-02-08T19:08:48.782Z",
  "text": "@cristim  I'd imagine cloud trail could provide this information.  Additionally, checkout \"Adding Handlers\" at https://docs.aws.amazon.com/sdk-for-go/api/aws/session/.  You could log all calls made with any service generated by that session.",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/aws/session/"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-02-08T19:15:47.733Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "I&#39;ve found a potential bug in sts creds.  I&#39;m writing an application that can run locally with iam user keys or on a Jenkins box with ec2 role creds.  The jenkins box will need to access AWS accounts in other accounts, so I will need to use sts for cross account access.  This is done by passing the AWS account id as a cli param. The problem occurs when I run locally with a sharedcredentialprovider and a &quot;default&quot; credential in ~/.aws/credentials.  Basically, sts assumes a role based on the &quot;default&quot; credential, completely ignoring the profile the credentials were generated with.  I know passing a profile works because the correct resources in the intended AWS account are accessed.  Here&#39;s my credential generation logic",
  "id": "5a7ca1cf93be87284d926044",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-02-08T19:15:27.739Z",
  "text": "I've found a potential bug in sts creds.  I'm writing an application that can run locally with iam user keys or on a Jenkins box with ec2 role creds.  The jenkins box will need to access AWS accounts in other accounts, so I will need to use sts for cross account access.  This is done by passing the AWS account id as a cli param. The problem occurs when I run locally with a sharedcredentialprovider and a \"default\" credential in ~/.aws/credentials.  Basically, sts assumes a role based on the \"default\" credential, completely ignoring the profile the credentials were generated with.  I know passing a profile works because the correct resources in the intended AWS account are accessed.  Here's my credential generation logic",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"buhduh\" class=\"mention\">@buhduh</span> I thought cloudtrail doesn&#39;t log read-only  operations, only APIs that cause changes to resources",
  "id": "5a7ca222e217167e2c5d6977",
  "issues": [],
  "mentions": [
   {
    "screenName": "buhduh",
    "userId": "58e681dbd73408ce4f569b79",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2018-02-08T19:16:50.936Z",
  "text": "@buhduh I thought cloudtrail doesn't log read-only  operations, only APIs that cause changes to resources",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "<pre><code>func GetClient(profile, region string) *ConfStruct {\n  <span class=\"keyword\">if</span> profile == <span class=\"string\">\"\"</span> {\n    profile = DEF_PROFILE\n  }\n  <span class=\"keyword\">if</span> region == <span class=\"string\">\"\"</span> {\n    region = DEF_REGION\n  }\n  <span class=\"string\">session :</span>= session.New()\n  <span class=\"string\">creds :</span>= credentials.NewChainCredentials(\n    []credentials.Provider{\n      &amp;credentials.EnvProvider{},\n      &amp;credentials.SharedCredentialsProvider{<span class=\"string\">Profile:</span> profile},\n      &amp;ec2rolecreds.EC2RoleProvider{\n<span class=\"label\">        Client:</span> ec2metadata.New(session, &amp;aws.Config{\n<span class=\"label\">          HTTPClient:</span> &amp;http.Client{<span class=\"string\">Timeout:</span> <span class=\"number\">10</span> * time.Second},\n        }),\n<span class=\"label\">        ExpiryWindow:</span> <span class=\"number\">0</span>,\n      },\n    },\n  )\n  <span class=\"string\">config :</span>= aws.NewConfig().WithCredentials(creds).WithCredentialsChainVerboseErrors(<span class=\"literal\">true</span>)\n  <span class=\"keyword\">if</span> region != <span class=\"string\">\"\"</span> {\n    config = config.WithRegion(region)\n  }\n  <span class=\"keyword\">return</span> &amp;ConfStruct{session, request.WithRetryer(config, &amp;t_Retryer{})}\n}</code></pre>",
  "id": "5a7ca231ce68c3bc74614e7e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-02-08T19:17:05.857Z",
  "text": "```\nfunc GetClient(profile, region string) *ConfStruct {\n  if profile == \"\" {\n    profile = DEF_PROFILE\n  }\n  if region == \"\" {\n    region = DEF_REGION\n  }\n  session := session.New()\n  creds := credentials.NewChainCredentials(\n    []credentials.Provider{\n      &credentials.EnvProvider{},\n      &credentials.SharedCredentialsProvider{Profile: profile},\n      &ec2rolecreds.EC2RoleProvider{\n        Client: ec2metadata.New(session, &aws.Config{\n          HTTPClient: &http.Client{Timeout: 10 * time.Second},\n        }),\n        ExpiryWindow: 0,\n      },\n    },\n  )\n  config := aws.NewConfig().WithCredentials(creds).WithCredentialsChainVerboseErrors(true)\n  if region != \"\" {\n    config = config.WithRegion(region)\n  }\n  return &ConfStruct{session, request.WithRetryer(config, &t_Retryer{})}\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-02-08T19:17:24.113Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"buhduh\" class=\"mention\">@buhduh</span> lots of policies are mainly about restricting describe calls",
  "id": "5a7ca238b3c4a0d376fb3fb5",
  "issues": [],
  "mentions": [
   {
    "screenName": "buhduh",
    "userId": "58e681dbd73408ce4f569b79",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2018-02-08T19:17:12.983Z",
  "text": "@buhduh lots of policies are mainly about restricting describe calls",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-02-08T19:19:35.871Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "Here&#39;s where I do the sts logic, which runs first in the cli library:",
  "id": "5a7ca284e217167e2c5d6c0f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-02-08T19:18:28.683Z",
  "text": "Here's where I do the sts logic, which runs first in the cli library:",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "<pre><code>```\n app.<span class=\"type\">Before</span> = <span class=\"func\"><span class=\"keyword\">func</span><span class=\"params\">(<span class=\"built_in\">c</span> *cli.Context)</span></span> error {\n    client = aws.<span class=\"type\">GetClient</span>(profile, region)\n    <span class=\"comment\">//NOTE a role with name aws.STS_ROLE must be defined in the passed account</span>\n    <span class=\"comment\">//that can be assumed by the originally passed credentials, eg \"default\" in ~/.aws/credentials</span>\n    <span class=\"comment\">//or an ec2 role, respects passed region</span>\n    fmt.<span class=\"type\">Printf</span>(<span class=\"string\">\"profile: %s\\nregion: %s\\naccount: %s\\n\"</span>, profile, region, accountFlag)\n    cl, <span class=\"number\">_</span> := client.<span class=\"type\">GetAccount</span>()\n    fmt.<span class=\"type\">Printf</span>(<span class=\"string\">\"Determined account: %s\\n\"</span>, cl)\n    <span class=\"keyword\">if</span> accountFlag != <span class=\"string\">\"\"</span> {\n      arn := aws.<span class=\"type\">GenerateSTSRoleARN</span>(accountFlag)\n      fmt.<span class=\"type\">Printf</span>(<span class=\"string\">\"arn: %s\\n\"</span>, arn)\n      creds := aws.<span class=\"type\">GetSTSCreds</span>(client, arn)\n      client.<span class=\"type\">Config</span> = client.<span class=\"type\">Config</span>.<span class=\"type\">WithCredentials</span>(creds)\n    }\n    <span class=\"keyword\">return</span> <span class=\"built_in\">nil</span>\n  }</code></pre>",
  "id": "5a7ca2dbf283b8e54638f8a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-02-08T19:19:55.072Z",
  "text": "```\n```\n app.Before = func(c *cli.Context) error {\n    client = aws.GetClient(profile, region)\n    //NOTE a role with name aws.STS_ROLE must be defined in the passed account\n    //that can be assumed by the originally passed credentials, eg \"default\" in ~/.aws/credentials\n    //or an ec2 role, respects passed region\n    fmt.Printf(\"profile: %s\\nregion: %s\\naccount: %s\\n\", profile, region, accountFlag)\n    cl, _ := client.GetAccount()\n    fmt.Printf(\"Determined account: %s\\n\", cl)\n    if accountFlag != \"\" {\n      arn := aws.GenerateSTSRoleARN(accountFlag)\n      fmt.Printf(\"arn: %s\\n\", arn)\n      creds := aws.GetSTSCreds(client, arn)\n      client.Config = client.Config.WithCredentials(creds)\n    }\n    return nil\n  }\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "finally here&#39;s where sts gets initialized:",
  "id": "5a7ca2ff6117191e6110adeb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-02-08T19:20:31.134Z",
  "text": "finally here's where sts gets initialized:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "<pre><code>func GetSTSCreds<span class=\"list\">(<span class=\"keyword\">conf</span> <span class=\"variable\">*ConfStruct, arn string) *</span>credentials.Credentials {\n  return stscreds.NewCredentials<span class=\"list\">(<span class=\"keyword\">conf</span>.Session, arn)</span>\n}</span></code></pre>",
  "id": "5a7ca31893be87284d926713",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-02-08T19:20:56.512Z",
  "text": "```\nfunc GetSTSCreds(conf *ConfStruct, arn string) *credentials.Credentials {\n  return stscreds.NewCredentials(conf.Session, arn)\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "Deleting the &quot;default&quot; credential in ~/.aws/credentials forces sts to respect the passed profile.",
  "id": "5a7ca34de217167e2c5d7127",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-02-08T19:21:49.649Z",
  "text": "Deleting the \"default\" credential in ~/.aws/credentials forces sts to respect the passed profile.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "So, it would appear STS isn&#39;t respecting the chaincredentialprovider",
  "id": "5a7ca365ce68c3bc74615538",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-02-08T19:22:13.984Z",
  "text": "So, it would appear STS isn't respecting the chaincredentialprovider",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> You may be right about that.  I just checked my cloudtrail, didn&#39;t see any describe or list events.  Good to know",
  "id": "5a7ca4524a6b0dd32ba802a6",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 31,
  "sent": "2018-02-08T19:26:10.432Z",
  "text": "@cristim You may be right about that.  I just checked my cloudtrail, didn't see any describe or list events.  Good to know",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/buhduh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4031170?v=4&s=60",
   "displayName": "buhduh",
   "gv": "4",
   "id": "58e681dbd73408ce4f569b79",
   "url": "/buhduh",
   "username": "buhduh",
   "v": 4
  },
  "html": "No matter, Session Handlers will definitely do what you want.",
  "id": "5a7ca460ce68c3bc74615982",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-02-08T19:26:24.022Z",
  "text": "No matter, Session Handlers will definitely do what you want.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-02-13T04:33:21.589Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shuliyey",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=60",
   "displayName": "\u53f6\u6cfd\u5b87",
   "gv": "4",
   "id": "58bfaebcd73408ce4f4f23e4",
   "url": "/Shuliyey",
   "username": "Shuliyey",
   "v": 3
  },
  "html": "Hi",
  "id": "5a826a8c7084124a346d7580",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-02-13T04:33:16.776Z",
  "text": "Hi",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-02-13T04:33:49.439Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shuliyey",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=60",
   "displayName": "\u53f6\u6cfd\u5b87",
   "gv": "4",
   "id": "58bfaebcd73408ce4f4f23e4",
   "url": "/Shuliyey",
   "username": "Shuliyey",
   "v": 3
  },
  "html": "I found a documentation error for &quot;rds sdk for go api reference&quot;",
  "id": "5a826a98b3c4a0d376168750",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-02-13T04:33:28.190Z",
  "text": "I found a documentation error for \"rds sdk for go api reference\"",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shuliyey",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=60",
   "displayName": "\u53f6\u6cfd\u5b87",
   "gv": "4",
   "id": "58bfaebcd73408ce4f4f23e4",
   "url": "/Shuliyey",
   "username": "Shuliyey",
   "v": 3
  },
  "html": "In the go sdk documentation the <code>RestoreDBClusterFromSnapshotInput</code>",
  "id": "5a826adef283b8e546544f30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-02-13T04:34:38.086Z",
  "text": "In the go sdk documentation the `RestoreDBClusterFromSnapshotInput`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shuliyey",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=60",
   "displayName": "\u53f6\u6cfd\u5b87",
   "gv": "4",
   "id": "58bfaebcd73408ce4f4f23e4",
   "url": "/Shuliyey",
   "username": "Shuliyey",
   "v": 3
  },
  "html": "it says",
  "id": "5a826ae1f283b8e546544f52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-02-13T04:34:41.174Z",
  "text": "it says",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-02-13T04:35:07.296Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shuliyey",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=60",
   "displayName": "\u53f6\u6cfd\u5b87",
   "gv": "4",
   "id": "58bfaebcd73408ce4f4f23e4",
   "url": "/Shuliyey",
   "username": "Shuliyey",
   "v": 3
  },
  "html": "<pre><code class=\"golang\"><span class=\"keyword\">type</span> RestoreDBClusterFromSnapshotInput <span class=\"keyword\">struct</span> {\n\n    <span class=\"comment\">// Provides the list of EC2 Availability Zones that instances in the restored</span>\n    <span class=\"comment\">// DB cluster can be created in.</span>\n    AvailabilityZones []*<span class=\"typename\">string</span> <span class=\"string\">`locationNameList:\"AvailabilityZone\" type:\"list\"`</span>\n\n    <span class=\"comment\">// The name of the DB cluster to create from the DB snapshot or DB cluster snapshot.</span>\n    <span class=\"comment\">// This parameter isn't case-sensitive.</span>\n    <span class=\"comment\">//</span>\n    <span class=\"comment\">// Constraints:</span>\n    <span class=\"comment\">//</span>\n    <span class=\"comment\">//    * Must contain from 1 to 255 letters, numbers, or hyphens</span>\n    <span class=\"comment\">//</span>\n    <span class=\"comment\">//    * First character must be a letter</span>\n    <span class=\"comment\">//</span>\n    <span class=\"comment\">//    * Cannot end with a hyphen or contain two consecutive hyphens</span>\n    <span class=\"comment\">//</span>\n    <span class=\"comment\">// Example: my-snapshot-id</span>\n    <span class=\"comment\">//</span>\n    <span class=\"comment\">// DBClusterIdentifier is a required field</span>\n    DBClusterIdentifier *<span class=\"typename\">string</span> <span class=\"string\">`type:\"string\" required:\"true\"`</span></code></pre>",
  "id": "5a826aedce68c3bc747bf3d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-02-13T04:34:53.742Z",
  "text": "```golang\ntype RestoreDBClusterFromSnapshotInput struct {\n\n    // Provides the list of EC2 Availability Zones that instances in the restored\n    // DB cluster can be created in.\n    AvailabilityZones []*string `locationNameList:\"AvailabilityZone\" type:\"list\"`\n\n    // The name of the DB cluster to create from the DB snapshot or DB cluster snapshot.\n    // This parameter isn't case-sensitive.\n    //\n    // Constraints:\n    //\n    //    * Must contain from 1 to 255 letters, numbers, or hyphens\n    //\n    //    * First character must be a letter\n    //\n    //    * Cannot end with a hyphen or contain two consecutive hyphens\n    //\n    // Example: my-snapshot-id\n    //\n    // DBClusterIdentifier is a required field\n    DBClusterIdentifier *string `type:\"string\" required:\"true\"`\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shuliyey",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=60",
   "displayName": "\u53f6\u6cfd\u5b87",
   "gv": "4",
   "id": "58bfaebcd73408ce4f4f23e4",
   "url": "/Shuliyey",
   "username": "Shuliyey",
   "v": 3
  },
  "html": "the constrains is 1 to 255 letters, numbers or hyphens",
  "id": "5a826b0e4a6b0dd32bc33d06",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-02-13T04:35:26.435Z",
  "text": "the constrains is 1 to 255 letters, numbers or hyphens",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-02-13T04:35:48.897Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shuliyey",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=60",
   "displayName": "\u53f6\u6cfd\u5b87",
   "gv": "4",
   "id": "58bfaebcd73408ce4f4f23e4",
   "url": "/Shuliyey",
   "username": "Shuliyey",
   "v": 3
  },
  "html": "but the actual upper limit constraints should be 63",
  "id": "5a826b2018f388e626974d57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-02-13T04:35:44.686Z",
  "text": "but the actual upper limit constraints should be 63",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shuliyey",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=60",
   "displayName": "\u53f6\u6cfd\u5b87",
   "gv": "4",
   "id": "58bfaebcd73408ce4f4f23e4",
   "url": "/Shuliyey",
   "username": "Shuliyey",
   "v": 3
  },
  "html": "constraint should be 1 to 63",
  "id": "5a826bf1f283b8e546545612",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-02-13T04:39:13.766Z",
  "text": "constraint should be 1 to 63",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/prathiba-nuovo",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6180700?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6180700?v=4&s=60",
   "displayName": "prathiba-nuovo",
   "gv": "4",
   "id": "5a1e66a1d73408ce4f80cfa6",
   "url": "/prathiba-nuovo",
   "username": "prathiba-nuovo",
   "v": 2
  },
  "html": "Hi",
  "id": "5a82b5cfb3c4a0d37618053f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-02-13T09:54:23.153Z",
  "text": "Hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/prathiba-nuovo",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6180700?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6180700?v=4&s=60",
   "displayName": "prathiba-nuovo",
   "gv": "4",
   "id": "5a1e66a1d73408ce4f80cfa6",
   "url": "/prathiba-nuovo",
   "username": "prathiba-nuovo",
   "v": 2
  },
  "html": "I have an issue with asgClient.WaitUntilGroupInService<br>before instances of asg are in service I&#39;m getting response",
  "id": "5a82b60918f388e62698d0b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-02-13T09:55:21.284Z",
  "text": "I have an issue with asgClient.WaitUntilGroupInService\nbefore instances of asg are in service I'm getting response",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/prathiba-nuovo",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6180700?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6180700?v=4&s=60",
   "displayName": "prathiba-nuovo",
   "gv": "4",
   "id": "5a1e66a1d73408ce4f80cfa6",
   "url": "/prathiba-nuovo",
   "username": "prathiba-nuovo",
   "v": 2
  },
  "html": "can anyone help on this?",
  "id": "5a82b610d74ee9f50dba80de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-02-13T09:55:28.605Z",
  "text": "can anyone help on this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/nayanbhana",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/7753228?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/7753228?v=4&s=60",
   "displayName": "Nayan Bhana",
   "gv": "4",
   "id": "553ec59d15522ed4b3df9aa1",
   "url": "/nayanbhana",
   "username": "nayanbhana",
   "v": 3
  },
  "html": "Is this gitter still active? ",
  "id": "5a84ac82e217167e2c85b659",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-02-14T21:39:14.776Z",
  "text": "Is this gitter still active? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shuliyey",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=60",
   "displayName": "\u53f6\u6cfd\u5b87",
   "gv": "4",
   "id": "58bfaebcd73408ce4f4f23e4",
   "url": "/Shuliyey",
   "username": "Shuliyey",
   "v": 3
  },
  "html": "anyone working on fixing the documentation error i found?",
  "id": "5a8671ed10f501211aee68f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-02-16T05:53:49.867Z",
  "text": "anyone working on fixing the documentation error i found?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Shuliyey",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4773348?v=4&s=60",
   "displayName": "\u53f6\u6cfd\u5b87",
   "gv": "4",
   "id": "58bfaebcd73408ce4f4f23e4",
   "url": "/Shuliyey",
   "username": "Shuliyey",
   "v": 3
  },
  "html": "or is aws going to support longer dbclusteridentifier string soon",
  "id": "5a86720910f501211aee6953",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-02-16T05:54:17.371Z",
  "text": "or is aws going to support longer dbclusteridentifier string soon",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Yea, this gitter is still active :). ",
  "id": "5a8681bfda468f7539f17b43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-02-16T07:01:19.519Z",
  "text": "Yea, this gitter is still active :). ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Shuliyey\" class=\"mention\">@Shuliyey</span>, thank you for reporting that doc issue. Can you please forward that issue <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=60\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">here</a>?",
  "id": "5a875b52a2194eb80d71b708",
  "issues": [],
  "mentions": [
   {
    "screenName": "Shuliyey",
    "userId": "58bfaebcd73408ce4f4f23e4",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2018-02-16T22:29:38.049Z",
  "text": "@Shuliyey, thank you for reporting that doc issue. Can you please forward that issue [here](https://forums.aws.amazon.com/forum.jspa?forumID=60)?",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=60"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/sjeandeaux",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8013645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8013645?v=4&s=60",
   "displayName": "Stephane Jeandeaux",
   "gv": "4",
   "id": "5a8ae463d73408ce4f8dcb77",
   "url": "/sjeandeaux",
   "username": "sjeandeaux",
   "v": 2
  },
  "html": "Hi, I would like to know if we need to play with GOMAXPROCS?",
  "id": "5a8ae49735dd17022ec612e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-02-19T14:52:07.647Z",
  "text": "Hi, I would like to know if we need to play with GOMAXPROCS?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"sjeandeaux\" class=\"mention\">@sjeandeaux</span>, naw you don&#39;t need to set <code>GOMAXPROCS</code>. I noticed you opened a github issue. Is this pertaining to that same issue? Because if so, are you seeing something in the service that is leading you to believe you need to set <code>GOMAXPROCS</code>?",
  "id": "5a8b134e6fba1a703a72db1b",
  "issues": [],
  "mentions": [
   {
    "screenName": "sjeandeaux",
    "userId": "5a8ae463d73408ce4f8dcb77",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2018-02-19T18:11:26.939Z",
  "text": "@sjeandeaux, naw you don't need to set `GOMAXPROCS`. I noticed you opened a github issue. Is this pertaining to that same issue? Because if so, are you seeing something in the service that is leading you to believe you need to set `GOMAXPROCS`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/sjeandeaux",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8013645?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8013645?v=4&s=60",
   "displayName": "Stephane Jeandeaux",
   "gv": "4",
   "id": "5a8ae463d73408ce4f8dcb77",
   "url": "/sjeandeaux",
   "username": "sjeandeaux",
   "v": 2
  },
  "html": "thanks for your answer <span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> ",
  "id": "5a8b24d9a2194eb80d86a2d1",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2018-02-19T19:26:17.713Z",
  "text": "thanks for your answer @xibz ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/prats226",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4567874?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4567874?v=4&s=60",
   "displayName": "Prathamesh Juvatkar",
   "gv": "4",
   "id": "5a8ba5f9d73408ce4f8def72",
   "url": "/prats226",
   "username": "prats226",
   "v": 3
  },
  "html": "Hey guys, I wanted to use AWS Batch to run long running processes. I wanted to host tensorflow serving on GPU instances which I can then use as managed API servers. In Batch API, I could not find a way to get Public IP of instance or some way to call container service and wondering if its possible to use Batch for this use case.",
  "id": "5a8e47196fba1a703a84f855",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-02-22T04:29:13.257Z",
  "text": "Hey guys, I wanted to use AWS Batch to run long running processes. I wanted to host tensorflow serving on GPU instances which I can then use as managed API servers. In Batch API, I could not find a way to get Public IP of instance or some way to call container service and wondering if its possible to use Batch for this use case.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Abdul2",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9384464?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9384464?v=4&s=60",
   "displayName": "abdul abdi",
   "gv": "4",
   "id": "59608da3d73408ce4f6c2e9c",
   "url": "/Abdul2",
   "username": "Abdul2",
   "v": 2
  },
  "html": "hey ... i am trying to move fast on using GO SDK  and Cost Explorer  and will be great if  someone out there to point me towards sample code ",
  "id": "5a909969c3c5f8b90df97061",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-02-23T22:44:57.332Z",
  "text": "hey ... i am trying to move fast on using GO SDK  and Cost Explorer  and will be great if  someone out there to point me towards sample code ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Abdul2\" class=\"mention\">@Abdul2</span> - What is it you are trying to do? It looks like there is no examples for that service",
  "id": "5a9099ed6f8b4b9946b425d0",
  "issues": [],
  "mentions": [
   {
    "screenName": "Abdul2",
    "userId": "59608da3d73408ce4f6c2e9c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2018-02-23T22:47:09.882Z",
  "text": "@Abdul2 - What is it you are trying to do? It looks like there is no examples for that service",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Abdul2",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9384464?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9384464?v=4&s=60",
   "displayName": "abdul abdi",
   "gv": "4",
   "id": "59608da3d73408ce4f6c2e9c",
   "url": "/Abdul2",
   "username": "Abdul2",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> trying to extract relevant data from billing and to display them on a dashboard on a regular basis",
  "id": "5a90f5b76f8b4b9946b58f32",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2018-02-24T05:18:47.388Z",
  "text": "@xibz trying to extract relevant data from billing and to display them on a dashboard on a regular basis",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"prats226\" class=\"mention\">@prats226</span>  Have you looked at TensorFlow on AWS, <a href=\"https://aws.amazon.com/tensorflow/?\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://aws.amazon.com/tensorflow/?</a> ",
  "id": "5a942e10e4ff28713acba860",
  "issues": [],
  "mentions": [
   {
    "screenName": "prats226",
    "userId": "5a8ba5f9d73408ce4f8def72",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2018-02-26T15:56:00.915Z",
  "text": "@prats226  Have you looked at TensorFlow on AWS, https://aws.amazon.com/tensorflow/? ",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/tensorflow/?"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/MedLexAI",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/35896771?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/35896771?v=4&s=60",
   "displayName": "MedLexAI",
   "gv": "4",
   "id": "5a9a95a0d73408ce4f8fb11c",
   "url": "/MedLexAI",
   "username": "MedLexAI"
  },
  "html": "Hello. I am looking for some Golang examples for launching Fargate task definitions using the SDK. Does such a thing exist?",
  "id": "5a9a95d7458cbde557ee3937",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-03-03T12:32:23.923Z",
  "text": "Hello. I am looking for some Golang examples for launching Fargate task definitions using the SDK. Does such a thing exist?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"MedLexAI\" class=\"mention\">@MedLexAI</span> You might have luck searching/asking on StackOverflow with the #aws tag.",
  "id": "5a9d7c3a35dd17022e242269",
  "issues": [],
  "mentions": [
   {
    "screenName": "MedLexAI",
    "userId": "5a9a95a0d73408ce4f8fb11c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2018-03-05T17:19:54.776Z",
  "text": "@MedLexAI You might have luck searching/asking on StackOverflow with the #aws tag.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/tomvachon",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/331845?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/331845?v=4&s=60",
   "displayName": "Thomas Vachon",
   "gv": "4",
   "id": "529c6b70ed5ab0b3bf04d628",
   "url": "/tomvachon",
   "username": "tomvachon",
   "v": 5
  },
  "html": "Hey all, Im a bit of an Golang idiot, so bare with me if this is simple, but I am trying to iterate over Glue. GetClassifierOutput and they are nested inside the Classifier type.  Each classifier type could be one of N objects.  As a result, I don&#39;t have a clean way to grab the name of any of them without stacktrace-ing... Orginally i was going to do <a href=\"https://gist.github.com/tomvachon/35a481b7b418daf63e80009d648807bb#file-gistfile1-txt-L46\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/tomvachon/35a481b7b418daf63e80009d648807bb#file-gistfile1-txt-L46</a> but its no luck",
  "id": "5a9ea6c3888332ee3a069db4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-03-06T14:33:39.574Z",
  "text": "Hey all, Im a bit of an Golang idiot, so bare with me if this is simple, but I am trying to iterate over Glue. GetClassifierOutput and they are nested inside the Classifier type.  Each classifier type could be one of N objects.  As a result, I don't have a clean way to grab the name of any of them without stacktrace-ing... Orginally i was going to do https://gist.github.com/tomvachon/35a481b7b418daf63e80009d648807bb#file-gistfile1-txt-L46 but its no luck",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/tomvachon/35a481b7b418daf63e80009d648807bb#file-gistfile1-txt-L46"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/tomvachon",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/331845?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/331845?v=4&s=60",
   "displayName": "Thomas Vachon",
   "gv": "4",
   "id": "529c6b70ed5ab0b3bf04d628",
   "url": "/tomvachon",
   "username": "tomvachon",
   "v": 5
  },
  "html": "any one can point a Golang novice in the right direction?",
  "id": "5a9ea6d0888332ee3a069ded",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-03-06T14:33:52.655Z",
  "text": "any one can point a Golang novice in the right direction?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/tomvachon",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/331845?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/331845?v=4&s=60",
   "displayName": "Thomas Vachon",
   "gv": "4",
   "id": "529c6b70ed5ab0b3bf04d628",
   "url": "/tomvachon",
   "username": "tomvachon",
   "v": 5
  },
  "html": "This is the only service I&#39;ve hit yet like this, so I have nothing to reference unfortunely",
  "id": "5a9ea71e888332ee3a069fd0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-03-06T14:35:10.466Z",
  "text": "This is the only service I've hit yet like this, so I have nothing to reference unfortunely",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/rniedosmialek",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1743627?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1743627?v=4&s=60",
   "displayName": "Robert Niedosmialek",
   "gv": "4",
   "id": "59fb6d14d73408ce4f7ce1d9",
   "url": "/rniedosmialek",
   "username": "rniedosmialek",
   "v": 3
  },
  "html": "<p>Does anyone have any thought as to why pushing to a cloudwatch stream would not show any log entries?  The code  I have in place says everything executed correctly but when I view the stream it is empty. </p><p>var logEntries       = []*cloudwatchlogs.InputLogEvent{}</p><p>func addToLog(message string) {</p><pre><code><span class=\"rule\"><span class=\"attribute\">entry </span>:<span class=\"value\">= &amp;cloudwatchlogs.InputLogEvent{\n    Message: aws.<span class=\"function\">String</span>(message),\n    Timestamp: aws.<span class=\"function\">Int64</span>(time.<span class=\"function\">Now</span>().<span class=\"function\">UTC</span>().<span class=\"function\">Unix</span>()),\n}\n\nlogEntries = <span class=\"function\">append</span>(logEntries, entry)\n\nif VERBOSE {\n    fmt.<span class=\"function\">Println</span>(message)\n}</span></span></code></pre><p>}</p><p>func PutLogEvents () {</p><pre><code>uniqueID, <span class=\"string\">_ :</span>= newUUID()\nuniqueID = strings.Replace(uniqueID, <span class=\"string\">\"-\"</span>, <span class=\"string\">\"\"</span>, -<span class=\"number\">1</span>)\n\n<span class=\"string\">t :</span>= time.Now()\nloc, <span class=\"string\">err :</span>= time.LoadLocation(<span class=\"string\">\"UTC\"</span>)\n\n<span class=\"keyword\">if</span> err != nil {\n    fmt.Println(<span class=\"string\">\"Opps: \"</span>, err)\n}\n\n<span class=\"string\">logStream :</span>= t.In(loc).UTC().Format(<span class=\"string\">\"2006/01/02\"</span>) + <span class=\"string\">\"[$LATEST]\"</span> + uniqueID\n\n<span class=\"comment\">// Load session from shared config</span>\n<span class=\"string\">sess :</span>= session.Must(session.NewSessionWithOptions(session.Options{\n<span class=\"label\">    SharedConfigState:</span> session.SharedConfigEnable,\n}))\n\n<span class=\"comment\">// Set a default region to suffice sdk</span>\nsess.Config.Region = aws.String(AWS_DEFAULT_REGION)\n\n<span class=\"string\">svc :</span>=  cloudwatchlogs.New(sess)\n\n<span class=\"string\">params :</span>= &amp;cloudwatchlogs.PutLogEventsInput{\n<span class=\"label\">    LogEvents:</span>     logEntries,\n<span class=\"label\">    LogGroupName:</span>  aws.String(AWS_CW_GROUP_NAME),\n<span class=\"label\">    LogStreamName:</span> aws.String(logStream),\n}\n\nresp, <span class=\"string\">err :</span>= svc.PutLogEvents(params)\n\n<span class=\"keyword\">if</span> err != nil {\n    <span class=\"keyword\">if</span> aerr, <span class=\"string\">ok :</span>= err.(awserr.Error); ok {\n        <span class=\"keyword\">switch</span> aerr.Code() {\n        <span class=\"keyword\">case</span> cloudwatchlogs.<span class=\"string\">ErrCodeInvalidParameterException:</span>\n            fmt.Println(<span class=\"string\">\"A parameter is specified incorrectly.\"</span>)\n        <span class=\"keyword\">case</span> cloudwatchlogs.<span class=\"string\">ErrCodeInvalidSequenceTokenException:</span>\n            fmt.Println(<span class=\"string\">\"The sequence token is not valid.\"</span>)\n        <span class=\"keyword\">case</span> cloudwatchlogs.<span class=\"string\">ErrCodeDataAlreadyAcceptedException:</span>\n            fmt.Println(<span class=\"string\">\"The event was already logged.\"</span>)\n        <span class=\"keyword\">case</span> cloudwatchlogs.<span class=\"string\">ErrCodeResourceNotFoundException:</span>\n            fmt.Println(<span class=\"string\">\"The specified resource does not exist.\"</span>)\n        <span class=\"keyword\">case</span> cloudwatchlogs.<span class=\"string\">ErrCodeServiceUnavailableException:</span>\n            fmt.Println(<span class=\"string\">\"The service cannot complete the request.\"</span>)\n<span class=\"label\">        default:</span>\n            fmt.Println(err.Error())\n        }\n    }\n}\n\nlogEntries       = []*cloudwatchlogs.InputLogEvent{}\n\nfmt.Println(resp.String())</code></pre><p>}</p>",
  "id": "5a9eb2820a1614b712eb2aa2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-03-06T15:23:46.406Z",
  "text": "Does anyone have any thought as to why pushing to a cloudwatch stream would not show any log entries?  The code  I have in place says everything executed correctly but when I view the stream it is empty. \n\nvar logEntries \t  = []*cloudwatchlogs.InputLogEvent{}\n\nfunc addToLog(message string) {\n\n\tentry := &cloudwatchlogs.InputLogEvent{\n\t\tMessage: aws.String(message),\n\t\tTimestamp: aws.Int64(time.Now().UTC().Unix()),\n\t}\n\n\tlogEntries = append(logEntries, entry)\n\n\tif VERBOSE {\n\t\tfmt.Println(message)\n\t}\n\n}\n\nfunc PutLogEvents () {\n\n\tuniqueID, _ := newUUID()\n\tuniqueID = strings.Replace(uniqueID, \"-\", \"\", -1)\n\n\tt := time.Now()\n\tloc, err := time.LoadLocation(\"UTC\")\n\n\tif err != nil {\n\t\tfmt.Println(\"Opps: \", err)\n\t}\n\n\tlogStream := t.In(loc).UTC().Format(\"2006/01/02\") + \"[$LATEST]\" + uniqueID\n\n\t// Load session from shared config\n\tsess := session.Must(session.NewSessionWithOptions(session.Options{\n\t\tSharedConfigState: session.SharedConfigEnable,\n\t}))\n\n\t// Set a default region to suffice sdk\n\tsess.Config.Region = aws.String(AWS_DEFAULT_REGION)\n\n\tsvc :=  cloudwatchlogs.New(sess)\n\n\tparams := &cloudwatchlogs.PutLogEventsInput{\n\t\tLogEvents:     logEntries,\n\t\tLogGroupName:  aws.String(AWS_CW_GROUP_NAME),\n\t\tLogStreamName: aws.String(logStream),\n\t}\n\n\tresp, err := svc.PutLogEvents(params)\n\n\tif err != nil {\n\t\tif aerr, ok := err.(awserr.Error); ok {\n\t\t\tswitch aerr.Code() {\n\t\t\tcase cloudwatchlogs.ErrCodeInvalidParameterException:\n\t\t\t\tfmt.Println(\"A parameter is specified incorrectly.\")\n\t\t\tcase cloudwatchlogs.ErrCodeInvalidSequenceTokenException:\n\t\t\t\tfmt.Println(\"The sequence token is not valid.\")\n\t\t\tcase cloudwatchlogs.ErrCodeDataAlreadyAcceptedException:\n\t\t\t\tfmt.Println(\"The event was already logged.\")\n\t\t\tcase cloudwatchlogs.ErrCodeResourceNotFoundException:\n\t\t\t\tfmt.Println(\"The specified resource does not exist.\")\n\t\t\tcase cloudwatchlogs.ErrCodeServiceUnavailableException:\n\t\t\t\tfmt.Println(\"The service cannot complete the request.\")\n\t\t\tdefault:\n\t\t\t\tfmt.Println(err.Error())\n\t\t\t}\n\t\t}\n\t}\n\n\tlogEntries \t  = []*cloudwatchlogs.InputLogEvent{}\n\n\tfmt.Println(resp.String())\n\n}\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/apjneeraj_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/430681770619445248/53JH8ysW.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/430681770619445248/53JH8ysW_bigger.jpeg",
   "displayName": "Neeraj",
   "id": "59e6fde0d73408ce4f7a862b",
   "url": "/apjneeraj_twitter",
   "username": "apjneeraj_twitter"
  },
  "html": "Hi, is there any way to export more variables from a terraform module which are not already exported in output.tf. ",
  "id": "5aa20dca6fba1a703ae62a80",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-03-09T04:30:02.477Z",
  "text": "Hi, is there any way to export more variables from a terraform module which are not already exported in output.tf. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/reedobrien",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/45174?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/45174?v=4&s=60",
   "displayName": "Reed O'Brien",
   "gv": "4",
   "id": "563b986916b6c7089cb99d62",
   "url": "/reedobrien",
   "username": "reedobrien",
   "v": 8
  },
  "html": "write a module that exports the values you want to export as an output?",
  "id": "5aa20e3ff3f6d24c6853bf5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-03-09T04:31:59.973Z",
  "text": "write a module that exports the values you want to export as an output?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/apjneeraj_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/430681770619445248/53JH8ysW.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/430681770619445248/53JH8ysW_bigger.jpeg",
   "displayName": "Neeraj",
   "id": "59e6fde0d73408ce4f7a862b",
   "url": "/apjneeraj_twitter",
   "username": "apjneeraj_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"reedobrien\" class=\"mention\">@reedobrien</span> thanks Reed\u2026 I tried that and though it works for a specific environment but as i have multiple environments, so module creates different resource names according to environment, so thinking if any script or conditional statement can be run inside terraform .. Also sorry for posting in a wrong channel :)",
  "id": "5aa20fdf6f8b4b994606d36d",
  "issues": [],
  "mentions": [
   {
    "screenName": "reedobrien",
    "userId": "563b986916b6c7089cb99d62",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2018-03-09T04:38:55.005Z",
  "text": "@reedobrien thanks Reed\u2026 I tried that and though it works for a specific environment but as i have multiple environments, so module creates different resource names according to environment, so thinking if any script or conditional statement can be run inside terraform .. Also sorry for posting in a wrong channel :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/reedobrien",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/45174?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/45174?v=4&s=60",
   "displayName": "Reed O'Brien",
   "gv": "4",
   "id": "563b986916b6c7089cb99d62",
   "url": "/reedobrien",
   "username": "reedobrien",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"apjneeraj_twitter\" class=\"mention\">@apjneeraj_twitter</span> like so? <a href=\"https://www.terraform.io/docs/providers/terraform/d/remote_state.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.terraform.io/docs/providers/terraform/d/remote_state.html</a> apologies for continuing the convo in the wrong channel",
  "id": "5aa210ca6fba1a703ae633d0",
  "issues": [],
  "mentions": [
   {
    "screenName": "apjneeraj_twitter",
    "userId": "59e6fde0d73408ce4f7a862b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2018-03-09T04:42:50.162Z",
  "text": "@apjneeraj_twitter like so? https://www.terraform.io/docs/providers/terraform/d/remote_state.html apologies for continuing the convo in the wrong channel",
  "unread": false,
  "urls": [
   {
    "url": "https://www.terraform.io/docs/providers/terraform/d/remote_state.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/apjneeraj_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/430681770619445248/53JH8ysW.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/430681770619445248/53JH8ysW_bigger.jpeg",
   "displayName": "Neeraj",
   "id": "59e6fde0d73408ce4f7a862b",
   "url": "/apjneeraj_twitter",
   "username": "apjneeraj_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"reedobrien\" class=\"mention\">@reedobrien</span> thanks much.. let me try this one ...",
  "id": "5aa2140bc3c5f8b90d4e7649",
  "issues": [],
  "mentions": [
   {
    "screenName": "reedobrien",
    "userId": "563b986916b6c7089cb99d62",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2018-03-09T04:56:43.420Z",
  "text": "@reedobrien thanks much.. let me try this one ...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/reedobrien",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/45174?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/45174?v=4&s=60",
   "displayName": "Reed O'Brien",
   "gv": "4",
   "id": "563b986916b6c7089cb99d62",
   "url": "/reedobrien",
   "username": "reedobrien",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"apjneeraj_twitter\" class=\"mention\">@apjneeraj_twitter</span> np, good luck",
  "id": "5aa21432f3f6d24c6853d412",
  "issues": [],
  "mentions": [
   {
    "screenName": "apjneeraj_twitter",
    "userId": "59e6fde0d73408ce4f7a862b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2018-03-09T04:57:22.480Z",
  "text": "@apjneeraj_twitter np, good luck",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/rniedosmialek",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1743627?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1743627?v=4&s=60",
   "displayName": "Robert Niedosmialek",
   "gv": "4",
   "id": "59fb6d14d73408ce4f7ce1d9",
   "url": "/rniedosmialek",
   "username": "rniedosmialek",
   "v": 3
  },
  "html": "Any one have any suggestions as to why I push content to a stream and no error are returned but yet when I look at the group/stream there is no content at all?",
  "id": "5aa29d1c0a1614b712feaa83",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-03-09T14:41:32.850Z",
  "text": "Any one have any suggestions as to why I push content to a stream and no error are returned but yet when I look at the group/stream there is no content at all?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/guangbaowan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=60",
   "displayName": "guangbaowan",
   "gv": "4",
   "id": "5aaa42b4d73408ce4f918238",
   "url": "/guangbaowan",
   "username": "guangbaowan"
  },
  "html": "Hi guys ",
  "id": "5aaa42dbe4d1c6360401232b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-03-15T09:54:35.213Z",
  "text": "Hi guys ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/guangbaowan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=60",
   "displayName": "guangbaowan",
   "gv": "4",
   "id": "5aaa42b4d73408ce4f918238",
   "url": "/guangbaowan",
   "username": "guangbaowan"
  },
  "html": "anyone here ?",
  "id": "5aaa42df0a1614b7122169ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-03-15T09:54:39.935Z",
  "text": "anyone here ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "Does anyone have any idea how to stream the contents of a s3 object without downloading it? I would like to read a s3object without downloading it",
  "id": "5aaa6152e4d1c6360401c092",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-03-15T12:04:34.061Z",
  "text": "Does anyone have any idea how to stream the contents of a s3 object without downloading it? I would like to read a s3object without downloading it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/guangbaowan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=60",
   "displayName": "guangbaowan",
   "gv": "4",
   "id": "5aaa42b4d73408ce4f918238",
   "url": "/guangbaowan",
   "username": "guangbaowan"
  },
  "html": "add a Range: bytes=0-NN header to your S3 request",
  "id": "5aaa61bea60157d62fed6a36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-03-15T12:06:22.291Z",
  "text": "add a Range: bytes=0-NN header to your S3 request",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "Can you provide me some sample? ",
  "id": "5aaa61d98f1c77ef3ac318f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-03-15T12:06:49.269Z",
  "text": "Can you provide me some sample? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/guangbaowan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=60",
   "displayName": "guangbaowan",
   "gv": "4",
   "id": "5aaa42b4d73408ce4f918238",
   "url": "/guangbaowan",
   "username": "guangbaowan"
  },
  "html": "aws s3api get-object --bucket bucket --key path/file file --range bytes=1000-2000",
  "id": "5aaa622e6f8b4b99462d19cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-03-15T12:08:14.107Z",
  "text": "aws s3api get-object --bucket bucket --key path/file file --range bytes=1000-2000",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/guangbaowan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=60",
   "displayName": "guangbaowan",
   "gv": "4",
   "id": "5aaa42b4d73408ce4f918238",
   "url": "/guangbaowan",
   "username": "guangbaowan"
  },
  "html": "no code ,bro",
  "id": "5aaa6235e4ff28713a35cd8d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-03-15T12:08:21.831Z",
  "text": "no code ,bro",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/guangbaowan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=60",
   "displayName": "guangbaowan",
   "gv": "4",
   "id": "5aaa42b4d73408ce4f918238",
   "url": "/guangbaowan",
   "username": "guangbaowan"
  },
  "html": "Hello ,  how can i use list in dynanodb ?",
  "id": "5aab3e02e4ff28713a3a173b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-03-16T03:46:10.728Z",
  "text": "Hello ,  how can i use list in dynanodb ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/guangbaowan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=60",
   "displayName": "guangbaowan",
   "gv": "4",
   "id": "5aaa42b4d73408ce4f918238",
   "url": "/guangbaowan",
   "username": "guangbaowan"
  },
  "html": "cannot use ss (type []<em>string) as type []</em>dynamodb.AttributeValue in field value",
  "id": "5aab3e04e4ff28713a3a1740",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-03-16T03:46:12.004Z",
  "text": "cannot use ss (type []*string) as type []*dynamodb.AttributeValue in field value",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/guangbaowan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=60",
   "displayName": "guangbaowan",
   "gv": "4",
   "id": "5aaa42b4d73408ce4f918238",
   "url": "/guangbaowan",
   "username": "guangbaowan"
  },
  "html": "found this erro",
  "id": "5aab3e0a0a1614b71226351c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-03-16T03:46:18.156Z",
  "text": "found this erro",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"linuxbsdfreak\" class=\"mention\">@linuxbsdfreak</span> the SDK provides an io.Reader that allows you stream the object&#39;s content to another tool.  You can use the <code>GetObject</code> API operation If you&#39;re looking for only grabbing a slice of the object you can use the <code>Range</code> field in <code>GetObjectInput</code> with a value like to what <span data-link-type=\"mention\" data-screen-name=\"guangbaowan\" class=\"mention\">@guangbaowan</span>  suggested.",
  "id": "5aabf9faa60157d62ff56802",
  "issues": [],
  "mentions": [
   {
    "screenName": "linuxbsdfreak",
    "userId": "55896aba15522ed4b3e2803d",
    "userIds": []
   },
   {
    "screenName": "guangbaowan",
    "userId": "5aaa42b4d73408ce4f918238",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2018-03-16T17:08:10.343Z",
  "text": "@linuxbsdfreak the SDK provides an io.Reader that allows you stream the object's content to another tool.  You can use the `GetObject` API operation If you're looking for only grabbing a slice of the object you can use the `Range` field in `GetObjectInput` with a value like to what @guangbaowan  suggested.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/guangbaowan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=60",
   "displayName": "guangbaowan",
   "gv": "4",
   "id": "5aaa42b4d73408ce4f918238",
   "url": "/guangbaowan",
   "username": "guangbaowan"
  },
  "html": "?",
  "id": "5ab0c905458cbde557557aa7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-03-20T08:40:37.343Z",
  "text": "?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/guangbaowan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=60",
   "displayName": "guangbaowan",
   "gv": "4",
   "id": "5aaa42b4d73408ce4f918238",
   "url": "/guangbaowan",
   "username": "guangbaowan"
  },
  "html": "hello, any one use aws network load balancing &gt;",
  "id": "5ab0c90527c509a7748245f4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-03-20T08:40:37.344Z",
  "text": "hello, any one use aws network load balancing >",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/guangbaowan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=60",
   "displayName": "guangbaowan",
   "gv": "4",
   "id": "5aaa42b4d73408ce4f918238",
   "url": "/guangbaowan",
   "username": "guangbaowan"
  },
  "html": "I use the thrift as the backend , and always got timeout ",
  "id": "5ab0c90d27c509a77482463e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-03-20T08:40:45.181Z",
  "text": "I use the thrift as the backend , and always got timeout ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/guangbaowan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=60",
   "displayName": "guangbaowan",
   "gv": "4",
   "id": "5aaa42b4d73408ce4f918238",
   "url": "/guangbaowan",
   "username": "guangbaowan"
  },
  "html": "cant figure out why ",
  "id": "5ab0c91227c509a774824656",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-03-20T08:40:50.361Z",
  "text": "cant figure out why ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/guangbaowan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25094780?v=4&s=60",
   "displayName": "guangbaowan",
   "gv": "4",
   "id": "5aaa42b4d73408ce4f918238",
   "url": "/guangbaowan",
   "username": "guangbaowan"
  },
  "html": "or who know how to debug this issue ?",
  "id": "5ab0c91be4d1c636041d8f85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-03-20T08:40:59.470Z",
  "text": "or who know how to debug this issue ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/DivyaPrakashMall",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/37333347?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/37333347?v=4&s=60",
   "displayName": "DivyaPrakashMall",
   "gv": "4",
   "id": "5ab0e84dd73408ce4f9238bb",
   "url": "/DivyaPrakashMall",
   "username": "DivyaPrakashMall"
  },
  "html": "hi, how to create a lambda function for create Forgot Password",
  "id": "5ab0e8ab6f8b4b994649bba7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-03-20T10:55:39.205Z",
  "text": "hi, how to create a lambda function for create Forgot Password",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/tomvachon",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/331845?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/331845?v=4&s=60",
   "displayName": "Thomas Vachon",
   "gv": "4",
   "id": "529c6b70ed5ab0b3bf04d628",
   "url": "/tomvachon",
   "username": "tomvachon",
   "v": 5
  },
  "html": "Does anyone have an easy way to change a credential scope outside of fixing the endpoints? See <span data-link-type=\"issue\" data-issue=\"1850\" class=\"issue\">#1850</span> for a use case problem",
  "id": "5ab11176e4ff28713a53a854",
  "issues": [
   {
    "number": "1850"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-03-20T13:49:42.070Z",
  "text": "Does anyone have an easy way to change a credential scope outside of fixing the endpoints? See #1850 for a use case problem",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-03-20T13:49:55.513Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/tomvachon",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/331845?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/331845?v=4&s=60",
   "displayName": "Thomas Vachon",
   "gv": "4",
   "id": "529c6b70ed5ab0b3bf04d628",
   "url": "/tomvachon",
   "username": "tomvachon",
   "v": 5
  },
  "html": "i have about 3-5 other services which are also broken",
  "id": "5ab1117fe4ff28713a53a883",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-03-20T13:49:51.946Z",
  "text": "i have about 3-5 other services which are also broken",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ranjan008",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=60",
   "displayName": "Abhishek Ranjan",
   "gv": "4",
   "id": "5792187b40f3a6eec05c013d",
   "url": "/ranjan008",
   "username": "ranjan008",
   "v": 10
  },
  "html": "does go-sdk have support for ecs operations",
  "id": "5ab2325ce4d1c636042489ee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-03-21T10:22:20.846Z",
  "text": "does go-sdk have support for ecs operations",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ranjan008",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=60",
   "displayName": "Abhishek Ranjan",
   "gv": "4",
   "id": "5792187b40f3a6eec05c013d",
   "url": "/ranjan008",
   "username": "ranjan008",
   "v": 10
  },
  "html": "?",
  "id": "5ab2326135dd17022e83d5ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-03-21T10:22:25.096Z",
  "text": "?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ranjan008\" class=\"mention\">@ranjan008</span> yes the SDK support ECS service APIs,  check out the <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/ecs/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/services/ecs</a> package",
  "id": "5ab28a0927c509a7748b0c83",
  "issues": [],
  "mentions": [
   {
    "screenName": "ranjan008",
    "userId": "5792187b40f3a6eec05c013d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2018-03-21T16:36:25.858Z",
  "text": "@ranjan008 yes the SDK support ECS service APIs,  check out the [github.com/aws/aws-sdk-go/services/ecs](https://docs.aws.amazon.com/sdk-for-go/api/service/ecs/) package",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/ecs/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"tomvachon\" class=\"mention\">@tomvachon</span> the best way to workaround this issue is to implement a <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/aws/endpoints/#hdr-Using_Custom_Endpoints\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">custom endpoint</a>. In addition you can try setting the service client&#39;s <code>SigningName</code> directly on the client value.  e.g<pre><code class=\"go\">svc := mediastoredata.New(sess)\nsvc.ClientInfo.SigningName = <span class=\"string\">\"mediastore\"</span></code></pre>",
  "id": "5ab28afc458cbde5575e6472",
  "issues": [],
  "mentions": [
   {
    "screenName": "tomvachon",
    "userId": "529c6b70ed5ab0b3bf04d628",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2018-03-21T16:40:28.154Z",
  "text": "@tomvachon the best way to workaround this issue is to implement a [custom endpoint](https://docs.aws.amazon.com/sdk-for-go/api/aws/endpoints/#hdr-Using_Custom_Endpoints). In addition you can try setting the service client's `SigningName` directly on the client value.  e.g\n\n```go\nsvc := mediastoredata.New(sess)\nsvc.ClientInfo.SigningName = \"mediastore\"\n```",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/aws/endpoints/#hdr-Using_Custom_Endpoints"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I&#39;ll update the Github issue you linked with tis info also while we work to source the correct metadata from the service teams for these services.",
  "id": "5ab28b16458cbde5575e64e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-03-21T16:40:54.135Z",
  "text": "I'll update the Github issue you linked with tis info also while we work to source the correct metadata from the service teams for these services.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ranjan008",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=60",
   "displayName": "Abhishek Ranjan",
   "gv": "4",
   "id": "5792187b40f3a6eec05c013d",
   "url": "/ranjan008",
   "username": "ranjan008",
   "v": 10
  },
  "html": "how can I upload a folder as a bucket object",
  "id": "5ab35788c3c5f8b90d9e2d35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-03-22T07:13:12.013Z",
  "text": "how can I upload a folder as a bucket object",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "You can&#39;t, you will have to recursively traverse it and upload each of the files it contains ",
  "id": "5ab36810c3c5f8b90d9e7b85",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-03-22T08:23:44.252Z",
  "text": "You can't, you will have to recursively traverse it and upload each of the files it contains ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Or you can archive it and upload the tarball ",
  "id": "5ab3685d458cbde557624373",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-03-22T08:25:01.701Z",
  "text": "Or you can archive it and upload the tarball ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ranjan008",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=60",
   "displayName": "Abhishek Ranjan",
   "gv": "4",
   "id": "5792187b40f3a6eec05c013d",
   "url": "/ranjan008",
   "username": "ranjan008",
   "v": 10
  },
  "html": "so there is no method provided in the sdk for recursively uploading a folder to a bucket?",
  "id": "5ab36f41e4ff28713a5f067a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-03-22T08:54:25.722Z",
  "text": "so there is no method provided in the sdk for recursively uploading a folder to a bucket?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ranjan008\" class=\"mention\">@ranjan008</span> correct, the SDK does not include a filesystem sync functionality. You could implement this functionality by combinding Go&#39;s <code>filepath.Walk</code>with the SDK&#39;s Upload Manager&#39;s <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#Uploader.UploadWithIterator\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">UploadWithIterator</a>. Basically you can define a <code>BatchUploadIterator</code> that sources its set of objects to upload from a source you define such as filepath, or a defined list of files.",
  "id": "5ab3dd7f2b9dfdbc3a0f2d3f",
  "issues": [],
  "mentions": [
   {
    "screenName": "ranjan008",
    "userId": "5792187b40f3a6eec05c013d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2018-03-22T16:44:47.759Z",
  "text": "@ranjan008 correct, the SDK does not include a filesystem sync functionality. You could implement this functionality by combinding Go's `filepath.Walk`with the SDK's Upload Manager's [UploadWithIterator](https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#Uploader.UploadWithIterator). Basically you can define a `BatchUploadIterator` that sources its set of objects to upload from a source you define such as filepath, or a defined list of files.",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#Uploader.UploadWithIterator"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "With that said the AWS CLI does include a <code>sync</code> command which may perform the feature you&#39;re looking for.",
  "id": "5ab3ddacbb1018b37a13a87f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-03-22T16:45:32.013Z",
  "text": "With that said the AWS CLI does include a `sync` command which may perform the feature you're looking for.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/craftsource",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/939498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/939498?v=4&s=60",
   "displayName": "Todd Jason Lehn",
   "gv": "4",
   "id": "5ab3ef6bd73408ce4f92b2e5",
   "url": "/craftsource",
   "username": "craftsource",
   "v": 4
  },
  "html": "Any good resources/examples for Dynamodb queries? I&#39;m new to the service and am struggling a bit with the API documentation. Thanks!",
  "id": "5ab3f137e4ff28713a61de61",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-03-22T18:08:55.887Z",
  "text": "Any good resources/examples for Dynamodb queries? I'm new to the service and am struggling a bit with the API documentation. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/briansorahan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/544737?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/544737?v=4&s=60",
   "displayName": "Brian Sorahan",
   "gv": "4",
   "id": "5797c48340f3a6eec05c97e1",
   "url": "/briansorahan",
   "username": "briansorahan",
   "v": 2
  },
  "html": "Hi all, I have a question about the s3 CopyObject method",
  "id": "5ab3f968bb1018b37a143d9b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-03-22T18:43:52.522Z",
  "text": "Hi all, I have a question about the s3 CopyObject method",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/briansorahan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/544737?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/544737?v=4&s=60",
   "displayName": "Brian Sorahan",
   "gv": "4",
   "id": "5797c48340f3a6eec05c97e1",
   "url": "/briansorahan",
   "username": "briansorahan",
   "v": 2
  },
  "html": "<pre><code>There are two opportunities <span class=\"keyword\">for</span> a <span class=\"keyword\">copy</span> request <span class=\"keyword\">to</span> <span class=\"constant\">return</span> an <span class=\"keyword\">error</span>. One can occur when Amazon S3 receives <span class=\"keyword\">the</span> <span class=\"keyword\">copy</span> request <span class=\"keyword\">and</span> <span class=\"keyword\">the</span> other can occur <span class=\"keyword\">while</span> Amazon S3 <span class=\"keyword\">is</span> copying <span class=\"keyword\">the</span> files. If <span class=\"keyword\">the</span> <span class=\"keyword\">error</span> occurs <span class=\"keyword\">before</span> <span class=\"keyword\">the</span> <span class=\"keyword\">copy</span> operation starts, you receive a standard Amazon S3 <span class=\"keyword\">error</span>. If <span class=\"keyword\">the</span> <span class=\"keyword\">error</span> occurs during <span class=\"keyword\">the</span> <span class=\"keyword\">copy</span> operation, <span class=\"keyword\">the</span> <span class=\"keyword\">error</span> response <span class=\"keyword\">is</span> embedded <span class=\"keyword\">in</span> <span class=\"keyword\">the</span> <span class=\"number\">200</span> OK response. This means <span class=\"keyword\">that</span> a <span class=\"number\">200</span> OK response can <span class=\"keyword\">contain</span> either a success <span class=\"keyword\">or</span> an <span class=\"keyword\">error</span>. Make sure <span class=\"keyword\">to</span> design your <span class=\"type\">application</span> <span class=\"keyword\">to</span> parse <span class=\"keyword\">the</span> <span class=\"property\">contents</span> <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> response <span class=\"keyword\">and</span> handle <span class=\"keyword\">it</span> appropriately.</code></pre>",
  "id": "5ab3f9d72b9dfdbc3a0fcacb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-03-22T18:45:43.513Z",
  "text": "```\nThere are two opportunities for a copy request to return an error. One can occur when Amazon S3 receives the copy request and the other can occur while Amazon S3 is copying the files. If the error occurs before the copy operation starts, you receive a standard Amazon S3 error. If the error occurs during the copy operation, the error response is embedded in the 200 OK response. This means that a 200 OK response can contain either a success or an error. Make sure to design your application to parse the contents of the response and handle it appropriately.\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/briansorahan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/544737?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/544737?v=4&s=60",
   "displayName": "Brian Sorahan",
   "gv": "4",
   "id": "5797c48340f3a6eec05c97e1",
   "url": "/briansorahan",
   "username": "briansorahan",
   "v": 2
  },
  "html": "Does the sdk return a non-nil error in the second case? Anyone know?",
  "id": "5ab3f9ebf3f6d24c68a537ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-03-22T18:46:03.822Z",
  "text": "Does the sdk return a non-nil error in the second case? Anyone know?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ranjan008",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=60",
   "displayName": "Abhishek Ranjan",
   "gv": "4",
   "id": "5792187b40f3a6eec05c013d",
   "url": "/ranjan008",
   "username": "ranjan008",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> aws cli have a s3 cp command with --recursive flag which copies the folder as s3 object however I wanted to do it through my app so I am exploring the same in sdk.",
  "id": "5ab48543fa066c5325603232",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2018-03-23T04:40:35.428Z",
  "text": "@jasdel aws cli have a s3 cp command with --recursive flag which copies the folder as s3 object however I wanted to do it through my app so I am exploring the same in sdk.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/MarkusWendorf",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18446907?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18446907?v=4&s=60",
   "displayName": "MarkusWendorf",
   "gv": "4",
   "id": "5ab50e0dd73408ce4f92d322",
   "url": "/MarkusWendorf",
   "username": "MarkusWendorf",
   "v": 1
  },
  "html": "<p>Is it possible to directly marshal an Item from DynamoDB to a JSON String in the Go SDK?<br>I have some issues with that see here:<br><a href=\"https://stackoverflow.com/questions/49438681/go-aws-marshal-to-json-from-dynamodb-item-omit-null-values\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/questions/49438681/go-aws-marshal-to-json-from-dynamodb-item-omit-null-values</a></p><p>Thank you</p>",
  "id": "5ab50e155f188ccc15eb30e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-03-23T14:24:21.377Z",
  "text": "Is it possible to directly marshal an Item from DynamoDB to a JSON String in the Go SDK?\nI have some issues with that see here:\nhttps://stackoverflow.com/questions/49438681/go-aws-marshal-to-json-from-dynamodb-item-omit-null-values\n\nThank you",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/questions/49438681/go-aws-marshal-to-json-from-dynamodb-item-omit-null-values"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ranjan008",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=60",
   "displayName": "Abhishek Ranjan",
   "gv": "4",
   "id": "5792187b40f3a6eec05c013d",
   "url": "/ranjan008",
   "username": "ranjan008",
   "v": 10
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>  I am trying to create an ec2 instance and then register that to an ecs cluster is there any example like that be and I am trying to achieve this programmatically on a single func call. Is it possible?",
  "id": "5ab5dd8427c509a7749a161b",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2018-03-24T05:09:24.858Z",
  "text": "@jasdel  I am trying to create an ec2 instance and then register that to an ecs cluster is there any example like that be and I am trying to achieve this programmatically on a single func call. Is it possible?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Wphelp98737",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=60",
   "displayName": "Morteza Janjani",
   "gv": "4",
   "id": "586f82b9d73408ce4f41a600",
   "url": "/Wphelp98737",
   "username": "Wphelp98737",
   "v": 15
  },
  "html": "Morteza Janjani",
  "id": "5ab5fefff3f6d24c68ade710",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-03-24T07:32:15.488Z",
  "text": "Morteza Janjani",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Wphelp98737",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=60",
   "displayName": "Morteza Janjani",
   "gv": "4",
   "id": "586f82b9d73408ce4f41a600",
   "url": "/Wphelp98737",
   "username": "Wphelp98737",
   "v": 15
  },
  "html": "\u0628\u062f\u0646\u0628\u0627\u0644 \u06cc\u06a9 \u06a9\u0627\u0631 \u062f\u0631 \u062f\u0646\u06cc\u0627\u06cc \u0645\u062c\u0627\u0632\u06cc",
  "id": "5ab5ff66f3f6d24c68ade82c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-03-24T07:33:58.337Z",
  "text": "\u0628\u062f\u0646\u0628\u0627\u0644 \u06cc\u06a9 \u06a9\u0627\u0631 \u062f\u0631 \u062f\u0646\u06cc\u0627\u06cc \u0645\u062c\u0627\u0632\u06cc",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"tjlehn\" class=\"mention\">@tjlehn</span> Have you seen our example of using the expression builder--<a href=\"https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/dynamo-example-scan-table-item.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/dynamo-example-scan-table-item.html</a>.",
  "id": "5ab962262b9dfdbc3a257e70",
  "issues": [],
  "mentions": [
   {
    "screenName": "tjlehn",
    "userId": "5ab3ef6bd73408ce4f92b2e5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2018-03-26T21:12:06.550Z",
  "text": "@tjlehn Have you seen our example of using the expression builder--https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/dynamo-example-scan-table-item.html.",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/dynamo-example-scan-table-item.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ranjan008",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=60",
   "displayName": "Abhishek Ranjan",
   "gv": "4",
   "id": "5792187b40f3a6eec05c013d",
   "url": "/ranjan008",
   "username": "ranjan008",
   "v": 10
  },
  "html": "while running the task can we override the mountpoint parameter in containeroverride ?\\",
  "id": "5ab9f0107c3a01610d7b2500",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-03-27T07:17:36.965Z",
  "text": "while running the task can we override the mountpoint parameter in containeroverride ?\\",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "Hi. I am trying to run a golang binary using aws-sdk-go under docker. I always get the following Error NoCredentialProviders: no valid providers in chain. Deprecated.  For verbose messaging see aws.Config.CredentialsChainVerboseErrors",
  "id": "5aba08cf5f188ccc15ff29f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-03-27T09:03:11.567Z",
  "text": "Hi. I am trying to run a golang binary using aws-sdk-go under docker. I always get the following Error NoCredentialProviders: no valid providers in chain. Deprecated.  For verbose messaging see aws.Config.CredentialsChainVerboseErrors",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "i am running the docker command as follows: docker run --rm -it -e &quot;HOME=/home&quot; -v $HOME/.aws:/root/.aws myimage",
  "id": "5aba08ed35dd17022ea4e3a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-03-27T09:03:41.726Z",
  "text": "i am running the docker command as follows: docker run --rm -it -e \"HOME=/home\" -v $HOME/.aws:/root/.aws myimage",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "the image is based on alpine:3.7",
  "id": "5aba092ae3d0b1ff2c70c793",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-03-27T09:04:42.592Z",
  "text": "the image is based on alpine:3.7",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "any pointers would be helpful",
  "id": "5aba093ae4ff28713a7ab01a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-03-27T09:04:58.048Z",
  "text": "any pointers would be helpful",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "The session is created as follows : <a href=\"https://pastebin.com/Vc9mCz9v\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://pastebin.com/Vc9mCz9v</a>",
  "id": "5aba0b677c3a01610d7ba8d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-03-27T09:14:15.075Z",
  "text": "The session is created as follows : https://pastebin.com/Vc9mCz9v",
  "unread": false,
  "urls": [
   {
    "url": "https://pastebin.com/Vc9mCz9v"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ranjan008",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=60",
   "displayName": "Abhishek Ranjan",
   "gv": "4",
   "id": "5792187b40f3a6eec05c013d",
   "url": "/ranjan008",
   "username": "ranjan008",
   "v": 10
  },
  "html": "Can I connect with an ec2 instance from sdk and make http calls on behalf of that instance from the sdk?",
  "id": "5abb3f6f458cbde55783d836",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-03-28T07:08:31.767Z",
  "text": "Can I connect with an ec2 instance from sdk and make http calls on behalf of that instance from the sdk?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ranjan008",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=60",
   "displayName": "Abhishek Ranjan",
   "gv": "4",
   "id": "5792187b40f3a6eec05c013d",
   "url": "/ranjan008",
   "username": "ranjan008",
   "v": 10
  },
  "html": "Can I copy my local folder to EFS using sdk?",
  "id": "5abb80b15f188ccc15061390",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-03-28T11:46:57.150Z",
  "text": "Can I copy my local folder to EFS using sdk?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ranjan008\" class=\"mention\">@ranjan008</span> try setting the <code>CredentialsChainVerboseErrors</code> value to true when creating the session.  This will output additional information about the error that your encountering.",
  "id": "5abbc1122b9dfdbc3a3064d0",
  "issues": [],
  "mentions": [
   {
    "screenName": "ranjan008",
    "userId": "5792187b40f3a6eec05c013d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2018-03-28T16:21:38.864Z",
  "text": "@ranjan008 try setting the `CredentialsChainVerboseErrors` value to true when creating the session.  This will output additional information about the error that your encountering.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"linuxbsdfreak\" class=\"mention\">@linuxbsdfreak</span> , sorry my previous message was for you",
  "id": "5abbc12e5f188ccc15077e44",
  "issues": [],
  "mentions": [
   {
    "screenName": "linuxbsdfreak",
    "userId": "55896aba15522ed4b3e2803d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2018-03-28T16:22:06.475Z",
  "text": "@linuxbsdfreak , sorry my previous message was for you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ranjan008\" class=\"mention\">@ranjan008</span> For Ec2 I&#39;ve heard of people using a SSH transport wrapper that wrapps the HTTP client&#39;s Transport with a SSH tunnel.  This may work for you. All API calls made with that client are made through the tunnel as if they were on the EC2 host.",
  "id": "5abbc16c35dd17022ead4265",
  "issues": [],
  "mentions": [
   {
    "screenName": "ranjan008",
    "userId": "5792187b40f3a6eec05c013d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2018-03-28T16:23:08.189Z",
  "text": "@ranjan008 For Ec2 I've heard of people using a SSH transport wrapper that wrapps the HTTP client's Transport with a SSH tunnel.  This may work for you. All API calls made with that client are made through the tunnel as if they were on the EC2 host.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "I&#39;m not sure about the EFS question, this might help though, <a href=\"https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html</a>",
  "id": "5abbc19f458cbde5578673be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-03-28T16:23:59.137Z",
  "text": "I'm not sure about the EFS question, this might help though, https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ranjan008",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20087046?v=4&s=60",
   "displayName": "Abhishek Ranjan",
   "gv": "4",
   "id": "5792187b40f3a6eec05c013d",
   "url": "/ranjan008",
   "username": "ranjan008",
   "v": 10
  },
  "html": "I am trying to register a new  ec2 instance without any resource with ecs cluster using ecs api RegisterContainerInstance but its throwing me error as InvalidParameterException: Resources can not be empty.",
  "id": "5abddde22b9dfdbc3a39995c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-03-30T06:49:06.773Z",
  "text": "I am trying to register a new  ec2 instance without any resource with ecs cluster using ecs api RegisterContainerInstance but its throwing me error as InvalidParameterException: Resources can not be empty.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdgiotta",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1541999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1541999?v=4&s=60",
   "displayName": "John D Giotta",
   "gv": "4",
   "id": "5938a0ddd73408ce4f6593e7",
   "url": "/jdgiotta",
   "username": "jdgiotta",
   "v": 4
  },
  "html": "I&#39;m looking for a way to validate signer against an existing IAM",
  "id": "5ac1503fe3d0b1ff2c8f4c5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-04-01T21:33:51.253Z",
  "text": "I'm looking for a way to validate signer against an existing IAM",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/jdgiotta",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1541999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1541999?v=4&s=60",
   "displayName": "John D Giotta",
   "gv": "4",
   "id": "5938a0ddd73408ce4f6593e7",
   "url": "/jdgiotta",
   "username": "jdgiotta",
   "v": 4
  },
  "html": "Meaning I want to generate a signature and validate it is correct before making any additional requests",
  "id": "5ac15057e3d0b1ff2c8f4ceb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-04-01T21:34:15.892Z",
  "text": "Meaning I want to generate a signature and validate it is correct before making any additional requests",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/roushanj",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/12628507?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/12628507?v=4&s=60",
   "displayName": "Roushan Jha",
   "gv": "4",
   "id": "5ac1d407d73408ce4f9403c9",
   "url": "/roushanj",
   "username": "roushanj"
  },
  "html": "what is InvokeArgs in invokeAsync lambda and input.json  ",
  "id": "5ac1d48ae4ff28713a9ade5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-04-02T06:58:18.885Z",
  "text": "what is InvokeArgs in invokeAsync lambda and input.json  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/npgm",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1728509?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1728509?v=4&s=60",
   "displayName": "Nathan McCloskey",
   "gv": "4",
   "id": "564b60b916b6c7089cbb102b",
   "url": "/npgm",
   "username": "npgm",
   "v": 9
  },
  "html": "with session.NewSession() do I need to worry about session expiration? or can I use the same session for potentially weeks? ",
  "id": "5ac2a4881130fe3d36952332",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-02T21:45:44.373Z",
  "text": "with session.NewSession() do I need to worry about session expiration? or can I use the same session for potentially weeks? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"npgm\" class=\"mention\">@npgm</span> the session will never expire. Though the underlying credentials the session will provide to the service clients may expire if you&#39;re using credential sources such as EC2 Instance Roles. The SDK takes care of these automatically. In theory you should be able to run your application for ever with a single session and service client.",
  "id": "5ac2a58892f5d62057885a8a",
  "issues": [],
  "mentions": [
   {
    "screenName": "npgm",
    "userId": "564b60b916b6c7089cbb102b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-02T21:50:00.201Z",
  "text": "@npgm the session will never expire. Though the underlying credentials the session will provide to the service clients may expire if you're using credential sources such as EC2 Instance Roles. The SDK takes care of these automatically. In theory you should be able to run your application for ever with a single session and service client.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"roushanj\" class=\"mention\">@roushanj</span> the InvokeArgs is the JSON data you want your lambda function to execute with, <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/API_InvokeAsync.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/lambda/latest/dg/API_InvokeAsync.html</a>",
  "id": "5ac2a5f8e3d0b1ff2c94b505",
  "issues": [],
  "mentions": [
   {
    "screenName": "roushanj",
    "userId": "5ac1d407d73408ce4f9403c9",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2018-04-02T21:51:52.018Z",
  "text": "@roushanj the InvokeArgs is the JSON data you want your lambda function to execute with, https://docs.aws.amazon.com/lambda/latest/dg/API_InvokeAsync.html",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/lambda/latest/dg/API_InvokeAsync.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/npgm",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1728509?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1728509?v=4&s=60",
   "displayName": "Nathan McCloskey",
   "gv": "4",
   "id": "564b60b916b6c7089cbb102b",
   "url": "/npgm",
   "username": "npgm",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thank you ",
  "id": "5ac2a611e4ff28713a9eb4f5",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2018-04-02T21:52:17.987Z",
  "text": "@jasdel thank you ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jdgiotta\" class=\"mention\">@jdgiotta</span> are you looking to create your own signer, or use the signer built into the SDK? If you&#39;re looking to make sure a signature is valid that was generated by the SDK, the only parts that could be validated i think are that the signed headers are what are expected, and the date is not out of sync by more than 15 minutes.",
  "id": "5ac2a6a61130fe3d36952ac8",
  "issues": [],
  "mentions": [
   {
    "screenName": "jdgiotta",
    "userId": "5938a0ddd73408ce4f6593e7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2018-04-02T21:54:46.136Z",
  "text": "@jdgiotta are you looking to create your own signer, or use the signer built into the SDK? If you're looking to make sure a signature is valid that was generated by the SDK, the only parts that could be validated i think are that the signed headers are what are expected, and the date is not out of sync by more than 15 minutes.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "Are you seeing  a significant number of invalid signature errors <span data-link-type=\"mention\" data-screen-name=\"jdgiotta\" class=\"mention\">@jdgiotta</span> ",
  "id": "5ac2a6c11130fe3d36952b29",
  "issues": [],
  "mentions": [
   {
    "screenName": "jdgiotta",
    "userId": "5938a0ddd73408ce4f6593e7",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2018-04-02T21:55:13.793Z",
  "text": "Are you seeing  a significant number of invalid signature errors @jdgiotta ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ranjan008\" class=\"mention\">@ranjan008</span> for EC2 Instance creation i suggest reaching out to the <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=30\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">AWS EC2 Forums</a>  or <a href=\"https://stackoverflow.com/questions/tagged/amazon-ec2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">stackover flow</a>. You should be able to get a broader audience, since this is a configuration issue not SDK specific. ",
  "id": "5ac2a726bb1018b37a50c78e",
  "issues": [],
  "mentions": [
   {
    "screenName": "ranjan008",
    "userId": "5792187b40f3a6eec05c013d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2018-04-02T21:56:54.821Z",
  "text": "@ranjan008 for EC2 Instance creation i suggest reaching out to the [AWS EC2 Forums](https://forums.aws.amazon.com/forum.jspa?forumID=30)  or [stackover flow](https://stackoverflow.com/questions/tagged/amazon-ec2). You should be able to get a broader audience, since this is a configuration issue not SDK specific. ",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=30"
   },
   {
    "url": "https://stackoverflow.com/questions/tagged/amazon-ec2"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/npgm",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1728509?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1728509?v=4&s=60",
   "displayName": "Nathan McCloskey",
   "gv": "4",
   "id": "564b60b916b6c7089cbb102b",
   "url": "/npgm",
   "username": "npgm",
   "v": 9
  },
  "html": "it seems the aws-sdk-go s3 api doesn&#39;t support keys with leading slashes. When I request <code>/foo/bar/bazz</code> it instead is searching for the key <code>foo/bar/bazz</code>",
  "id": "5ac4eb28c574b1aa3e67beee",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-04-04T15:11:36.366Z",
  "text": "it seems the aws-sdk-go s3 api doesn't support keys with leading slashes. When I request `/foo/bar/bazz` it instead is searching for the key `foo/bar/bazz`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/npgm",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1728509?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1728509?v=4&s=60",
   "displayName": "Nathan McCloskey",
   "gv": "4",
   "id": "564b60b916b6c7089cbb102b",
   "url": "/npgm",
   "username": "npgm",
   "v": 9
  },
  "html": "I found a related issue: <span data-link-type=\"issue\" data-issue=\"970\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#970</span>",
  "id": "5ac4f1ff27c509a774d8dde4",
  "issues": [
   {
    "number": "970",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-04-04T15:40:47.719Z",
  "text": "I found a related issue: https://github.com/aws/aws-sdk-go/issues/970",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/npgm",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1728509?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1728509?v=4&s=60",
   "displayName": "Nathan McCloskey",
   "gv": "4",
   "id": "564b60b916b6c7089cbb102b",
   "url": "/npgm",
   "username": "npgm",
   "v": 9
  },
  "html": "adding the conf.DisableRestProtocolURICleaning fixed the problem for me ",
  "id": "5ac4f210c574b1aa3e67e166",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-04-04T15:41:04.342Z",
  "text": "adding the conf.DisableRestProtocolURICleaning fixed the problem for me ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"npgm\" class=\"mention\">@npgm</span> correct, you&#39;ll need to use the <code>DisableRestProtocolURICleaning</code> flag to workaround this.",
  "id": "5ac503697c3a01610da9be60",
  "issues": [],
  "mentions": [
   {
    "screenName": "npgm",
    "userId": "564b60b916b6c7089cbb102b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2018-04-04T16:55:05.629Z",
  "text": "@npgm correct, you'll need to use the `DisableRestProtocolURICleaning` flag to workaround this.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ks2211",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=60",
   "displayName": "Kaushik Shanadi",
   "gv": "4",
   "id": "575f5d5dc2f0db084a1db7d5",
   "url": "/ks2211",
   "username": "ks2211",
   "v": 8
  },
  "html": "<p>Hi, I&#39;m running this code block</p><pre><code><span class=\"string\">creds :</span>= credentials.NewStaticCredentials(<span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>) <span class=\"comment\">//creds removed</span>\n\n<span class=\"comment\">// Retrieve the credentials value</span>\ncredValue, <span class=\"string\">err :</span>= creds.Get()\n<span class=\"keyword\">if</span> err != nil {\n    <span class=\"comment\">// handle error</span>\n}\ns, <span class=\"string\">err :</span>= session.NewSession(&amp;aws.Config{\n<span class=\"label\">        Credentials:</span> creds,\n<span class=\"label\">        Region:</span>      aws.String(<span class=\"string\">\"us-east-1\"</span>),\n<span class=\"label\">        CredentialsChainVerboseErrors:</span> aws.Bool(<span class=\"literal\">true</span>),\n})\n<span class=\"keyword\">if</span> err != nil {\n    fmt.Println(<span class=\"string\">\"err session\"</span>, err)\n}</code></pre><p>When I have valid creds, everything is good to go; I&#39;m able to create the session, and use the various services<br>When I have invalid creds (e.g missing character in key id), however, the <code>creds.Get()</code> and <code>NewSession</code> don&#39;t return any errors. Only when I try to use any of the services (e.g <code>*ec.EC2</code>), I get an error<br><code>AuthFailure: AWS was not able to validate the provided access credentials</code></p><p>Is there any reason why the creds.Get()/NewSession() don&#39;t error out with bad credentials?</p>",
  "id": "5ac78504c574b1aa3e734c23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-04-06T14:32:36.973Z",
  "text": "Hi, I'm running this code block\n\n```\ncreds := credentials.NewStaticCredentials(\"\", \"\", \"\") //creds removed\n\n// Retrieve the credentials value\ncredValue, err := creds.Get()\nif err != nil {\n    // handle error\n}\ns, err := session.NewSession(&aws.Config{\n\t\tCredentials: creds,\n\t\tRegion:      aws.String(\"us-east-1\"),\n\t\tCredentialsChainVerboseErrors: aws.Bool(true),\n})\nif err != nil {\n\tfmt.Println(\"err session\", err)\n}\n```\n\nWhen I have valid creds, everything is good to go; I'm able to create the session, and use the various services \nWhen I have invalid creds (e.g missing character in key id), however, the `creds.Get()` and `NewSession` don't return any errors. Only when I try to use any of the services (e.g `*ec.EC2`), I get an error \n`AuthFailure: AWS was not able to validate the provided access credentials`\n\nIs there any reason why the creds.Get()/NewSession() don't error out with bad credentials?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/xaxes",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1886899?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1886899?v=4&s=60",
   "displayName": "\u0141ukasz Margiela",
   "gv": "4",
   "id": "53d2d565107e137846ba7f82",
   "url": "/xaxes",
   "username": "xaxes",
   "v": 9
  },
  "html": "Hey, I&#39;m writing a lambda function \u2014 a simple case of S3 indexer (DynamoDB as a backend). What I need is content type information, but as I can see, in <code>events.S3Event</code>, there&#39;s no ContentType field. Is calling S3 API the only way to get this info?",
  "id": "5ac8e163080a38505309005a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-04-07T15:18:59.479Z",
  "text": "Hey, I'm writing a lambda function \u2014 a simple case of S3 indexer (DynamoDB as a backend). What I need is content type information, but as I can see, in `events.S3Event`, there's no ContentType field. Is calling S3 API the only way to get this info?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "Hi. How do i read the contents of a s3 object. I have the following code. <a href=\"https://pastebin.com/ghXwEiRe\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://pastebin.com/ghXwEiRe</a>",
  "id": "5accb02e270d7d3708b0b9af",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-04-10T12:38:06.262Z",
  "text": "Hi. How do i read the contents of a s3 object. I have the following code. https://pastebin.com/ghXwEiRe",
  "unread": false,
  "urls": [
   {
    "url": "https://pastebin.com/ghXwEiRe"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "This is the result ",
  "id": "5accb0751130fe3d36c042b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-04-10T12:39:17.909Z",
  "text": "This is the result ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "<p>{<br>  AcceptRanges: &quot;bytes&quot;,<br>  Body: buffer(0xc420026840),<br>  ContentLength: 10,<br>  ContentType: &quot;text/plain&quot;,<br>  ETag: &quot;\\&quot;c7ec4678ab059e81a4fab13fbe66fc9f\\&quot;&quot;,<br>  LastModified: 2018-04-03 12:31:07 +0000 UTC,<br>  Metadata: {</p><p>  }<br>}</p>",
  "id": "5accb077df3e0fb547c0c76b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-04-10T12:39:19.308Z",
  "text": "{\n  AcceptRanges: \"bytes\",\n  Body: buffer(0xc420026840),\n  ContentLength: 10,\n  ContentType: \"text/plain\",\n  ETag: \"\\\"c7ec4678ab059e81a4fab13fbe66fc9f\\\"\",\n  LastModified: 2018-04-03 12:31:07 +0000 UTC,\n  Metadata: {\n\n  }\n}\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "i would like to read the Body",
  "id": "5accb08bdf3e0fb547c0c79f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-04-10T12:39:39.626Z",
  "text": "i would like to read the Body",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"linuxbsdfreak\" class=\"mention\">@linuxbsdfreak</span> the <code>Body</code> parameter is an <code>io.ReadCloser</code> you can read from it using standard Go reading utilities. Or manually by calling the Body parameter&#39;s <code>Read</code> method directly.  Make sure your application calls the <code>Close</code> method on the <code>Body</code> parameter after finished reading the body though.",
  "id": "5acce6d2270d7d3708b1efd1",
  "issues": [],
  "mentions": [
   {
    "screenName": "linuxbsdfreak",
    "userId": "55896aba15522ed4b3e2803d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 9,
  "sent": "2018-04-10T16:31:14.428Z",
  "text": "@linuxbsdfreak the `Body` parameter is an `io.ReadCloser` you can read from it using standard Go reading utilities. Or manually by calling the Body parameter's `Read` method directly.  Make sure your application calls the `Close` method on the `Body` parameter after finished reading the body though.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xaxes\" class=\"mention\">@xaxes</span> I suggest reaching out to the <a href=\"http://github.com/aws/aws-lambda-go\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/aws/aws-lambda-go</a> project and asking there or on stack overflow. One option is to call the S3 API for the Object&#39;s bucket/key, but i&#39;m not sure if that is the only way in your context.",
  "id": "5acce739270d7d3708b1f515",
  "issues": [],
  "mentions": [
   {
    "screenName": "xaxes",
    "userId": "53d2d565107e137846ba7f82",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-10T16:32:56.997Z",
  "text": "@xaxes I suggest reaching out to the github.com/aws/aws-lambda-go project and asking there or on stack overflow. One option is to call the S3 API for the Object's bucket/key, but i'm not sure if that is the only way in your context.",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/aws/aws-lambda-go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ks2211\" class=\"mention\">@ks2211</span> thanks for the feedback. The <code>NewSession</code> does not resolve the credentials immediately. They will not be resolved until the first API request is made. A workaround for this is calling <code>sess.Config.Credentials.Get()</code> manually.",
  "id": "5acce86fdf3e0fb547c20a49",
  "issues": [],
  "mentions": [
   {
    "screenName": "ks2211",
    "userId": "575f5d5dc2f0db084a1db7d5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 11,
  "sent": "2018-04-10T16:38:07.906Z",
  "text": "@ks2211 thanks for the feedback. The `NewSession` does not resolve the credentials immediately. They will not be resolved until the first API request is made. A workaround for this is calling `sess.Config.Credentials.Get()` manually.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/silverfighter_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/480409937227431937/KBgDRiz2.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/480409937227431937/KBgDRiz2_bigger.png",
   "displayName": "silverfighter",
   "id": "5accf522d73408ce4f952237",
   "url": "/silverfighter_twitter",
   "username": "silverfighter_twitter"
  },
  "html": "Hi, is there an api to have write access (not only retrieve) to the credentials located in the .aws folder. background: I retrieve temporary clientid, etc from sts and would like to update the profile via sdk",
  "id": "5accf68e6bbe1d2739d1096e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-10T17:38:22.216Z",
  "text": "Hi, is there an api to have write access (not only retrieve) to the credentials located in the .aws folder. background: I retrieve temporary clientid, etc from sts and would like to update the profile via sdk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"silverfighter_twitter\" class=\"mention\">@silverfighter_twitter</span>  the AWS CLI provides this functionality but the SDKs only read the shared credentials  and configuration files.",
  "id": "5accffb37c3a01610dcacd31",
  "issues": [],
  "mentions": [
   {
    "screenName": "silverfighter_twitter",
    "userId": "5accf522d73408ce4f952237",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-10T18:17:23.723Z",
  "text": "@silverfighter_twitter  the AWS CLI provides this functionality but the SDKs only read the shared credentials  and configuration files.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/silverfighter_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/480409937227431937/KBgDRiz2.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/480409937227431937/KBgDRiz2_bigger.png",
   "displayName": "silverfighter",
   "id": "5accf522d73408ce4f952237",
   "url": "/silverfighter_twitter",
   "username": "silverfighter_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span>  thx for the reply . So i guess I have to do it manually then. ",
  "id": "5acd00a16d7e07082bdd3a0d",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-10T18:21:21.847Z",
  "text": "@jasdel  thx for the reply . So i guess I have to do it manually then. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> . Thx for the info. I got that fixed. Any clues how do i read the Metadata values. ",
  "id": "5acdc2f27c3a01610dcdff77",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2018-04-11T08:10:26.392Z",
  "text": "@jasdel . Thx for the info. I got that fixed. Any clues how do i read the Metadata values. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "i have something like ",
  "id": "5acdc332df3e0fb547c5b237",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-04-11T08:11:30.188Z",
  "text": "i have something like ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "{<br>  AcceptRanges: &quot;bytes&quot;,<br>  Body: buffer(0xc420026500),<br>  ContentLength: 2793486,<br>  ContentType: &quot;binary/octet-stream&quot;,<br>  ETag: &quot;\\&quot;ee206da27eda0d6adc51f9dcd65531e7\\&quot;&quot;,<br>  LastModified: 2016-12-23 20:30:03 +0000 UTC,<br>  Metadata: {<br>    Cell: &quot;1_1_1&quot;,<br>    Revision: &quot;1&quot;<br>  }<br>}",
  "id": "5acdc3346d7e07082be07079",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-11T08:11:32.466Z",
  "text": "{\n  AcceptRanges: \"bytes\",\n  Body: buffer(0xc420026500),\n  ContentLength: 2793486,\n  ContentType: \"binary/octet-stream\",\n  ETag: \"\\\"ee206da27eda0d6adc51f9dcd65531e7\\\"\",\n  LastModified: 2016-12-23 20:30:03 +0000 UTC,\n  Metadata: {\n    Cell: \"1_1_1\",\n    Revision: \"1\"\n  }\n}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "i tried to print the value. like  fmt.Println(results.Metadata[&quot;Revision&quot;]). but it gives me something like this 0xc420173660",
  "id": "5acdc367080a3850531d3923",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-04-11T08:12:23.105Z",
  "text": "i tried to print the value. like  fmt.Println(results.Metadata[\"Revision\"]). but it gives me something like this 0xc420173660",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/linuxbsdfreak",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1310120?v=4&s=60",
   "displayName": "linuxbsdfreak",
   "gv": "4",
   "id": "55896aba15522ed4b3e2803d",
   "url": "/linuxbsdfreak",
   "username": "linuxbsdfreak",
   "v": 8
  },
  "html": "Ignore it i got it",
  "id": "5acdc3bc1130fe3d36c54fdb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-04-11T08:13:48.057Z",
  "text": "Ignore it i got it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ks2211",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=60",
   "displayName": "Kaushik Shanadi",
   "gv": "4",
   "id": "575f5d5dc2f0db084a1db7d5",
   "url": "/ks2211",
   "username": "ks2211",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thanks for the update on the <code>NewSession</code>",
  "id": "5ace44317c3a01610dd0b97b",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2018-04-11T17:21:53.765Z",
  "text": "@jasdel thanks for the update on the `NewSession`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-04-11T17:28:23.219Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ks2211",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=60",
   "displayName": "Kaushik Shanadi",
   "gv": "4",
   "id": "575f5d5dc2f0db084a1db7d5",
   "url": "/ks2211",
   "username": "ks2211",
   "v": 8
  },
  "html": "So running into another issue regarding tags/tagging:<br>My current process is <code>ec2.CreateSubnet</code> -&gt; <code>ec2.WaitUntilSubnetAvailable</code> -&gt; <code>ec2.CreateTags</code> (on the subnet ID, using the output from the first step)<br>I&#39;m getting really inconsistent results with the &quot;CreateTags&quot; api. 2 out of 3 times, my tags will get created. The 3rd attempt I will get this error <pre><code>error=\"InvalidSubnetID.NotFound: The subnet ID 'subnet-REDACTED' does <span class=\"flow\">not</span> <span class=\"flow\">exist</span></code></pre>",
  "id": "5ace44b2109bb04332b0de88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-04-11T17:24:02.289Z",
  "text": "So running into another issue regarding tags/tagging:\nMy current process is `ec2.CreateSubnet` -> `ec2.WaitUntilSubnetAvailable` -> `ec2.CreateTags` (on the subnet ID, using the output from the first step)\nI'm getting really inconsistent results with the \"CreateTags\" api. 2 out of 3 times, my tags will get created. The 3rd attempt I will get this error \n```\nerror=\"InvalidSubnetID.NotFound: The subnet ID 'subnet-REDACTED' does not exist\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ks2211",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=60",
   "displayName": "Kaushik Shanadi",
   "gv": "4",
   "id": "575f5d5dc2f0db084a1db7d5",
   "url": "/ks2211",
   "username": "ks2211",
   "v": 8
  },
  "html": "The subnet exists in AWS and is available (console)",
  "id": "5ace44cd270d7d3708b86595",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-11T17:24:29.486Z",
  "text": "The subnet exists in AWS and is available (console)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ks2211",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=60",
   "displayName": "Kaushik Shanadi",
   "gv": "4",
   "id": "575f5d5dc2f0db084a1db7d5",
   "url": "/ks2211",
   "username": "ks2211",
   "v": 8
  },
  "html": "the subnet shows up via the CLI call as well",
  "id": "5ace44d22b9dfdbc3a7d9d28",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-11T17:24:34.565Z",
  "text": "the subnet shows up via the CLI call as well",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ks2211",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=60",
   "displayName": "Kaushik Shanadi",
   "gv": "4",
   "id": "575f5d5dc2f0db084a1db7d5",
   "url": "/ks2211",
   "username": "ks2211",
   "v": 8
  },
  "html": "Any ideas?",
  "id": "5ace44d492f5d62057ba1b79",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-11T17:24:36.355Z",
  "text": "Any ideas?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ks2211",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=60",
   "displayName": "Kaushik Shanadi",
   "gv": "4",
   "id": "575f5d5dc2f0db084a1db7d5",
   "url": "/ks2211",
   "username": "ks2211",
   "v": 8
  },
  "html": "So same issue with routetable tagging. Route table created and exists, tagging fails cause &quot;route table does not eixst&quot;",
  "id": "5ace4773080a3850531ff0c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-11T17:35:47.027Z",
  "text": "So same issue with routetable tagging. Route table created and exists, tagging fails cause \"route table does not eixst\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ks2211",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=60",
   "displayName": "Kaushik Shanadi",
   "gv": "4",
   "id": "575f5d5dc2f0db084a1db7d5",
   "url": "/ks2211",
   "username": "ks2211",
   "v": 8
  },
  "html": "<p>Adding onto that list: <code>CreateIGW</code> -&gt; <code>CreateTags</code> (for IGW), </p><pre><code>InvalidInternetGatewayID<span class=\"class\">.NotFound</span>: The internetGateway ID <span class=\"string\">'igw-REDACTED'</span> does not exist\\n\\tstatus <span class=\"tag\">code</span>: <span class=\"number\">400</span>,</code></pre><p>I didn&#39;t see any errors creating the IGW (I used the CreateIGWOutput for the resourceID to tag). I was able to attach the igw to the vpc without issues as well </p>",
  "id": "5ace6688109bb04332b18c58",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-11T19:48:24.118Z",
  "text": "Adding onto that list: `CreateIGW` -> `CreateTags` (for IGW), \n```\nInvalidInternetGatewayID.NotFound: The internetGateway ID 'igw-REDACTED' does not exist\\n\\tstatus code: 400,\n```\nI didn't see any errors creating the IGW (I used the CreateIGWOutput for the resourceID to tag). I was able to attach the igw to the vpc without issues as well ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ks2211",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16432599?v=4&s=60",
   "displayName": "Kaushik Shanadi",
   "gv": "4",
   "id": "575f5d5dc2f0db084a1db7d5",
   "url": "/ks2211",
   "username": "ks2211",
   "v": 8
  },
  "html": "Should I add a delay/sleep after creating the resource before tagging or retry if I run into the &quot;NotFound&quot; errors? I can see the resources in the console/get a response via the CLI",
  "id": "5ace66b5270d7d3708b90acc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-11T19:49:09.785Z",
  "text": "Should I add a delay/sleep after creating the resource before tagging or retry if I run into the \"NotFound\" errors? I can see the resources in the console/get a response via the CLI",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "hopefully a simple and easy question...Golang SDK",
  "id": "5acf5bf2df3e0fb547cd4226",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-04-12T13:15:30.939Z",
  "text": "hopefully a simple and easy question...Golang SDK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "how do I get the properties of an S3 bucket",
  "id": "5acf5c016d7e07082be820ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-04-12T13:15:45.332Z",
  "text": "how do I get the properties of an S3 bucket",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I am using the following code `        input := &amp;s3.GetBucketLoggingInput{<br>            Bucket: (bucket.Name),<br>        }<pre><code>    results, _ := svc.<span class=\"function\"><span class=\"title\">GetBucketLogging</span><span class=\"params\">(input)</span></span>`</code></pre>",
  "id": "5acf9b22270d7d3708be820c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-12T17:45:06.184Z",
  "text": "I am using the following code `\t\tinput := &s3.GetBucketLoggingInput{\n\t\t\tBucket: (bucket.Name),\n\t\t}\n\n\t\tresults, _ := svc.GetBucketLogging(input)`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I am getting nothing back when I know there is data there",
  "id": "5acf9b33080a38505326244e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-12T17:45:23.427Z",
  "text": "I am getting nothing back when I know there is data there",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"forensicsguy20012004\" class=\"mention\">@forensicsguy20012004</span> Is the error nil? lol",
  "id": "5acf9b671130fe3d36ce6c37",
  "issues": [],
  "mentions": [
   {
    "screenName": "forensicsguy20012004",
    "userId": "57dfc95340f3a6eec066085e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-12T17:46:15.045Z",
  "text": "@forensicsguy20012004 Is the error nil? lol",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "no...just {     }",
  "id": "5acf9b776bbe1d2739dd602f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-12T17:46:31.187Z",
  "text": "no...just {     }",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "?",
  "id": "5acf9b8c7c3a01610dd6d9f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-04-12T17:46:52.809Z",
  "text": "?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "and I found that someone submitted this issue earlier in 2017",
  "id": "5acf9b8e2b9dfdbc3a83d18e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-12T17:46:54.510Z",
  "text": "and I found that someone submitted this issue earlier in 2017",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "it&#39;s not nil? just an empty json object?",
  "id": "5acf9ba12b9dfdbc3a83d1f9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-04-12T17:47:13.231Z",
  "text": "it's not nil? just an empty json object?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "yes, empty JSON object",
  "id": "5acf9bbf5f188ccc155b2588",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-12T17:47:43.880Z",
  "text": "yes, empty JSON object",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "what do you get when you fmt.Println(&quot;%v&quot;, err)",
  "id": "5acf9bd87c3a01610dd6dab4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-04-12T17:48:08.140Z",
  "text": "what do you get when you fmt.Println(\"%v\", err)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "{}?",
  "id": "5acf9bda6bbe1d2739dd625e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-04-12T17:48:10.230Z",
  "text": "{}?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I am trying to get the properties of the S3 bucket for security reporting ",
  "id": "5acf9be3080a3850532626e9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-12T17:48:19.800Z",
  "text": "I am trying to get the properties of the S3 bucket for security reporting ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "let me try",
  "id": "5acf9be7109bb04332b70cb2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-12T17:48:23.580Z",
  "text": "let me try",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "nothing back",
  "id": "5acf9c1227c509a7740622c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-12T17:49:06.551Z",
  "text": "nothing back",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "and the input is the bucketName",
  "id": "5acf9c241130fe3d36ce6f92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-12T17:49:24.717Z",
  "text": "and the input is the bucketName",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<span data-link-type=\"issue\" data-issue=\"1710\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#1710</span>",
  "id": "5acf9c7927c509a7740624cb",
  "issues": [
   {
    "number": "1710",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-12T17:50:49.118Z",
  "text": "https://github.com/aws/aws-sdk-go/issues/1710",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "that is still showing open",
  "id": "5acf9c8a109bb04332b70ffc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-12T17:51:06.583Z",
  "text": "that is still showing open",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "so any help would be greatly appreicated",
  "id": "5acf9cda6bbe1d2739dd65c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-04-12T17:52:26.195Z",
  "text": "so any help would be greatly appreicated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "so you&#39;re trying to get back the logging info for the bucket?",
  "id": "5acf9ced1130fe3d36ce72bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-04-12T17:52:45.185Z",
  "text": "so you're trying to get back the logging info for the bucket?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "yes",
  "id": "5acf9cf3109bb04332b712a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-04-12T17:52:51.057Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I am trying to run audits against the result sets",
  "id": "5acf9cfe109bb04332b712cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-04-12T17:53:02.392Z",
  "text": "I am trying to run audits against the result sets",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "so any help would be greatly appreicated",
  "id": "5acf9d9e7c3a01610dd6e4c4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-04-12T17:55:42.291Z",
  "text": "so any help would be greatly appreicated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "yea i&#39;m getting back empty object aswell for one of our buckets. ",
  "id": "5acf9da35d7286b43a216589",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-12T17:55:47.057Z",
  "text": "yea i'm getting back empty object aswell for one of our buckets. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "ok...so apparently this is a known issue...issue 1710 ... I figured it would be fixed by now",
  "id": "5acf9de8109bb04332b7181d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-12T17:56:56.432Z",
  "text": "ok...so apparently this is a known issue...issue 1710 ... I figured it would be fixed by now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "yea, try pinging in that issue and see if there was any progress made",
  "id": "5acf9e057c3a01610dd6e668",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-04-12T17:57:25.169Z",
  "text": "yea, try pinging in that issue and see if there was any progress made",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "so, in the mean time...till that is fixed...what am I supposed to do?",
  "id": "5acf9e29df3e0fb547ceb908",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-12T17:58:01.950Z",
  "text": "so, in the mean time...till that is fixed...what am I supposed to do?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "how can I get that data...I do not want to do awsCLI or another language...trying to build a cross-platform utility",
  "id": "5acf9e4c1130fe3d36ce7b19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-12T17:58:36.007Z",
  "text": "how can I get that data...I do not want to do awsCLI or another language...trying to build a cross-platform utility",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "idk, maybe use the javascript sdk or the cli. ",
  "id": "5acf9e55109bb04332b719a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-04-12T17:58:45.642Z",
  "text": "idk, maybe use the javascript sdk or the cli. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "fyi...I made a comment in the issue",
  "id": "5acf9e815f188ccc155b31f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-12T17:59:29.365Z",
  "text": "fyi...I made a comment in the issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "what do you mean cross-platform utility? what are you requirements",
  "id": "5acf9e97080a385053263363",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-04-12T17:59:51.323Z",
  "text": "what do you mean cross-platform utility? what are you requirements",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I can cross compile",
  "id": "5acf9ea56bbe1d2739dd6f7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-12T18:00:05.527Z",
  "text": "I can cross compile",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "anyhting wrong with node for that?",
  "id": "5acf9eb77c3a01610dd6e9ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-04-12T18:00:23.499Z",
  "text": "anyhting wrong with node for that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I could use JS...but really wanted to use Golang",
  "id": "5acf9ebc080a385053263503",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-04-12T18:00:28.726Z",
  "text": "I could use JS...but really wanted to use Golang",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "yea, looks like go is out though",
  "id": "5acf9ecddf3e0fb547cebcd9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-04-12T18:00:45.023Z",
  "text": "yea, looks like go is out though",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "shoot",
  "id": "5acf9ed37c3a01610dd6ea79",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-04-12T18:00:51.781Z",
  "text": "shoot",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "(\u30ce\u0ca0\u76ca\u0ca0)\u30ce\u5f61\u253b\u2501\u253b.",
  "id": "5acf9f046bbe1d2739dd7137",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-04-12T18:01:40.996Z",
  "text": "(\u30ce\u0ca0\u76ca\u0ca0)\u30ce\u5f61\u253b\u2501\u253b.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "trying to up my Go skills in AWS",
  "id": "5acf9f36df3e0fb547cebef4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-04-12T18:02:30.879Z",
  "text": "trying to up my Go skills in AWS",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "is there a potential that AWS can look into this ... sometime?",
  "id": "5acf9f5c5d7286b43a216d3c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-04-12T18:03:08.897Z",
  "text": "is there a potential that AWS can look into this ... sometime?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "im just a lonely peasant, not part of the aws team :P",
  "id": "5acfa04e5d7286b43a2173e6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-04-12T18:07:10.832Z",
  "text": "im just a lonely peasant, not part of the aws team :P",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "oh...sorry Chris...I thought so...my bad",
  "id": "5acfa0891130fe3d36ce87e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-04-12T18:08:09.168Z",
  "text": "oh...sorry Chris...I thought so...my bad",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "np, dress for the job you want right! 0.o",
  "id": "5acfa0a36d7e07082be9ac5f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-04-12T18:08:35.244Z",
  "text": "np, dress for the job you want right! 0.o",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "nice",
  "id": "5acfa0b627c509a774063b88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-04-12T18:08:54.677Z",
  "text": "nice",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"crwgregory\" class=\"mention\">@crwgregory</span> question for you",
  "id": "5acfa7d82b9dfdbc3a84157a",
  "issues": [],
  "mentions": [
   {
    "screenName": "crwgregory",
    "userId": "56d8586ae610378809c4d375",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 24,
  "sent": "2018-04-12T18:39:20.098Z",
  "text": "@crwgregory question for you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "is there a basic RESTful API call that might get the same info",
  "id": "5acfa8025d7286b43a219f5c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-04-12T18:40:02.016Z",
  "text": "is there a basic RESTful API call that might get the same info",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/crwgregory",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/9405969?v=4&s=60",
   "displayName": "Chris ",
   "gv": "4",
   "id": "56d8586ae610378809c4d375",
   "url": "/crwgregory",
   "username": "crwgregory",
   "v": 9
  },
  "html": "I don&#39;t think they use RESTful endpoints. I think it&#39;s some weird mix of XML requests. I&#39;ve never tried to make a raw request, I&#39;ve always just used the cli if I came into problems with the sdk.",
  "id": "5acfa88f6d7e07082be9d67b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-04-12T18:42:23.518Z",
  "text": "I don't think they use RESTful endpoints. I think it's some weird mix of XML requests. I've never tried to make a raw request, I've always just used the cli if I came into problems with the sdk.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "ok, cool...thanks",
  "id": "5acfa8cc270d7d3708bec6bc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-04-12T18:43:24.290Z",
  "text": "ok, cool...thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-04-12T19:16:27.049Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/mennis",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/130449?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/130449?v=4&s=60",
   "displayName": "mennis",
   "gv": "4",
   "id": "5acfaf5fd73408ce4f956f03",
   "url": "/mennis",
   "username": "mennis",
   "v": 2
  },
  "html": "I am trying to get an attachment if one exists of an ENI.  I don&#39;t understand how to prevent a panic if one doesn&#39;t exist. It appears that when doesn&#39;t the Attachment entity doesn&#39;t exist in the struct. Is there a way to check that?",
  "id": "5acfb07a2b9dfdbc3a8440fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-04-12T19:16:10.843Z",
  "text": "I am trying to get an attachment if one exists of an ENI.  I don't understand how to prevent a panic if one doesn't exist. It appears that when doesn't the Attachment entity doesn't exist in the struct. Is there a way to check that?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/mennis",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/130449?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/130449?v=4&s=60",
   "displayName": "mennis",
   "gv": "4",
   "id": "5acfaf5fd73408ce4f956f03",
   "url": "/mennis",
   "username": "mennis",
   "v": 2
  },
  "html": "I see I can check if the attachment is nil and that works.  Is that idiomatic?",
  "id": "5acfb2c7109bb04332b78151",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-04-12T19:25:59.154Z",
  "text": "I see I can check if the attachment is nil and that works.  Is that idiomatic?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "Ok, going to need some help here...parsing the response of GetBucketPolicy",
  "id": "5ad72a805d7286b43a3fc2be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-18T11:22:40.814Z",
  "text": "Ok, going to need some help here...parsing the response of GetBucketPolicy",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I get the response JSON inserted into a struct that looks like this",
  "id": "5ad72a9b5d7286b43a3fc2fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-18T11:23:07.531Z",
  "text": "I get the response JSON inserted into a struct that looks like this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<code>type AutoGenerated struct {\n    Version   string `json:&quot;Version&quot;`\n    ID        string `json:&quot;Id&quot;`\n    Statement []struct {\n        Sid       string `json:&quot;Sid&quot;`\n        Effect    string `json:&quot;Effect&quot;`\n        Principal string `json:&quot;Principal&quot;`\n        Action    string `json:&quot;Action&quot;`\n        Resource  string `json:&quot;Resource&quot;`\n        Condition struct {\n            NotIPAddress struct {\n                AwsSourceIP []string `json:&quot;aws:SourceIp&quot;`\n            } `json:&quot;NotIpAddress&quot;`\n            StringNotEquals struct {\n                AwsSourceAccount string `json:&quot;aws:SourceAccount&quot;`\n            } `json:&quot;StringNotEquals&quot;`\n        } `json:&quot;Condition&quot;`\n    } `json:&quot;Statement&quot;`\n}</code>",
  "id": "5ad72aa815c9b031140c724f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-18T11:23:20.858Z",
  "text": "```type AutoGenerated struct {\n\tVersion   string `json:\"Version\"`\n\tID        string `json:\"Id\"`\n\tStatement []struct {\n\t\tSid       string `json:\"Sid\"`\n\t\tEffect    string `json:\"Effect\"`\n\t\tPrincipal string `json:\"Principal\"`\n\t\tAction    string `json:\"Action\"`\n\t\tResource  string `json:\"Resource\"`\n\t\tCondition struct {\n\t\t\tNotIPAddress struct {\n\t\t\t\tAwsSourceIP []string `json:\"aws:SourceIp\"`\n\t\t\t} `json:\"NotIpAddress\"`\n\t\t\tStringNotEquals struct {\n\t\t\t\tAwsSourceAccount string `json:\"aws:SourceAccount\"`\n\t\t\t} `json:\"StringNotEquals\"`\n\t\t} `json:\"Condition\"`\n\t} `json:\"Statement\"`\n}```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "here is the load: ",
  "id": "5ad72ad86bbe1d2739fbe43e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-18T11:24:08.391Z",
  "text": "here is the load: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<pre><code>    <span class=\"tag\">var</span> ag AutoGenerated\n    json.<span class=\"function\"><span class=\"title\">Unmarshal</span><span class=\"params\">([]byte(*results.Policy)</span></span>, &amp;ag)\n    gg := ag.Statement</code></pre>",
  "id": "5ad72ad95f188ccc15798f7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-04-18T11:24:09.529Z",
  "text": "\t\tvar ag AutoGenerated\n\t\tjson.Unmarshal([]byte(*results.Policy), &ag)\n\t\tgg := ag.Statement",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "how do I get to Statement.something",
  "id": "5ad72afa270d7d3708dcecf8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-04-18T11:24:42.607Z",
  "text": "how do I get to Statement.something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "type AutoGenerated struct {<br>    Version   string <code>json:&quot;Version&quot;</code><br>    ID        string <code>json:&quot;Id&quot;</code><br>    Statement []struct {<br>        Sid       string <code>json:&quot;Sid&quot;</code><br>        Effect    string <code>json:&quot;Effect&quot;</code><br>        Principal string <code>json:&quot;Principal&quot;</code><br>        Action    string <code>json:&quot;Action&quot;</code><br>        Resource  string <code>json:&quot;Resource&quot;</code><br>        Condition struct {<br>            NotIPAddress struct {<br>                AwsSourceIP []string <code>json:&quot;aws:SourceIp&quot;</code><br>            } <code>json:&quot;NotIpAddress&quot;</code><br>            StringNotEquals struct {<br>                AwsSourceAccount string <code>json:&quot;aws:SourceAccount&quot;</code><br>            } <code>json:&quot;StringNotEquals&quot;</code><br>        } <code>json:&quot;Condition&quot;</code><br>    } <code>json:&quot;Statement&quot;</code><br>}",
  "id": "5ad72afb2b9dfdbc3aa23686",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-04-18T11:24:43.691Z",
  "text": "type AutoGenerated struct {\n\tVersion   string `json:\"Version\"`\n\tID        string `json:\"Id\"`\n\tStatement []struct {\n\t\tSid       string `json:\"Sid\"`\n\t\tEffect    string `json:\"Effect\"`\n\t\tPrincipal string `json:\"Principal\"`\n\t\tAction    string `json:\"Action\"`\n\t\tResource  string `json:\"Resource\"`\n\t\tCondition struct {\n\t\t\tNotIPAddress struct {\n\t\t\t\tAwsSourceIP []string `json:\"aws:SourceIp\"`\n\t\t\t} `json:\"NotIpAddress\"`\n\t\t\tStringNotEquals struct {\n\t\t\t\tAwsSourceAccount string `json:\"aws:SourceAccount\"`\n\t\t\t} `json:\"StringNotEquals\"`\n\t\t} `json:\"Condition\"`\n\t} `json:\"Statement\"`\n}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I am just finding it very difficult to parse through the response and look for certain values and check them against &quot;known&quot; ones I am trying to enforce",
  "id": "5ad740b11130fe3d36edb0bf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-04-18T12:57:21.560Z",
  "text": "I am just finding it very difficult to parse through the response and look for certain values and check them against \"known\" ones I am trying to enforce",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I essentially am trying to write some automated tested that check values against some given inputs",
  "id": "5ad74123270d7d3708dd696c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-04-18T12:59:15.959Z",
  "text": "I essentially am trying to write some automated tested that check values against some given inputs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"forensicsguy20012004\" class=\"mention\">@forensicsguy20012004</span>  are you looking to apply a path style query to the JSON response received, or are you looking to access those fields directly ?",
  "id": "5ad7a50527c509a77427513d",
  "issues": [],
  "mentions": [
   {
    "screenName": "forensicsguy20012004",
    "userId": "57dfc95340f3a6eec066085e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2018-04-18T20:05:25.155Z",
  "text": "@forensicsguy20012004  are you looking to apply a path style query to the JSON response received, or are you looking to access those fields directly ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> I am looking to access those fields directly",
  "id": "5ad869f77c3a01610dfaa6a7",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2018-04-19T10:05:43.835Z",
  "text": "@jasdel I am looking to access those fields directly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/g/u/memonumair939_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "umair memon",
   "id": "5adb3e1fd73408ce4f9689c2",
   "url": "/memonumair939_twitter",
   "username": "memonumair939_twitter"
  },
  "html": "I want sat a login panel of amazon aws from my website user can authenticate from my website how its possible with php can any body help me?   ",
  "id": "5adb3e9c270d7d3708ee77c2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-04-21T13:37:32.706Z",
  "text": "I want sat a login panel of amazon aws from my website user can authenticate from my website how its possible with php can any body help me?   ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"forensicsguy20012004\" class=\"mention\">@forensicsguy20012004</span> thanks for the clarification, one way to create an automated tests against the response, is to create a local instance of the <code>AutoGenerated</code> type and use <a href=\"https://godoc.org/reflect#DeepEqual\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">reflect.DeepEqual</a> to compare it with the response value. This will exactly compare two values. If there is only a subset of the type you want to compare you&#39;ll need to write logic which calls DeepEqual selectively on those members.",
  "id": "5adf67902b9dfdbc3ac4c637",
  "issues": [],
  "mentions": [
   {
    "screenName": "forensicsguy20012004",
    "userId": "57dfc95340f3a6eec066085e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2018-04-24T17:21:20.705Z",
  "text": "@forensicsguy20012004 thanks for the clarification, one way to create an automated tests against the response, is to create a local instance of the `AutoGenerated` type and use [reflect.DeepEqual](https://godoc.org/reflect#DeepEqual) to compare it with the response value. This will exactly compare two values. If there is only a subset of the type you want to compare you'll need to write logic which calls DeepEqual selectively on those members.",
  "unread": false,
  "urls": [
   {
    "url": "https://godoc.org/reflect#DeepEqual"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/charles-d-burton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3165908?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3165908?v=4&s=60",
   "displayName": "Charles",
   "gv": "4",
   "id": "5adfd39ed73408ce4f96f56d",
   "url": "/charles-d-burton",
   "username": "charles-d-burton"
  },
  "html": "I&#39;m using the cognitoidentityprovider and it&#39;s not returning all the correct info.  When I make a request with the parameters set like this:<pre><code><span class=\"tag\">return</span> <span class=\"tag\">svc</span><span class=\"class\">.InitiateAuth</span>(\n        &amp;<span class=\"tag\">idp</span><span class=\"class\">.InitiateAuthInput</span><span class=\"rules\">{\n            <span class=\"rule\"><span class=\"attribute\">AuthFlow</span>:<span class=\"value\">       aws.<span class=\"function\">String</span>(<span class=\"string\">\"REFRESH_TOKEN_AUTH\"</span>),\n            AuthParameters: map[string]*string{<span class=\"string\">\"REFRESH_TOKEN\"</span>: aws.<span class=\"function\">String</span>(refToken.RefreshToken)},\n            ClientId:       aws.<span class=\"function\">String</span>(os.<span class=\"function\">Getenv</span>(<span class=\"string\">\"CLIENTID\"</span>)),\n        },\n    )</span></span></span></code></pre>",
  "id": "5adfd3fa62316e0505f7e8b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-04-25T01:03:54.973Z",
  "text": "I'm using the cognitoidentityprovider and it's not returning all the correct info.  When I make a request with the parameters set like this:\n```\nreturn svc.InitiateAuth(\n\t\t&idp.InitiateAuthInput{\n\t\t\tAuthFlow:       aws.String(\"REFRESH_TOKEN_AUTH\"),\n\t\t\tAuthParameters: map[string]*string{\"REFRESH_TOKEN\": aws.String(refToken.RefreshToken)},\n\t\t\tClientId:       aws.String(os.Getenv(\"CLIENTID\")),\n\t\t},\n\t)```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/charles-d-burton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3165908?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3165908?v=4&s=60",
   "displayName": "Charles",
   "gv": "4",
   "id": "5adfd39ed73408ce4f96f56d",
   "url": "/charles-d-burton",
   "username": "charles-d-burton"
  },
  "html": "I don&#39;t get a refresh token in the output",
  "id": "5adfd405270d7d370801d4fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-04-25T01:04:05.969Z",
  "text": "I don't get a refresh token in the output",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/charles-d-burton",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3165908?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3165908?v=4&s=60",
   "displayName": "Charles",
   "gv": "4",
   "id": "5adfd39ed73408ce4f96f56d",
   "url": "/charles-d-burton",
   "username": "charles-d-burton"
  },
  "html": "just an IDToken and AccessToken",
  "id": "5adfd40f270d7d370801d50a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-04-25T01:04:15.343Z",
  "text": "just an IDToken and AccessToken",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"charles-d-burton\" class=\"mention\">@charles-d-burton</span>  I suggest also asking on the <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=173\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Cognito AWS Forums</a>",
  "id": "5ae0aa457c3a01610d1dabdc",
  "issues": [],
  "mentions": [
   {
    "screenName": "charles-d-burton",
    "userId": "5adfd39ed73408ce4f96f56d",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2018-04-25T16:18:13.797Z",
  "text": "@charles-d-burton  I suggest also asking on the [Cognito AWS Forums](https://forums.aws.amazon.com/forum.jspa?forumID=173)",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=173"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/l1990790120",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4712927?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4712927?v=4&s=60",
   "displayName": "Lulu Cheng",
   "gv": "4",
   "id": "55d20bca0fc9f982beada9a1",
   "url": "/l1990790120",
   "username": "l1990790120",
   "v": 17
  },
  "html": "hi guys",
  "id": "5ae28e387c3a01610d264a01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-04-27T02:43:04.014Z",
  "text": "hi guys",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/l1990790120",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4712927?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4712927?v=4&s=60",
   "displayName": "Lulu Cheng",
   "gv": "4",
   "id": "55d20bca0fc9f982beada9a1",
   "url": "/l1990790120",
   "username": "l1990790120",
   "v": 17
  },
  "html": "is there any similar functionality like python smart_open (aka reading csv on s3 line by line)",
  "id": "5ae28e5d6d7e07082b3b51fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-04-27T02:43:41.772Z",
  "text": "is there any similar functionality like python smart_open (aka reading csv on s3 line by line)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/l1990790120",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/4712927?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/4712927?v=4&s=60",
   "displayName": "Lulu Cheng",
   "gv": "4",
   "id": "55d20bca0fc9f982beada9a1",
   "url": "/l1990790120",
   "username": "l1990790120",
   "v": 17
  },
  "html": "tried to search around i remembered i saw something but couldn&#39;t find it again",
  "id": "5ae28e75270d7d37080ea45e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-04-27T02:44:05.426Z",
  "text": "tried to search around i remembered i saw something but couldn't find it again",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/rrelan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13407987?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13407987?v=4&s=60",
   "displayName": "rrelan",
   "gv": "4",
   "id": "5ae3109dd73408ce4f9756e8",
   "url": "/rrelan",
   "username": "rrelan"
  },
  "html": "Hi folks, I am trying to run aws comprehend, my input file is .txt format and I intend to run topic modeling on my text file, however, I am getting the following error :                                                                                                         UNSUPPORTED_ENCODING: Input files expected to be encoded in UTF-8. For_Comprehend.txt is not in UTF-8 encoding. Found 1 file(s) not encoded in UTF-8   ....... Any idea how to get around it? ",
  "id": "5ae310e32d0e228d7bbaa211",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-04-27T12:00:35.798Z",
  "text": "Hi folks, I am trying to run aws comprehend, my input file is .txt format and I intend to run topic modeling on my text file, however, I am getting the following error :                                                                                                         UNSUPPORTED_ENCODING: Input files expected to be encoded in UTF-8. For_Comprehend.txt is not in UTF-8 encoding. Found 1 file(s) not encoded in UTF-8   ....... Any idea how to get around it? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Wphelp98737",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=60",
   "displayName": "Morteza Janjani",
   "gv": "4",
   "id": "586f82b9d73408ce4f41a600",
   "url": "/Wphelp98737",
   "username": "Wphelp98737",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Heresa\" class=\"mention\">@Heresa</span> ",
  "id": "5ae318c02b9dfdbc3ad5ecb6",
  "issues": [],
  "mentions": [
   {
    "screenName": "Heresa",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2018-04-27T12:34:08.633Z",
  "text": "@Heresa ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Wphelp98737",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=60",
   "displayName": "Morteza Janjani",
   "gv": "4",
   "id": "586f82b9d73408ce4f41a600",
   "url": "/Wphelp98737",
   "username": "Wphelp98737",
   "v": 15
  },
  "html": "W",
  "id": "5ae31932dad6fb186ff1f207",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-04-27T12:36:02.420Z",
  "text": "W",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Wphelp98737",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=60",
   "displayName": "Morteza Janjani",
   "gv": "4",
   "id": "586f82b9d73408ce4f41a600",
   "url": "/Wphelp98737",
   "username": "Wphelp98737",
   "v": 15
  },
  "html": "Wphalp98737",
  "id": "5ae3195d2d0e228d7bbad035",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-04-27T12:36:45.113Z",
  "text": "Wphalp98737",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Wphelp98737",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=60",
   "displayName": "Morteza Janjani",
   "gv": "4",
   "id": "586f82b9d73408ce4f41a600",
   "url": "/Wphelp98737",
   "username": "Wphelp98737",
   "v": 15
  },
  "html": "@",
  "id": "5ae3196c15c9b03114409ccc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-04-27T12:37:00.126Z",
  "text": "@",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Wphelp98737",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=60",
   "displayName": "Morteza Janjani",
   "gv": "4",
   "id": "586f82b9d73408ce4f41a600",
   "url": "/Wphelp98737",
   "username": "Wphelp98737",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> ",
  "id": "5ae319792d0e228d7bbad070",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2018-04-27T12:37:13.364Z",
  "text": "@jasdel ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Wphelp98737",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=60",
   "displayName": "Morteza Janjani",
   "gv": "4",
   "id": "586f82b9d73408ce4f41a600",
   "url": "/Wphelp98737",
   "username": "Wphelp98737",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Wphalp98737\" class=\"mention\">@Wphalp98737</span>",
  "id": "5ae3198a5d7286b43a73d357",
  "issues": [],
  "mentions": [
   {
    "screenName": "Wphalp98737",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 23,
  "sent": "2018-04-27T12:37:30.633Z",
  "text": "@Wphalp98737",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nathanhn",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/871810?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/871810?v=4&s=60",
   "displayName": "nathanhn",
   "gv": "4",
   "id": "5ae50d31d73408ce4f978180",
   "url": "/nathanhn",
   "username": "nathanhn",
   "v": 2
  },
  "html": "This is strange.",
  "id": "5ae50dbc270d7d3708186f98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-04-29T00:11:40.754Z",
  "text": "This is strange.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nathanhn",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/871810?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/871810?v=4&s=60",
   "displayName": "nathanhn",
   "gv": "4",
   "id": "5ae50d31d73408ce4f978180",
   "url": "/nathanhn",
   "username": "nathanhn",
   "v": 2
  },
  "html": "Anyway, saw the chat icon, thought I would join...",
  "id": "5ae50ddd2b9dfdbc3add6840",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-04-29T00:12:13.230Z",
  "text": "Anyway, saw the chat icon, thought I would join...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nathanhn",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/871810?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/871810?v=4&s=60",
   "displayName": "nathanhn",
   "gv": "4",
   "id": "5ae50d31d73408ce4f978180",
   "url": "/nathanhn",
   "username": "nathanhn",
   "v": 2
  },
  "html": "No questions, just a distraction at this point. In the middle of setting of full-mesh VPC peering in Go. Jenkins Pipeline /Groovy  wrapped around the awscli in a docker container behind MITMing proxies got a little hairy.",
  "id": "5ae50e6e6d7e07082b454b3e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-04-29T00:14:38.581Z",
  "text": "No questions, just a distraction at this point. In the middle of setting of full-mesh VPC peering in Go. Jenkins Pipeline /Groovy  wrapped around the awscli in a docker container behind MITMing proxies got a little hairy.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nathanhn",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/871810?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/871810?v=4&s=60",
   "displayName": "nathanhn",
   "gv": "4",
   "id": "5ae50d31d73408ce4f978180",
   "url": "/nathanhn",
   "username": "nathanhn",
   "v": 2
  },
  "html": ":smile: ",
  "id": "5ae50e772b9dfdbc3add69d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-04-29T00:14:47.486Z",
  "text": ":smile: ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nathanhn",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/871810?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/871810?v=4&s=60",
   "displayName": "nathanhn",
   "gv": "4",
   "id": "5ae50d31d73408ce4f978180",
   "url": "/nathanhn",
   "username": "nathanhn",
   "v": 2
  },
  "html": "Thought I would &quot;join the conversation&quot; so to speak.",
  "id": "5ae50f136d7e07082b454c69",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-04-29T00:17:23.391Z",
  "text": "Thought I would \"join the conversation\" so to speak.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": ":) welcomes <span data-link-type=\"mention\" data-screen-name=\"nathanhn\" class=\"mention\">@nathanhn</span> ",
  "id": "5ae9ef3197e5506e0490b08d",
  "issues": [],
  "mentions": [
   {
    "screenName": "nathanhn",
    "userId": "5ae50d31d73408ce4f978180",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2018-05-02T17:02:41.174Z",
  "text": ":) welcomes @nathanhn ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "using Go are there any examples of cloning a a codecommit repo?",
  "id": "5aec4b23f2d2d5370461d73a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-05-04T11:59:31.670Z",
  "text": "using Go are there any examples of cloning a a codecommit repo?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/moosakhalid",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=60",
   "displayName": "Moosa Khalid",
   "gv": "4",
   "id": "58773b78d73408ce4f42fc19",
   "url": "/moosakhalid",
   "username": "moosakhalid",
   "v": 5
  },
  "html": "Hi Guys, I&#39;ve got something like the following in golang : ",
  "id": "5af2739b97e5506e04aa231d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-05-09T04:05:47.163Z",
  "text": "Hi Guys, I've got something like the following in golang : ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-05-09T04:06:10.502Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/moosakhalid",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=60",
   "displayName": "Moosa Khalid",
   "gv": "4",
   "id": "58773b78d73408ce4f42fc19",
   "url": "/moosakhalid",
   "username": "moosakhalid",
   "v": 5
  },
  "html": "345      params := &amp;cloudwatch.GetMetricStatisticsInput{<br>346                 StartTime:  &amp;startTime,<br>347                 EndTime:    aws.Time(endTime.UTC()),<br>348                 Period:     aws.Int64(int64(periodCheck)),<br>349                 MetricName: aws.String(metricName),<br>350                 Namespace:  aws.String(nameSpace),<br>351                 Dimensions: []<em>cloudwatch.Dimension{<br>352                         {<br>353                                 Name:  aws.String(dimensionName),<br>354                                 Value: aws.String(opts.SearchName),<br>355                         },<br>356                 },<br>357                 Statistics: []</em>string{<br>358                         aws.String(statistics),<br>359                 },<br>360         }",
  "id": "5af273a918d6bdde37282f14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-05-09T04:06:01.669Z",
  "text": "345      params := &cloudwatch.GetMetricStatisticsInput{\n346                 StartTime:  &startTime,\n347                 EndTime:    aws.Time(endTime.UTC()),\n348                 Period:     aws.Int64(int64(periodCheck)),\n349                 MetricName: aws.String(metricName),\n350                 Namespace:  aws.String(nameSpace),\n351                 Dimensions: []*cloudwatch.Dimension{\n352                         {\n353                                 Name:  aws.String(dimensionName),\n354                                 Value: aws.String(opts.SearchName),\n355                         },\n356                 },\n357                 Statistics: []*string{\n358                         aws.String(statistics),\n359                 },\n360         }",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/moosakhalid",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=60",
   "displayName": "Moosa Khalid",
   "gv": "4",
   "id": "58773b78d73408ce4f42fc19",
   "url": "/moosakhalid",
   "username": "moosakhalid",
   "v": 5
  },
  "html": "I want to dynamically add to Dimensions in this call, for example have the user pass -d Name=x,Value=y Name=a,Value=b  so that multiple dimensions can be passed from command line",
  "id": "5af274056f9af87e0452e3bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-05-09T04:07:33.831Z",
  "text": "I want to dynamically add to Dimensions in this call, for example have the user pass -d Name=x,Value=y Name=a,Value=b  so that multiple dimensions can be passed from command line",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/moosakhalid",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=60",
   "displayName": "Moosa Khalid",
   "gv": "4",
   "id": "58773b78d73408ce4f42fc19",
   "url": "/moosakhalid",
   "username": "moosakhalid",
   "v": 5
  },
  "html": "just looking for any ref or helpful example, I&#39;m a go noob ",
  "id": "5af2741b6f9af87e0452e3d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-05-09T04:07:55.025Z",
  "text": "just looking for any ref or helpful example, I'm a go noob ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/iam_vinoth1590_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/757872523123974145/_a45dd6c.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/757872523123974145/_a45dd6c_bigger.jpg",
   "displayName": "a.vinothkumar",
   "id": "5af2ab48d73408ce4f98a6c2",
   "url": "/iam_vinoth1590_twitter",
   "username": "iam_vinoth1590_twitter"
  },
  "html": "creating api call to enter the receiver account id in sender account ",
  "id": "5af2ab98f2d2d5370474799d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-05-09T08:04:40.220Z",
  "text": "creating api call to enter the receiver account id in sender account ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/iam_vinoth1590_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/757872523123974145/_a45dd6c.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/757872523123974145/_a45dd6c_bigger.jpg",
   "displayName": "a.vinothkumar",
   "id": "5af2ab48d73408ce4f98a6c2",
   "url": "/iam_vinoth1590_twitter",
   "username": "iam_vinoth1590_twitter"
  },
  "html": "can anyone share any api call template",
  "id": "5af2aba56f9af87e04538939",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-05-09T08:04:53.064Z",
  "text": "can anyone share any api call template",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/OneOfOne",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1080443?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1080443?v=4&s=60",
   "displayName": "Ahmed W.",
   "gv": "4",
   "id": "5a26d8ced73408ce4f81df67",
   "url": "/OneOfOne",
   "username": "OneOfOne",
   "v": 2
  },
  "html": "<p>Hello, I&#39;m trying to use the go sdk to access coginto, and i&#39;m not sure how to get a token, i&#39;m creating my cogintoidentity with:</p><pre><code>    <span class=\"rule\"><span class=\"attribute\">creds </span>:<span class=\"value\">= credentials.<span class=\"function\">NewStaticCredentials</span>(<span class=\"string\">\"-id-\"</span>, <span class=\"string\">\"-secret-\"</span>, <span class=\"string\">\"\"</span>)\n    sess := session.<span class=\"function\">Must</span>(session.<span class=\"function\">NewSession</span>(&amp;aws.Config{\n        Credentials: creds,\n    }))</span></span></code></pre><p>but all my requests are refused with <code>The security token included in the request is invalid</code></p>",
  "id": "5af33e507565c5046e78fc25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-05-09T18:30:40.447Z",
  "text": "Hello, I'm trying to use the go sdk to access coginto, and i'm not sure how to get a token, i'm creating my cogintoidentity with:\n\n```\n\tcreds := credentials.NewStaticCredentials(\"-id-\", \"-secret-\", \"\")\n\tsess := session.Must(session.NewSession(&aws.Config{\n\t\tCredentials: creds,\n\t}))\n```\nbut all my requests are refused with `The security token included in the request is invalid`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/niciyan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/21082418?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/21082418?v=4&s=60",
   "displayName": "niciyan",
   "gv": "4",
   "id": "5a571799d73408ce4f878e1c",
   "url": "/niciyan",
   "username": "niciyan",
   "v": 4
  },
  "html": "Hi, Does aws-sdk-go have any method which list avaiable profiles in config files?",
  "id": "5af41038a2d95136332ba867",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-05-10T09:26:16.348Z",
  "text": "Hi, Does aws-sdk-go have any method which list avaiable profiles in config files?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Jeyanthinath",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/2253649?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/2253649?v=4&s=60",
   "displayName": "Jeyanthinath MuthuRam",
   "gv": "4",
   "id": "58bd1a24d73408ce4f4ea806",
   "url": "/Jeyanthinath",
   "username": "Jeyanthinath",
   "v": 4
  },
  "html": "Hi , is there any sdk functions to access multiple tables with single query ?",
  "id": "5af42d32ea553a33ea526653",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-05-10T11:29:54.139Z",
  "text": "Hi , is there any sdk functions to access multiple tables with single query ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/slavash",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1175681?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1175681?v=4&s=60",
   "displayName": "Slava Shklyar",
   "gv": "4",
   "id": "554b887315522ed4b3e010e4",
   "url": "/slavash",
   "username": "slavash",
   "v": 13
  },
  "html": "Is a posting to Kinesis stream is asyncronous?",
  "id": "5af52ccdea553a33ea55adc0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-05-11T05:40:29.576Z",
  "text": "Is a posting to Kinesis stream is asyncronous?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/darksigma",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5534362?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5534362?v=4&s=60",
   "displayName": "Nikhil Buduma",
   "gv": "4",
   "id": "55a7daff8a7b72f55c3f9ae6",
   "url": "/darksigma",
   "username": "darksigma",
   "v": 1
  },
  "html": "is there a quick way to sync a local directory to a directory on S3 and vice versa?",
  "id": "5afb5443b84be71db90cd6f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-05-15T21:42:27.627Z",
  "text": "is there a quick way to sync a local directory to a directory on S3 and vice versa?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "dynamoDB question",
  "id": "5b02f4761cfca775e127a76b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 5,
  "sent": "2018-05-21T16:31:50.372Z",
  "text": "dynamoDB question",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I have struct",
  "id": "5b02f4925666c42eb62b4b64",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-21T16:32:18.650Z",
  "text": "I have struct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<pre><code><span class=\"keyword\">type</span> Issue <span class=\"keyword\">struct</span> {\n    id       <span class=\"typename\">string</span> <span class=\"string\">`dynamodbav:\"id\"`</span>\n    inserted <span class=\"typename\">string</span> <span class=\"string\">`dynamodbav:\"inserted\"`</span>\n    isSent   <span class=\"typename\">string</span> <span class=\"string\">`dynamodbav:\"isSent\"`</span>\n}</code></pre>",
  "id": "5b02f494e0b50c2d05dda2ab",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-21T16:32:20.132Z",
  "text": "\ttype Issue struct {\n\t\tid       string `dynamodbav:\"id\"`\n\t\tinserted string `dynamodbav:\"inserted\"`\n\t\tisSent   string `dynamodbav:\"isSent\"`\n\t}\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<pre><code>result, _ := svc.<span class=\"function\"><span class=\"title\">Query</span><span class=\"params\">(input)</span></span>\n<span class=\"tag\">var</span> t []Issue\nerr = dynamodbattribute.<span class=\"function\"><span class=\"title\">Unmarshal</span><span class=\"params\">(result.Item, &amp;t)</span></span></code></pre>",
  "id": "5b02f4a69ad18967b902a22b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-21T16:32:38.683Z",
  "text": "\tresult, _ := svc.Query(input)\n\tvar t []Issue\n\terr = dynamodbattribute.Unmarshal(result.Item, &t)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "this is all wrapped in a function",
  "id": "5b02f4af52194a4a6701721f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-21T16:32:47.474Z",
  "text": "this is all wrapped in a function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "what I am having problems is the output return type for the function",
  "id": "5b02f5b1d332ee5fad370799",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2018-05-21T16:37:05.553Z",
  "text": "what I am having problems is the output return type for the function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "any thoughts on the proper way to construct a function that queries a dynamoDB table and then returns that data back in an object/struct",
  "id": "5b02fb4ed332ee5fad371f0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-05-21T17:01:02.147Z",
  "text": "any thoughts on the proper way to construct a function that queries a dynamoDB table and then returns that data back in an object/struct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "then I am doing return t",
  "id": "5b0302f45666c42eb62b8008",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-05-21T17:33:40.536Z",
  "text": "then I am doing return t",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "and my return type is: *issue.Issue",
  "id": "5b030309d245fe2eb7ca4441",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2018-05-21T17:34:01.195Z",
  "text": "and my return type is: *issue.Issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "but i am getting undefined:issue .... please help",
  "id": "5b03031f5a1d895fae598f37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-05-21T17:34:23.734Z",
  "text": "but i am getting undefined:issue .... please help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "this is my function definition: ReadDynamoItem func(myIssueNumber string, tablename string, port int, profile string)",
  "id": "5b03067e2df44c2d06464fd8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-05-21T17:48:46.855Z",
  "text": "this is my function definition: ReadDynamoItem func(myIssueNumber string, tablename string, port int, profile string)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "and I am trying to return a struct",
  "id": "5b0306cde0b50c2d05ddedd1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T17:50:05.052Z",
  "text": "and I am trying to return a struct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "Can you paste the full error message?",
  "id": "5b0309655666c42eb62b9ae9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:01:09.874Z",
  "text": "Can you paste the full error message?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "{<br>    &quot;resource&quot;: &quot;/c:/Projects/Go/aws-go/NextGenInfraGithub/lib/helpers.go&quot;,<br>    &quot;owner&quot;: &quot;go-error&quot;,<br>    &quot;code&quot;: &quot;undefined&quot;,<br>    &quot;severity&quot;: 8,<br>    &quot;message&quot;: &quot;undefined: Issue&quot;,<br>    &quot;startLineNumber&quot;: 286,<br>    &quot;startColumn&quot;: 88,<br>    &quot;endLineNumber&quot;: 286,<br>    &quot;endColumn&quot;: 95<br>}",
  "id": "5b030a30d332ee5fad37581a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:04:32.623Z",
  "text": "{\n\t\"resource\": \"/c:/Projects/Go/aws-go/NextGenInfraGithub/lib/helpers.go\",\n\t\"owner\": \"go-error\",\n\t\"code\": \"undefined\",\n\t\"severity\": 8,\n\t\"message\": \"undefined: Issue\",\n\t\"startLineNumber\": 286,\n\t\"startColumn\": 88,\n\t\"endLineNumber\": 286,\n\t\"endColumn\": 95\n}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "that is the file I am keeping my &quot;heler&quot; functions in",
  "id": "5b030a3cb84be71db924a5a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:04:44.077Z",
  "text": "that is the file I am keeping my \"heler\" functions in",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I can paste the whole function",
  "id": "5b030a43e1cf621dba388ea9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:04:51.746Z",
  "text": "I can paste the whole function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<p>func ReadDynamoItem(myIssueNumber string, tablename string, port int, profile string) *Issue {</p><pre><code>type Issue struct {\n    Inserted string `json<span class=\"value\">:<span class=\"string\">\"inserted\"</span> dynamodbav:<span class=\"string\">\"inserted\"</span>`\n}\n\n//Read in the ini credentials file, this is the aws creds file\ncfg, err := ini.<span class=\"function\">Load</span>(myFileName)\nif err != nil {\n    //return fmt.<span class=\"function\">Printf</span>(<span class=\"string\">\"Fail to read file: %v\"</span>, err)\n    //os.<span class=\"function\">Exit</span>(<span class=\"number\">1</span>)\n}\n//Populate the variables based on the ini [creds file]\nregion := cfg.<span class=\"function\">Section</span>(profile).<span class=\"function\">Key</span>(<span class=\"string\">\"region\"</span>).<span class=\"function\">String</span>()\naccessKey := cfg.<span class=\"function\">Section</span>(profile).<span class=\"function\">Key</span>(<span class=\"string\">\"aws_access_key_id\"</span>).<span class=\"function\">String</span>()\nsecretKey := cfg.<span class=\"function\">Section</span>(profile).<span class=\"function\">Key</span>(<span class=\"string\">\"aws_secret_access_key\"</span>).<span class=\"function\">String</span>()\ntoken := cfg.<span class=\"function\">Section</span>(profile).<span class=\"function\">Key</span>(<span class=\"string\">\"aws_session_token\"</span>).<span class=\"function\">String</span>()\n\n//Call function [awsSession] in order to create session object [svc]\nsvc := <span class=\"function\">AwsSession</span>(accessKey, secretKey, port, region, token)\n\ninput := &amp;dynamodb.QueryInput{\n    ExpressionAttributeValues: map[string]*dynamodb.AttributeValue{\n        <span class=\"string\">\":v1\"</span>: {\n            S: aws.<span class=\"function\">String</span>(myIssueNumber),\n        },\n    },\n    KeyConditionExpression: aws.<span class=\"function\">String</span>(<span class=\"string\">\"id = :v1\"</span>),\n    ProjectionExpression:   aws.<span class=\"function\">String</span>(<span class=\"string\">\"id,inserted,isSent\"</span>),\n    TableName:              aws.<span class=\"function\">String</span>(tablename),\n}\nresult, _ := svc.<span class=\"function\">Query</span>(input)\nt := Issue{}\n//err = dynamodbattribute.<span class=\"function\">Unmarshal</span>(result.Items[inserted],&amp;t)\nerr = dynamodbattribute.<span class=\"function\">UnmarshalListOfMaps</span>(result.Items, &amp;t)\nreturn t</span></code></pre><p>} //function end</p>",
  "id": "5b030a58a2d951363359e68a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:05:12.179Z",
  "text": "func ReadDynamoItem(myIssueNumber string, tablename string, port int, profile string) *Issue {\n\n\ttype Issue struct {\n\t\tInserted string `json:\"inserted\" dynamodbav:\"inserted\"`\n\t}\n\n\t//Read in the ini credentials file, this is the aws creds file\n\tcfg, err := ini.Load(myFileName)\n\tif err != nil {\n\t\t//return fmt.Printf(\"Fail to read file: %v\", err)\n\t\t//os.Exit(1)\n\t}\n\t//Populate the variables based on the ini [creds file]\n\tregion := cfg.Section(profile).Key(\"region\").String()\n\taccessKey := cfg.Section(profile).Key(\"aws_access_key_id\").String()\n\tsecretKey := cfg.Section(profile).Key(\"aws_secret_access_key\").String()\n\ttoken := cfg.Section(profile).Key(\"aws_session_token\").String()\n\n\t//Call function [awsSession] in order to create session object [svc]\n\tsvc := AwsSession(accessKey, secretKey, port, region, token)\n\n\tinput := &dynamodb.QueryInput{\n\t\tExpressionAttributeValues: map[string]*dynamodb.AttributeValue{\n\t\t\t\":v1\": {\n\t\t\t\tS: aws.String(myIssueNumber),\n\t\t\t},\n\t\t},\n\t\tKeyConditionExpression: aws.String(\"id = :v1\"),\n\t\tProjectionExpression:   aws.String(\"id,inserted,isSent\"),\n\t\tTableName:              aws.String(tablename),\n\t}\n\tresult, _ := svc.Query(input)\n\tt := Issue{}\n\t//err = dynamodbattribute.Unmarshal(result.Items[inserted],&t)\n\terr = dynamodbattribute.UnmarshalListOfMaps(result.Items, &t)\n\treturn t\n\n} //function end",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "the code is a little &quot;crappy&quot; I know...I just want to get it working then I will clean up and make it work",
  "id": "5b030a709ad18967b9030066",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:05:36.696Z",
  "text": "the code is a little \"crappy\" I know...I just want to get it working then I will clean up and make it work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "the profile stuff I will abstract into a new function as well...and slim it down",
  "id": "5b030a8aa2d951363359e701",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:06:02.438Z",
  "text": "the profile stuff I will abstract into a new function as well...and slim it down",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "any help would be greatly appreciated",
  "id": "5b030ab75a1d895fae59ad16",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:06:47.608Z",
  "text": "any help would be greatly appreciated",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "What compiler is giving you that json output?",
  "id": "5b030b669ad18967b90303ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:09:42.515Z",
  "text": "What compiler is giving you that json output?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "and what&#39;s online 286?",
  "id": "5b030b79677d792bd1a3f41d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:10:01.992Z",
  "text": "and what's online 286?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "that is VsCode",
  "id": "5b030b97b84be71db924ac38",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:10:31.896Z",
  "text": "that is VsCode",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "this is what I get when I do a go build: lib\\helpers.go:286:88: undefined: Issue",
  "id": "5b030bb2bd10f34a681d7eb4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:10:58.776Z",
  "text": "this is what I get when I do a go build: lib\\helpers.go:286:88: undefined: Issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "286:88: undefined: Issue this refers to my Issue output in the function signature",
  "id": "5b030bcf2df44c2d064668e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:11:27.587Z",
  "text": "286:88: undefined: Issue this refers to my Issue output in the function signature",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "is that in the code you pasted?",
  "id": "5b030bf6bd10f34a681d8065",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:12:06.316Z",
  "text": "is that in the code you pasted?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "yes Sir",
  "id": "5b030bfd1cfca775e1280a1a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:12:13.397Z",
  "text": "yes Sir",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "Which line is 286?",
  "id": "5b030c05bd10f34a681d8082",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:12:21.210Z",
  "text": "Which line is 286?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "everything I pasted is my function",
  "id": "5b030c0641f54f22e2490265",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:12:22.480Z",
  "text": "everything I pasted is my function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "Where is the declaration?",
  "id": "5b030c0de0b50c2d05de0551",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:12:29.823Z",
  "text": "Where is the declaration?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "func ReadDynamoItem(myIssueNumber string, tablename string, port int, profile string) *Issue {",
  "id": "5b030c19677d792bd1a3f670",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:12:41.075Z",
  "text": "func ReadDynamoItem(myIssueNumber string, tablename string, port int, profile string) *Issue {",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "286 is the *Issue",
  "id": "5b030c22e0b50c2d05de058f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2018-05-21T18:12:50.396Z",
  "text": "286 is the *Issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "and what you pasted is the body?",
  "id": "5b030c2341f54f22e24902c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:12:51.841Z",
  "text": "and what you pasted is the body?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "yes, that is the body of the function",
  "id": "5b030c2bbd10f34a681d810f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:12:59.863Z",
  "text": "yes, that is the body of the function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "gitter kind of hacked it aprt",
  "id": "5b030c329ad18967b90306c7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2018-05-21T18:13:06.855Z",
  "text": "gitter kind of hacked it aprt",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "gotcha.  your problem is the declaration",
  "id": "5b030c342df44c2d06466ad0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-05-21T18:13:08.665Z",
  "text": "gotcha.  your problem is the declaration",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "apart",
  "id": "5b030c352df44c2d06466ad8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-05-21T18:13:09.721Z",
  "text": "apart",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "Issue is scoped to just the body of ReadDynamoItem, you can&#39;t return it because it doesn&#39;t exist outside the local scope",
  "id": "5b030c4e5666c42eb62ba7b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-05-21T18:13:34.261Z",
  "text": "Issue is scoped to just the body of ReadDynamoItem, you can't return it because it doesn't exist outside the local scope",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "move type Issue struct outside the body declaration",
  "id": "5b030c5bf04ce53632f5c954",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-05-21T18:13:47.010Z",
  "text": "move type Issue struct outside the body declaration",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "and that should be it?",
  "id": "5b030c6c5666c42eb62ba81b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-05-21T18:14:04.301Z",
  "text": "and that should be it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "there could be more, but that&#39;s the first",
  "id": "5b030c76bd10f34a681d81fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-05-21T18:14:14.410Z",
  "text": "there could be more, but that's the first",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "ok...got more :)",
  "id": "5b030c98e1cf621dba38989d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-05-21T18:14:48.119Z",
  "text": "ok...got more :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "cannot use t (type Issue) as type *Issue in return argument",
  "id": "5b030c99b84be71db924b012",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-05-21T18:14:49.955Z",
  "text": "cannot use t (type Issue) as type *Issue in return argument",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "can you paste the whole code?",
  "id": "5b030cac52194a4a6701d56f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-05-21T18:15:08.822Z",
  "text": "can you paste the whole code?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<p>func ReadDynamoItem(myIssueNumber string, tablename string, port int, profile string) *Issue {<br>    //Read in the ini credentials file, this is the aws creds file<br>    cfg, err := ini.Load(myFileName)<br>    if err != nil {<br>        //return fmt.Printf(&quot;Fail to read file: %v&quot;, err)<br>        //os.Exit(1)<br>    }<br>    //Populate the variables based on the ini [creds file]<br>    region := cfg.Section(profile).Key(&quot;region&quot;).String()<br>    accessKey := cfg.Section(profile).Key(&quot;aws_access_key_id&quot;).String()<br>    secretKey := cfg.Section(profile).Key(&quot;aws_secret_access_key&quot;).String()<br>    token := cfg.Section(profile).Key(&quot;aws_session_token&quot;).String()</p><pre><code>//<span class=\"operator\"><span class=\"keyword\">Call</span> <span class=\"keyword\">function</span> [awsSession] <span class=\"keyword\">in</span> <span class=\"keyword\">order</span> <span class=\"keyword\">to</span> <span class=\"keyword\">create</span> <span class=\"keyword\">session</span> object [svc]\nsvc := AwsSession(accessKey, secretKey, port, region, token)\n\n<span class=\"keyword\">input</span> := &amp;dynamodb.QueryInput{\n    ExpressionAttributeValues: map[<span class=\"keyword\">string</span>]*dynamodb.AttributeValue{\n        <span class=\"string\">\":v1\"</span>: {\n            S: aws.<span class=\"keyword\">String</span>(myIssueNumber),\n        },\n    },\n    KeyConditionExpression: aws.<span class=\"keyword\">String</span>(<span class=\"string\">\"id = :v1\"</span>),\n    ProjectionExpression:   aws.<span class=\"keyword\">String</span>(<span class=\"string\">\"id,inserted,isSent\"</span>),\n    TableName:              aws.<span class=\"keyword\">String</span>(tablename),\n}\nresult, _ := svc.<span class=\"keyword\">Query</span>(<span class=\"keyword\">input</span>)\nt := Issue{}\n//err = dynamodbattribute.Unmarshal(result.Items[inserted],&amp;t)\nerr = dynamodbattribute.UnmarshalListOfMaps(result.Items, &amp;t)\n<span class=\"keyword\">return</span> t</span></code></pre><p>} //function end</p>",
  "id": "5b030cd6d332ee5fad3765dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-05-21T18:15:49.978Z",
  "text": "func ReadDynamoItem(myIssueNumber string, tablename string, port int, profile string) *Issue {\n\t//Read in the ini credentials file, this is the aws creds file\n\tcfg, err := ini.Load(myFileName)\n\tif err != nil {\n\t\t//return fmt.Printf(\"Fail to read file: %v\", err)\n\t\t//os.Exit(1)\n\t}\n\t//Populate the variables based on the ini [creds file]\n\tregion := cfg.Section(profile).Key(\"region\").String()\n\taccessKey := cfg.Section(profile).Key(\"aws_access_key_id\").String()\n\tsecretKey := cfg.Section(profile).Key(\"aws_secret_access_key\").String()\n\ttoken := cfg.Section(profile).Key(\"aws_session_token\").String()\n\n\t//Call function [awsSession] in order to create session object [svc]\n\tsvc := AwsSession(accessKey, secretKey, port, region, token)\n\n\tinput := &dynamodb.QueryInput{\n\t\tExpressionAttributeValues: map[string]*dynamodb.AttributeValue{\n\t\t\t\":v1\": {\n\t\t\t\tS: aws.String(myIssueNumber),\n\t\t\t},\n\t\t},\n\t\tKeyConditionExpression: aws.String(\"id = :v1\"),\n\t\tProjectionExpression:   aws.String(\"id,inserted,isSent\"),\n\t\tTableName:              aws.String(tablename),\n\t}\n\tresult, _ := svc.Query(input)\n\tt := Issue{}\n\t//err = dynamodbattribute.Unmarshal(result.Items[inserted],&t)\n\terr = dynamodbattribute.UnmarshalListOfMaps(result.Items, &t)\n\treturn t\n} //function end",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I am not sure why it hacks it up",
  "id": "5b030ce12df44c2d06466dc0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-05-21T18:16:01.910Z",
  "text": "I am not sure why it hacks it up",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<p>```func ReadDynamoItem(myIssueNumber string, tablename string, port int, profile string) *Issue {</p><pre><code><span class=\"comment\">//Read in the ini credentials file, this is the aws creds file</span>\ncfg, err <span class=\"value\">:= ini.<span class=\"function\">Load</span>(myFileName)\nif err != nil {\n    //return fmt.<span class=\"function\">Printf</span>(<span class=\"string\">\"Fail to read file: %v\"</span>, err)\n    //os.<span class=\"function\">Exit</span>(<span class=\"number\">1</span>)\n}\n//Populate the variables based on the ini [creds file]\nregion := cfg.<span class=\"function\">Section</span>(profile).<span class=\"function\">Key</span>(<span class=\"string\">\"region\"</span>).<span class=\"function\">String</span>()\naccessKey := cfg.<span class=\"function\">Section</span>(profile).<span class=\"function\">Key</span>(<span class=\"string\">\"aws_access_key_id\"</span>).<span class=\"function\">String</span>()\nsecretKey := cfg.<span class=\"function\">Section</span>(profile).<span class=\"function\">Key</span>(<span class=\"string\">\"aws_secret_access_key\"</span>).<span class=\"function\">String</span>()\ntoken := cfg.<span class=\"function\">Section</span>(profile).<span class=\"function\">Key</span>(<span class=\"string\">\"aws_session_token\"</span>).<span class=\"function\">String</span>()\n\n//Call function [awsSession] in order to create session object [svc]\nsvc := <span class=\"function\">AwsSession</span>(accessKey, secretKey, port, region, token)\n\ninput := &amp;dynamodb.QueryInput{\n    ExpressionAttributeValues: map[string]*dynamodb.AttributeValue{\n        <span class=\"string\">\":v1\"</span>: {\n            S: aws.<span class=\"function\">String</span>(myIssueNumber),\n        },\n    },\n    KeyConditionExpression: aws.<span class=\"function\">String</span>(<span class=\"string\">\"id = :v1\"</span>),\n    ProjectionExpression:   aws.<span class=\"function\">String</span>(<span class=\"string\">\"id,inserted,isSent\"</span>),\n    TableName:              aws.<span class=\"function\">String</span>(tablename),\n}\nresult, _ := svc.<span class=\"function\">Query</span>(input)\nt := Issue{}\n//err = dynamodbattribute.<span class=\"function\">Unmarshal</span>(result.Items[inserted],&amp;t)\nerr = dynamodbattribute.<span class=\"function\">UnmarshalListOfMaps</span>(result.Items, &amp;t)\nreturn t</span></code></pre><p>} //function end```</p>",
  "id": "5b030cf6d245fe2eb7ca6c56",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-05-21T18:16:22.180Z",
  "text": "```func ReadDynamoItem(myIssueNumber string, tablename string, port int, profile string) *Issue {\n\n\t//Read in the ini credentials file, this is the aws creds file\n\tcfg, err := ini.Load(myFileName)\n\tif err != nil {\n\t\t//return fmt.Printf(\"Fail to read file: %v\", err)\n\t\t//os.Exit(1)\n\t}\n\t//Populate the variables based on the ini [creds file]\n\tregion := cfg.Section(profile).Key(\"region\").String()\n\taccessKey := cfg.Section(profile).Key(\"aws_access_key_id\").String()\n\tsecretKey := cfg.Section(profile).Key(\"aws_secret_access_key\").String()\n\ttoken := cfg.Section(profile).Key(\"aws_session_token\").String()\n\n\t//Call function [awsSession] in order to create session object [svc]\n\tsvc := AwsSession(accessKey, secretKey, port, region, token)\n\n\tinput := &dynamodb.QueryInput{\n\t\tExpressionAttributeValues: map[string]*dynamodb.AttributeValue{\n\t\t\t\":v1\": {\n\t\t\t\tS: aws.String(myIssueNumber),\n\t\t\t},\n\t\t},\n\t\tKeyConditionExpression: aws.String(\"id = :v1\"),\n\t\tProjectionExpression:   aws.String(\"id,inserted,isSent\"),\n\t\tTableName:              aws.String(tablename),\n\t}\n\tresult, _ := svc.Query(input)\n\tt := Issue{}\n\t//err = dynamodbattribute.Unmarshal(result.Items[inserted],&t)\n\terr = dynamodbattribute.UnmarshalListOfMaps(result.Items, &t)\n\treturn t\n\n} //function end```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "ReadDynamoItem declares return type of *Issue",
  "id": "5b030d2052194a4a6701d79e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-05-21T18:17:04.263Z",
  "text": "ReadDynamoItem declares return type of *Issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "you&#39;re returning Issue",
  "id": "5b030d25b84be71db924b2b2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-05-21T18:17:09.422Z",
  "text": "you're returning Issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "yes",
  "id": "5b030d29bd10f34a681d83e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-05-21T18:17:13.171Z",
  "text": "yes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "return &amp;t will fix that",
  "id": "5b030d2a677d792bd1a3fa17",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-05-21T18:17:14.513Z",
  "text": "return &t will fix that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "apparently I am dumb",
  "id": "5b030d47b84be71db924b3a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-05-21T18:17:43.039Z",
  "text": "apparently I am dumb",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I am really damn dumb",
  "id": "5b030d56b84be71db924b3d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-05-21T18:17:58.364Z",
  "text": "I am really damn dumb",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "I&#39;ve done that a bunch myself",
  "id": "5b030d61b84be71db924b3eb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-05-21T18:18:09.561Z",
  "text": "I've done that a bunch myself",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "so my result set is: &amp;{}",
  "id": "5b030d7f2df44c2d06466fe6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-05-21T18:18:39.554Z",
  "text": "so my result set is: &{}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "there is apparently something else I am being dumb with",
  "id": "5b030d8be1cf621dba389b4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-05-21T18:18:51.375Z",
  "text": "there is apparently something else I am being dumb with",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "Just looking over the code, there are number of things I&#39;d suggest:",
  "id": "5b030eb09ad18967b9031497",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-05-21T18:23:44.822Z",
  "text": "Just looking over the code, there are number of things I'd suggest:",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "{<br>  Count: 1,<br>  Items: [{<br>      id: {<br>        S: &quot;1002&quot;<br>      },<br>      isSent: {<br>        S: &quot;0&quot;<br>      },<br>      inserted: {<br>        S: &quot;Mon, 21 May 2018 05:57:45 EDT&quot;<br>      }<br>    }],<br>  ScannedCount: 1<br>}",
  "id": "5b030eb65666c42eb62bb10e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-05-21T18:23:50.398Z",
  "text": "{\n  Count: 1,\n  Items: [{\n      id: {\n        S: \"1002\"\n      },\n      isSent: {\n        S: \"0\"\n      },\n      inserted: {\n        S: \"Mon, 21 May 2018 05:57:45 EDT\"\n      }\n    }],\n  ScannedCount: 1\n}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "that is the actual output from the query result and I am trying to just pair it down to what I need",
  "id": "5b030ec6bd10f34a681d8851",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-05-21T18:24:06.778Z",
  "text": "that is the actual output from the query result and I am trying to just pair it down to what I need",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "but please give me some ideas on how to make this better",
  "id": "5b030ecee1cf621dba389fda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-05-21T18:24:14.648Z",
  "text": "but please give me some ideas on how to make this better",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "<ul>\n<li>don&#39;t ignore errors, UnmarshalListOfMaps is being passed <em>Issue where I&#39;m willing to bet what it expects is </em>[]Issue</li>\n</ul>\n",
  "id": "5b030ee852194a4a6701e117",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-05-21T18:24:40.534Z",
  "text": "- don't ignore errors, UnmarshalListOfMaps is being passed *Issue where I'm willing to bet what it expects is *[]Issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "<ul>\n<li>Query returns a cursor so if you have a long list, you&#39;ll need to call it multiple times</li>\n</ul>\n",
  "id": "5b030f029ad18967b90316b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-05-21T18:25:06.438Z",
  "text": "- Query returns a cursor so if you have a long list, you'll need to call it multiple times",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "thank you",
  "id": "5b031ef9d245fe2eb7caaf37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-05-21T19:33:13.177Z",
  "text": "thank you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"savaki\" class=\"mention\">@savaki</span> still trying to get this thing to return data",
  "id": "5b033b5241f54f22e249ae8d",
  "issues": [],
  "mentions": [
   {
    "screenName": "savaki",
    "userId": "5552319a15522ed4b3e0482f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2018-05-21T21:34:10.773Z",
  "text": "@savaki still trying to get this thing to return data",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<a href=\"https://files.gitter.im/aws/aws-sdk-go/ICFH/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/aws/aws-sdk-go/ICFH/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
  "id": "5b0355eae0b50c2d05df09fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-05-21T23:27:38.812Z",
  "text": "[![image.png](https://files.gitter.im/aws/aws-sdk-go/ICFH/thumb/image.png)](https://files.gitter.im/aws/aws-sdk-go/ICFH/image.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/aws/aws-sdk-go/ICFH/thumb/image.png"
   },
   {
    "url": "https://files.gitter.im/aws/aws-sdk-go/ICFH/image.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "with that code I get the following when I execute the application: UnmarshalTypeError: cannot unmarshal list into Go value of type anyname.Issue",
  "id": "5b0356275666c42eb62cadb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-05-21T23:28:39.428Z",
  "text": "with that code I get the following when I execute the application: UnmarshalTypeError: cannot unmarshal list into Go value of type anyname.Issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "the name of my helper package is called &quot;anyname&quot;",
  "id": "5b03563952194a4a6702e6d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-05-21T23:28:57.566Z",
  "text": "the name of my helper package is called \"anyname\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "I would have expected UnmarshalListOfMaps to return an error",
  "id": "5b035661d245fe2eb7cb698a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-05-21T23:29:37.795Z",
  "text": "I would have expected UnmarshalListOfMaps to return an error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "You&#39;re asking for a List, but providing a scalar, Issue",
  "id": "5b03567ee0b50c2d05df0b6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-05-21T23:30:06.092Z",
  "text": "You're asking for a List, but providing a scalar, Issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "Try changing issue to []Issue",
  "id": "5b03568dd332ee5fad386af3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-05-21T23:30:21.003Z",
  "text": "Try changing issue to []Issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "also, you&#39;re ignoring the error from Query",
  "id": "5b0356aa677d792bd1a50ba7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-05-21T23:30:50.946Z",
  "text": "also, you're ignoring the error from Query",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "yeah, I am going to look at that now",
  "id": "5b0358cad245fe2eb7cb6f00",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-05-21T23:39:54.236Z",
  "text": "yeah, I am going to look at that now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "thank you <span data-link-type=\"mention\" data-screen-name=\"savaki\" class=\"mention\">@savaki</span>  for bearing with me",
  "id": "5b0358d4f04ce53632f6d252",
  "issues": [],
  "mentions": [
   {
    "screenName": "savaki",
    "userId": "5552319a15522ed4b3e0482f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2018-05-21T23:40:04.127Z",
  "text": "thank you @savaki  for bearing with me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "Try changing issue to []Issue: do you mean --&gt; issue := []Issue",
  "id": "5b035978f04ce53632f6d424",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-05-21T23:42:48.588Z",
  "text": "Try changing issue to []Issue: do you mean --> issue := []Issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "<code>var issues []Issue</code>",
  "id": "5b03598ad245fe2eb7cb71b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-05-21T23:43:06.784Z",
  "text": "`var issues []Issue`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "Query returns a list of Items",
  "id": "5b03599652194a4a6702edeb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-05-21T23:43:18.918Z",
  "text": "Query returns a list of Items",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "at least the query does not return errors",
  "id": "5b0359ce52194a4a6702ee44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-05-21T23:44:14.114Z",
  "text": "at least the query does not return errors",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "cannot use &amp;issue (type *[]Issue) as type Issue in return argument",
  "id": "5b035a7ad245fe2eb7cb7404",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-05-21T23:47:06.469Z",
  "text": "cannot use &issue (type *[]Issue) as type Issue in return argument",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "this is my return: cannot use &amp;issue (type *[]Issue) as type Issue in return argument",
  "id": "5b035a8b9ad18967b9041cc4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-05-21T23:47:23.413Z",
  "text": "this is my return: cannot use &issue (type *[]Issue) as type Issue in return argument",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "return &amp;issue",
  "id": "5b035a98bd10f34a681e9656",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-05-21T23:47:36.210Z",
  "text": "return &issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "Query returns a list, you need to ensure that your list contains your entry, then you return the entry from the list you want, probably issues[0]",
  "id": "5b035ab4677d792bd1a51710",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-05-21T23:48:04.535Z",
  "text": "Query returns a list, you need to ensure that your list contains your entry, then you return the entry from the list you want, probably issues[0]",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "ok, I will check that out...thanks again for the help",
  "id": "5b035afab84be71db925bcdf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-05-21T23:49:14.741Z",
  "text": "ok, I will check that out...thanks again for the help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "trying to learn Golang and DynamoDB at the same time ... maybe not so good",
  "id": "5b035b11d245fe2eb7cb75fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-05-21T23:49:37.580Z",
  "text": "trying to learn Golang and DynamoDB at the same time ... maybe not so good",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "oh HECK ya...getting much further",
  "id": "5b035b4e2df44c2d06479118",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-05-21T23:50:38.159Z",
  "text": "oh HECK ya...getting much further",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "here is my return now: &amp;{1002 Mon, 21 May 2018 05:57:45 EDT 0}",
  "id": "5b035b66d245fe2eb7cb7677",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-05-21T23:51:02.736Z",
  "text": "here is my return now: &{1002 Mon, 21 May 2018 05:57:45 EDT 0}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "so let me ask this....why the &quot;&amp;&quot; in front of the result set ?",
  "id": "5b035bcb41f54f22e24a133d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-05-21T23:52:43.897Z",
  "text": "so let me ask this....why the \"&\" in front of the result set ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "This may not work, but it&#39;s probably closer to what you want.",
  "id": "5b035c50bd10f34a681e9b43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-05-21T23:54:56.436Z",
  "text": "This may not work, but it's probably closer to what you want.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "<pre><code><span class=\"keyword\">package</span> dealerdao\n\n<span class=\"keyword\">import</span> (\n    <span class=\"string\">\"context\"</span>\n\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/aws\"</span>\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/service/dynamodb\"</span>\n    <span class=\"string\">\"github.com/aws/aws-sdk-go/service/dynamodb/dynamodbattribute\"</span>\n)\n\n<span class=\"keyword\">type</span> Issue <span class=\"keyword\">struct</span> {\n    ID <span class=\"typename\">string</span> <span class=\"string\">`dynamodbav:\"id\"`</span>\n}\n\n<span class=\"keyword\">type</span> DAO <span class=\"keyword\">struct</span> {\n    api       *dynamodb.DynamoDB\n    tableName <span class=\"typename\">string</span>\n}\n\n<span class=\"keyword\">func</span> (d DAO) Find(ctx context.Context, id <span class=\"typename\">string</span>) (*Issue, error) {\n    out, err := d.api.GetItemWithContext(ctx, &amp;dynamodb.GetItemInput{\n        TableName:      aws.String(d.tableName),\n        ConsistentRead: aws.Bool(<span class=\"constant\">true</span>),\n        Key: <span class=\"keyword\">map</span>[<span class=\"typename\">string</span>]*dynamodb.AttributeValue{\n            <span class=\"string\">\"id\"</span>: {S: aws.String(id)},\n        },\n    })\n    <span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n        <span class=\"keyword\">return</span> <span class=\"constant\">nil</span>, err\n    }\n\n    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(out.Item) == <span class=\"number\">0</span> {\n        <span class=\"keyword\">return</span> <span class=\"constant\">nil</span>, <span class=\"constant\">nil</span> <span class=\"comment\">// item not found</span>\n    }\n\n    <span class=\"keyword\">var</span> issue Issue\n    <span class=\"keyword\">if</span> err := dynamodbattribute.UnmarshalMap(out.Item, &amp;issue); err != <span class=\"constant\">nil</span> {\n        <span class=\"keyword\">return</span> <span class=\"constant\">nil</span>, err\n    }\n\n    <span class=\"keyword\">return</span> &amp;issue, <span class=\"constant\">nil</span>\n}</code></pre>",
  "id": "5b035c509ad18967b904203d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-05-21T23:54:56.784Z",
  "text": "```\npackage dealerdao\n\nimport (\n\t\"context\"\n\n\t\"github.com/aws/aws-sdk-go/aws\"\n\t\"github.com/aws/aws-sdk-go/service/dynamodb\"\n\t\"github.com/aws/aws-sdk-go/service/dynamodb/dynamodbattribute\"\n)\n\ntype Issue struct {\n\tID string `dynamodbav:\"id\"`\n}\n\ntype DAO struct {\n\tapi       *dynamodb.DynamoDB\n\ttableName string\n}\n\nfunc (d DAO) Find(ctx context.Context, id string) (*Issue, error) {\n\tout, err := d.api.GetItemWithContext(ctx, &dynamodb.GetItemInput{\n\t\tTableName:      aws.String(d.tableName),\n\t\tConsistentRead: aws.Bool(true),\n\t\tKey: map[string]*dynamodb.AttributeValue{\n\t\t\t\"id\": {S: aws.String(id)},\n\t\t},\n\t})\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tif len(out.Item) == 0 {\n\t\treturn nil, nil // item not found\n\t}\n\n\tvar issue Issue\n\tif err := dynamodbattribute.UnmarshalMap(out.Item, &issue); err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn &issue, nil\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "&amp; means the address of something",
  "id": "5b035c6d5666c42eb62cc04e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-05-21T23:55:25.028Z",
  "text": "& means the address of something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "another way to think about it is &amp; means return a mutable version of something",
  "id": "5b035c78d245fe2eb7cb78e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-05-21T23:55:36.797Z",
  "text": "another way to think about it is & means return a mutable version of something",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "thank you on both notes :)",
  "id": "5b035cc6d332ee5fad387920",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-05-21T23:56:54.914Z",
  "text": "thank you on both notes :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "that did it...thank you ....thank you .... thank you...thank you",
  "id": "5b035d92f04ce53632f6dde7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-05-22T00:00:18.873Z",
  "text": "that did it...thank you ....thank you .... thank you...thank you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"savaki\" class=\"mention\">@savaki</span> ... are you an AWS Dev perhaps? Just wondering...you are rocking it",
  "id": "5b035dc0bd10f34a681e9e7c",
  "issues": [],
  "mentions": [
   {
    "screenName": "savaki",
    "userId": "5552319a15522ed4b3e0482f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2018-05-22T00:01:04.362Z",
  "text": "@savaki ... are you an AWS Dev perhaps? Just wondering...you are rocking it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "nope, I just do a lot of work with go and aws",
  "id": "5b035dd3e0b50c2d05df20cc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-05-22T00:01:23.782Z",
  "text": "nope, I just do a lot of work with go and aws",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "well either way...you rock that",
  "id": "5b035df32df44c2d064798d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-05-22T00:01:55.856Z",
  "text": "well either way...you rock that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "thanks.  happy to help.",
  "id": "5b035dfc5666c42eb62cc66b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-05-22T00:02:04.209Z",
  "text": "thanks.  happy to help.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "go forward...no pun intended...you might see more of me asking for help",
  "id": "5b035e18e1cf621dba39afa8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-05-22T00:02:32.652Z",
  "text": "go forward...no pun intended...you might see more of me asking for help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I am a big <a href=\"http://Node.js/python/powershell\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Node.js/python/powershell</a> guy and wanted to learn a new Language",
  "id": "5b035e3d1cfca775e12929e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-05-22T00:03:09.334Z",
  "text": "I am a big Node.js/python/powershell guy and wanted to learn a new Language",
  "unread": false,
  "urls": [
   {
    "url": "http://Node.js/python/powershell"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "again thank you so much <span data-link-type=\"mention\" data-screen-name=\"savaki\" class=\"mention\">@savaki</span> ",
  "id": "5b035ea85a1d895fae5aca6f",
  "issues": [],
  "mentions": [
   {
    "screenName": "savaki",
    "userId": "5552319a15522ed4b3e0482f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2018-05-22T00:04:56.579Z",
  "text": "again thank you so much @savaki ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/brianterry",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18149926?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18149926?v=4&s=60",
   "displayName": "Brian Terry",
   "gv": "4",
   "id": "5a2ae1a9d73408ce4f826fff",
   "url": "/brianterry",
   "username": "brianterry",
   "v": 1
  },
  "html": "Hey guys!",
  "id": "5b038bdd677d792bd1a5934b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-05-22T03:17:49.681Z",
  "text": "Hey guys!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/brianterry",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18149926?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18149926?v=4&s=60",
   "displayName": "Brian Terry",
   "gv": "4",
   "id": "5a2ae1a9d73408ce4f826fff",
   "url": "/brianterry",
   "username": "brianterry",
   "v": 1
  },
  "html": "I&#39;m working with the configservice.  I see that it has a call, BatchGetResourceConfig, that returns a BatchGetResourceConfigOutput, with a slice of  BaseConfigurationItem&#39;s.  In the doc&#39;s I see a BaseConfigurationItem  and a ConfigurationItem ,but only ConfigurationItem has a Relationships []<em>Relationship. Is there any way I can get the Relationships []</em>Relationship, from BatchGetResources?",
  "id": "5b038dafd332ee5fad38f30a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-05-22T03:25:35.934Z",
  "text": "I'm working with the configservice.  I see that it has a call, BatchGetResourceConfig, that returns a BatchGetResourceConfigOutput, with a slice of  BaseConfigurationItem's.  In the doc's I see a BaseConfigurationItem  and a ConfigurationItem ,but only ConfigurationItem has a Relationships []*Relationship. Is there any way I can get the Relationships []*Relationship, from BatchGetResources?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"savaki\" class=\"mention\">@savaki</span> .... thanks again for all you help...things are going well",
  "id": "5b043009a2d95136335e01fe",
  "issues": [],
  "mentions": [
   {
    "screenName": "savaki",
    "userId": "5552319a15522ed4b3e0482f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2018-05-22T14:58:17.543Z",
  "text": "@savaki .... thanks again for all you help...things are going well",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/gianarb",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1630267?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1630267?v=4&s=60",
   "displayName": "Gianluca Arbezzano",
   "gv": "4",
   "id": "53270c445e986b0712efec8f",
   "url": "/gianarb",
   "username": "gianarb",
   "v": 13
  },
  "html": "Hello! I have a question, how can I check if I am getting an error max limit? I would like to exit from my retry if I get that time of error",
  "id": "5b067ce7d88b24150d2f5920",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-05-24T08:50:47.351Z",
  "text": "Hello! I have a question, how can I check if I am getting an error max limit? I would like to exit from my retry if I get that time of error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"savaki\" class=\"mention\">@savaki</span> another question for you",
  "id": "5b07144996af8f1186c99c11",
  "issues": [],
  "mentions": [
   {
    "screenName": "savaki",
    "userId": "5552319a15522ed4b3e0482f",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2018-05-24T19:36:41.059Z",
  "text": "@savaki another question for you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I have my stuff working...and now need to turn it into a lambda...non-issue...however ... cannot seem to get a dynamoDB session client working",
  "id": "5b071475fb0f4a0bfe6a2cec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-05-24T19:37:25.436Z",
  "text": "I have my stuff working...and now need to turn it into a lambda...non-issue...however ... cannot seem to get a dynamoDB session client working",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "the role I am using to execute the function has rights to dynamo",
  "id": "5b0714832942532e42dc889c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-05-24T19:37:39.533Z",
  "text": "the role I am using to execute the function has rights to dynamo",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "I think I got this figured out...it has to do with our VPC configuration",
  "id": "5b081a366fcbaf377df8a164",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-05-25T14:14:14.695Z",
  "text": "I think I got this figured out...it has to do with our VPC configuration",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/forensicsguy20012004",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12624999?v=4&s=60",
   "displayName": "Matt Haines",
   "gv": "4",
   "id": "57dfc95340f3a6eec066085e",
   "url": "/forensicsguy20012004",
   "username": "forensicsguy20012004",
   "v": 8
  },
  "html": "we need to enable an endpoint to dynamoDB from our VPC",
  "id": "5b081bc2361a950a66153639",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-05-25T14:20:50.662Z",
  "text": "we need to enable an endpoint to dynamoDB from our VPC",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tomweston",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6251402?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6251402?v=4&s=60",
   "displayName": "Tom Weston",
   "gv": "4",
   "id": "595ca5d9d73408ce4f6bafe3",
   "url": "/tomweston",
   "username": "tomweston",
   "v": 14
  },
  "html": "Hi All, I need some help unmarshalling a SecretString value in AWS Secrets Manager for a project I maintain called Gatekeeper. Is anyone able to help with the following Issue? <span data-link-type=\"issue\" data-issue=\"3\" data-issue-repo=\"axoe/gatekeeper\" class=\"issue\">axoe/gatekeeper#3</span>",
  "id": "5b082b8a361a950a6615787d",
  "issues": [
   {
    "number": "3",
    "repo": "axoe/gatekeeper"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-05-25T15:28:10.189Z",
  "text": "Hi All, I need some help unmarshalling a SecretString value in AWS Secrets Manager for a project I maintain called Gatekeeper. Is anyone able to help with the following Issue? https://github.com/axoe/gatekeeper/issues/3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/jribe",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/19158550?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/19158550?v=4&s=60",
   "displayName": "James Ribe",
   "gv": "4",
   "id": "5b173e40d73408ce4f9c3285",
   "url": "/jribe",
   "username": "jribe",
   "v": 1
  },
  "html": "Is there an easier way to check error codes than the example code at <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/aws/awserr/#Error\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/aws/awserr/#Error</a> ?",
  "id": "5b173e7b22a05f5e7104515f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-06-06T01:52:59.937Z",
  "text": "Is there an easier way to check error codes than the example code at https://docs.aws.amazon.com/sdk-for-go/api/aws/awserr/#Error ?",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/aws/awserr/#Error"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/jribe",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/19158550?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/19158550?v=4&s=60",
   "displayName": "James Ribe",
   "gv": "4",
   "id": "5b173e40d73408ce4f9c3285",
   "url": "/jribe",
   "username": "jribe",
   "v": 1
  },
  "html": "It&#39;d be nice if <code>awserr</code> had a function along the lines of <code>awserr.HasCode(err error, code string) bool</code> similar to <code>os.IsNotExist(err error) bool</code>",
  "id": "5b173ec8e26c847ac8be4d48",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-06-06T01:54:16.399Z",
  "text": "It'd be nice if `awserr` had a function along the lines of `awserr.HasCode(err error, code string) bool` similar to `os.IsNotExist(err error) bool`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/sc3983315",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4951929?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4951929?v=4&s=60",
   "displayName": "sc3983315",
   "gv": "4",
   "id": "5aa627c1d73408ce4f90f0e4",
   "url": "/sc3983315",
   "username": "sc3983315"
  },
  "html": "how can get  <code>Recurring reservation charges</code> Values  with <code>CostExplorer</code> <code>GetCostAndUsage</code> methods",
  "id": "5b1798d8b6eece791de2ad76",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-06-06T08:18:32.685Z",
  "text": "how can get  `Recurring reservation charges` Values  with `CostExplorer` ` GetCostAndUsage` methods",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/sc3983315",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4951929?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4951929?v=4&s=60",
   "displayName": "sc3983315",
   "gv": "4",
   "id": "5aa627c1d73408ce4f90f0e4",
   "url": "/sc3983315",
   "username": "sc3983315"
  },
  "html": "<a href=\"https://files.gitter.im/aws/aws-sdk-go/TYfY/image.png\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\"><img src=\"https://files.gitter.im/aws/aws-sdk-go/TYfY/thumb/image.png\" alt=\"image.png\" rel=\"nofollow\"></a>",
  "id": "5b17990535e25f399752268f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-06-06T08:19:17.541Z",
  "text": "[![image.png](https://files.gitter.im/aws/aws-sdk-go/TYfY/thumb/image.png)](https://files.gitter.im/aws/aws-sdk-go/TYfY/image.png)",
  "unread": false,
  "urls": [
   {
    "url": "https://files.gitter.im/aws/aws-sdk-go/TYfY/thumb/image.png"
   },
   {
    "url": "https://files.gitter.im/aws/aws-sdk-go/TYfY/image.png"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/gianarb",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1630267?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1630267?v=4&s=60",
   "displayName": "Gianluca Arbezzano",
   "gv": "4",
   "id": "53270c445e986b0712efec8f",
   "url": "/gianarb",
   "username": "gianarb",
   "v": 13
  },
  "html": "Hello! I would like to trace an aws request adding Handlers to the client. My current question is that I don&#39;t know their order. I am looking for the first one triggered and for the last one in order to build my trace. Thanks a lot",
  "id": "5b184452edd06f7d1515dcc1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-06-06T20:30:10.414Z",
  "text": "Hello! I would like to trace an aws request adding Handlers to the client. My current question is that I don't know their order. I am looking for the first one triggered and for the last one in order to build my trace. Thanks a lot",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/gianarb",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1630267?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1630267?v=4&s=60",
   "displayName": "Gianluca Arbezzano",
   "gv": "4",
   "id": "53270c445e986b0712efec8f",
   "url": "/gianarb",
   "username": "gianarb",
   "v": 13
  },
  "html": "Maybe I can use the same handlers the aws sdk uses to add debugging",
  "id": "5b1845f94eaffb692d891865",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-06-06T20:37:13.561Z",
  "text": "Maybe I can use the same handlers the aws sdk uses to add debugging",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/gianarb",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1630267?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1630267?v=4&s=60",
   "displayName": "Gianluca Arbezzano",
   "gv": "4",
   "id": "53270c445e986b0712efec8f",
   "url": "/gianarb",
   "username": "gianarb",
   "v": 13
  },
  "html": "<pre><code>c.Handlers.Send.PushFrontNamed(request.NamedHandler{<span class=\"string\">Name:</span> <span class=\"string\">\"awssdk.client.LogRequest\"</span>, <span class=\"string\">Fn:</span> logRequest})\nc.Handlers.Send.PushBackNamed(request.NamedHandler{<span class=\"string\">Name:</span> <span class=\"string\">\"awssdk.client.LogResponse\"</span>, <span class=\"string\">Fn:</span> logResponse})</code></pre>",
  "id": "5b1845f999fa7f4c064e9e0b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-06-06T20:37:13.743Z",
  "text": "\tc.Handlers.Send.PushFrontNamed(request.NamedHandler{Name: \"awssdk.client.LogRequest\", Fn: logRequest})\n\tc.Handlers.Send.PushBackNamed(request.NamedHandler{Name: \"awssdk.client.LogResponse\", Fn: logResponse})\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/advancedwebdeveloper",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5404074?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5404074?v=4&s=60",
   "displayName": "Ivan",
   "gv": "4",
   "id": "5aedcfb1d73408ce4f9839ae",
   "url": "/advancedwebdeveloper",
   "username": "advancedwebdeveloper",
   "v": 356
  },
  "html": "Greetings, people. Anybody wishing to speak for the Ukrainian Golang user group, on June 14th? <a href=\"https://www.facebook.com/events/244424652981728/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://www.facebook.com/events/244424652981728/</a>",
  "id": "5b1aa4da6023754a317a2877",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-06-08T15:46:34.107Z",
  "text": "Greetings, people. Anybody wishing to speak for the Ukrainian Golang user group, on June 14th? https://www.facebook.com/events/244424652981728/",
  "unread": false,
  "urls": [
   {
    "url": "https://www.facebook.com/events/244424652981728/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/advancedwebdeveloper",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5404074?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5404074?v=4&s=60",
   "displayName": "Ivan",
   "gv": "4",
   "id": "5aedcfb1d73408ce4f9839ae",
   "url": "/advancedwebdeveloper",
   "username": "advancedwebdeveloper",
   "v": 356
  },
  "html": "about the SDK",
  "id": "5b1aa4e04b2d9417e1d3fbc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-06-08T15:46:40.871Z",
  "text": "about the SDK",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/advancedwebdeveloper",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5404074?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5404074?v=4&s=60",
   "displayName": "Ivan",
   "gv": "4",
   "id": "5aedcfb1d73408ce4f9839ae",
   "url": "/advancedwebdeveloper",
   "username": "advancedwebdeveloper",
   "v": 356
  },
  "html": "considering either remote or on-site speakers",
  "id": "5b1aa4ece36e0e7d3f5d5b50",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-06-08T15:46:52.439Z",
  "text": "considering either remote or on-site speakers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-13T14:33:46.418Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/kadalamittai_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/2751673542/ce42102a4125a3e8627dbc2d1a1c249e.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/2751673542/ce42102a4125a3e8627dbc2d1a1c249e_bigger.png",
   "displayName": "kadalamittai",
   "id": "5ab01accd73408ce4f922354",
   "url": "/kadalamittai_twitter",
   "username": "kadalamittai_twitter"
  },
  "html": "where can i find aws-sdk-go-v2 API Reference document as like  default aws-sdk-go<br> found here <a href=\"https://docs.aws.amazon.com/sdk-for-go/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/</a>",
  "id": "5b212b2e86343c3a320171a6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-06-13T14:33:18.160Z",
  "text": "where can i find aws-sdk-go-v2 API Reference document as like  default aws-sdk-go \n found here https://docs.aws.amazon.com/sdk-for-go/",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/"
   }
  ],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Nalum",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/384180?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/384180?v=4&s=60",
   "displayName": "Luke Mallon",
   "gv": "4",
   "id": "529c6e71ed5ab0b3bf04de80",
   "url": "/Nalum",
   "username": "Nalum",
   "v": 18
  },
  "html": "Hello all, Does anyone know if it&#39;s possible to add tags to mediaconvert queues yet?",
  "id": "5b213d6886343c3a3201ab74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-06-13T15:51:04.746Z",
  "text": "Hello all, Does anyone know if it's possible to add tags to mediaconvert queues yet?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Nalum",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/384180?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/384180?v=4&s=60",
   "displayName": "Luke Mallon",
   "gv": "4",
   "id": "529c6e71ed5ab0b3bf04de80",
   "url": "/Nalum",
   "username": "Nalum",
   "v": 18
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kadalamittai_twitter\" class=\"mention\">@kadalamittai_twitter</span> you can view docs here <a href=\"https://godoc.org/github.com/aws/aws-sdk-go-v2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://godoc.org/github.com/aws/aws-sdk-go-v2</a>",
  "id": "5b2143624fbf4449eb139a28",
  "issues": [],
  "mentions": [
   {
    "screenName": "kadalamittai_twitter",
    "userId": "5ab01accd73408ce4f922354",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2018-06-13T16:16:34.704Z",
  "text": "@kadalamittai_twitter you can view docs here https://godoc.org/github.com/aws/aws-sdk-go-v2",
  "unread": false,
  "urls": [
   {
    "url": "https://godoc.org/github.com/aws/aws-sdk-go-v2"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Nalum",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/384180?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/384180?v=4&s=60",
   "displayName": "Luke Mallon",
   "gv": "4",
   "id": "529c6e71ed5ab0b3bf04de80",
   "url": "/Nalum",
   "username": "Nalum",
   "v": 18
  },
  "html": "Not exactly the same format but might be good enough for you",
  "id": "5b21437ca0161836cb18494f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-06-13T16:17:00.746Z",
  "text": "Not exactly the same format but might be good enough for you",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Nalum",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/384180?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/384180?v=4&s=60",
   "displayName": "Luke Mallon",
   "gv": "4",
   "id": "529c6e71ed5ab0b3bf04de80",
   "url": "/Nalum",
   "username": "Nalum",
   "v": 18
  },
  "html": "Hello all, anyone around?",
  "id": "5b228efcd128fa71f669b338",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-06-14T15:51:24.724Z",
  "text": "Hello all, anyone around?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Nalum\" class=\"mention\">@Nalum</span> Yes ",
  "id": "5b2539bfe87f0c7bee90d699",
  "issues": [],
  "mentions": [
   {
    "screenName": "Nalum",
    "userId": "529c6e71ed5ab0b3bf04de80",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2018-06-16T16:24:31.204Z",
  "text": "@Nalum Yes ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/benbooth493",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1026803?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1026803?v=4&s=60",
   "displayName": "Ben Booth",
   "gv": "4",
   "id": "55d2e0be0fc9f982beadbbd6",
   "url": "/benbooth493",
   "username": "benbooth493",
   "v": 4
  },
  "html": "I&#39;m wanting to <code>lambda.Invoke()</code> from a commandline app and then stream the relevant logs from Cloudwatch. How can I achieve this?",
  "id": "5b2b7fa7ce3b0f268d34cbe3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-06-21T10:36:23.900Z",
  "text": "I'm wanting to `lambda.Invoke()` from a commandline app and then stream the relevant logs from Cloudwatch. How can I achieve this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-21T12:54:02.820Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"benbooth493\" class=\"mention\">@benbooth493</span> I didn&#39;t do this but as per <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/lambda/#InvokeOutput\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/lambda/#InvokeOutput</a> it may be possible to capture the logs in the InvokeOutput data structure if you set the InvocationType to &quot;RequestResponse&quot; in the InvokeInput struct: <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/lambda/#InvokeInput\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/lambda/#InvokeInput</a>",
  "id": "5b2b9fc772b31d3691e3ef3b",
  "issues": [],
  "mentions": [
   {
    "screenName": "benbooth493",
    "userId": "55d2e0be0fc9f982beadbbd6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2018-06-21T12:53:27.461Z",
  "text": "@benbooth493 I didn't do this but as per https://docs.aws.amazon.com/sdk-for-go/api/service/lambda/#InvokeOutput it may be possible to capture the logs in the InvokeOutput data structure if you set the InvocationType to \"RequestResponse\" in the InvokeInput struct: https://docs.aws.amazon.com/sdk-for-go/api/service/lambda/#InvokeInput",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/lambda/#InvokeOutput"
   },
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/lambda/#InvokeInput"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/roger022318",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/40444935?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/40444935?v=4&s=60",
   "displayName": "roger022318",
   "gv": "4",
   "id": "5b2ccf51d73408ce4f9e3ba8",
   "url": "/roger022318",
   "username": "roger022318"
  },
  "html": "Ggh",
  "id": "5b2cd0e4479ca2668975335b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-06-22T10:35:16.550Z",
  "text": "Ggh",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/maros7",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25764930?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25764930?v=4&s=60",
   "displayName": "Marcus Ros\u00e9n",
   "gv": "4",
   "id": "59e79994d73408ce4f7a9d84",
   "url": "/maros7",
   "username": "maros7",
   "v": 1
  },
  "html": "I guess this is a FAQ...Nonetheless, is there any status regarding when v2 will be GA.",
  "id": "5b2cd9105862c35f47bdc9a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-06-22T11:10:08.791Z",
  "text": "I guess this is a FAQ...Nonetheless, is there any status regarding when v2 will be GA.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/SateeshReddyL_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/496013798646349824/-UAtaZst.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/496013798646349824/-UAtaZst_bigger.jpeg",
   "displayName": "SateeshReddy",
   "id": "5b30e764d73408ce4f9e856c",
   "url": "/SateeshReddyL_twitter",
   "username": "SateeshReddyL_twitter"
  },
  "html": "through IOT , can able to test input as a string not JSON",
  "id": "5b30e78f960fcd4eb9218ce5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-06-25T13:01:03.319Z",
  "text": "through IOT , can able to test input as a string not JSON",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/SateeshReddyL_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/496013798646349824/-UAtaZst.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/496013798646349824/-UAtaZst_bigger.jpeg",
   "displayName": "SateeshReddy",
   "id": "5b30e764d73408ce4f9e856c",
   "url": "/SateeshReddyL_twitter",
   "username": "SateeshReddyL_twitter"
  },
  "html": "Protocol : lambda",
  "id": "5b30e797ad21887018dc9a5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-06-25T13:01:11.903Z",
  "text": "Protocol : lambda",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-06-25T19:33:01.235Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/harshgupta1_gitlab",
   "avatarUrlMedium": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/2417247/avatar.png?s=128",
   "avatarUrlSmall": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/2417247/avatar.png?s=60",
   "displayName": "Harsh Gupta",
   "id": "5b308157d73408ce4f9e79f1",
   "url": "/harshgupta1_gitlab",
   "username": "harshgupta1_gitlab"
  },
  "html": "<p>Greetings,<br>I am trying to POST on s3 using the grequests library and am getting this error<br><code>Bucket POST must contain a field named &#39;key&#39;.  If it is specified, please check the order of the fields.</code><br>This is my code<br><code>resp, err := grequests.Post(&quot;http://blsdsf.s3.amazonaws.com&quot;,\n        &amp;grequests.RequestOptions{\n            Files: fd,\n            Data:  x,\n        })</code><br>where fd is io.ReadCloser and x is map[string]string with the field values of presigned POST url (generate by boto3)</p><p>and this is the value of x<br><code>map[key:4982bfe3-fae9-42a5-93fcd9ee87_cli acl:private x-amz-algorithm:AWS4-HMAC-SHA256 x-amz-credential:AKIAICDC2ZVHRX25EYNQ/20180625/us-east-1/s3/aws4_request x-amz-date:20180625T192142Z policy:eyJleHBpcm&lt;shortened&gt;= x-amz-signature:20352dedafdaaaa1cae5ac648bb6e984237a6f6e29cb7754365ea64fa0baca5b]</code></p>",
  "id": "5b314124479ca266897ec9c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-06-25T19:23:16.286Z",
  "text": "Greetings,\nI am trying to POST on s3 using the grequests library and am getting this error\n`Bucket POST must contain a field named 'key'.  If it is specified, please check the order of the fields.`\nThis is my code\n`\nresp, err := grequests.Post(\"http://blsdsf.s3.amazonaws.com\",\n\t\t&grequests.RequestOptions{\n\t\t\tFiles: fd,\n\t\t\tData:  x,\n\t\t})\n` \nwhere fd is io.ReadCloser and x is map[string]string with the field values of presigned POST url (generate by boto3)\n\nand this is the value of x\n`\nmap[key:4982bfe3-fae9-42a5-93fcd9ee87_cli acl:private x-amz-algorithm:AWS4-HMAC-SHA256 x-amz-credential:AKIAICDC2ZVHRX25EYNQ/20180625/us-east-1/s3/aws4_request x-amz-date:20180625T192142Z policy:eyJleHBpcm<shortened>= x-amz-signature:20352dedafdaaaa1cae5ac648bb6e984237a6f6e29cb7754365ea64fa0baca5b]\n`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/florarceguet",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12785236?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12785236?v=4&s=60",
   "displayName": "florarceguet",
   "gv": "4",
   "id": "5a4405d6d73408ce4f850b84",
   "url": "/florarceguet",
   "username": "florarceguet",
   "v": 1
  },
  "html": "Hello! i have troubles with get signed url method of s3 sdk",
  "id": "5b339a83aeb8fa0c0746d6f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-06-27T14:09:07.178Z",
  "text": "Hello! i have troubles with get signed url method of s3 sdk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/florarceguet",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/12785236?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/12785236?v=4&s=60",
   "displayName": "florarceguet",
   "gv": "4",
   "id": "5a4405d6d73408ce4f850b84",
   "url": "/florarceguet",
   "username": "florarceguet",
   "v": 1
  },
  "html": "i&#39;m trying  to upload audios but they are uploaded in json format instead of mp3",
  "id": "5b339ab66ceffe4eba37bed1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-06-27T14:09:58.292Z",
  "text": "i'm trying  to upload audios but they are uploaded in json format instead of mp3",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I&#39;m trying to implement XRay support for something that needs to run from both Lambda but also as a command-line tool. It seems to work fine from Lambda, but when executed locally from the command-line I get panics like <code>panic: failed to begin subsegment named &#39;autoscaling&#39;: segment cannot be found.</code>",
  "id": "5b3611eaaeb8fa0c074c9bb0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-06-29T11:03:06.839Z",
  "text": "I'm trying to implement XRay support for something that needs to run from both Lambda but also as a command-line tool. It seems to work fine from Lambda, but when executed locally from the command-line I get panics like `panic: failed to begin subsegment named 'autoscaling': segment cannot be found.`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/brianmartens",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/15098561?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/15098561?v=4&s=60",
   "displayName": "Brian Martens",
   "gv": "4",
   "id": "5b3a6decd73408ce4f9f5dd3",
   "url": "/brianmartens",
   "username": "brianmartens"
  },
  "html": "What is the proper way to format the StartTime and EndTime fields for the cloudwatch.GetMetricStatisticsInput struct?",
  "id": "5b3a6e2dbd92d807828d7652",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-07-02T18:25:49.835Z",
  "text": "What is the proper way to format the StartTime and EndTime fields for the cloudwatch.GetMetricStatisticsInput struct?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "regarding my previous Xray question, this fixed it: <a href=\"https://github.com/cristim/autospotting/pull/273/commits/1ea38d828cc47e33e89f1f2843e51f55527a8aa3\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/cristim/autospotting/pull/273/commits/1ea38d828cc47e33e89f1f2843e51f55527a8aa3</a> ",
  "id": "5b3a95467b811a6d63c9dd26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-07-02T21:12:38.473Z",
  "text": "regarding my previous Xray question, this fixed it: https://github.com/cristim/autospotting/pull/273/commits/1ea38d828cc47e33e89f1f2843e51f55527a8aa3 ",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/cristim/autospotting/pull/273/commits/1ea38d828cc47e33e89f1f2843e51f55527a8aa3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "now it just logs the places where it would have panic&#39;ed",
  "id": "5b3a956b89db5e701c9c2f4e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-07-02T21:13:15.718Z",
  "text": "now it just logs the places where it would have panic'ed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/kadalamittai_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/2751673542/ce42102a4125a3e8627dbc2d1a1c249e.png",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/2751673542/ce42102a4125a3e8627dbc2d1a1c249e_bigger.png",
   "displayName": "kadalamittai",
   "id": "5ab01accd73408ce4f922354",
   "url": "/kadalamittai_twitter",
   "username": "kadalamittai_twitter"
  },
  "html": "can we profile a local SpringBoot Kotlin App with XRay ?",
  "id": "5b3ab9f03572e970c1707598",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-07-02T23:49:04.368Z",
  "text": "can we profile a local SpringBoot Kotlin App with XRay ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Sure, you just have to create the segments and have each of the meaningful events send data to x-ray ",
  "id": "5b3b77b93572e970c1721374",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-07-03T13:18:49.079Z",
  "text": "Sure, you just have to create the segments and have each of the meaningful events send data to x-ray ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/DenysNahurnyi",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/27808442?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/27808442?v=4&s=60",
   "displayName": "Denys Nahurnyi",
   "gv": "4",
   "id": "5b3dcd9cd73408ce4f9fb0b6",
   "url": "/DenysNahurnyi",
   "username": "DenysNahurnyi"
  },
  "html": "Hi everyone, how can I figure out that my RDS instance is publicly accessible?",
  "id": "5b3dce12a99e1e52b717ab8e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-05T07:51:46.019Z",
  "text": "Hi everyone, how can I figure out that my RDS instance is publicly accessible?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"DenysNahurnyi\" class=\"mention\">@DenysNahurnyi</span> just try to connect to it over the public internet ",
  "id": "5b3e2ccbbd92d80782963848",
  "issues": [],
  "mentions": [
   {
    "screenName": "DenysNahurnyi",
    "userId": "5b3dcd9cd73408ce4f9fb0b6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-05T14:35:55.347Z",
  "text": "@DenysNahurnyi just try to connect to it over the public internet ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I would just use the mobile phone as a wifi Hotspot ",
  "id": "5b3e2d083c5abf52b63e677e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-05T14:36:56.556Z",
  "text": "I would just use the mobile phone as a wifi Hotspot ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/DenysNahurnyi",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/27808442?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/27808442?v=4&s=60",
   "displayName": "Denys Nahurnyi",
   "gv": "4",
   "id": "5b3dcd9cd73408ce4f9fb0b6",
   "url": "/DenysNahurnyi",
   "username": "DenysNahurnyi"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> Heh, nice solution, but my problem is a bit other, I need to pull all RDS instances in AWS account and process them, I am using Go rds API, and it even returns property <code>PubliclyAccessible</code> but I am not completely sure that I can rely on this and not process all attached security groups",
  "id": "5b3e3d3b89db5e701ca46810",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-05T15:46:03.560Z",
  "text": "@cristim Heh, nice solution, but my problem is a bit other, I need to pull all RDS instances in AWS account and process them, I am using Go rds API, and it even returns property `PubliclyAccessible` but I am not completely sure that I can rely on this and not process all attached security groups",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "you need to process the SGs, I&#39;d just try to connect to the endpoint from another region",
  "id": "5b3e3ff663042f2df35909f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-05T15:57:42.368Z",
  "text": "you need to process the SGs, I'd just try to connect to the endpoint from another region",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/DenysNahurnyi",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/27808442?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/27808442?v=4&s=60",
   "displayName": "Denys Nahurnyi",
   "gv": "4",
   "id": "5b3dcd9cd73408ce4f9fb0b6",
   "url": "/DenysNahurnyi",
   "username": "DenysNahurnyi"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> So what purpose of <code>PubliclyAccessible</code> property in RDS instance then?",
  "id": "5b3e426a7e23133ecb346f38",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-05T16:08:10.444Z",
  "text": "@cristim So what purpose of `PubliclyAccessible` property in RDS instance then?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "as far as I can tell the SGs have the final word",
  "id": "5b3e44c263042f2df35918fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-05T16:18:10.939Z",
  "text": "as far as I can tell the SGs have the final word",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "this seems to be just about DNS",
  "id": "5b3e45489b82c6701ba53fea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-05T16:20:24.124Z",
  "text": "this seems to be just about DNS",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "as per <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/rds/#CreateDBInstanceInput\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/rds/#CreateDBInstanceInput</a><pre><code>    // Specifies the accessibility options for the DB instance. A value of true\n    // specifies an Internet-facing<span class=\"instruction\"> instance </span>with a<span class=\"keyword\"> public</span>ly resolvable DNS name,\n    // which resolves to a<span class=\"keyword\"> public</span> IP address. A value of false specifies an internal\n    //<span class=\"instruction\"> instance </span>with a DNS name that resolves to a<span class=\"keyword\"> private</span> IP address.\n    //\n    // Default: The default behavior varies depending on whether a VPC has been\n    // requested<span class=\"instruction\"> or </span>not. The following list shows the default behavior in each case.\n    //\n    //    * Default VPC: true\n    //\n    //    * VPC: false\n    //\n    // If no DB subnet group has been specified as part of the request<span class=\"instruction\"> and </span>the PubliclyAccessible\n    // value has<span class=\"instruction\"> not </span>been set, the DB<span class=\"instruction\"> instance </span>is<span class=\"keyword\"> public</span>ly accessible. If a specific\n    // DB subnet group has been specified as part of the request<span class=\"instruction\"> and </span>the PubliclyAccessible\n    // value has<span class=\"instruction\"> not </span>been set, the DB<span class=\"instruction\"> instance </span>is<span class=\"keyword\"> private</span>.\n    PubliclyAccessible *bool `type:<span class=\"string\">\"boolean\"</span>`</code></pre>",
  "id": "5b3e4570bd92d80782968451",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-05T16:21:04.465Z",
  "text": "as per https://docs.aws.amazon.com/sdk-for-go/api/service/rds/#CreateDBInstanceInput\n```\n    // Specifies the accessibility options for the DB instance. A value of true\n    // specifies an Internet-facing instance with a publicly resolvable DNS name,\n    // which resolves to a public IP address. A value of false specifies an internal\n    // instance with a DNS name that resolves to a private IP address.\n    //\n    // Default: The default behavior varies depending on whether a VPC has been\n    // requested or not. The following list shows the default behavior in each case.\n    //\n    //    * Default VPC: true\n    //\n    //    * VPC: false\n    //\n    // If no DB subnet group has been specified as part of the request and the PubliclyAccessible\n    // value has not been set, the DB instance is publicly accessible. If a specific\n    // DB subnet group has been specified as part of the request and the PubliclyAccessible\n    // value has not been set, the DB instance is private.\n    PubliclyAccessible *bool `type:\"boolean\"`\n```",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/rds/#CreateDBInstanceInput"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/DenysNahurnyi",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/27808442?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/27808442?v=4&s=60",
   "displayName": "Denys Nahurnyi",
   "gv": "4",
   "id": "5b3dcd9cd73408ce4f9fb0b6",
   "url": "/DenysNahurnyi",
   "username": "DenysNahurnyi"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> Thanks a lot, you helped me with my question. ",
  "id": "5b3e6bb73c5abf52b63f1562",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-05T19:04:23.192Z",
  "text": "@cristim Thanks a lot, you helped me with my question. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"DenysNahurnyi\" class=\"mention\">@DenysNahurnyi</span> you&#39;re welcome, glad to help",
  "id": "5b3e745a63042f2df3598e91",
  "issues": [],
  "mentions": [
   {
    "screenName": "DenysNahurnyi",
    "userId": "5b3dcd9cd73408ce4f9fb0b6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-05T19:41:14.306Z",
  "text": "@DenysNahurnyi you're welcome, glad to help",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/g/u/shyam9490681319_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "shyam prasad",
   "id": "5b3e9900d73408ce4f9fc79b",
   "url": "/shyam9490681319_twitter",
   "username": "shyam9490681319_twitter"
  },
  "html": "<p>Hi I am new to aws-go, I was writing code to support infrastructure on AWS. I saw the documentation and was able to simulate UI creation of EKS cluster, nodes. I am also able to spin up EKS cluster and create a stack through go lang code. I am stuck at a point where I need to obtain \u201cNodeInstanceRole\u201d from the created stack, any pointers ??</p><p>Is there any better way to create specified number of nodes on EKS cluster other than stack creation as mentioned in documentation ?</p>",
  "id": "5b3e9b1160c38707836163a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-07-05T22:26:25.122Z",
  "text": "Hi I am new to aws-go, I was writing code to support infrastructure on AWS. I saw the documentation and was able to simulate UI creation of EKS cluster, nodes. I am also able to spin up EKS cluster and create a stack through go lang code. I am stuck at a point where I need to obtain \u201cNodeInstanceRole\u201d from the created stack, any pointers ??\n\nIs there any better way to create specified number of nodes on EKS cluster other than stack creation as mentioned in documentation ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/g/u/shyam9490681319_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "shyam prasad",
   "id": "5b3e9900d73408ce4f9fc79b",
   "url": "/shyam9490681319_twitter",
   "username": "shyam9490681319_twitter"
  },
  "html": "No worries, I figured out. It was one of the output parameter, I can get it through iterating over keys and check if any matches this &quot;NodeInstanceRole&quot;, but the two things I am looking for is. Is there a better way to create EKS and related nodes usinng go aws sdk? and how do we create a stack ?",
  "id": "5b3eaad5f1664406611d57e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-07-05T23:33:41.829Z",
  "text": "No worries, I figured out. It was one of the output parameter, I can get it through iterating over keys and check if any matches this \"NodeInstanceRole\", but the two things I am looking for is. Is there a better way to create EKS and related nodes usinng go aws sdk? and how do we create a stack ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/HeroRender",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/23327864?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/23327864?v=4&s=60",
   "displayName": "Hero Render",
   "gv": "4",
   "id": "58214b3cd73408ce4f346565",
   "url": "/HeroRender",
   "username": "HeroRender",
   "v": 1
  },
  "html": "hi everyone may ask if its possible to send a message to the FB User when the user is not chatting?",
  "id": "5b3ec49363042f2df35a2946",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-07-06T01:23:31.956Z",
  "text": "hi everyone may ask if its possible to send a message to the FB User when the user is not chatting?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"shyam9490681319_twitter\" class=\"mention\">@shyam9490681319_twitter</span> I&#39;d use CloudFormation or Terraform instead of using the Go API for spinning up the EKS cluster nodes",
  "id": "5b3f2f6370efc60660b1cb07",
  "issues": [],
  "mentions": [
   {
    "screenName": "shyam9490681319_twitter",
    "userId": "5b3e9900d73408ce4f9fc79b",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-06T08:59:15.677Z",
  "text": "@shyam9490681319_twitter I'd use CloudFormation or Terraform instead of using the Go API for spinning up the EKS cluster nodes",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I&#39;m struggling with mocking paginated API calls, can anyone share some examples on how to do this?",
  "id": "5b3f69a83c5abf52b6412ddf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-07-06T13:07:52.454Z",
  "text": "I'm struggling with mocking paginated API calls, can anyone share some examples on how to do this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/g/u/shyam9490681319_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "shyam prasad",
   "id": "5b3e9900d73408ce4f9fc79b",
   "url": "/shyam9490681319_twitter",
   "username": "shyam9490681319_twitter"
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> thanks for pointers cris ",
  "id": "5b3fa7f43d8f71623d626c74",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2018-07-06T17:33:40.898Z",
  "text": "@cristim thanks for pointers cris ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> - something like this?<pre><code class=\"go\"><span class=\"keyword\">type</span> mockS3 <span class=\"keyword\">struct</span> {                                                                                                       \n  *s3.S3                                                                                                                   \n}                                                                                                                          \n\n<span class=\"keyword\">func</span> (svc *mockS3) ListObjectsPages(input *s3.ListObjectsInput, fn <span class=\"keyword\">func</span>(*s3.ListObjectsOutput, <span class=\"typename\">bool</span>) <span class=\"typename\">bool</span>) error {         \n  outputs := []*s3.ListObjectsOutput{                                                                                      \n    {                                                                                                                      \n      Contents: []*s3.Object{                                                                                              \n      <span class=\"comment\">// mock objects here                                                                                                 </span>\n      },                                                                                                                   \n      Marker:      aws.String(<span class=\"string\">\"token\"</span>),                                                                                    \n      IsTruncated: aws.Bool(<span class=\"constant\">true</span>),                                                                                         \n    },                                                                                                                     \n    {                                                                                                                      \n      Contents: []*s3.Object{                                                                                              \n      <span class=\"comment\">// mock objects here                                                                                                 </span>\n      },                                                                                                                   \n      IsTruncated: aws.Bool(<span class=\"constant\">false</span>),                                                                                        \n    },                                                                                                                     \n  }                                                                                                                        \n\n  <span class=\"keyword\">for</span> _, out := <span class=\"keyword\">range</span> outputs {                                                                                            \n    <span class=\"keyword\">if</span> !fn(out) {                                                                                                          \n      <span class=\"keyword\">break</span>                                                                                                                \n    }                                                                                                                      \n  }                                                                                                                        \n  <span class=\"keyword\">return</span> <span class=\"constant\">nil</span>                                                                                                               \n}</code></pre>",
  "id": "5b3fc95aa99e1e52b71c7855",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-06T19:56:10.463Z",
  "text": "@cristim - something like this?\n```go\ntype mockS3 struct {                                                                                                       \n  *s3.S3                                                                                                                   \n}                                                                                                                          \n                                                                                                                           \nfunc (svc *mockS3) ListObjectsPages(input *s3.ListObjectsInput, fn func(*s3.ListObjectsOutput, bool) bool) error {         \n  outputs := []*s3.ListObjectsOutput{                                                                                      \n    {                                                                                                                      \n      Contents: []*s3.Object{                                                                                              \n      // mock objects here                                                                                                 \n      },                                                                                                                   \n      Marker:      aws.String(\"token\"),                                                                                    \n      IsTruncated: aws.Bool(true),                                                                                         \n    },                                                                                                                     \n    {                                                                                                                      \n      Contents: []*s3.Object{                                                                                              \n      // mock objects here                                                                                                 \n      },                                                                                                                   \n      IsTruncated: aws.Bool(false),                                                                                        \n    },                                                                                                                     \n  }                                                                                                                        \n                                                                                                                           \n  for _, out := range outputs {                                                                                            \n    if !fn(out) {                                                                                                          \n      break                                                                                                                \n    }                                                                                                                      \n  }                                                                                                                        \n  return nil                                                                                                               \n} \n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "If you want to mock errors, just need to return an error at the end rather than nil",
  "id": "5b3fcb5d33b0282df4067694",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-06T20:04:45.242Z",
  "text": "If you want to mock errors, just need to return an error at the end rather than nil",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Thanks ",
  "id": "5b3fd0e760c387078364172a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-06T20:28:23.426Z",
  "text": "Thanks ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Np :)",
  "id": "5b3fd1137b811a6d63d61dd9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-06T20:29:07.336Z",
  "text": "Np :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> how would you go about having a version that works both for an error case and for a non-error case? would you make two different mocks3 structs and stub the function differently on each?",
  "id": "5b43a27881816669a43d7314",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2018-07-09T17:59:20.114Z",
  "text": "@xibz how would you go about having a version that works both for an error case and for a non-error case? would you make two different mocks3 structs and stub the function differently on each?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-09T18:04:36.874Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "You&#39;d add some metadata in the <code>mockS3</code> structure.<pre><code class=\"go\"><span class=\"keyword\">type</span> mockS3 <span class=\"keyword\">struct</span> {\n  errors []errors                                                                                                    \n  *s3.S3                                                                                                                   \n} \n\n<span class=\"keyword\">func</span> (svc *mockS3) ListObjectsPages(input *s3.ListObjectsInput, fn <span class=\"keyword\">func</span>(*s3.ListObjectsOutput, <span class=\"typename\">bool</span>) <span class=\"typename\">bool</span>) error {         \n  outputs := []*s3.ListObjectsOutput{                                                                                      \n    {                                                                                                                      \n      Contents: []*s3.Object{                                                                                              \n      <span class=\"comment\">// mock objects here                                                                                                 </span>\n      },                                                                                                                   \n      Marker:      aws.String(<span class=\"string\">\"token\"</span>),                                                                                    \n      IsTruncated: aws.Bool(<span class=\"constant\">true</span>),                                                                                         \n    },                                                                                                                     \n    {                                                                                                                      \n      Contents: []*s3.Object{                                                                                              \n      <span class=\"comment\">// mock objects here                                                                                                 </span>\n      },                                                                                                                   \n      IsTruncated: aws.Bool(<span class=\"constant\">false</span>),                                                                                        \n    },                                                                                                                     \n  }                                                                                                                        \n\n  <span class=\"keyword\">for</span> _, out := <span class=\"keyword\">range</span> outputs {                                                                                            \n    <span class=\"keyword\">if</span> !fn(out) {                                                                                                          \n      <span class=\"keyword\">break</span>                                                                                                                \n    }                                                                                                                      \n  }   \n\n  svc.count++                                                                                              \n  <span class=\"keyword\">return</span> svc.errors[svc.count%<span class=\"built_in\">len</span>(svc.errors)]                                                                                                               \n}</code></pre>",
  "id": "5b43a32133b0282df40d25f5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-07-09T18:02:09.846Z",
  "text": "You'd add some metadata in the `mockS3` structure.\n```go\ntype mockS3 struct {\n  errors []errors                                                                                                    \n  *s3.S3                                                                                                                   \n} \n\nfunc (svc *mockS3) ListObjectsPages(input *s3.ListObjectsInput, fn func(*s3.ListObjectsOutput, bool) bool) error {         \n  outputs := []*s3.ListObjectsOutput{                                                                                      \n    {                                                                                                                      \n      Contents: []*s3.Object{                                                                                              \n      // mock objects here                                                                                                 \n      },                                                                                                                   \n      Marker:      aws.String(\"token\"),                                                                                    \n      IsTruncated: aws.Bool(true),                                                                                         \n    },                                                                                                                     \n    {                                                                                                                      \n      Contents: []*s3.Object{                                                                                              \n      // mock objects here                                                                                                 \n      },                                                                                                                   \n      IsTruncated: aws.Bool(false),                                                                                        \n    },                                                                                                                     \n  }                                                                                                                        \n\n  for _, out := range outputs {                                                                                            \n    if !fn(out) {                                                                                                          \n      break                                                                                                                \n    }                                                                                                                      \n  }   \n                      \n  svc.count++                                                                                              \n  return svc.errors[svc.count%len(svc.errors)]                                                                                                               \n}\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "ahh",
  "id": "5b43a38d89db5e701caecc95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-09T18:03:57.917Z",
  "text": "ahh",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "so like I&#39;m working on a workflow with rds snapshots right now. if I wanted to test the case where a snapshot isn&#39;t found, add <code>snapshotAvailable bool</code> to my struct and then switch on that in the stub?",
  "id": "5b43a3b489db5e701caeccb5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-09T18:04:36.575Z",
  "text": "so like I'm working on a workflow with rds snapshots right now. if I wanted to test the case where a snapshot isn't found, add `snapshotAvailable bool` to my struct and then switch on that in the stub?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "oh neat",
  "id": "5b43a3be3572e970c1832cf0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-09T18:04:46.139Z",
  "text": "oh neat",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "(didn&#39;t get the full code sample until I sent that msg)",
  "id": "5b43a3c6a99e1e52b7233da2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-09T18:04:54.166Z",
  "text": "(didn't get the full code sample until I sent that msg)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Accidentally hit enter when trying to send that",
  "id": "5b43a3d7bd92d80782a0fd92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-09T18:05:11.454Z",
  "text": "Accidentally hit enter when trying to send that",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "No worries",
  "id": "5b43a3db89db5e701caeccf7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-09T18:05:15.309Z",
  "text": "No worries",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "ah",
  "id": "5b43a3dd9b82c6701baf694b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-09T18:05:17.818Z",
  "text": "ah",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "I hope that clears things up. If you have anymore questions, please let us know!",
  "id": "5b43a4049b82c6701baf6999",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-09T18:05:56.605Z",
  "text": "I hope that clears things up. If you have anymore questions, please let us know!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "I do have one more quick question actually",
  "id": "5b43a43c81816669a43d77b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-09T18:06:52.135Z",
  "text": "I do have one more quick question actually",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "I want to use Retry states in Amazon SFN and and am still a bit new to Go, so trying to figure out how I need to make my custom error types so that SFN error handling will work correctly",
  "id": "5b43a45ebd92d80782a0fe87",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-09T18:07:26.556Z",
  "text": "I want to use Retry states in Amazon SFN and and am still a bit new to Go, so trying to figure out how I need to make my custom error types so that SFN error handling will work correctly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "As in the retry states in the SDK?",
  "id": "5b43a4839b82c6701baf6ad4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-09T18:08:03.901Z",
  "text": "As in the retry states in the SDK?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "what&#39;s described here: <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-error-handling.html#error-handling-retrying-after-an-error\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/step-functions/latest/dg/concepts-error-handling.html#error-handling-retrying-after-an-error</a>",
  "id": "5b43a4b281816669a43d78da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-09T18:08:50.093Z",
  "text": "what's described here: https://docs.aws.amazon.com/step-functions/latest/dg/concepts-error-handling.html#error-handling-retrying-after-an-error",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/step-functions/latest/dg/concepts-error-handling.html#error-handling-retrying-after-an-error"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "&quot;Step Functions identifies errors in Amazon States Language using case-sensitive strings, known as error names.&quot;",
  "id": "5b43a50d60c38707836ad72d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-09T18:10:21.127Z",
  "text": "\"Step Functions identifies errors in Amazon States Language using case-sensitive strings, known as error names.\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "The example I&#39;ve found is with Javascript<pre><code class=\"javascript\"><span class=\"keyword\">this</span>.name = <span class=\"string\">'CustomError'</span>;</code></pre>",
  "id": "5b43a5557e23133ecb3ec7b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-09T18:11:33.275Z",
  "text": "The example I've found is with Javascript\n```javascript\nthis.name = 'CustomError';\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Yea, it looks like you can use whatever name you&#39;d like and add to the Retry structure on how that error should be handled",
  "id": "5b43a58a3d8f71623d697e9d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-09T18:12:26.368Z",
  "text": "Yea, it looks like you can use whatever name you'd like and add to the Retry structure on how that error should be handled",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "but as far as how &#39;naming&#39; the error translates to Go so that SFN picks up on the &quot;named&quot; error, I guess I&#39;m wondering if that means I need to give custom error types a &quot;name&quot; field",
  "id": "5b43a5cae534eb69a5d54484",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-09T18:13:30.903Z",
  "text": "but as far as how 'naming' the error translates to Go so that SFN picks up on the \"named\" error, I guess I'm wondering if that means I need to give custom error types a \"name\" field",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "or if it&#39;s the type name itself",
  "id": "5b43a5d6f16644066126921a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-09T18:13:42.666Z",
  "text": "or if it's the type name itself",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "like<pre><code><span class=\"class\"><span class=\"keyword\">type</span> <span class=\"title\">MyError</span> <span class=\"title\">struct</span> {</span></code></pre>",
  "id": "5b43a5eda99e1e52b72344ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-09T18:14:05.229Z",
  "text": "like\n```\ntype MyError struct {\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "like is that enough",
  "id": "5b43a5f3f1664406612692e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-09T18:14:11.134Z",
  "text": "like is that enough",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "or<pre><code class=\"golang\"><span class=\"keyword\">type</span> MyError <span class=\"keyword\">struct</span> {\n  Name <span class=\"typename\">string</span>\n}</code></pre>",
  "id": "5b43a6007b811a6d63dce2f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-09T18:14:24.138Z",
  "text": "or\n```golang\ntype MyError struct {\n  Name string\n}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/davidcpell",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1223820?v=4&s=60",
   "displayName": "David Pell",
   "gv": "4",
   "id": "5661fbbc16b6c7089cbd71b0",
   "url": "/davidcpell",
   "username": "davidcpell",
   "v": 6
  },
  "html": "maybe I&#39;m overthinking it...",
  "id": "5b43a60970efc60660b9f4ec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-09T18:14:33.076Z",
  "text": "maybe I'm overthinking it...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "I believe it is more like the second case <span data-link-type=\"mention\" data-screen-name=\"davidcpell\" class=\"mention\">@davidcpell</span> ",
  "id": "5b43b4e7e534eb69a5d57112",
  "issues": [],
  "mentions": [
   {
    "screenName": "davidcpell",
    "userId": "5661fbbc16b6c7089cbd71b0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-09T19:17:59.686Z",
  "text": "I believe it is more like the second case @davidcpell ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/sandhyapi_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/720329300214296576/3AnCAV8m.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/720329300214296576/3AnCAV8m_bigger.jpg",
   "displayName": "Sandhya Pai Kalra",
   "id": "5b4609eed73408ce4fa07149",
   "url": "/sandhyapi_twitter",
   "username": "sandhyapi_twitter"
  },
  "html": "Hi, I&#39;m trying to have an SQS subscribe to a topic. It seems like I need to add permissions to the SQS (SQS:SendMessage, ArnEquals: aws:SourceArn: &lt;SNS topic ARN&gt;) on the UI, in order for the topic to be able to publish to the SQS. How would I specify this policy using the Go SDK?",
  "id": "5b460ab570efc60660bfee62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-07-11T13:48:37.341Z",
  "text": "Hi, I'm trying to have an SQS subscribe to a topic. It seems like I need to add permissions to the SQS (SQS:SendMessage, ArnEquals: aws:SourceArn: <SNS topic ARN>) on the UI, in order for the topic to be able to publish to the SQS. How would I specify this policy using the Go SDK?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/sandhyapi_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/720329300214296576/3AnCAV8m.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/720329300214296576/3AnCAV8m_bigger.jpg",
   "displayName": "Sandhya Pai Kalra",
   "id": "5b4609eed73408ce4fa07149",
   "url": "/sandhyapi_twitter",
   "username": "sandhyapi_twitter"
  },
  "html": "More specifically, I tried using the &quot;AddPermissionInput&quot;. However, I don&#39;t see where I can specify the condition that allows me to specify the source ARN that I did on the UI: ArnEquals: aws:SourceArn: &lt;SNS topic ARN&gt;) ",
  "id": "5b460e6aa99e1e52b7294307",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2018-07-11T14:04:26.489Z",
  "text": "More specifically, I tried using the \"AddPermissionInput\". However, I don't see where I can specify the condition that allows me to specify the source ARN that I did on the UI: ArnEquals: aws:SourceArn: <SNS topic ARN>) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lolcoolkat",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=60",
   "displayName": "Kat",
   "gv": "4",
   "id": "58c9f744d73408ce4f510a0a",
   "url": "/lolcoolkat",
   "username": "lolcoolkat",
   "v": 11
  },
  "html": "hi :)",
  "id": "5b485aba641ecc065f9eaf1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2018-07-13T07:54:34.721Z",
  "text": "hi :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hello <span data-link-type=\"mention\" data-screen-name=\"sandhyapi_twitter\" class=\"mention\">@sandhyapi_twitter</span>, take a look at <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#SQS.SetQueueAttributes\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">SetQueueAttributes</a>.",
  "id": "5b48c26c73026160f59dd2fd",
  "issues": [],
  "mentions": [
   {
    "screenName": "sandhyapi_twitter",
    "userId": "5b4609eed73408ce4fa07149",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2018-07-13T15:17:00.681Z",
  "text": "Hello @sandhyapi_twitter, take a look at [SetQueueAttributes](https://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#SQS.SetQueueAttributes).",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#SQS.SetQueueAttributes"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "And hi <span data-link-type=\"mention\" data-screen-name=\"lolcoolkat\" class=\"mention\">@lolcoolkat</span> ",
  "id": "5b48c28626aa91065e910930",
  "issues": [],
  "mentions": [
   {
    "screenName": "lolcoolkat",
    "userId": "58c9f744d73408ce4f510a0a",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2018-07-13T15:17:26.680Z",
  "text": "And hi @lolcoolkat ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lolcoolkat",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=60",
   "displayName": "Kat",
   "gv": "4",
   "id": "58c9f744d73408ce4f510a0a",
   "url": "/lolcoolkat",
   "username": "lolcoolkat",
   "v": 11
  },
  "html": ":)",
  "id": "5b48c773641ecc065fa01873",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-13T15:38:27.953Z",
  "text": ":)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Please let us know if you any questions :)",
  "id": "5b48c7b99a612333aa5df1da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2018-07-13T15:39:37.924Z",
  "text": "Please let us know if you any questions :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lolcoolkat",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=60",
   "displayName": "Kat",
   "gv": "4",
   "id": "58c9f744d73408ce4f510a0a",
   "url": "/lolcoolkat",
   "username": "lolcoolkat",
   "v": 11
  },
  "html": "haha will do :) Im using serverless with node8.10 right now but was considering converting it all to go ;)",
  "id": "5b48c98726aa91065e912274",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-13T15:47:19.722Z",
  "text": "haha will do :) Im using serverless with node8.10 right now but was considering converting it all to go ;)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lolcoolkat",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=60",
   "displayName": "Kat",
   "gv": "4",
   "id": "58c9f744d73408ce4f510a0a",
   "url": "/lolcoolkat",
   "username": "lolcoolkat",
   "v": 11
  },
  "html": "any thoughts on that :D",
  "id": "5b48c997b5efcd5aeef9ef01",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-13T15:47:35.379Z",
  "text": "any thoughts on that :D",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Would be 100% for it! But I may be a little biased. just a",
  "id": "5b48c9f8b5efcd5aeef9f060",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-13T15:49:12.659Z",
  "text": "Would be 100% for it! But I may be a little biased. just a",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "a little though :p",
  "id": "5b48c9fc73026160f59ded5b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-13T15:49:16.270Z",
  "text": "a little though :p",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lolcoolkat",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=60",
   "displayName": "Kat",
   "gv": "4",
   "id": "58c9f744d73408ce4f510a0a",
   "url": "/lolcoolkat",
   "username": "lolcoolkat",
   "v": 11
  },
  "html": "hehe",
  "id": "5b48ca0b897d514b3c4b7f43",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-13T15:49:31.299Z",
  "text": "hehe",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lolcoolkat",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=60",
   "displayName": "Kat",
   "gv": "4",
   "id": "58c9f744d73408ce4f510a0a",
   "url": "/lolcoolkat",
   "username": "lolcoolkat",
   "v": 11
  },
  "html": "im a noob with go tho .. but yolo right ;)",
  "id": "5b48ca2c866e0c6b15a4ae25",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-13T15:50:04.035Z",
  "text": "im a noob with go tho .. but yolo right ;)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Yea, you only live once!",
  "id": "5b48ca3e73026160f59dee23",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-13T15:50:22.452Z",
  "text": "Yea, you only live once!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lolcoolkat",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=60",
   "displayName": "Kat",
   "gv": "4",
   "id": "58c9f744d73408ce4f510a0a",
   "url": "/lolcoolkat",
   "username": "lolcoolkat",
   "v": 11
  },
  "html": "serverless framework needs to get their crap together with support for go on windows machines -_-",
  "id": "5b48ca55582aaa63076727a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-13T15:50:45.569Z",
  "text": "serverless framework needs to get their crap together with support for go on windows machines -_-",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lolcoolkat",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=60",
   "displayName": "Kat",
   "gv": "4",
   "id": "58c9f744d73408ce4f510a0a",
   "url": "/lolcoolkat",
   "username": "lolcoolkat",
   "v": 11
  },
  "html": "had to switch over to an ubuntu machine to deploy go lol",
  "id": "5b48ca62897d514b3c4b8043",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2018-07-13T15:50:58.206Z",
  "text": "had to switch over to an ubuntu machine to deploy go lol",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Oh really? What kind of issues did you run into on Windows? I haven&#39;t tried it. So no idea on the limitations on windows are",
  "id": "5b48ca7fba5f154b3b9c0bf3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-07-13T15:51:27.635Z",
  "text": "Oh really? What kind of issues did you run into on Windows? I haven't tried it. So no idea on the limitations on windows are",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lolcoolkat",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=60",
   "displayName": "Kat",
   "gv": "4",
   "id": "58c9f744d73408ce4f510a0a",
   "url": "/lolcoolkat",
   "username": "lolcoolkat",
   "v": 11
  },
  "html": "So apparently the issue is when serverless zip&#39;s the binaries generated.. they aren&#39;t given the proper &quot;execute&quot; permissions so when they are run on lambda.... they give a &quot;permission denied&quot; error",
  "id": "5b48cac4c02eb83d7c70b33d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-07-13T15:52:36.855Z",
  "text": "So apparently the issue is when serverless zip's the binaries generated.. they aren't given the proper \"execute\" permissions so when they are run on lambda.... they give a \"permission denied\" error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lolcoolkat",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=60",
   "displayName": "Kat",
   "gv": "4",
   "id": "58c9f744d73408ce4f510a0a",
   "url": "/lolcoolkat",
   "username": "lolcoolkat",
   "v": 11
  },
  "html": "im using lambda in conjunction with aws appsync btw :)",
  "id": "5b48cb0bba5f154b3b9c0de1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-07-13T15:53:47.130Z",
  "text": "im using lambda in conjunction with aws appsync btw :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lolcoolkat",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=60",
   "displayName": "Kat",
   "gv": "4",
   "id": "58c9f744d73408ce4f510a0a",
   "url": "/lolcoolkat",
   "username": "lolcoolkat",
   "v": 11
  },
  "html": "the go code in lambda will be my resolvers",
  "id": "5b48cb19c02eb83d7c70b44d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-07-13T15:54:01.007Z",
  "text": "the go code in lambda will be my resolvers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Ah, Im a little confused though. That sounds more like just poor permissions rather than a windows issue. Or is it?",
  "id": "5b48d68ed1428e5aefe56213",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-07-13T16:42:54.535Z",
  "text": "Ah, Im a little confused though. That sounds more like just poor permissions rather than a windows issue. Or is it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lolcoolkat",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=60",
   "displayName": "Kat",
   "gv": "4",
   "id": "58c9f744d73408ce4f510a0a",
   "url": "/lolcoolkat",
   "username": "lolcoolkat",
   "v": 11
  },
  "html": "yeah I think its just an issue on their part",
  "id": "5b48e0ae95e03e3d7b47e6dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-07-13T17:26:06.997Z",
  "text": "yeah I think its just an issue on their part",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/lolcoolkat",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/20114263?v=4&s=60",
   "displayName": "Kat",
   "gv": "4",
   "id": "58c9f744d73408ce4f510a0a",
   "url": "/lolcoolkat",
   "username": "lolcoolkat",
   "v": 11
  },
  "html": ":P",
  "id": "5b48e0af26aa91065e916a42",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-07-13T17:26:07.802Z",
  "text": ":P",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "The Lambda runtime could also be smarter and chmod the binary file if it&#39;s not executable ",
  "id": "5b48e8229a612333aa5e60ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-07-13T17:57:54.192Z",
  "text": "The Lambda runtime could also be smarter and chmod the binary file if it's not executable ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/fitims",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4329268?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4329268?v=4&s=60",
   "displayName": "Fitim Skenderi",
   "gv": "4",
   "id": "585edfa2d73408ce4f3f2562",
   "url": "/fitims",
   "username": "fitims",
   "v": 4
  },
  "html": "Hi, can someone help please. THe sample code for sending RawEmail on SES using GO is not working. I keep getting InvalidParameterValue: Illegal address",
  "id": "5b4928b39a612333aa5f08a3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-07-13T22:33:23.774Z",
  "text": "Hi, can someone help please. THe sample code for sending RawEmail on SES using GO is not working. I keep getting InvalidParameterValue: Illegal address",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/fitims",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4329268?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4329268?v=4&s=60",
   "displayName": "Fitim Skenderi",
   "gv": "4",
   "id": "585edfa2d73408ce4f3f2562",
   "url": "/fitims",
   "username": "fitims",
   "v": 4
  },
  "html": "the location of the sample code is: <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/ses/#SES.SendRawEmail\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/ses/#SES.SendRawEmail</a>",
  "id": "5b4928c873026160f59ef724",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-07-13T22:33:44.392Z",
  "text": "the location of the sample code is: https://docs.aws.amazon.com/sdk-for-go/api/service/ses/#SES.SendRawEmail",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/ses/#SES.SendRawEmail"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fitims\" class=\"mention\">@fitims</span> - what error are you seeing?",
  "id": "5b49291c1c0f906b1450daea",
  "issues": [],
  "mentions": [
   {
    "screenName": "fitims",
    "userId": "585edfa2d73408ce4f3f2562",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2018-07-13T22:35:08.800Z",
  "text": "@fitims - what error are you seeing?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-07-13T22:36:07.111Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/fitims",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4329268?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4329268?v=4&s=60",
   "displayName": "Fitim Skenderi",
   "gv": "4",
   "id": "585edfa2d73408ce4f3f2562",
   "url": "/fitims",
   "username": "fitims",
   "v": 4
  },
  "html": "I keep getting  <code>InvalidParameterValue: Illegal address</code>",
  "id": "5b492941582aaa6307683551",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-07-13T22:35:45.335Z",
  "text": "I keep getting  ` InvalidParameterValue: Illegal address`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/fitims",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4329268?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4329268?v=4&s=60",
   "displayName": "Fitim Skenderi",
   "gv": "4",
   "id": "585edfa2d73408ce4f3f2562",
   "url": "/fitims",
   "username": "fitims",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> I keep getting  <code>InvalidParameterValue: Illegal address</code>",
  "id": "5b49297fc02eb83d7c71c12b",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2018-07-13T22:36:47.398Z",
  "text": "@xibz I keep getting  ` InvalidParameterValue: Illegal address`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Hm, I wonder if that is in the raw email portion in the data field. Let me try to reproduce this on my end",
  "id": "5b492ae5866e0c6b15a5bd3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-07-13T22:42:45.812Z",
  "text": "Hm, I wonder if that is in the raw email portion in the data field. Let me try to reproduce this on my end",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/fitims",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/4329268?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/4329268?v=4&s=60",
   "displayName": "Fitim Skenderi",
   "gv": "4",
   "id": "585edfa2d73408ce4f3f2562",
   "url": "/fitims",
   "username": "fitims",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"xibz\" class=\"mention\">@xibz</span> thanks",
  "id": "5b492ba0d1428e5aefe643fa",
  "issues": [],
  "mentions": [
   {
    "screenName": "xibz",
    "userId": "56b52d49e610378809c01abc",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2018-07-13T22:45:52.367Z",
  "text": "@xibz thanks",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"fitims\" class=\"mention\">@fitims</span> - Example is just busted. You can, for now, just remove the aws.String(&quot;&quot;) and it shoudl work",
  "id": "5b5275c9e06d7e7409914a2e",
  "issues": [],
  "mentions": [
   {
    "screenName": "fitims",
    "userId": "585edfa2d73408ce4f3f2562",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2018-07-20T23:52:41.743Z",
  "text": "@fitims - Example is just busted. You can, for now, just remove the aws.String(\"\") and it shoudl work",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/maros7",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/25764930?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/25764930?v=4&s=60",
   "displayName": "Marcus Ros\u00e9n",
   "gv": "4",
   "id": "59e79994d73408ce4f7a9d84",
   "url": "/maros7",
   "username": "maros7",
   "v": 1
  },
  "html": "Hi, what is the expected behaviour if I try to update two different attributes in a DynamoDB item at the same time? Can I expect that both will be updated? I tried to find out by looking in the docs, but didn&#39;t find anything...and for a bit more background, I would have multiple consumers reading from a queue and potentially updating the same item but different attributes in that item using the UpdateItem SET operation. ",
  "id": "5b57480e9ddf5f4aad065b1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-07-24T15:38:54.084Z",
  "text": "Hi, what is the expected behaviour if I try to update two different attributes in a DynamoDB item at the same time? Can I expect that both will be updated? I tried to find out by looking in the docs, but didn't find anything...and for a bit more background, I would have multiple consumers reading from a queue and potentially updating the same item but different attributes in that item using the UpdateItem SET operation. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/prensoni0143",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/34119534?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/34119534?v=4&s=60",
   "displayName": "J@tin",
   "gv": "4",
   "id": "5a939f35d73408ce4f8ed3af",
   "url": "/prensoni0143",
   "username": "prensoni0143",
   "v": 4
  },
  "html": "AWS Telegram group: <a href=\"https://t.me/aws_exam\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://t.me/aws_exam</a>",
  "id": "5b5ad624b97f4f3f1f9f8f63",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-07-27T08:21:56.622Z",
  "text": "AWS Telegram group: https://t.me/aws_exam",
  "unread": false,
  "urls": [
   {
    "url": "https://t.me/aws_exam"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Floatingpanda",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6030964?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6030964?v=4&s=60",
   "displayName": "Herelius",
   "gv": "4",
   "id": "5b61a70bd73408ce4fa3191c",
   "url": "/Floatingpanda",
   "username": "Floatingpanda"
  },
  "html": "I am attempting to upload files to a glacier vault with the golang API, I read in the general api doc about high level methods that seem very simple using an ArchiveTransferManager class. Are there any similar &quot;high level&quot; functions in the golang API?",
  "id": "5b61a7d417c942036b8b2c53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-08-01T12:30:12.583Z",
  "text": "I am attempting to upload files to a glacier vault with the golang API, I read in the general api doc about high level methods that seem very simple using an ArchiveTransferManager class. Are there any similar \"high level\" functions in the golang API?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/danbryan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/807940?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/807940?v=4&s=60",
   "displayName": "Dan Bryan",
   "gv": "4",
   "id": "5afafb6cd73408ce4f996b50",
   "url": "/danbryan",
   "username": "danbryan",
   "v": 10
  },
  "html": "Hey all, I have a box with a bunch of Named Profile configured. From my &quot;default&quot; profile, I can type $env:AWS_PROFILE=&quot;security&quot; ; aws sts get-caller-identity and I see my assumed role info",
  "id": "5b63909f79bfdf5c998e776d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-08-02T23:15:43.346Z",
  "text": "Hey all, I have a box with a bunch of Named Profile configured. From my \"default\" profile, I can type $env:AWS_PROFILE=\"security\" ; aws sts get-caller-identity and I see my assumed role info",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/danbryan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/807940?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/807940?v=4&s=60",
   "displayName": "Dan Bryan",
   "gv": "4",
   "id": "5afafb6cd73408ce4f996b50",
   "url": "/danbryan",
   "username": "danbryan",
   "v": 10
  },
  "html": "I have a golang app which returns an aws account number based on the output of sts get-caller-identity",
  "id": "5b6390c604436a1ae60af374",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-08-02T23:16:22.538Z",
  "text": "I have a golang app which returns an aws account number based on the output of sts get-caller-identity",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/danbryan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/807940?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/807940?v=4&s=60",
   "displayName": "Dan Bryan",
   "gv": "4",
   "id": "5afafb6cd73408ce4f996b50",
   "url": "/danbryan",
   "username": "danbryan",
   "v": 10
  },
  "html": "when i call it from my default profile it works, and returns the number, but when i call it from the security profile it says  NoCredentialProviders: No valid providers in chain.",
  "id": "5b6390fecf8ab4758a9598aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-08-02T23:17:18.942Z",
  "text": "when i call it from my default profile it works, and returns the number, but when i call it from the security profile it says  NoCredentialProviders: No valid providers in chain.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/danbryan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/807940?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/807940?v=4&s=60",
   "displayName": "Dan Bryan",
   "gv": "4",
   "id": "5afafb6cd73408ce4f996b50",
   "url": "/danbryan",
   "username": "danbryan",
   "v": 10
  },
  "html": "any idea why aws cli is able to get-caller-identity as both default, and security, but golang can only do it as default?",
  "id": "5b63911a0cfcf02fdf019d8c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-08-02T23:17:46.638Z",
  "text": "any idea why aws cli is able to get-caller-identity as both default, and security, but golang can only do it as default?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/danbryan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/807940?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/807940?v=4&s=60",
   "displayName": "Dan Bryan",
   "gv": "4",
   "id": "5afafb6cd73408ce4f996b50",
   "url": "/danbryan",
   "username": "danbryan",
   "v": 10
  },
  "html": "<a href=\"https://play.golang.org/p/rdkwhZz71i3\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://play.golang.org/p/rdkwhZz71i3</a>",
  "id": "5b63914c74470f5c983fec08",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-08-02T23:18:36.971Z",
  "text": "https://play.golang.org/p/rdkwhZz71i3",
  "unread": false,
  "urls": [
   {
    "url": "https://play.golang.org/p/rdkwhZz71i3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/danbryan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/807940?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/807940?v=4&s=60",
   "displayName": "Dan Bryan",
   "gv": "4",
   "id": "5afafb6cd73408ce4f996b50",
   "url": "/danbryan",
   "username": "danbryan",
   "v": 10
  },
  "html": "looks like i needed to add AWS_SDK_LOAD_CONFIG=1",
  "id": "5b63951b3a5a2d2f99e62808",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-08-02T23:34:51.083Z",
  "text": "looks like i needed to add AWS_SDK_LOAD_CONFIG=1",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/WSmonkey",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10532644?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10532644?v=4&s=60",
   "displayName": "Shuai Wang",
   "gv": "4",
   "id": "5b64d933d73408ce4fa36f68",
   "url": "/WSmonkey",
   "username": "WSmonkey",
   "v": 3
  },
  "html": "Hello anyone encounters problem for call sns.New()?",
  "id": "5b64d94085278d705e7f8556",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2018-08-03T22:37:52.475Z",
  "text": "Hello anyone encounters problem for call sns.New()?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/WSmonkey",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10532644?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10532644?v=4&s=60",
   "displayName": "Shuai Wang",
   "gv": "4",
   "id": "5b64d933d73408ce4fa36f68",
   "url": "/WSmonkey",
   "username": "WSmonkey",
   "v": 3
  },
  "html": "func New(p client.ConfigProvider, cfgs ...<em>aws.Config) </em>SNS",
  "id": "5b64d94f6d45752f9886d547",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-08-03T22:38:07.891Z",
  "text": "func New(p client.ConfigProvider, cfgs ...*aws.Config) *SNS",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/WSmonkey",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/10532644?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/10532644?v=4&s=60",
   "displayName": "Shuai Wang",
   "gv": "4",
   "id": "5b64d933d73408ce4fa36f68",
   "url": "/WSmonkey",
   "username": "WSmonkey",
   "v": 3
  },
  "html": "How do I get the first parameter?",
  "id": "5b64d96cc917d40dc23c2850",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-08-03T22:38:36.699Z",
  "text": "How do I get the first parameter?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/moosakhalid",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=60",
   "displayName": "Moosa Khalid",
   "gv": "4",
   "id": "58773b78d73408ce4f42fc19",
   "url": "/moosakhalid",
   "username": "moosakhalid",
   "v": 5
  },
  "html": "Hi folks I&#39;m having issues with supplying the Dimensions field in the GetMetricStatisticsInput function in AWS Go SDK. ",
  "id": "5b6640f13a5a2d2f99f48cb8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-08-05T00:12:33.068Z",
  "text": "Hi folks I'm having issues with supplying the Dimensions field in the GetMetricStatisticsInput function in AWS Go SDK. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-05T00:16:50.201Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/moosakhalid",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=60",
   "displayName": "Moosa Khalid",
   "gv": "4",
   "id": "58773b78d73408ce4f42fc19",
   "url": "/moosakhalid",
   "username": "moosakhalid",
   "v": 5
  },
  "html": "<p>Right now I&#39;m hardcoding only 1 dimension key-value pair in as follows </p><blockquote>\n<p>params := &amp;cloudwatch.GetMetricStatisticsInput{<br>StartTime:  &amp;startTime,<br>EndTime:    aws.Time(endTime.UTC()),<br>Period:     aws.Int64(int64(periodCheck)),<br>MetricName: aws.String(metricName),<br>Namespace:  aws.String(nameSpace),<br>Dimensions: []<em>cloudwatch.Dimension{<br>    {<br>              Name:  aws.String(dimensionName),<br>                Value: aws.String(opts.SearchName),<br>          },<br>    },<br>     Statistics: []</em>string{<br>               aws.String(statistics),<br>        },<br> }<br>  fmt.Println(params)<br>   resp, err := svc.GetMetricStatistics(params)</p></blockquote>\n",
  "id": "5b664123cf8ab4758aa40b72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-08-05T00:13:23.529Z",
  "text": "Right now I'm hardcoding only 1 dimension key-value pair in as follows \n>params := &cloudwatch.GetMetricStatisticsInput{\n                >StartTime:  &startTime,\n                >EndTime:    aws.Time(endTime.UTC()),\n                >Period:     aws.Int64(int64(periodCheck)),\n                >MetricName: aws.String(metricName),\n                >Namespace:  aws.String(nameSpace),\n                >Dimensions: []*cloudwatch.Dimension{\n                   >     {\n                 >               Name:  aws.String(dimensionName),\n               >                 Value: aws.String(opts.SearchName),\n             >           },\n           >     },\n          >      Statistics: []*string{\n        >                aws.String(statistics),\n       >         },\n      >  }\n     >   fmt.Println(params)\n    >    resp, err := svc.GetMetricStatistics(params)",
  "unread": false,
  "urls": [],
  "v": 6
 },
 {
  "editedAt": "2018-08-05T00:18:02.131Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/moosakhalid",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=60",
   "displayName": "Moosa Khalid",
   "gv": "4",
   "id": "58773b78d73408ce4f42fc19",
   "url": "/moosakhalid",
   "username": "moosakhalid",
   "v": 5
  },
  "html": "I am a noob at Go and maps, slices have confused me, how do I dynamically pass as many Dimensions as I want inside the params",
  "id": "5b66422b5d1362758b330f9a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-08-05T00:17:47.237Z",
  "text": "I am a noob at Go and maps, slices have confused me, how do I dynamically pass as many Dimensions as I want inside the params",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2018-08-05T00:19:17.693Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/moosakhalid",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=60",
   "displayName": "Moosa Khalid",
   "gv": "4",
   "id": "58773b78d73408ce4f42fc19",
   "url": "/moosakhalid",
   "username": "moosakhalid",
   "v": 5
  },
  "html": "any help or nudge in the right direction would be appreciated!",
  "id": "5b66427fe9ab53770c8e8363",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-08-05T00:19:11.941Z",
  "text": "any help or nudge in the right direction would be appreciated!",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gdanko",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/448439?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/448439?v=4&s=60",
   "displayName": "Gary Danko",
   "gv": "4",
   "id": "5b6a360dd73408ce4fa3db8e",
   "url": "/gdanko",
   "username": "gdanko",
   "v": 1
  },
  "html": "Is it possible to request v4 signature using the Go SDK?",
  "id": "5b6a3623cf8ab4758ab88030",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-08-08T00:15:31.708Z",
  "text": "Is it possible to request v4 signature using the Go SDK?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Trimeego",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/602821?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/602821?v=4&s=60",
   "displayName": "Jason Douglas",
   "gv": "4",
   "id": "57507dc7c43b8c6019766736",
   "url": "/Trimeego",
   "username": "Trimeego",
   "v": 2
  },
  "html": "Has anyone had success using USER_PASSWORD_AUTH with an ADFS identity provider.  I am getting a UserNotFoundException for any ADFS user that I attempt.  I have enabled the client for the identity provider.  Any Ideas?",
  "id": "5b6e273f637ee66082d3605c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-08-11T00:01:03.251Z",
  "text": "Has anyone had success using USER_PASSWORD_AUTH with an ADFS identity provider.  I am getting a UserNotFoundException for any ADFS user that I attempt.  I have enabled the client for the identity provider.  Any Ideas?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-13T15:11:03.469Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Floatingpanda\" class=\"mention\">@Floatingpanda</span> Take a look at the glacier package, <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/glacier/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/glacier/</a>.",
  "id": "5b719f2026e68560fdedb091",
  "issues": [],
  "mentions": [
   {
    "screenName": "Floatingpanda",
    "userId": "5b61a70bd73408ce4fa3191c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2018-08-13T15:09:20.805Z",
  "text": "@Floatingpanda Take a look at the glacier package, https://docs.aws.amazon.com/sdk-for-go/api/service/glacier/.",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/glacier/"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"moosakhalid\" class=\"mention\">@moosakhalid</span> We have an example in the SDK docs of listing metrics using one Dimension: <a href=\"https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/cw-example-getting-metrics.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/cw-example-getting-metrics.html</a>. To add multiple dimensions, just replicate:</p><p>&amp;cloudwatch.DimensionFilter{<br>    Name: aws.String(NAME),<br>},</p><p>Where NAME is the name of the dimension.</p>",
  "id": "5b71a22c196bc60b6bc39aa9",
  "issues": [],
  "mentions": [
   {
    "screenName": "moosakhalid",
    "userId": "58773b78d73408ce4f42fc19",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2018-08-13T15:22:20.023Z",
  "text": "@moosakhalid We have an example in the SDK docs of listing metrics using one Dimension: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/cw-example-getting-metrics.html. To add multiple dimensions, just replicate:\n\n&cloudwatch.DimensionFilter{\n    Name: aws.String(NAME),\n},\n\nWhere NAME is the name of the dimension.",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/cw-example-getting-metrics.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"WSmonkey\" class=\"mention\">@WSmonkey</span> All the clients I&#39;m familiar with take an object that you create thusly (this uses your default credentials in ~!/.aws/credentials and default region in ~/.aws/config):</p><p>sess := session.Must(session.NewSessionWithOptions(session.Options{<br>    SharedConfigState: session.SharedConfigEnable,<br>}))</p>",
  "id": "5b71a2e3637ee66082e5421b",
  "issues": [],
  "mentions": [
   {
    "screenName": "WSmonkey",
    "userId": "5b64d933d73408ce4fa36f68",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2018-08-13T15:25:23.350Z",
  "text": "@WSmonkey All the clients I'm familiar with take an object that you create thusly (this uses your default credentials in ~!/.aws/credentials and default region in ~/.aws/config):\n\nsess := session.Must(session.NewSessionWithOptions(session.Options{\n    SharedConfigState: session.SharedConfigEnable,\n}))",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"gdanko\" class=\"mention\">@gdanko</span> See the <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/aws/signer/v4/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/aws/signer/v4/</a> package.",
  "id": "5b71a32e179f842c9731a6d5",
  "issues": [],
  "mentions": [
   {
    "screenName": "gdanko",
    "userId": "5b6a360dd73408ce4fa3db8e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2018-08-13T15:26:38.427Z",
  "text": "@gdanko See the https://docs.aws.amazon.com/sdk-for-go/api/aws/signer/v4/ package.",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/aws/signer/v4/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/hrugani",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6536369?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6536369?v=4&s=60",
   "displayName": "H\u00e9lio Rugani Brand\u00e3o",
   "gv": "4",
   "id": "5939a836d73408ce4f65d34b",
   "url": "/hrugani",
   "username": "hrugani",
   "v": 3
  },
  "html": "I also a noob on AWS Services and Go SDK. I am working to deploy some microservices, initially using several Go RestAPIs applications running on one ec2 instance.  Could I use the API Gateway in front of these go applications as my just one entry point which redirects all requests to the right go microservice?",
  "id": "5b76a07c802bc42c5f3043d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-08-17T10:16:28.072Z",
  "text": "I also a noob on AWS Services and Go SDK. I am working to deploy some microservices, initially using several Go RestAPIs applications running on one ec2 instance.  Could I use the API Gateway in front of these go applications as my just one entry point which redirects all requests to the right go microservice?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-17T12:54:21.996Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "if you have a single instance it doesn&#39;t make sense, just configure an nginx in front of them that reverse proxies to each of them using name-based-virtual hosting",
  "id": "5b76c572070fa234ee76c072",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-08-17T12:54:10.583Z",
  "text": "if you have a single instance it doesn't make sense, just configure an nginx in front of them that reverse proxies to each of them using name-based-virtual hosting",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nikskiz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16333907?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16333907?v=4&s=60",
   "displayName": "Nikola Sepentulevski",
   "gv": "4",
   "id": "5b7b80a1d73408ce4fa53ea7",
   "url": "/nikskiz",
   "username": "nikskiz",
   "v": 5
  },
  "html": "I am trying to filter s3 objects (i.e like DescribeInstancesInput which has the field &quot;Filters []*Filter&quot;) Has anyone achieved this?",
  "id": "5b7b831194f8164c17790b9e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-08-21T03:12:17.350Z",
  "text": "I am trying to filter s3 objects (i.e like DescribeInstancesInput which has the field \"Filters []*Filter\") Has anyone achieved this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/novking",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17560707?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17560707?v=4&s=60",
   "displayName": "Aaron (Yiming) Zhang",
   "gv": "4",
   "id": "5727df7dc43b8c601970d842",
   "url": "/novking",
   "username": "novking",
   "v": 2
  },
  "html": "Hi there. I&#39;m new to the golang sdk. I wonder if there&#39;s a way to find tag of an image. (AMI). i didn&#39;t find a method/func to do that.",
  "id": "5b7c7875c53ee54c1883823a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-08-21T20:39:17.771Z",
  "text": "Hi there. I'm new to the golang sdk. I wonder if there's a way to find tag of an image. (AMI). i didn't find a method/func to do that.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nikskiz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16333907?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16333907?v=4&s=60",
   "displayName": "Nikola Sepentulevski",
   "gv": "4",
   "id": "5b7b80a1d73408ce4fa53ea7",
   "url": "/nikskiz",
   "username": "nikskiz",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"novking\" class=\"mention\">@novking</span> I haven&#39;t done it before, however you could use &quot;func (<em>EC2) DescribeIamInstanceProfileAssociationsWithContext&quot; which asks for &quot;input </em>DescribeIamInstanceProfileAssociationsInput&quot;",
  "id": "5b7cab16c53ee54c18849344",
  "issues": [],
  "mentions": [
   {
    "screenName": "novking",
    "userId": "5727df7dc43b8c601970d842",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2018-08-22T00:15:18.162Z",
  "text": "@novking I haven't done it before, however you could use \"func (*EC2) DescribeIamInstanceProfileAssociationsWithContext\" which asks for \"input *DescribeIamInstanceProfileAssociationsInput\"",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-22T00:16:08.236Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nikskiz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16333907?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16333907?v=4&s=60",
   "displayName": "Nikola Sepentulevski",
   "gv": "4",
   "id": "5b7b80a1d73408ce4fa53ea7",
   "url": "/nikskiz",
   "username": "nikskiz",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"novking\" class=\"mention\">@novking</span> the struct &quot;DescribeIamInstanceProfileAssociationsInput&quot; has the following field which you could use &quot;Filters []*Filter <code>locationName:&quot;Filter&quot; locationNameList:&quot;Filter&quot; type:&quot;list&quot;</code>&quot;",
  "id": "5b7cab3fd8d36815e56fece5",
  "issues": [],
  "mentions": [
   {
    "screenName": "novking",
    "userId": "5727df7dc43b8c601970d842",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2018-08-22T00:15:59.883Z",
  "text": "@novking the struct \"DescribeIamInstanceProfileAssociationsInput\" has the following field which you could use \"Filters []*Filter `locationName:\"Filter\" locationNameList:\"Filter\" type:\"list\"`\"",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nikskiz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16333907?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16333907?v=4&s=60",
   "displayName": "Nikola Sepentulevski",
   "gv": "4",
   "id": "5b7b80a1d73408ce4fa53ea7",
   "url": "/nikskiz",
   "username": "nikskiz",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"novking\" class=\"mention\">@novking</span> You can use the following link as a guide <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/</a>",
  "id": "5b7cab94ac25fd11b5771cba",
  "issues": [],
  "mentions": [
   {
    "screenName": "novking",
    "userId": "5727df7dc43b8c601970d842",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2018-08-22T00:17:24.381Z",
  "text": "@novking You can use the following link as a guide https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nikskiz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16333907?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16333907?v=4&s=60",
   "displayName": "Nikola Sepentulevski",
   "gv": "4",
   "id": "5b7b80a1d73408ce4fa53ea7",
   "url": "/nikskiz",
   "username": "nikskiz",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"novking\" class=\"mention\">@novking</span> I have found a github example you could follow: <a href=\"https://gist.github.com/eferro/651fbb72851fa7987fc642c8f39638eb\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://gist.github.com/eferro/651fbb72851fa7987fc642c8f39638eb</a>",
  "id": "5b7cac92ff445156161d1d5d",
  "issues": [],
  "mentions": [
   {
    "screenName": "novking",
    "userId": "5727df7dc43b8c601970d842",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2018-08-22T00:21:38.463Z",
  "text": "@novking I have found a github example you could follow: https://gist.github.com/eferro/651fbb72851fa7987fc642c8f39638eb",
  "unread": false,
  "urls": [
   {
    "url": "https://gist.github.com/eferro/651fbb72851fa7987fc642c8f39638eb"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/armen115",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/17736823?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/17736823?v=4&s=60",
   "displayName": "Armen",
   "gv": "4",
   "id": "56dfadcae610378809c5bae5",
   "url": "/armen115",
   "username": "armen115",
   "v": 2
  },
  "html": "How does one benchmark and test a lambda function in go? One that inserts an item into dynamodb.. Will mocking the SDK still do the insert?",
  "id": "5b7d72dad8d36815e57452c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-08-22T14:27:38.704Z",
  "text": "How does one benchmark and test a lambda function in go? One that inserts an item into dynamodb.. Will mocking the SDK still do the insert?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "We&#39;re mocking APIs using the provided interfacess. The calls are not actually performed so you can&#39;t use this method for integration tests ",
  "id": "5b7d9892c53ee54c1889f1ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-08-22T17:08:34.450Z",
  "text": "We're mocking APIs using the provided interfacess. The calls are not actually performed so you can't use this method for integration tests ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "If you want that, you could run the real code against the  local version of DynamoDB without any mocking ",
  "id": "5b7d98efa491f4591786bf68",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-08-22T17:10:07.139Z",
  "text": "If you want that, you could run the real code against the  local version of DynamoDB without any mocking ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "can I do an invoke.Sync (...) on a machine to trigger a lambda in aws?<br>My environment is already with ~ / .aws / credentials",
  "id": "5b7f98bfc53ee54c18958c18",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-08-24T05:33:51.194Z",
  "text": "can I do an invoke.Sync (...) on a machine to trigger a lambda in aws?\nMy environment is already with ~ / .aws / credentials",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "I got it here",
  "id": "5b7fa779cff55e5617528c4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-08-24T06:36:41.015Z",
  "text": "I got it here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-24T09:10:16.220Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/_gauravmehla_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/822517588978761730/OPPNNGsn.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/822517588978761730/OPPNNGsn_bigger.jpg",
   "displayName": "Gaurav Mehla",
   "id": "59382dfed73408ce4f6574a4",
   "url": "/_gauravmehla_twitter",
   "username": "_gauravmehla_twitter",
   "v": 1
  },
  "html": "<p>Hey guys, </p><p>I want to use KMS.decrypt function but for that I have to pass</p><pre><code>input := &amp;kms.DecryptInput{\n    CiphertextBlob: []<span class=\"typename\">byte</span>(Ciphertext),\n    EncryptionContext: <span class=\"keyword\">map</span>[<span class=\"typename\">string</span>]*<span class=\"typename\">string</span>{<span class=\"string\">\"id\"</span> : <span class=\"string\">\"1234\"</span> },\n}</code></pre>",
  "id": "5b7fcb6038a12915e4ec1696",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-08-24T09:09:52.464Z",
  "text": "Hey guys, \n\nI want to use KMS.decrypt function but for that I have to pass\n\n    input := &kms.DecryptInput{\n\t    CiphertextBlob: []byte(Ciphertext),\n\t    EncryptionContext: map[string]*string{\"id\" : \"1234\" },\n\t}",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "editedAt": "2018-08-24T09:13:44.105Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/_gauravmehla_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/822517588978761730/OPPNNGsn.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/822517588978761730/OPPNNGsn_bigger.jpg",
   "displayName": "Gaurav Mehla",
   "id": "59382dfed73408ce4f6574a4",
   "url": "/_gauravmehla_twitter",
   "username": "_gauravmehla_twitter",
   "v": 1
  },
  "html": "But i am getting<br><code>cannot use &quot;1234&quot; (type string) as type *string in map value</code>",
  "id": "5b7fcb8bac25fd11b58939e1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-08-24T09:10:35.203Z",
  "text": "But i am getting \n`cannot use \"1234\" (type string) as type *string in map value`",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/_gauravmehla_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/822517588978761730/OPPNNGsn.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/822517588978761730/OPPNNGsn_bigger.jpg",
   "displayName": "Gaurav Mehla",
   "id": "59382dfed73408ce4f6574a4",
   "url": "/_gauravmehla_twitter",
   "username": "_gauravmehla_twitter",
   "v": 1
  },
  "html": "this error",
  "id": "5b7fcb901d3a5711b68f6064",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-08-24T09:10:40.071Z",
  "text": "this error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/_gauravmehla_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/822517588978761730/OPPNNGsn.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/822517588978761730/OPPNNGsn_bigger.jpg",
   "displayName": "Gaurav Mehla",
   "id": "59382dfed73408ce4f6574a4",
   "url": "/_gauravmehla_twitter",
   "username": "_gauravmehla_twitter",
   "v": 1
  },
  "html": "I am using <code>golang</code>",
  "id": "5b7fcb99fd3c641b06017043",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-08-24T09:10:49.416Z",
  "text": "I am using `golang`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/_gauravmehla_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/822517588978761730/OPPNNGsn.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/822517588978761730/OPPNNGsn_bigger.jpg",
   "displayName": "Gaurav Mehla",
   "id": "59382dfed73408ce4f6574a4",
   "url": "/_gauravmehla_twitter",
   "username": "_gauravmehla_twitter",
   "v": 1
  },
  "html": "anybody has any idea ?",
  "id": "5b7fcba438a12915e4ec17e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-08-24T09:11:00.205Z",
  "text": "anybody has any idea ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/savaki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/108710?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/108710?v=4&s=60",
   "displayName": "Matt Ho",
   "gv": "4",
   "id": "5552319a15522ed4b3e0482f",
   "url": "/savaki",
   "username": "savaki",
   "v": 35
  },
  "html": "wrap &quot;1234&quot; in <code>aws.String(&quot;1234&quot;)</code>",
  "id": "5b80442460f9ee7aa4876256",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-08-24T17:45:08.751Z",
  "text": "wrap \"1234\" in `aws.String(\"1234\")`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/guiaria",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9065567?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9065567?v=4&s=60",
   "displayName": "guiaria",
   "gv": "4",
   "id": "5b769aefd73408ce4fa4e69f",
   "url": "/guiaria",
   "username": "guiaria",
   "v": 1
  },
  "html": "Hi am just new for aws-sdk-go and I have some problem with lambda connect to dynamoDB. I have created function for get item from dynamoDB by key but after execute in lambda it return :<br>&quot;errorMessage&quot;: &quot;ResourceNotFoundException: Requested resource not found\\n\\tstatus code<br>I already check IAM permission and dynamoDB name which it already correct",
  "id": "5b82e2e04be56c59189be4a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-08-26T17:26:56.800Z",
  "text": "Hi am just new for aws-sdk-go and I have some problem with lambda connect to dynamoDB. I have created function for get item from dynamoDB by key but after execute in lambda it return :\n\"errorMessage\": \"ResourceNotFoundException: Requested resource not found\\n\\tstatus code \nI already check IAM permission and dynamoDB name which it already correct",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/guiaria",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9065567?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9065567?v=4&s=60",
   "displayName": "guiaria",
   "gv": "4",
   "id": "5b769aefd73408ce4fa4e69f",
   "url": "/guiaria",
   "username": "guiaria",
   "v": 1
  },
  "html": "turn out that I have set it on wrong region sry ",
  "id": "5b82e7bff5402f32aa9535d1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-08-26T17:47:43.181Z",
  "text": "turn out that I have set it on wrong region sry ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "easy mistake",
  "id": "5b8361c4f86b741b05c9f1a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-08-27T02:28:20.062Z",
  "text": "easy mistake",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/moosakhalid",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/19674844?v=4&s=60",
   "displayName": "Moosa Khalid",
   "gv": "4",
   "id": "58773b78d73408ce4f42fc19",
   "url": "/moosakhalid",
   "username": "moosakhalid",
   "v": 5
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Doug-AWS\" class=\"mention\">@Doug-AWS</span> thanks the example I was able to get it working.",
  "id": "5b8524307649b9063e1609c3",
  "issues": [],
  "mentions": [
   {
    "screenName": "Doug-AWS",
    "userId": "565e0cbd16b6c7089cbcf1c0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2018-08-28T10:30:08.195Z",
  "text": "@Doug-AWS thanks the example I was able to get it working.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/themitigater",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18254098?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18254098?v=4&s=60",
   "displayName": "Hrishikesh Bihani",
   "gv": "4",
   "id": "5b863894d73408ce4fa62b5e",
   "url": "/themitigater",
   "username": "themitigater",
   "v": 1
  },
  "html": "Hey, how do I explicitly set protocol when sending sns?",
  "id": "5b8638f6f86b741b05da7a52",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-08-29T06:11:02.266Z",
  "text": "Hey, how do I explicitly set protocol when sending sns?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/charan_jeet_198_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "charanjeet singh",
   "id": "5b86ab62d73408ce4fa639c1",
   "url": "/charan_jeet_198_twitter",
   "username": "charan_jeet_198_twitter",
   "v": 1
  },
  "html": "hello there 4",
  "id": "5b86ab6b7649b9063e1f22b1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-08-29T14:19:23.224Z",
  "text": "hello there 4",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/charan_jeet_198_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "charanjeet singh",
   "id": "5b86ab62d73408ce4fa639c1",
   "url": "/charan_jeet_198_twitter",
   "username": "charan_jeet_198_twitter",
   "v": 1
  },
  "html": "Hello there ?",
  "id": "5b86ab80e5b40332ab15b5c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-08-29T14:19:44.835Z",
  "text": "Hello there ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-31T00:40:26.549Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/Vic_Rum_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/572010443394322432/NT0LZYnI.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/572010443394322432/NT0LZYnI_bigger.jpeg",
   "displayName": "Vicky",
   "id": "5b888b86d73408ce4fa66bb8",
   "url": "/Vic_Rum_twitter",
   "username": "Vic_Rum_twitter",
   "v": 2
  },
  "html": "I am facing an issue with Kinesis, go-lang library to putRecord. I am able to do a CreateStream, DescribeStream. But putRecord simply fails with<strong><em> &quot;Failed to next - bad access&quot;</em></strong>, no error object, simply this message and execution stops",
  "id": "5b888c28f012380179ae7f4b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-08-31T00:30:32.711Z",
  "text": "I am facing an issue with Kinesis, go-lang library to putRecord. I am able to do a CreateStream, DescribeStream. But putRecord simply fails with*** \"Failed to next - bad access\"***, no error object, simply this message and execution stops",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/Vic_Rum_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/572010443394322432/NT0LZYnI.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/572010443394322432/NT0LZYnI_bigger.jpeg",
   "displayName": "Vicky",
   "id": "5b888b86d73408ce4fa66bb8",
   "url": "/Vic_Rum_twitter",
   "username": "Vic_Rum_twitter",
   "v": 2
  },
  "html": "there is the piece of code i  am using,",
  "id": "5b888c5c9c71d363c1525092",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-08-31T00:31:24.244Z",
  "text": "there is the piece of code i  am using,",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-31T00:39:37.038Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/Vic_Rum_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/572010443394322432/NT0LZYnI.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/572010443394322432/NT0LZYnI_bigger.jpeg",
   "displayName": "Vicky",
   "id": "5b888b86d73408ce4fa66bb8",
   "url": "/Vic_Rum_twitter",
   "username": "Vic_Rum_twitter",
   "v": 2
  },
  "html": "<pre><code><span class=\"tag\">putOutput</span>, <span class=\"rule\"><span class=\"attribute\">err </span>:<span class=\"value\">= kinesisClient.<span class=\"function\">PutRecord</span>(&amp;kinesis.PutRecordInput{\n        Data:         []<span class=\"function\">byte</span>(<span class=\"string\">\"hello\"</span>),\n        StreamName:   streamName,\n        PartitionKey: aws.<span class=\"function\">String</span>(<span class=\"string\">\"test\"</span>),\n    })</span></span></code></pre>",
  "id": "5b888c5e1d3a5711b6c0a25c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-08-31T00:31:26.786Z",
  "text": "```\nputOutput, err := kinesisClient.PutRecord(&kinesis.PutRecordInput{\n\t\tData:         []byte(\"hello\"),\n\t\tStreamName:   streamName,\n\t\tPartitionKey: aws.String(\"test\"),\n\t})\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/Vic_Rum_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/572010443394322432/NT0LZYnI.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/572010443394322432/NT0LZYnI_bigger.jpeg",
   "displayName": "Vicky",
   "id": "5b888b86d73408ce4fa66bb8",
   "url": "/Vic_Rum_twitter",
   "username": "Vic_Rum_twitter",
   "v": 2
  },
  "html": "any idea what that message means?",
  "id": "5b888c814be56c5918bcb99b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-08-31T00:32:01.799Z",
  "text": "any idea what that message means?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-08-31T06:40:17.424Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/krishnakhandagale",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10196023?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10196023?v=4&s=60",
   "displayName": "Krishna Satwaji Khandagale",
   "gv": "4",
   "id": "5b88e290d73408ce4fa67199",
   "url": "/krishnakhandagale",
   "username": "krishnakhandagale",
   "v": 1
  },
  "html": "S3 path shows latest overridden image and cloudfront serves oldd copy , how to solve this issue ?",
  "id": "5b88e2b1ac25fd11b5bc92e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-08-31T06:39:45.953Z",
  "text": "S3 path shows latest overridden image and cloudfront serves oldd copy , how to solve this issue ?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/shimmallonga",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14321690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14321690?v=4&s=60",
   "displayName": "Shim Mallonga",
   "gv": "4",
   "id": "59e6d168d73408ce4f7a822e",
   "url": "/shimmallonga",
   "username": "shimmallonga",
   "v": 13
  },
  "html": "<p>hey guys I&#39;m new to golang and I am trying to take the do by learning approach and I am currently trying to create a  golang lambda function but I don&#39;t understnad how to do a simple list of sqs queues. I was wondering what do I provide for the var &quot;*ListQueuesInput &quot; for this aws sqs package :disappointed:</p><p><a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#SQS.ListQueues\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#SQS.ListQueues</a></p>",
  "id": "5b8a8e544be56c5918c80cda",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-09-01T13:04:20.167Z",
  "text": "hey guys I'm new to golang and I am trying to take the do by learning approach and I am currently trying to create a  golang lambda function but I don't understnad how to do a simple list of sqs queues. I was wondering what do I provide for the var \"*ListQueuesInput \" for this aws sqs package :disappointed:\n\nhttps://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#SQS.ListQueues",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#SQS.ListQueues"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"shimmallonga\" class=\"mention\">@shimmallonga</span> an empty struct should do, unless you want to filter the list based on a matching string ",
  "id": "5b8a9147c2bd5d117a036768",
  "issues": [],
  "mentions": [
   {
    "screenName": "shimmallonga",
    "userId": "59e6d168d73408ce4f7a822e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-01T13:16:55.708Z",
  "text": "@shimmallonga an empty struct should do, unless you want to filter the list based on a matching string ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#ListQueuesInput\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#ListQueuesInput</a>",
  "id": "5b8a9177c2bd5d117a036926",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-01T13:17:43.901Z",
  "text": "https://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#ListQueuesInput",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/sqs/#ListQueuesInput"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/shimmallonga",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14321690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14321690?v=4&s=60",
   "displayName": "Shim Mallonga",
   "gv": "4",
   "id": "59e6d168d73408ce4f7a822e",
   "url": "/shimmallonga",
   "username": "shimmallonga",
   "v": 13
  },
  "html": "oh thanks <span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> :)",
  "id": "5b8b0cfee5b40332ab2ead9b",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-01T22:04:46.946Z",
  "text": "oh thanks @cristim :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-09-02T00:40:08.845Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/shimmallonga",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14321690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14321690?v=4&s=60",
   "displayName": "Shim Mallonga",
   "gv": "4",
   "id": "59e6d168d73408ce4f7a822e",
   "url": "/shimmallonga",
   "username": "shimmallonga",
   "v": 13
  },
  "html": "<p>So i just tried something but I got a weird error and I was wondering if someone can help me :( sorry for my silly questions. So my code is this:</p><pre><code>    <span class=\"tag\">type</span> <span class=\"tag\">emptyqueuesinput</span> <span class=\"tag\">struct</span> <span class=\"rules\">{\n    }</span>\n    <span class=\"rule\"><span class=\"attribute\">cfg </span>:<span class=\"value\">= aws.<span class=\"function\">NewConfig</span>().<span class=\"function\">WithRegion</span>(<span class=\"string\">\"region\"</span>).<span class=\"function\">WithCredentials</span>(creds)\n    service := sqs.<span class=\"function\">New</span>(session.<span class=\"function\">New</span>(), cfg)\n    fmt.<span class=\"function\">Println</span>(service.<span class=\"function\">ListQueues</span>(emptyqueuesinput{}))</span></span></code></pre><p>but the error I am getting is </p><pre><code>cannot <span class=\"literal\">use</span> emptyqueuesinput literal (<span class=\"built_in\">type</span> emptyqueuesinput) as <span class=\"built_in\">type</span> *sqs.<span class=\"constant\">List</span>QueuesInput <span class=\"keyword\">in</span> argument to <span class=\"keyword\">service</span>.<span class=\"constant\">List</span>Queues</code></pre>",
  "id": "5b8b31621d3a5711b6cf38ae",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-09-02T00:40:02.837Z",
  "text": "So i just tried something but I got a weird error and I was wondering if someone can help me :( sorry for my silly questions. So my code is this:\n\n```\n\ttype emptyqueuesinput struct {\n\t}\n\tcfg := aws.NewConfig().WithRegion(\"region\").WithCredentials(creds)\n\tservice := sqs.New(session.New(), cfg)\n\tfmt.Println(service.ListQueues(emptyqueuesinput{}))\n```\n\nbut the error I am getting is \n```\ncannot use emptyqueuesinput literal (type emptyqueuesinput) as type *sqs.ListQueuesInput in argument to service.ListQueues\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/aravinthrk",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5968735?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5968735?v=4&s=60",
   "displayName": "aravinthrk",
   "gv": "4",
   "id": "5b8b6f95d73408ce4fa69d24",
   "url": "/aravinthrk",
   "username": "aravinthrk",
   "v": 1
  },
  "html": "Hello folks, quick question on dynamodb UpdateItem.. is there a dynamodbattribute.MarshalMap() construct available for UpdateItem as is available for PutItem ?",
  "id": "5b8b6ff4c2bd5d117a07f572",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-09-02T05:07:00.721Z",
  "text": "Hello folks, quick question on dynamodb UpdateItem.. is there a dynamodbattribute.MarshalMap() construct available for UpdateItem as is available for PutItem ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"shimmallonga\" class=\"mention\">@shimmallonga</span> you should not need to define that type, just use <code>service.ListQueues(&amp;sqs.ListQueuesInput{})</code>",
  "id": "5b8bbf8e11227d711d038564",
  "issues": [],
  "mentions": [
   {
    "screenName": "shimmallonga",
    "userId": "59e6d168d73408ce4f7a822e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-02T10:46:38.062Z",
  "text": "@shimmallonga you should not need to define that type, just use `service.ListQueues(&sqs.ListQueuesInput{})`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-09-03T20:17:09.263Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/techmet",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13595928?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13595928?v=4&s=60",
   "displayName": "Vamsi",
   "gv": "4",
   "id": "5b45debdd73408ce4fa06bbb",
   "url": "/techmet",
   "username": "techmet",
   "v": 2
  },
  "html": "Hello Folks,<br>The following Kinesis insertion logic is giving an error<pre><code><span class=\"comment\">// Aws new kinesis session</span>\n    s <span class=\"value\">:= k.session.<span class=\"function\">New</span>(&amp;aws.Config{\n        // replace the credentials\n        Credentials:      k.credentials.<span class=\"function\">NewStaticCredentials</span>(access_key, secret_key, <span class=\"string\">\"\"</span>),\n        Region:           &amp;region,\n    })\nk.client = k.kinesis.<span class=\"function\">New</span>(s)\n\n// Kinesis insertion\nputRecordOutput, err := k.client.<span class=\"function\">PutRecord</span>(&amp;kinesis.PutRecordInput{\n        Data:         value,\n        StreamName:   aws.<span class=\"function\">String</span>(k.streamName),\n        PartitionKey: aws.<span class=\"function\">String</span>(key),\n    })</span></code></pre>",
  "id": "5b8d95f51d3a5711b6dcf2c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-03T20:13:41.821Z",
  "text": "Hello Folks,\nThe following Kinesis insertion logic is giving an error\n```\n// Aws new kinesis session\n\ts := k.session.New(&aws.Config{\n\t\t// replace the credentials\n\t\tCredentials:      k.credentials.NewStaticCredentials(access_key, secret_key, \"\"),\n\t\tRegion:           &region,\n\t})\nk.client = k.kinesis.New(s)\n\n// Kinesis insertion\nputRecordOutput, err := k.client.PutRecord(&kinesis.PutRecordInput{\n\t\tData:         value,\n\t\tStreamName:   aws.String(k.streamName),\n\t\tPartitionKey: aws.String(key),\n\t})\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2018-09-03T20:17:20.761Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/techmet",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13595928?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13595928?v=4&s=60",
   "displayName": "Vamsi",
   "gv": "4",
   "id": "5b45debdd73408ce4fa06bbb",
   "url": "/techmet",
   "username": "techmet",
   "v": 2
  },
  "html": "below is error, could someone help me<pre><code> <span class=\"attribute\">RequestError</span>: send request failed\\ncaused <span class=\"attribute\">by</span>: Post <span class=\"attribute\">https</span>:<span class=\"comment\">//kinesis.us-east-1.amazonaws.com/: dial tcp 54.239.19.56:443: i/o timeout</span></code></pre>",
  "id": "5b8d9657c9500b4bab79500e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-03T20:15:19.560Z",
  "text": "below is error, could someone help me\n```\n RequestError: send request failed\\ncaused by: Post https://kinesis.us-east-1.amazonaws.com/: dial tcp 54.239.19.56:443: i/o timeout\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hbd",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6836886?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6836886?v=4&s=60",
   "displayName": "Zak",
   "gv": "4",
   "id": "571e1a56659847a7aff4695c",
   "url": "/hbd",
   "username": "hbd",
   "v": 9
  },
  "html": "Is there an aweserr for Access Denied to an s3 Object in the golang SDK? I&#39;ve looked and have not been able to find one to match the error that I&#39;m getting back from S3, although I have found the error code in CloudFront.",
  "id": "5b8e81b458a3797aa3ffa943",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-04T12:59:32.577Z",
  "text": "Is there an aweserr for Access Denied to an s3 Object in the golang SDK? I've looked and have not been able to find one to match the error that I'm getting back from S3, although I have found the error code in CloudFront.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/sc3983315",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/4951929?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/4951929?v=4&s=60",
   "displayName": "sc3983315",
   "gv": "4",
   "id": "5aa627c1d73408ce4f90f0e4",
   "url": "/sc3983315",
   "username": "sc3983315"
  },
  "html": "s3  <code>RestoreObject</code>   SlowDown: Please reduce your request rate.    <code>How much is the limit  RestoreObject</code>?",
  "id": "5b8f84084be56c5918e48d30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-09-05T07:21:44.577Z",
  "text": "s3  `RestoreObject`   SlowDown: Please reduce your request rate.    `How much is the limit  RestoreObject `?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/guiaria",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9065567?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9065567?v=4&s=60",
   "displayName": "guiaria",
   "gv": "4",
   "id": "5b769aefd73408ce4fa4e69f",
   "url": "/guiaria",
   "username": "guiaria",
   "v": 1
  },
  "html": "<p>Hi am trying to retrieve data from dynamoDB using API gateway and lambda but when I tested api gateway always return<br> {<br>  &quot;message&quot;: &quot;Internal server error&quot;<br>}<br>below was my code to retrieve user data from dynamo DB and main function</p><pre><code><span class=\"func\"><span class=\"keyword\">func</span> <span class=\"title\">getUser</span><span class=\"params\">()</span></span> (interface{}, error) {\n\n    <span class=\"keyword\">var</span> db = dynamodb.<span class=\"type\">New</span>(session.<span class=\"type\">New</span>(), aws.<span class=\"type\">NewConfig</span>().<span class=\"type\">WithRegion</span>(<span class=\"string\">\"us-east-2\"</span>))\n    <span class=\"keyword\">var</span> table = <span class=\"string\">\"BoardGameDB\"</span>\n    input := &amp;dynamodb.<span class=\"type\">GetItemInput</span>{\n        <span class=\"type\">TableName</span>: aws.<span class=\"type\">String</span>(table),\n        <span class=\"type\">Key</span>: <span class=\"built_in\">map</span>[string]*dynamodb.<span class=\"type\">AttributeValue</span>{\n            <span class=\"string\">\"TbN\"</span>: {\n                <span class=\"type\">S</span>: aws.<span class=\"type\">String</span>(<span class=\"string\">\"user\"</span>),\n            },\n        },\n    }\n\n    result, err := db.<span class=\"type\">GetItem</span>(input)\n\n    user := []<span class=\"type\">User</span>{}\n    err = dynamodbattribute.<span class=\"type\">UnmarshalMap</span>(result.<span class=\"type\">Item</span>, &amp;user)\n\n    <span class=\"keyword\">return</span> user, <span class=\"built_in\">nil</span>\n}\n\n<span class=\"func\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> {\n    lambda.<span class=\"type\">Start</span>(handleRequest)\n}\n\n<span class=\"func\"><span class=\"keyword\">func</span> <span class=\"title\">handleRequest</span><span class=\"params\">(request events.APIGatewayProxyRequest)</span></span> (interface{}, error) {\n    paremeter := request.<span class=\"type\">QueryStringParameters</span>[<span class=\"string\">\"path\"</span>]\n    <span class=\"keyword\">if</span> request.<span class=\"type\">HTTPMethod</span> == <span class=\"string\">\"GET\"</span> {\n        <span class=\"keyword\">if</span> paremeter == <span class=\"string\">\"user\"</span> {\n            result, err := getUser()\n            <span class=\"keyword\">return</span> result.([]*<span class=\"type\">User</span>), err\n\n        } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> paremeter == <span class=\"string\">\"lobby\"</span> {\n            result, err := getLobby()\n            <span class=\"keyword\">return</span> result.([]*<span class=\"type\">Lobby</span>), err\n\n        }\n    }\n    <span class=\"keyword\">return</span> <span class=\"built_in\">nil</span>, <span class=\"built_in\">nil</span>\n}</code></pre><p>I have checked my db name region and struct but it seem to be correct I suppose</p>",
  "id": "5b916b85cff55e5617b8b75c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-09-06T18:01:41.027Z",
  "text": "Hi am trying to retrieve data from dynamoDB using API gateway and lambda but when I tested api gateway always return\n {\n  \"message\": \"Internal server error\"\n}\nbelow was my code to retrieve user data from dynamo DB and main function\n```\nfunc getUser() (interface{}, error) {\n\n\tvar db = dynamodb.New(session.New(), aws.NewConfig().WithRegion(\"us-east-2\"))\n\tvar table = \"BoardGameDB\"\n\tinput := &dynamodb.GetItemInput{\n\t\tTableName: aws.String(table),\n\t\tKey: map[string]*dynamodb.AttributeValue{\n\t\t\t\"TbN\": {\n\t\t\t\tS: aws.String(\"user\"),\n\t\t\t},\n\t\t},\n\t}\n\n\tresult, err := db.GetItem(input)\n\n\tuser := []User{}\n\terr = dynamodbattribute.UnmarshalMap(result.Item, &user)\n\n\treturn user, nil\n}\n\nfunc main() {\n\tlambda.Start(handleRequest)\n}\n\nfunc handleRequest(request events.APIGatewayProxyRequest) (interface{}, error) {\n\tparemeter := request.QueryStringParameters[\"path\"]\n\tif request.HTTPMethod == \"GET\" {\n\t\tif paremeter == \"user\" {\n\t\t\tresult, err := getUser()\n\t\t\treturn result.([]*User), err\n\n\t\t} else if paremeter == \"lobby\" {\n\t\t\tresult, err := getLobby()\n\t\t\treturn result.([]*Lobby), err\n\n\t\t}\n\t}\n\treturn nil, nil\n}\n```\nI have checked my db name region and struct but it seem to be correct I suppose\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/guiaria",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9065567?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9065567?v=4&s=60",
   "displayName": "guiaria",
   "gv": "4",
   "id": "5b769aefd73408ce4fa4e69f",
   "url": "/guiaria",
   "username": "guiaria",
   "v": 1
  },
  "html": "and this was schema of item I want to retrieve<br>{<br>  &quot;FirstName&quot;: &quot;Aname&quot;,<br>  &quot;LastName&quot;: &quot;Alastname&quot;,<br>  &quot;PK&quot;: &quot;<a href=\"mailto:test@gmail.com\" rel=\"nofollow\">test@gmail.com</a>&quot;,<br>  &quot;TbN&quot;: &quot;user&quot;<br>}",
  "id": "5b916c0c60f9ee7aa4e956d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-06T18:03:56.459Z",
  "text": "and this was schema of item I want to retrieve \n{\n  \"FirstName\": \"Aname\",\n  \"LastName\": \"Alastname\",\n  \"PK\": \"test@gmail.com\",\n  \"TbN\": \"user\"\n}",
  "unread": false,
  "urls": [
   {
    "url": "mailto:test@gmail.com"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/titogeorge",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/11407285?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/11407285?v=4&s=60",
   "displayName": "Tito George",
   "gv": "4",
   "id": "55af6e94a259aa13ff40afe6",
   "url": "/titogeorge",
   "username": "titogeorge",
   "v": 6
  },
  "html": "How to create inline iam policy? what is the function for that?",
  "id": "5b923ea0c2bd5d117a30674b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-07T09:02:24.632Z",
  "text": "How to create inline iam policy? what is the function for that?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/joshuabaird",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6271918?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6271918?v=4&s=60",
   "displayName": "Josh Baird",
   "gv": "4",
   "id": "58debadcd73408ce4f553a61",
   "url": "/joshuabaird",
   "username": "joshuabaird",
   "v": 10
  },
  "html": "Hi - I&#39;m trying to PUT a file to S3 using a pre-signed URL in go..  should I be using the SDK for this, or should I just try to construct the put in vanilla go without the SDK?",
  "id": "5b96d2f051a02e2a260ed568",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-10T20:24:16.725Z",
  "text": "Hi - I'm trying to PUT a file to S3 using a pre-signed URL in go..  should I be using the SDK for this, or should I just try to construct the put in vanilla go without the SDK?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "Yea, you can use the SDK to do this",
  "id": "5b96fb007189ae6fdda72884",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-10T23:15:12.165Z",
  "text": "Yea, you can use the SDK to do this",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "There&#39;s a sign package under aws package",
  "id": "5b96fb0fcddb292dff54b090",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-10T23:15:27.697Z",
  "text": "There's a sign package under aws package",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<a href=\"https://github.com/aws/aws-sdk-go/tree/master/aws/signer/v4\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/tree/master/aws/signer/v4</a>",
  "id": "5b96fb27a2343433d12d402b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-10T23:15:51.785Z",
  "text": "https://github.com/aws/aws-sdk-go/tree/master/aws/signer/v4",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/tree/master/aws/signer/v4"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/xibz",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1964445?v=4&s=60",
   "displayName": "xibz",
   "gv": "4",
   "id": "56b52d49e610378809c01abc",
   "url": "/xibz",
   "username": "xibz",
   "v": 15
  },
  "html": "<a href=\"https://github.com/aws/aws-sdk-go/tree/master/example/service/s3/presignURL\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/tree/master/example/service/s3/presignURL</a>",
  "id": "5b96fb37f59e0c1555dc51d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-10T23:16:07.561Z",
  "text": "https://github.com/aws/aws-sdk-go/tree/master/example/service/s3/presignURL",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/tree/master/example/service/s3/presignURL"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/joshuabaird",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6271918?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6271918?v=4&s=60",
   "displayName": "Josh Baird",
   "gv": "4",
   "id": "58debadcd73408ce4f553a61",
   "url": "/joshuabaird",
   "username": "joshuabaird",
   "v": 10
  },
  "html": "Ah - I did find an example here that doesn&#39;t use the SDK on the client side to upload the file:  <a href=\"https://github.com/aws/aws-sdk-go/blob/master/example/service/s3/presignURL/client/client.go\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/blob/master/example/service/s3/presignURL/client/client.go</a>",
  "id": "5b97078ef59e0c1555dc965c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-11T00:08:46.295Z",
  "text": "Ah - I did find an example here that doesn't use the SDK on the client side to upload the file:  https://github.com/aws/aws-sdk-go/blob/master/example/service/s3/presignURL/client/client.go",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/blob/master/example/service/s3/presignURL/client/client.go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/joshuabaird",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6271918?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6271918?v=4&s=60",
   "displayName": "Josh Baird",
   "gv": "4",
   "id": "58debadcd73408ce4f553a61",
   "url": "/joshuabaird",
   "username": "joshuabaird",
   "v": 10
  },
  "html": "Looks like you just provide the pre-signed URL in the body.",
  "id": "5b9707aa1e2b442a25f2bb39",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-11T00:09:14.576Z",
  "text": "Looks like you just provide the pre-signed URL in the body.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/bmalavan",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3258403?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3258403?v=4&s=60",
   "displayName": "bmalavan",
   "gv": "4",
   "id": "59b2c631d73408ce4f74ec68",
   "url": "/bmalavan",
   "username": "bmalavan",
   "v": 11
  },
  "html": "Hi, can anyone help me with some sample code to work on cloudHSMV2?",
  "id": "5b979166a2343433d130b22b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-09-11T09:56:54.228Z",
  "text": "Hi, can anyone help me with some sample code to work on cloudHSMV2?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/TopherGopher",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/624717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/624717?v=4&s=60",
   "displayName": "Topher Sterling",
   "gv": "4",
   "id": "561ea961d33f749381a95e43",
   "url": "/TopherGopher",
   "username": "TopherGopher",
   "v": 3
  },
  "html": "Hey gang! I don&#39;t know if this channel is monitored by the aws gurus, but I&#39;m not certain where to pose this<br>I have a subscription topic created and am able to publish to it<br>Usually, we use that to push to an SQS queue<br>Today though, I was trying to get a different application to subscribe to it directly<br>I know I could use REST to accomplish this, but since I&#39;m on a quest to leave something new<br>Should I be using something like this?",
  "id": "5b993312a2343433d13ad50c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-09-12T15:38:58.248Z",
  "text": "Hey gang! I don't know if this channel is monitored by the aws gurus, but I'm not certain where to pose this\nI have a subscription topic created and am able to publish to it\nUsually, we use that to push to an SQS queue\nToday though, I was trying to get a different application to subscribe to it directly\nI know I could use REST to accomplish this, but since I'm on a quest to leave something new\nShould I be using something like this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-09-12T15:39:28.451Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/TopherGopher",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/624717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/624717?v=4&s=60",
   "displayName": "Topher Sterling",
   "gv": "4",
   "id": "561ea961d33f749381a95e43",
   "url": "/TopherGopher",
   "username": "TopherGopher",
   "v": 3
  },
  "html": "<pre><code><span class=\"tag\">out</span>, <span class=\"rule\"><span class=\"attribute\">err </span>:<span class=\"value\">= tm.sns.<span class=\"function\">CreatePlatformApplication</span>(&amp;sns.CreatePlatformApplicationInput{\n        Attributes: aws.<span class=\"function\">StringMap</span>(map[string]string{\n            <span class=\"string\">\"PlatformCredential\"</span>: <span class=\"string\">\"client secret\"</span>,\n            <span class=\"string\">\"PlatformPrincipal\"</span>:  <span class=\"string\">\"client id\"</span>,\n        }),\n        Name:     aws.<span class=\"function\">String</span>(fmt.<span class=\"function\">Sprintf</span>(<span class=\"string\">\"%s_%s_LISTENER\"</span>, tm.env, topic.<span class=\"function\">GetName</span>())),\n        Platform: aws.<span class=\"function\">String</span>(<span class=\"string\">\"ADM\"</span>), // Amazon Device Messaging\n    })</span></span></code></pre>",
  "id": "5b99331ce481f854a6aa5ad5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-09-12T15:39:08.751Z",
  "text": "```\nout, err := tm.sns.CreatePlatformApplication(&sns.CreatePlatformApplicationInput{\n        Attributes: aws.StringMap(map[string]string{\n            \"PlatformCredential\": \"client secret\",\n            \"PlatformPrincipal\":  \"client id\",\n        }),\n        Name:     aws.String(fmt.Sprintf(\"%s_%s_LISTENER\", tm.env, topic.GetName())),\n        Platform: aws.String(\"ADM\"), // Amazon Device Messaging\n    })\n```",
  "unread": false,
  "urls": [],
  "v": 4
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/TopherGopher",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/624717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/624717?v=4&s=60",
   "displayName": "Topher Sterling",
   "gv": "4",
   "id": "561ea961d33f749381a95e43",
   "url": "/TopherGopher",
   "username": "TopherGopher",
   "v": 3
  },
  "html": "If so, where does that secret and ID come from for ADM?",
  "id": "5b99333a550f8808f59c82fb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-12T15:39:38.138Z",
  "text": "If so, where does that secret and ID come from for ADM?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/TopherGopher",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/624717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/624717?v=4&s=60",
   "displayName": "Topher Sterling",
   "gv": "4",
   "id": "561ea961d33f749381a95e43",
   "url": "/TopherGopher",
   "username": "TopherGopher",
   "v": 3
  },
  "html": "On <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html</a> it says for <code>ADM</code> (which I&#39;m not certain is the correct type)  <code>For ADM, PlatformCredential is &quot;client secret&quot;.</code> <code>For ADM, PlatformPrincipal is &quot;client id&quot;.</code>",
  "id": "5b993349f59e0c1555e9d5a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-12T15:39:53.009Z",
  "text": "On https://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html it says for `ADM` (which I'm not certain is the correct type)  `For ADM, PlatformCredential is \"client secret\".` `For ADM, PlatformPrincipal is \"client id\".`",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/TopherGopher",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/624717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/624717?v=4&s=60",
   "displayName": "Topher Sterling",
   "gv": "4",
   "id": "561ea961d33f749381a95e43",
   "url": "/TopherGopher",
   "username": "TopherGopher",
   "v": 3
  },
  "html": "I cannot for the life of me figure out where that secret/id is generated or if I can even do a subscription this way",
  "id": "5b993368cddb292dff626b90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-12T15:40:24.837Z",
  "text": "I cannot for the life of me figure out where that secret/id is generated or if I can even do a subscription this way",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/TopherGopher",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/624717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/624717?v=4&s=60",
   "displayName": "Topher Sterling",
   "gv": "4",
   "id": "561ea961d33f749381a95e43",
   "url": "/TopherGopher",
   "username": "TopherGopher",
   "v": 3
  },
  "html": "After burning a few hours on this I learned that no, you cannot directly subscribe your application to an SNS topic and wait",
  "id": "5b9967d7b4990c30eea69aec",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-12T19:24:07.605Z",
  "text": "After burning a few hours on this I learned that no, you cannot directly subscribe your application to an SNS topic and wait",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/TopherGopher",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/624717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/624717?v=4&s=60",
   "displayName": "Topher Sterling",
   "gv": "4",
   "id": "561ea961d33f749381a95e43",
   "url": "/TopherGopher",
   "username": "TopherGopher",
   "v": 3
  },
  "html": "You have to use SQS or REST",
  "id": "5b9967ddfcba1254faa7911a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-09-12T19:24:13.746Z",
  "text": "You have to use SQS or REST",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/TopherGopher",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/624717?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/624717?v=4&s=60",
   "displayName": "Topher Sterling",
   "gv": "4",
   "id": "561ea961d33f749381a95e43",
   "url": "/TopherGopher",
   "username": "TopherGopher",
   "v": 3
  },
  "html": "Sad day, but it&#39;s all good",
  "id": "5b9967e5f7e1580625c00923",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-09-12T19:24:21.773Z",
  "text": "Sad day, but it's all good",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/atourkow",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/339012?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/339012?v=4&s=60",
   "displayName": "Adam Tourkow",
   "gv": "4",
   "id": "5679b0be16b6c7089cbfea35",
   "url": "/atourkow",
   "username": "atourkow",
   "v": 2
  },
  "html": "Is <code>TableNamePrefix</code> available in the Go SDK?  I want to set up staging vs prod.  (I already have local setup)",
  "id": "5b9afc0b0cfe7f30f18ed97e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-14T00:08:43.774Z",
  "text": "Is `TableNamePrefix` available in the Go SDK?  I want to set up staging vs prod.  (I already have local setup)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/FLavalliere",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7669747?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7669747?v=4&s=60",
   "displayName": "FLavalliere",
   "gv": "4",
   "id": "59b594b5d73408ce4f752342",
   "url": "/FLavalliere",
   "username": "FLavalliere",
   "v": 10
  },
  "html": "in cognito if i have an IdToken and someone alter my &quot;UserPool&quot; groups. How can I detect it ?",
  "id": "5b9efe603b7e6c2edd29348b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-09-17T01:07:44.136Z",
  "text": "in cognito if i have an IdToken and someone alter my \"UserPool\" groups. How can I detect it ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-09-17T01:24:29.395Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/FLavalliere",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7669747?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7669747?v=4&s=60",
   "displayName": "FLavalliere",
   "gv": "4",
   "id": "59b594b5d73408ce4f752342",
   "url": "/FLavalliere",
   "username": "FLavalliere",
   "v": 10
  },
  "html": "",
  "id": "5b9f009cf7e1580625dfb747",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-09-17T01:17:16.253Z",
  "text": "",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/FLavalliere",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7669747?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7669747?v=4&s=60",
   "displayName": "FLavalliere",
   "gv": "4",
   "id": "59b594b5d73408ce4f752342",
   "url": "/FLavalliere",
   "username": "FLavalliere",
   "v": 10
  },
  "html": "I guess for now the only way I am able to get the refreshed value if a user get a group change is by calling  InitiateAuth   ",
  "id": "5b9f11b0d655361f760de9ac",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-09-17T02:30:08.524Z",
  "text": "I guess for now the only way I am able to get the refreshed value if a user get a group change is by calling  InitiateAuth   ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/vivekzhere",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1204217?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1204217?v=4&s=60",
   "displayName": "Vivek Anand T Kallampally",
   "gv": "4",
   "id": "561f2a6f16b6c7089cb70cee",
   "url": "/vivekzhere",
   "username": "vivekzhere",
   "v": 3
  },
  "html": "Hi,  Is there a simple way of looking up the ID for a route53 health check using only the Name tag? Currently I am iterating over all the health checks for each health check I am iterating over the tags to find the matching health check.",
  "id": "5b9f62ec1ee2ca65022a9ace",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-17T08:16:44.121Z",
  "text": "Hi,  Is there a simple way of looking up the ID for a route53 health check using only the Name tag? Currently I am iterating over all the health checks for each health check I am iterating over the tags to find the matching health check.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "Hello everybody",
  "id": "5b9fd580e5c2cc56ada27312",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-17T16:25:36.215Z",
  "text": "Hello everybody",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "is there any way to customize the s3 upload url (upload to <code>http://host/bucket</code> instead of  <code>http://bucket.host</code> ), I am trying to use s3-ninja for my local env and the url format is different ",
  "id": "5b9fd5f6b9531f2dfa7e146a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-17T16:27:34.471Z",
  "text": "is there any way to customize the s3 upload url (upload to `http://host/bucket` instead of  `http://bucket.host` ), I am trying to use s3-ninja for my local env and the url format is different ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "I am creating the client in this way:<pre><code> s3Client = s3.<span class=\"keyword\">New</span>(awsSession, &amp;aws.Config{\n             Endpoint:   aws.<span class=\"built_in\">String</span>(<span class=\"string\">\"http://localhost:9444\"</span>),\n         })</code></pre>",
  "id": "5b9fd6560cfe7f30f1aa1236",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-17T16:29:10.862Z",
  "text": "I am creating the client in this way:\n```\n s3Client = s3.New(awsSession, &aws.Config{\n\t\t\t Endpoint:   aws.String(\"http://localhost:9444\"),\n\t\t })\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "I get the following error (running in docker-compose):<pre><code><span class=\"string\">RequestError:</span> send request failed\\ncaused <span class=\"string\">by:</span> Put <span class=\"string\">http:</span><span class=\"comment\">//ops.s3-simulator:9444/image.jpeg : dial tcp: lookup ops.s3-simulator on 127.0.0.11:53: no such host</span></code></pre>",
  "id": "5b9fd6c2be4f300626a9ab34",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-17T16:30:58.600Z",
  "text": "I get the following error (running in docker-compose):\n```\nRequestError: send request failed\\ncaused by: Put http://ops.s3-simulator:9444/image.jpeg : dial tcp: lookup ops.s3-simulator on 127.0.0.11:53: no such host\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "s3-simulator is the host name, ops is the bucket name",
  "id": "5b9fd6e1b9531f2dfa7e1937",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-17T16:31:29.014Z",
  "text": "s3-simulator is the host name, ops is the bucket name",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Try to add ops.s3-simulator to /etc/hosts ",
  "id": "5b9ff9ee54587954f9b8253f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-17T19:01:02.808Z",
  "text": "Try to add ops.s3-simulator to /etc/hosts ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/FLavalliere",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7669747?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7669747?v=4&s=60",
   "displayName": "FLavalliere",
   "gv": "4",
   "id": "59b594b5d73408ce4f752342",
   "url": "/FLavalliere",
   "username": "FLavalliere",
   "v": 10
  },
  "html": "<p>when adding to dynamodb using ..</p><p>SS: aws.StringSlice(u.Roles)</p><p>If i edit the json go cannot unmarshall it since the &quot;Type&quot; is before the &quot;Values&quot;  is there a workaround to prevent that ?</p>",
  "id": "5b9ffbca1ee2ca65022e70c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-09-17T19:08:58.210Z",
  "text": "when adding to dynamodb using ..\n\nSS: aws.StringSlice(u.Roles)\n\nIf i edit the json go cannot unmarshall it since the \"Type\" is before the \"Values\"  is there a workaround to prevent that ?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> thanks, not sure it will work for docker-compse networking",
  "id": "5ba004d51ee2ca65022ea66d",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-17T19:47:33.524Z",
  "text": "@cristim thanks, not sure it will work for docker-compse networking",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Try to rename the entry in the Docker-compose configuration file ",
  "id": "5ba0100cfcba1254face27ce",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-17T20:35:24.941Z",
  "text": "Try to rename the entry in the Docker-compose configuration file ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "That name should propagate to the /etc/hosts inside the containers",
  "id": "5ba0104ef08bc22dfb6fcba6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-09-17T20:36:30.108Z",
  "text": "That name should propagate to the /etc/hosts inside the containers",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Just see how it looks like now",
  "id": "5ba010761ee2ca65022eed86",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-09-17T20:37:10.330Z",
  "text": "Just see how it looks like now",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> there is a better option",
  "id": "5ba0b6e3e5c2cc56ada7a6bc",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 31,
  "sent": "2018-09-18T08:27:15.101Z",
  "text": "@cristim there is a better option",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "<pre><code>     s3Client = s3.<span class=\"keyword\">New</span>(awsSession, &amp;aws.Config{\n             Endpoint:   aws.<span class=\"built_in\">String</span>(config.TEMP_OPERATIONS_S3_BUCKET_URL),\n             S3ForcePathStyle: aws.Bool(<span class=\"literal\">true</span>),\n         })</code></pre>",
  "id": "5ba0b6f6fcba1254fad1d26f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-09-18T08:27:34.471Z",
  "text": "```\n\t s3Client = s3.New(awsSession, &aws.Config{\n\t\t\t Endpoint:   aws.String(config.TEMP_OPERATIONS_S3_BUCKET_URL),\n\t\t\t S3ForcePathStyle: aws.Bool(true),\n\t\t })\n```\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "<code>S3ForcePathStyle: aws.Bool(true)</code> tells the client to use <code>{hotst}/{bucket}/{file}</code> instead of  <code>{bucket}.{host}/{file}</code> ",
  "id": "5ba0b76cb4990c30eed0e5e7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2018-09-18T08:29:32.787Z",
  "text": "`S3ForcePathStyle: aws.Bool(true) ` tells the client to use `{hotst}/{bucket}/{file}` instead of  `{bucket}.{host}/{file}` ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/deirion",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/33045708?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/33045708?v=4&s=60",
   "displayName": "deirion",
   "gv": "4",
   "id": "5ba3fdc2d73408ce4fa8dc18",
   "url": "/deirion",
   "username": "deirion",
   "v": 5
  },
  "html": "I need to do a basic example; golang form app with cloud9 and see the working web page",
  "id": "5ba3fe29e5c2cc56adbc4113",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2018-09-20T20:08:09.997Z",
  "text": "I need to do a basic example; golang form app with cloud9 and see the working web page",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/guiaria",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9065567?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9065567?v=4&s=60",
   "displayName": "guiaria",
   "gv": "4",
   "id": "5b769aefd73408ce4fa4e69f",
   "url": "/guiaria",
   "username": "guiaria",
   "v": 1
  },
  "html": "Hi am trying to update item in dynamoDB by append list into attribute  but I got an error &quot;ExpressionAttributeValues contains invalid key: Syntax error; key: &quot;name&quot; &quot;<br>I have check my  ExpressionAttributeNames and it got key: name ",
  "id": "5ba4c4cdf4bd1056ac95ccaf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2018-09-21T10:15:41.717Z",
  "text": "Hi am trying to update item in dynamoDB by append list into attribute  but I got an error \"ExpressionAttributeValues contains invalid key: Syntax error; key: \"name\" \"\nI have check my  ExpressionAttributeNames and it got key: name ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/FLavalliere",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7669747?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7669747?v=4&s=60",
   "displayName": "FLavalliere",
   "gv": "4",
   "id": "59b594b5d73408ce4f752342",
   "url": "/FLavalliere",
   "username": "FLavalliere",
   "v": 10
  },
  "html": "How do i do a query in Dynamodb with begins_with in golang ?",
  "id": "5ba56806e6046343f398dae1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2018-09-21T21:52:06.850Z",
  "text": "How do i do a query in Dynamodb with begins_with in golang ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/FLavalliere",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/7669747?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/7669747?v=4&s=60",
   "displayName": "FLavalliere",
   "gv": "4",
   "id": "59b594b5d73408ce4f752342",
   "url": "/FLavalliere",
   "username": "FLavalliere",
   "v": 10
  },
  "html": "ok nevermind found it",
  "id": "5ba56ccee5c2cc56adc4c4f2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2018-09-21T22:12:30.697Z",
  "text": "ok nevermind found it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/guiaria",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/9065567?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/9065567?v=4&s=60",
   "displayName": "guiaria",
   "gv": "4",
   "id": "5b769aefd73408ce4fa4e69f",
   "url": "/guiaria",
   "username": "guiaria",
   "v": 1
  },
  "html": "Ok i found out my solution on my previous question but i got new<br>How do I remove one element of list in dynamoDB",
  "id": "5ba5efe91ee2ca650251e728",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2018-09-22T07:31:53.777Z",
  "text": "Ok i found out my solution on my previous question but i got new\nHow do I remove one element of list in dynamoDB",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/bittelc",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6162362?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6162362?v=4&s=60",
   "displayName": "Cole Bittel",
   "gv": "4",
   "id": "572795fac43b8c601970cd9a",
   "url": "/bittelc",
   "username": "bittelc",
   "v": 9
  },
  "html": "What are acceptable values for:<br><code>func (*CheckDomainAvailabilityInput) SetIdnLangCode</code> ",
  "id": "5baa8d88eba8e60bc6441ab5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-09-25T19:33:28.261Z",
  "text": "What are acceptable values for:\n`func (*CheckDomainAvailabilityInput) SetIdnLangCode` ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/bittelc",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/6162362?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/6162362?v=4&s=60",
   "displayName": "Cole Bittel",
   "gv": "4",
   "id": "572795fac43b8c601970cd9a",
   "url": "/bittelc",
   "username": "bittelc",
   "v": 9
  },
  "html": "Surely it won&#39;t just take any string, ya? It&#39;s got to be something like <code>Czech</code> or something.",
  "id": "5baa8d9641177e0bc7a68a7b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-25T19:33:42.893Z",
  "text": "Surely it won't just take any string, ya? It's got to be something like `Czech` or something.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Botono",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1622358?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1622358?v=4&s=60",
   "displayName": "Aaron Murray",
   "gv": "4",
   "id": "576064a1c2f0db084a1ddfe2",
   "url": "/Botono",
   "username": "Botono",
   "v": 2
  },
  "html": "Could someone point me to any examples of mocking and testing a call to ScanPages()?",
  "id": "5baabab5aedb375b9c47b3ff",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-25T22:46:13.105Z",
  "text": "Could someone point me to any examples of mocking and testing a call to ScanPages()?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"bittelc\" class=\"mention\">@bittelc</span> in such cases it may help if have a look at the REST API docs, the language specific SDKs are merely convenient wrappers on top of the APIs",
  "id": "5bacfb6e01fb5f4ae12f99c4",
  "issues": [],
  "mentions": [
   {
    "screenName": "bittelc",
    "userId": "572795fac43b8c601970cd9a",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-27T15:46:54.435Z",
  "text": "@bittelc in such cases it may help if have a look at the REST API docs, the language specific SDKs are merely convenient wrappers on top of the APIs",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Botono\" class=\"mention\">@Botono</span> maybe I didn&#39;t get your question right,but in case you need to mock pagination calls,I did it a few weeks ago in my Autospotting project, unfortunately I am not at my computer but feel free to have a look (may be in a branch that didn&#39;t get merged yet)",
  "id": "5bacfc92691dc567dbb166da",
  "issues": [],
  "mentions": [
   {
    "screenName": "Botono",
    "userId": "576064a1c2f0db084a1ddfe2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-27T15:51:46.771Z",
  "text": "@Botono maybe I didn't get your question right,but in case you need to mock pagination calls,I did it a few weeks ago in my Autospotting project, unfortunately I am not at my computer but feel free to have a look (may be in a branch that didn't get merged yet)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Botono",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1622358?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1622358?v=4&s=60",
   "displayName": "Aaron Murray",
   "gv": "4",
   "id": "576064a1c2f0db084a1ddfe2",
   "url": "/Botono",
   "username": "Botono",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> thanks!",
  "id": "5bad0a54eba8e60bc6543664",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 30,
  "sent": "2018-09-27T16:50:28.789Z",
  "text": "@cristim thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/kkesley",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14907878?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14907878?v=4&s=60",
   "displayName": "Kendrick Kesley",
   "gv": "4",
   "id": "5a69d44fd73408ce4f8a1537",
   "url": "/kkesley",
   "username": "kkesley",
   "v": 7
  },
  "html": "Hi is it true that cloudsearch can only accept 1 upload document per 10 seconds? Is there a way I can index my cloudsearch documents with dynamodb stream if that limitation is true?",
  "id": "5bb184d3e65a634336651d74",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-10-01T02:22:11.258Z",
  "text": "Hi is it true that cloudsearch can only accept 1 upload document per 10 seconds? Is there a way I can index my cloudsearch documents with dynamodb stream if that limitation is true?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-10-01T09:30:44.095Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Amitgb14",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/5564407?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/5564407?v=4&s=60",
   "displayName": "Amit Ghadge",
   "gv": "4",
   "id": "5a3a6161d73408ce4f842ed2",
   "url": "/Amitgb14",
   "username": "Amitgb14",
   "v": 10
  },
  "html": "Hi all,  In S3 while I creating bucket which is already exists and it doesn&#39;t return any error. ",
  "id": "5bb1e9061e23486b936ec9c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-10-01T09:29:42.533Z",
  "text": "Hi all,  In S3 while I creating bucket which is already exists and it doesn't return any error. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<p><span data-link-type=\"mention\" data-screen-name=\"Amitgb14\" class=\"mention\">@Amitgb14</span> Let&#39;s see your code. I just listed my buckets using the Go SDK doc examples in <a href=\"https://github.com/awsdocs/aws-doc-sdk-examples/blob/master/go/example_code/s3/s3_list_buckets.go\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/awsdocs/aws-doc-sdk-examples/blob/master/go/example_code/s3/s3_list_buckets.go</a> (to list my buckets) and <a href=\"https://github.com/awsdocs/aws-doc-sdk-examples/blob/master/go/example_code/s3/s3_create_bucket.go\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/awsdocs/aws-doc-sdk-examples/blob/master/go/example_code/s3/s3_create_bucket.go</a> (to create a bucket of the same name, in this case I&#39;m using the placeholder MY_BUCKET as the name of the bucket) and got the error: </p><p>Unable to create bucket &quot;MY_BUCKET&quot;, BucketAlreadyOwnedByYou: Your previous request to create the named bucket succeeded and you already own it.</p>",
  "id": "5bb23271c7bf7c36629cda87",
  "issues": [],
  "mentions": [
   {
    "screenName": "Amitgb14",
    "userId": "5a3a6161d73408ce4f842ed2",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2018-10-01T14:42:57.896Z",
  "text": "@Amitgb14 Let's see your code. I just listed my buckets using the Go SDK doc examples in https://github.com/awsdocs/aws-doc-sdk-examples/blob/master/go/example_code/s3/s3_list_buckets.go (to list my buckets) and https://github.com/awsdocs/aws-doc-sdk-examples/blob/master/go/example_code/s3/s3_create_bucket.go (to create a bucket of the same name, in this case I'm using the placeholder MY_BUCKET as the name of the bucket) and got the error: \n\nUnable to create bucket \"MY_BUCKET\", BucketAlreadyOwnedByYou: Your previous request to create the named bucket succeeded and you already own it.",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/awsdocs/aws-doc-sdk-examples/blob/master/go/example_code/s3/s3_list_buckets.go"
   },
   {
    "url": "https://github.com/awsdocs/aws-doc-sdk-examples/blob/master/go/example_code/s3/s3_create_bucket.go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/Doug-AWS",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16107690?v=4&s=60",
   "displayName": "Doug",
   "gv": "4",
   "id": "565e0cbd16b6c7089cbcf1c0",
   "url": "/Doug-AWS",
   "username": "Doug-AWS",
   "v": 60
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"kkesley\" class=\"mention\">@kkesley</span> You are better off asking CloudSearch questions in a CloudSearch forum. If you have an AWS account: <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=137\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://forums.aws.amazon.com/forum.jspa?forumID=137</a>",
  "id": "5bb23391e65a634336694dbf",
  "issues": [],
  "mentions": [
   {
    "screenName": "kkesley",
    "userId": "5a69d44fd73408ce4f8a1537",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2018-10-01T14:47:45.326Z",
  "text": "@kkesley You are better off asking CloudSearch questions in a CloudSearch forum. If you have an AWS account: https://forums.aws.amazon.com/forum.jspa?forumID=137",
  "unread": false,
  "urls": [
   {
    "url": "https://forums.aws.amazon.com/forum.jspa?forumID=137"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-10-02T04:24:18.573Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Pratima",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/914695?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/914695?v=4&s=60",
   "displayName": "Pratima Singh",
   "gv": "4",
   "id": "5bb2f2d5d73408ce4faa0bc7",
   "url": "/Pratima",
   "username": "Pratima",
   "v": 1
  },
  "html": "Hi, I&#39;m trying to use testify to mock some AWS API calls and errors",
  "id": "5bb2f2e8600c5f64233df95b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-10-02T04:24:08.771Z",
  "text": "Hi, I'm trying to use testify to mock some AWS API calls and errors",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Pratima",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/914695?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/914695?v=4&s=60",
   "displayName": "Pratima Singh",
   "gv": "4",
   "id": "5bb2f2d5d73408ce4faa0bc7",
   "url": "/Pratima",
   "username": "Pratima",
   "v": 1
  },
  "html": "I want to test this line of code<pre><code><span class=\"keyword\">if</span> s3err, <span class=\"string\">ok :</span>= err.(awserr.Error); ok &amp;&amp; s3err.Code() == <span class=\"string\">\"NoSuchTagSet\"</span> {\n            <span class=\"comment\">// Not an error, simply means there is no tag set associated with the bucket</span>\n            getBucketTaggingOutput = &amp;s3.GetBucketTaggingOutput{<span class=\"string\">TagSet:</span> []*s3.Tag{}}</code></pre>",
  "id": "5bb2f30aef4afc4f28065916",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-10-02T04:24:42.345Z",
  "text": "I want to test this line of code\n```\nif s3err, ok := err.(awserr.Error); ok && s3err.Code() == \"NoSuchTagSet\" {\n\t\t\t// Not an error, simply means there is no tag set associated with the bucket\n\t\t\tgetBucketTaggingOutput = &s3.GetBucketTaggingOutput{TagSet: []*s3.Tag{}}\n\t\t\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-10-02T04:25:26.009Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Pratima",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/914695?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/914695?v=4&s=60",
   "displayName": "Pratima Singh",
   "gv": "4",
   "id": "5bb2f2d5d73408ce4faa0bc7",
   "url": "/Pratima",
   "username": "Pratima",
   "v": 1
  },
  "html": "In my unit test I&#39;m creating a var like so<pre><code>getBucketTaggingErr:    awserr.<span class=\"function\"><span class=\"title\">New</span><span class=\"params\">(<span class=\"string\">\"NoSuchTagSet\"</span>, <span class=\"string\">\"\"</span>, nil)</span></span>,</code></pre>",
  "id": "5bb2f32e6e5a401c2d02a90f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-10-02T04:25:18.782Z",
  "text": "In my unit test I'm creating a var like so\n```\ngetBucketTaggingErr:    awserr.New(\"NoSuchTagSet\", \"\", nil),\n\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Pratima",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/914695?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/914695?v=4&s=60",
   "displayName": "Pratima Singh",
   "gv": "4",
   "id": "5bb2f2d5d73408ce4faa0bc7",
   "url": "/Pratima",
   "username": "Pratima",
   "v": 1
  },
  "html": "and getting a failed test<pre><code><span class=\"tag\">Error</span> <span class=\"tag\">Trace</span>:    <span class=\"tag\">main_test</span><span class=\"class\">.go</span><span class=\"pseudo\">:354</span>\n                <span class=\"tag\">Error</span>:          <span class=\"tag\">Not</span> <span class=\"tag\">equal</span>:\n                                <span class=\"tag\">expected</span>: *<span class=\"tag\">awserr</span><span class=\"class\">.baseError</span>(&amp;<span class=\"tag\">awserr</span><span class=\"class\">.baseError</span><span class=\"rules\">{<span class=\"rule\"><span class=\"attribute\">code</span>:<span class=\"value\"><span class=\"string\">\"NoSuchTagSet\"</span>, message:<span class=\"string\">\"\"</span>, errs:[]<span class=\"function\">error</span>(nil)</span></span></span>})\n                                <span class=\"tag\">actual</span>  : &lt;<span class=\"tag\">nil</span>&gt;(&lt;<span class=\"tag\">nil</span>&gt;)</code></pre>",
  "id": "5bb2f352e65a6343366dd989",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-10-02T04:25:54.806Z",
  "text": "and getting a failed test\n```\nError Trace:\tmain_test.go:354\n            \tError:      \tNot equal:\n            \t            \texpected: *awserr.baseError(&awserr.baseError{code:\"NoSuchTagSet\", message:\"\", errs:[]error(nil)})\n            \t            \tactual  : <nil>(<nil>)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Pratima",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/914695?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/914695?v=4&s=60",
   "displayName": "Pratima Singh",
   "gv": "4",
   "id": "5bb2f2d5d73408ce4faa0bc7",
   "url": "/Pratima",
   "username": "Pratima",
   "v": 1
  },
  "html": "Could someone help me in sorting out how to build the awserr.New object?",
  "id": "5bb2f379bbdc0b2505d1cbdc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-10-02T04:26:33.120Z",
  "text": "Could someone help me in sorting out how to build the awserr.New object?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/chaitanya11",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16046840?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16046840?v=4&s=60",
   "displayName": "Chaitanya Garikipati",
   "gv": "4",
   "id": "5b5bfe8cd73408ce4fa2a068",
   "url": "/chaitanya11",
   "username": "chaitanya11",
   "v": 10
  },
  "html": "Does any body know How to add policies while creating iam role in this sdk ?",
  "id": "5bb4af88bbdc0b2505dcc1c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-10-03T12:01:12.997Z",
  "text": "Does any body know How to add policies while creating iam role in this sdk ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/chaitanya11",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16046840?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16046840?v=4&s=60",
   "displayName": "Chaitanya Garikipati",
   "gv": "4",
   "id": "5b5bfe8cd73408ce4fa2a068",
   "url": "/chaitanya11",
   "username": "chaitanya11",
   "v": 10
  },
  "html": "i could only see <code>AssumeRolePolicyDocument</code> in <code>CreateRoleInput</code>.  where can i add policy document or managed policies ?",
  "id": "5bb4afb6435c2a518e45dcd3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-10-03T12:01:58.326Z",
  "text": "i could only see ```AssumeRolePolicyDocument``` in ```CreateRoleInput```.  where can i add policy document or managed policies ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/harkamals_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/1006971952467021824/ZnW3k4Pb.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/1006971952467021824/ZnW3k4Pb_bigger.jpg",
   "displayName": "\ud835\udda7\ud835\uddba\ud835\uddcb\ud835\uddc4\ud835\uddba\ud835\uddc6\ud835\uddba\ud835\uddc5 \ud835\uddb2\ud835\uddc2\ud835\uddc7\ud835\uddc0\ud835\uddc1",
   "id": "5bb4c282d73408ce4faa38f5",
   "url": "/harkamals_twitter",
   "username": "harkamals_twitter",
   "v": 1
  },
  "html": "When is the v2 sdk expected to be GA",
  "id": "5bb4c2d43844923661da755a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-10-03T13:23:32.483Z",
  "text": "When is the v2 sdk expected to be GA",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/harkamals_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/1006971952467021824/ZnW3k4Pb.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/1006971952467021824/ZnW3k4Pb_bigger.jpg",
   "displayName": "\ud835\udda7\ud835\uddba\ud835\uddcb\ud835\uddc4\ud835\uddba\ud835\uddc6\ud835\uddba\ud835\uddc5 \ud835\uddb2\ud835\uddc2\ud835\uddc7\ud835\uddc0\ud835\uddc1",
   "id": "5bb4c282d73408ce4faa38f5",
   "url": "/harkamals_twitter",
   "username": "harkamals_twitter",
   "v": 1
  },
  "html": "Been an year, now preview 5",
  "id": "5bb4c2e35af485306854fa81",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-10-03T13:23:47.151Z",
  "text": "Been an year, now preview 5",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Botono",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1622358?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1622358?v=4&s=60",
   "displayName": "Aaron Murray",
   "gv": "4",
   "id": "576064a1c2f0db084a1ddfe2",
   "url": "/Botono",
   "username": "Botono",
   "v": 2
  },
  "html": "How would one go about catching a ProvisionedThroughputExceededException from Dynamodb.ScanPages()? i&#39;ve got a lambda that times out rather than error when exceeding read capacity",
  "id": "5bbbfea0ae7be94016231c4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-10-09T01:04:32.410Z",
  "text": "How would one go about catching a ProvisionedThroughputExceededException from Dynamodb.ScanPages()? i've got a lambda that times out rather than error when exceeding read capacity",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-10-09T01:06:38.720Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Botono",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1622358?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1622358?v=4&s=60",
   "displayName": "Aaron Murray",
   "gv": "4",
   "id": "576064a1c2f0db084a1ddfe2",
   "url": "/Botono",
   "username": "Botono",
   "v": 2
  },
  "html": "<pre><code>scanErr := ddbsvc.ScanPages(scanInput,\n    <span class=\"keyword\">func</span>(result *dynamodb.ScanOutput, lastPage <span class=\"typename\">bool</span>) <span class=\"typename\">bool</span> {\n        <span class=\"comment\">// stuff is done here</span>\n\n        <span class=\"keyword\">return</span> <span class=\"constant\">true</span> <span class=\"comment\">// retrieve all pages</span>\n    })\n\n<span class=\"keyword\">if</span> scanErr != <span class=\"constant\">nil</span> {\n    logFatal(<span class=\"string\">\"DynamoDB scan failed.\"</span>, err)\n}</code></pre>",
  "id": "5bbbfee964cfc273f9b2b851",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-10-09T01:05:45.819Z",
  "text": "```\nscanErr := ddbsvc.ScanPages(scanInput,\n    func(result *dynamodb.ScanOutput, lastPage bool) bool {\n        // stuff is done here\n\n        return true // retrieve all pages\n    })\n\nif scanErr != nil {\n    logFatal(\"DynamoDB scan failed.\", err)\n}\n```",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/hashsim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/406740?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/406740?v=4&s=60",
   "displayName": "hashsim",
   "gv": "4",
   "id": "5bbd3928d73408ce4faae827",
   "url": "/hashsim",
   "username": "hashsim",
   "v": 3
  },
  "html": "I need help with AWS directory services sdk. I am able to create a simple AD but can&#39;t find a way to create a user in this AD. ",
  "id": "5bbd39943844923661109b36",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-10-09T23:28:20.026Z",
  "text": "I need help with AWS directory services sdk. I am able to create a simple AD but can't find a way to create a user in this AD. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Nalum",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/384180?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/384180?v=4&s=60",
   "displayName": "Luke Mallon",
   "gv": "4",
   "id": "529c6e71ed5ab0b3bf04de80",
   "url": "/Nalum",
   "username": "Nalum",
   "v": 18
  },
  "html": "Hello all, perhaps not the place to ask but is there a way to get an image from a video using MediaConvert?",
  "id": "5bc0ae8fae7be9401645cf6f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-10-12T14:24:15.491Z",
  "text": "Hello all, perhaps not the place to ask but is there a way to get an image from a video using MediaConvert?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/danbryan",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/807940?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/807940?v=4&s=60",
   "displayName": "Dan Bryan",
   "gv": "4",
   "id": "5afafb6cd73408ce4f996b50",
   "url": "/danbryan",
   "username": "danbryan",
   "v": 10
  },
  "html": "Hey all, is anyone aware if there is a way to tell if a workspace is windows or linux via the api? The best I can think of is ensuring the bundle id descriptions state the platform.",
  "id": "5bc0f16438449236612bbe12",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-10-12T19:09:24.153Z",
  "text": "Hey all, is anyone aware if there is a way to tell if a workspace is windows or linux via the api? The best I can think of is ensuring the bundle id descriptions state the platform.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nguyenngochuy91",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16884828?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16884828?v=4&s=60",
   "displayName": "Huy Nguyen",
   "gv": "4",
   "id": "5bc11c8bd73408ce4fab4955",
   "url": "/nguyenngochuy91",
   "username": "nguyenngochuy91",
   "v": 1
  },
  "html": "Hi guys",
  "id": "5bc11ca21c100a4f29778b24",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-10-12T22:13:54.253Z",
  "text": "Hi guys",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nguyenngochuy91",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16884828?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16884828?v=4&s=60",
   "displayName": "Huy Nguyen",
   "gv": "4",
   "id": "5bc11c8bd73408ce4fab4955",
   "url": "/nguyenngochuy91",
   "username": "nguyenngochuy91",
   "v": 1
  },
  "html": "I have a Bot that is deploy in my website",
  "id": "5bc11d07ef4afc4f286447bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-10-12T22:15:35.711Z",
  "text": "I have a Bot that is deploy in my website",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nguyenngochuy91",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16884828?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16884828?v=4&s=60",
   "displayName": "Huy Nguyen",
   "gv": "4",
   "id": "5bc11c8bd73408ce4fab4955",
   "url": "/nguyenngochuy91",
   "username": "nguyenngochuy91",
   "v": 1
  },
  "html": "I am trying to query information from this Bot",
  "id": "5bc11d1838449236612d0518",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-10-12T22:15:52.179Z",
  "text": "I am trying to query information from this Bot",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nguyenngochuy91",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16884828?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16884828?v=4&s=60",
   "displayName": "Huy Nguyen",
   "gv": "4",
   "id": "5bc11c8bd73408ce4fab4955",
   "url": "/nguyenngochuy91",
   "username": "nguyenngochuy91",
   "v": 1
  },
  "html": "the Bot will retrieve information from a DB",
  "id": "5bc11d8bbbdc0b25053034b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-10-12T22:17:47.128Z",
  "text": "the Bot will retrieve information from a DB",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nguyenngochuy91",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16884828?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16884828?v=4&s=60",
   "displayName": "Huy Nguyen",
   "gv": "4",
   "id": "5bc11c8bd73408ce4fab4955",
   "url": "/nguyenngochuy91",
   "username": "nguyenngochuy91",
   "v": 1
  },
  "html": "this Bot however will need access token from the front end",
  "id": "5bc11d96c7bf7c3662001b7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-10-12T22:17:58.834Z",
  "text": "this Bot however will need access token from the front end",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nguyenngochuy91",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16884828?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16884828?v=4&s=60",
   "displayName": "Huy Nguyen",
   "gv": "4",
   "id": "5bc11c8bd73408ce4fab4955",
   "url": "/nguyenngochuy91",
   "username": "nguyenngochuy91",
   "v": 1
  },
  "html": "I know how to send access token to a lambda function",
  "id": "5bc11da41e23486b93b4b244",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-10-12T22:18:12.619Z",
  "text": "I know how to send access token to a lambda function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/nguyenngochuy91",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16884828?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16884828?v=4&s=60",
   "displayName": "Huy Nguyen",
   "gv": "4",
   "id": "5bc11c8bd73408ce4fab4955",
   "url": "/nguyenngochuy91",
   "username": "nguyenngochuy91",
   "v": 1
  },
  "html": "however, I do not know how to send this access token to my Bot which is amazon Lex",
  "id": "5bc11db7bbdc0b25053035b5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-10-12T22:18:31.937Z",
  "text": "however, I do not know how to send this access token to my Bot which is amazon Lex",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Setheck",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/402885?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/402885?v=4&s=60",
   "displayName": "Seth",
   "gv": "4",
   "id": "57535629c43b8c601976c8dd",
   "url": "/Setheck",
   "username": "Setheck",
   "v": 4
  },
  "html": "Hello! Anyone know where I can find example usage of <code>func (*EC2) WaitUntilInstanceRunning</code> ?  What is required of <code>ec2.DescribeInstancesInput</code> doesn&#39;t seem clear to me. I provide instance Id, but it doesn&#39;t seem to work.",
  "id": "5bc624ff1c100a4f29977c3b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-10-16T17:50:55.508Z",
  "text": "Hello! Anyone know where I can find example usage of `func (*EC2) WaitUntilInstanceRunning` ?  What is required of `ec2.DescribeInstancesInput` doesn't seem clear to me. I provide instance Id, but it doesn't seem to work.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Setheck",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/402885?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/402885?v=4&s=60",
   "displayName": "Seth",
   "gv": "4",
   "id": "57535629c43b8c601976c8dd",
   "url": "/Setheck",
   "username": "Setheck",
   "v": 4
  },
  "html": "is the last post by someone from AWS really on Oct 1?!?",
  "id": "5bc625641c100a4f29977ef5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 31,
  "sent": "2018-10-16T17:52:36.309Z",
  "text": "is the last post by someone from AWS really on Oct 1?!?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Setheck\" class=\"mention\">@Setheck</span> have a look over the example given on this issue: <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"59\" href=\"https://github.com/aws/aws-sdk-go/issues/59\" data-provider=\"github\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#59</a>",
  "id": "5bc9cdd5c08b8b30673bd092",
  "issues": [
   {
    "number": "59",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [
   {
    "screenName": "Setheck",
    "userId": "57535629c43b8c601976c8dd",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2018-10-19T12:28:05.704Z",
  "text": "@Setheck have a look over the example given on this issue: https://github.com/aws/aws-sdk-go/issues/59",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I just played with the pricing API a bit and it turns out all the pricing data is returned as raw JSON, which then needs to be parsed by  the user. Are there any plans to offer native Go data types for it?",
  "id": "5bc9f6b2069fca52a55f6fa7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-10-19T15:22:26.300Z",
  "text": "I just played with the pricing API a bit and it turns out all the pricing data is returned as raw JSON, which then needs to be parsed by  the user. Are there any plans to offer native Go data types for it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jcox250",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16992818?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16992818?v=4&s=60",
   "displayName": "James Cox",
   "gv": "4",
   "id": "5bc9ebecd73408ce4fac03d3",
   "url": "/jcox250",
   "username": "jcox250",
   "v": 5
  },
  "html": "Hey has any one had any experience with using Context to pass values from Kinesis to Lambda? I&#39;m creating a context and then using the kinesis.PutRecordsWithContext method when writing to Kinesis. But when I log out the context object received by the Lambda it doesn&#39;t have the values contained in the context object when PutRecordsWithContext was called.",
  "id": "5bcb1c3464cfc273f9f80685",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-10-20T12:14:44.722Z",
  "text": "Hey has any one had any experience with using Context to pass values from Kinesis to Lambda? I'm creating a context and then using the kinesis.PutRecordsWithContext method when writing to Kinesis. But when I log out the context object received by the Lambda it doesn't have the values contained in the context object when PutRecordsWithContext was called.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-10-20T12:18:17.360Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jcox250",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16992818?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16992818?v=4&s=60",
   "displayName": "James Cox",
   "gv": "4",
   "id": "5bc9ebecd73408ce4fac03d3",
   "url": "/jcox250",
   "username": "jcox250",
   "v": 5
  },
  "html": "For reference the code is a bit like this <pre><code><span class=\"comment\">// Writing to Kinesis</span>\nctx := aws.BackgroundContext()\nnewCtx = context.WithValue(ctx, key, <span class=\"keyword\">value</span>)\n\n<span class=\"comment\">// Make putRecordsObject</span>\n\no, err := kinesis.PutRecordsWithContext(putRecordsObject, newCtx)\n<span class=\"keyword\">if</span> err != nil {\n  log.Fatal(err)\n\n<span class=\"comment\">// Lambda Signature</span>\nHandler(ctx context.Context, <span class=\"keyword\">event</span> events.KinesisEvent)</code></pre>",
  "id": "5bcb1ce838449236616c773b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-10-20T12:17:44.273Z",
  "text": "For reference the code is a bit like this \n```\n// Writing to Kinesis\nctx := aws.BackgroundContext()\nnewCtx = context.WithValue(ctx, key, value)\n\n// Make putRecordsObject\n\no, err := kinesis.PutRecordsWithContext(putRecordsObject, newCtx)\nif err != nil {\n  log.Fatal(err)\n\n// Lambda Signature\nHandler(ctx context.Context, event events.KinesisEvent)\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/kormon",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/33274897?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/33274897?v=4&s=60",
   "displayName": "Teeranai Kormonkolkul",
   "gv": "4",
   "id": "5bd0291fd73408ce4fac8aaf",
   "url": "/kormon",
   "username": "kormon",
   "v": 1
  },
  "html": "Hello anyone ever use SNS sdk?",
  "id": "5bd2661082893a2f3b3e4c96",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-10-26T00:55:44.667Z",
  "text": "Hello anyone ever use SNS sdk?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/kormon",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/33274897?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/33274897?v=4&s=60",
   "displayName": "Teeranai Kormonkolkul",
   "gv": "4",
   "id": "5bd0291fd73408ce4fac8aaf",
   "url": "/kormon",
   "username": "kormon",
   "v": 1
  },
  "html": "I try to publish a message to SNS sdk. With topic_arn it&#39;s work fine. but with target_arn I got <code>InternalFailure: status code: 500, request id: xxxxx-xxxx-xxxxx</code>",
  "id": "5bd2666d271506518d6eddf8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-10-26T00:57:17.473Z",
  "text": "I try to publish a message to SNS sdk. With topic_arn it's work fine. but with target_arn I got `InternalFailure: status code: 500, request id: xxxxx-xxxx-xxxxx`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-10-26T08:51:25.617Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/kanchwala-yusuf",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/30405568?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/30405568?v=4&s=60",
   "displayName": "kanchwala-yusuf",
   "gv": "4",
   "id": "5bc57f0fd73408ce4fab94ee",
   "url": "/kanchwala-yusuf",
   "username": "kanchwala-yusuf",
   "v": 1
  },
  "html": "<p>Hi,<br>I want to check if my amazon ec2 instance can connect to aws marketplace metering service. What would be a good way to do that?</p><p>Thanks :)</p>",
  "id": "5bd2d57b6e5a401c2dd1841e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-10-26T08:51:07.724Z",
  "text": "Hi,\nI want to check if my amazon ec2 instance can connect to aws marketplace metering service. What would be a good way to do that?\n\nThanks :)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/mmartell37",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25008272?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25008272?v=4&s=60",
   "displayName": "Michael B Martell Jr",
   "gv": "4",
   "id": "58b72472d73408ce4f4dc256",
   "url": "/mmartell37",
   "username": "mmartell37",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"Setheck\" class=\"mention\">@Setheck</span> I&#39;ve used this in the past and it works well:<pre><code class=\"go\">    ec2Session.WaitUntilInstanceStatusOk(&amp;ec2.DescribeInstanceStatusInput{\n        InstanceIds: []*<span class=\"typename\">string</span>{aws.String(*ec2Resp.Instances[<span class=\"number\">0</span>].InstanceId)},\n    })</code></pre>",
  "id": "5bd35837ab17df2631f54ac9",
  "issues": [],
  "mentions": [
   {
    "screenName": "Setheck",
    "userId": "57535629c43b8c601976c8dd",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2018-10-26T18:08:55.791Z",
  "text": "@Setheck I've used this in the past and it works well:\n```go\n\tec2Session.WaitUntilInstanceStatusOk(&ec2.DescribeInstanceStatusInput{\n\t\tInstanceIds: []*string{aws.String(*ec2Resp.Instances[0].InstanceId)},\n\t})\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/mmartell37",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25008272?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25008272?v=4&s=60",
   "displayName": "Michael B Martell Jr",
   "gv": "4",
   "id": "58b72472d73408ce4f4dc256",
   "url": "/mmartell37",
   "username": "mmartell37",
   "v": 3
  },
  "html": "The trick is wrapping the instance ID in <code>&amp;ec2.DescribeInstanceStatusInput{ ... }</code>",
  "id": "5bd358641e23486b93213e7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-10-26T18:09:40.029Z",
  "text": "The trick is wrapping the instance ID in `&ec2.DescribeInstanceStatusInput{ ... }`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/mmartell37",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25008272?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25008272?v=4&s=60",
   "displayName": "Michael B Martell Jr",
   "gv": "4",
   "id": "58b72472d73408ce4f4dc256",
   "url": "/mmartell37",
   "username": "mmartell37",
   "v": 3
  },
  "html": "Ah, I see <span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> already responded :)",
  "id": "5bd35897c7bf7c36627484bd",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 30,
  "sent": "2018-10-26T18:10:31.608Z",
  "text": "Ah, I see @cristim already responded :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/zlinisp",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/19557514?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/19557514?v=4&s=60",
   "displayName": "zlinisp",
   "gv": "4",
   "id": "5bd38e02d73408ce4face907",
   "url": "/zlinisp",
   "username": "zlinisp",
   "v": 1
  },
  "html": "I use sess, err := session.NewSession(&amp;aws.Config{<br>        Region:      aws.String(<em>awsRegion),<br>        Credentials: credentials.NewSharedCredentials(&quot;&quot;, </em>awsProfile),<br>    })<br>    svc := sqs.New(sess) to open up a sqs client",
  "id": "5bd38e1c1c100a4f29ec61d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-10-26T21:58:52.439Z",
  "text": "I use sess, err := session.NewSession(&aws.Config{\n\t\tRegion:      aws.String(*awsRegion),\n\t\tCredentials: credentials.NewSharedCredentials(\"\", *awsProfile),\n\t})\n\tsvc := sqs.New(sess) to open up a sqs client",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/zlinisp",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/19557514?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/19557514?v=4&s=60",
   "displayName": "zlinisp",
   "gv": "4",
   "id": "5bd38e02d73408ce4face907",
   "url": "/zlinisp",
   "username": "zlinisp",
   "v": 1
  },
  "html": "and get error saying sqs.New(sess) doesnt take session as a parameter",
  "id": "5bd38e32435c2a518e0e3285",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-10-26T21:59:14.428Z",
  "text": "and get error saying sqs.New(sess) doesnt take session as a parameter",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I&#39;ve seen a similar error with the pricing API, it recovered after updating the SDK to the latest version ",
  "id": "5bd3efdec7bf7c36627810e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-10-27T04:55:58.212Z",
  "text": "I've seen a similar error with the pricing API, it recovered after updating the SDK to the latest version ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/prasun-singh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18720456?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18720456?v=4&s=60",
   "displayName": "Prasun Singh ",
   "gv": "4",
   "id": "5bd6d146d73408ce4fad1b78",
   "url": "/prasun-singh",
   "username": "prasun-singh",
   "v": 1
  },
  "html": "<p>Hi,</p><p>Can we create a tag for VPC using amazon go SDK?</p>",
  "id": "5bd6d15e1c100a4f29ffd6cb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-10-29T09:22:38.251Z",
  "text": "Hi,\n\nCan we create a tag for VPC using amazon go SDK?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/prasun-singh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18720456?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18720456?v=4&s=60",
   "displayName": "Prasun Singh ",
   "gv": "4",
   "id": "5bd6d146d73408ce4fad1b78",
   "url": "/prasun-singh",
   "username": "prasun-singh",
   "v": 1
  },
  "html": "I was going through the documentation for struct of CreateVPCInput but didn&#39;t find any field for tag.",
  "id": "5bd6d191ab17df26310a6489",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-10-29T09:23:29.202Z",
  "text": "I was going through the documentation for struct of CreateVPCInput but didn't find any field for tag.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/prasun-singh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18720456?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18720456?v=4&s=60",
   "displayName": "Prasun Singh ",
   "gv": "4",
   "id": "5bd6d146d73408ce4fad1b78",
   "url": "/prasun-singh",
   "username": "prasun-singh",
   "v": 1
  },
  "html": "<a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#CreateVpcInput\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#CreateVpcInput</a>",
  "id": "5bd6d198ae7be94016d372a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-10-29T09:23:36.064Z",
  "text": "https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#CreateVpcInput",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#CreateVpcInput"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2018-10-29T15:02:55.525Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"prasun-singh\" class=\"mention\">@prasun-singh</span> tags are set using a different, dedicated API call: <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#EC2.CreateTags\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#EC2.CreateTags</a>",
  "id": "5bd720fa1e23486b93380888",
  "issues": [],
  "mentions": [
   {
    "screenName": "prasun-singh",
    "userId": "5bd6d146d73408ce4fad1b78",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2018-10-29T15:02:18.336Z",
  "text": "@prasun-singh tags are set using a different, dedicated API call: https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#EC2.CreateTags",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#EC2.CreateTags"
   }
  ],
  "v": 2
 },
 {
  "editedAt": "2018-10-29T15:05:07.047Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<pre><code class=\"go\">svc := ec2.New(session.New())\ninput := &amp;ec2.CreateTagsInput{\n    Resources: []*<span class=\"typename\">string</span>{\n        aws.String(<span class=\"string\">\"vpc-d34db33f\"</span>),\n    },\n    Tags: []*ec2.Tag{\n        {\n            Key:   aws.String(<span class=\"string\">\"Stack\"</span>),\n            Value: aws.String(<span class=\"string\">\"production\"</span>),\n        },\n    },\n}\nresult, err := svc.CreateTags(input)</code></pre>",
  "id": "5bd7218c1c100a4f2901e5d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-10-29T15:04:44.481Z",
  "text": "```go\nsvc := ec2.New(session.New())\ninput := &ec2.CreateTagsInput{\n    Resources: []*string{\n        aws.String(\"vpc-d34db33f\"),\n    },\n    Tags: []*ec2.Tag{\n        {\n            Key:   aws.String(\"Stack\"),\n            Value: aws.String(\"production\"),\n        },\n    },\n}\nresult, err := svc.CreateTags(input)\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/prasun-singh",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/18720456?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/18720456?v=4&s=60",
   "displayName": "Prasun Singh ",
   "gv": "4",
   "id": "5bd6d146d73408ce4fad1b78",
   "url": "/prasun-singh",
   "username": "prasun-singh",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span>  Thanks! Got it. :) ",
  "id": "5bd8b292bbdc0b2505c5af99",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 31,
  "sent": "2018-10-30T19:35:46.882Z",
  "text": "@cristim  Thanks! Got it. :) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/myatsu86",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/775195?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/775195?v=4&s=60",
   "displayName": "myatsu86",
   "gv": "4",
   "id": "5bd952ffd73408ce4fad5dda",
   "url": "/myatsu86",
   "username": "myatsu86",
   "v": 1
  },
  "html": "Hi, may I know how can I make concurrent call for AWS Lex PostText()",
  "id": "5bd95322b9c91919547a118f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2018-10-31T07:00:50.912Z",
  "text": "Hi, may I know how can I make concurrent call for AWS Lex PostText()",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"myatsu86\" class=\"mention\">@myatsu86</span> I&#39;m not familiar with Lex, but I&#39;d try using multiple goroutines in parallel that each handle an API call and process its response",
  "id": "5bd97cef995818347b7dc604",
  "issues": [],
  "mentions": [
   {
    "screenName": "myatsu86",
    "userId": "5bd952ffd73408ce4fad5dda",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 30,
  "sent": "2018-10-31T09:59:11.233Z",
  "text": "@myatsu86 I'm not familiar with Lex, but I'd try using multiple goroutines in parallel that each handle an API call and process its response",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darshan-ghumare",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10231034?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10231034?v=4&s=60",
   "displayName": "darshan-ghumare",
   "gv": "4",
   "id": "5be08e96d73408ce4fadf161",
   "url": "/darshan-ghumare",
   "username": "darshan-ghumare",
   "v": 3
  },
  "html": "Hi, Does AWS go SDK supports API version 2011-12-05?",
  "id": "5be08ee1a9c55b2574b0f247",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2018-11-05T18:41:37.719Z",
  "text": "Hi, Does AWS go SDK supports API version 2011-12-05?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darshan-ghumare",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10231034?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10231034?v=4&s=60",
   "displayName": "darshan-ghumare",
   "gv": "4",
   "id": "5be08e96d73408ce4fadf161",
   "url": "/darshan-ghumare",
   "username": "darshan-ghumare",
   "v": 3
  },
  "html": "I could see files at aws/aws-sdk-go# ls models/apis/dynamodb/2011-12-05/<br>api-2.json  docs-2.json  examples-1.json  paginators-1.json  waiters-2.json",
  "id": "5be08f4425b9875faedad53f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-11-05T18:43:16.671Z",
  "text": "I could see files at aws/aws-sdk-go# ls models/apis/dynamodb/2011-12-05/\napi-2.json  docs-2.json  examples-1.json  paginators-1.json  waiters-2.json",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darshan-ghumare",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10231034?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10231034?v=4&s=60",
   "displayName": "darshan-ghumare",
   "gv": "4",
   "id": "5be08e96d73408ce4fadf161",
   "url": "/darshan-ghumare",
   "username": "darshan-ghumare",
   "v": 3
  },
  "html": "Why do we needs these files for?",
  "id": "5be08f5440449151f401681d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-11-05T18:43:32.159Z",
  "text": "Why do we needs these files for?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darshan-ghumare",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10231034?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10231034?v=4&s=60",
   "displayName": "darshan-ghumare",
   "gv": "4",
   "id": "5be08e96d73408ce4fadf161",
   "url": "/darshan-ghumare",
   "username": "darshan-ghumare",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> ",
  "id": "5be1c5fe73127453373212b5",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 28,
  "sent": "2018-11-06T16:49:02.026Z",
  "text": "@cristim ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"darshan-ghumare\" class=\"mention\">@darshan-ghumare</span> what&#39;s up?",
  "id": "5be20b039088fe25bc6f823f",
  "issues": [],
  "mentions": [
   {
    "screenName": "darshan-ghumare",
    "userId": "5be08e96d73408ce4fadf161",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 29,
  "sent": "2018-11-06T21:43:31.662Z",
  "text": "@darshan-ghumare what's up?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2018-11-07T02:24:33.413Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/darshan-ghumare",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/10231034?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/10231034?v=4&s=60",
   "displayName": "darshan-ghumare",
   "gv": "4",
   "id": "5be08e96d73408ce4fadf161",
   "url": "/darshan-ghumare",
   "username": "darshan-ghumare",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span><br>Hi, Does AWS go SDK supports API version 2011-12-05?<br>I could see files at aws/aws-sdk-go# ls models/apis/dynamodb/2011-12-05/<br>api-2.json  docs-2.json  examples-1.json  paginators-1.json  waiters-2.json<br>Why do we needs these files for?",
  "id": "5be24ccffbb6f507e6451054",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 30,
  "sent": "2018-11-07T02:24:15.193Z",
  "text": "@cristim\nHi, Does AWS go SDK supports API version 2011-12-05?\nI could see files at aws/aws-sdk-go# ls models/apis/dynamodb/2011-12-05/\napi-2.json  docs-2.json  examples-1.json  paginators-1.json  waiters-2.json\nWhy do we needs these files for?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I&#39;m not so familiar with the internals of the sdk",
  "id": "5be27964bb06d73a9935e285",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-11-07T05:34:28.387Z",
  "text": "I'm not so familiar with the internals of the sdk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "C ",
  "id": "5be27978f1b875340488eb97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2018-11-07T05:34:48.385Z",
  "text": "C ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/kaihendry",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/765871?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/765871?v=4&s=60",
   "displayName": "Kai Hendry",
   "gv": "4",
   "id": "5667ac0d16b6c7089cbdfef5",
   "url": "/kaihendry",
   "username": "kaihendry",
   "v": 19
  },
  "html": "How do I work out the role my golang  function is running under ?",
  "id": "5bebb827fee6703aaf69c5f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-11-14T05:52:39.214Z",
  "text": "How do I work out the role my golang  function is running under ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/ceciliaproof_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/1052626450111553536/FZlmaeWc.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/1052626450111553536/FZlmaeWc_bigger.jpg",
   "displayName": "really not funny10",
   "id": "5bea75f9d73408ce4faebadd",
   "url": "/ceciliaproof_twitter",
   "username": "ceciliaproof_twitter",
   "v": 1
  },
  "html": "Why I&#39;m getting error &quot;Unable to copy item from bucket $A to bucket $B,  dial tcp: lookup {bucket $A}.s3.{bucket $B}.amazonaws.com: no such host? I&#39;m using s3_svc.CopyObject(input).",
  "id": "5bf06890f9993b4267259061",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-11-17T19:14:24.675Z",
  "text": "Why I'm getting error \"Unable to copy item from bucket $A to bucket $B,  dial tcp: lookup {bucket $A}.s3.{bucket $B}.amazonaws.com: no such host? I'm using s3_svc.CopyObject(input).",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/ceciliaproof_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/1052626450111553536/FZlmaeWc.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/1052626450111553536/FZlmaeWc_bigger.jpg",
   "displayName": "really not funny10",
   "id": "5bea75f9d73408ce4faebadd",
   "url": "/ceciliaproof_twitter",
   "username": "ceciliaproof_twitter",
   "v": 1
  },
  "html": "I was using the example in <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.CopyObject\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.CopyObject</a>",
  "id": "5bf068b94bad337eb9f57734",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-11-17T19:15:05.002Z",
  "text": "I was using the example in https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.CopyObject",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.CopyObject"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/ceciliaproof_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/1052626450111553536/FZlmaeWc.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/1052626450111553536/FZlmaeWc_bigger.jpg",
   "displayName": "really not funny10",
   "id": "5bea75f9d73408ce4faebadd",
   "url": "/ceciliaproof_twitter",
   "username": "ceciliaproof_twitter",
   "v": 1
  },
  "html": "never mind, my setting",
  "id": "5bf06d1a2735965dfeef98a8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2018-11-17T19:33:46.899Z",
  "text": "never mind, my setting",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ruzin",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/34538204?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/34538204?v=4&s=60",
   "displayName": "Ruzin",
   "gv": "4",
   "id": "5bff1fefd73408ce4fb06208",
   "url": "/ruzin",
   "username": "ruzin",
   "v": 1
  },
  "html": "Anyone seen this error before *AWSclient has no field or method&#39;",
  "id": "5c02ce9b9f38cc0fd58c42ca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-12-01T18:10:35.748Z",
  "text": "Anyone seen this error before *AWSclient has no field or method'",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/rajeshnair",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1296228?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1296228?v=4&s=60",
   "displayName": "Rajesh Nair",
   "gv": "4",
   "id": "5c06a745d73408ce4fb0ecbd",
   "url": "/rajeshnair",
   "username": "rajeshnair",
   "v": 1
  },
  "html": "Hi , We are seeing a lot of sockets in CLOSE_WAIT errors  like below <code>tcp 32 0 ip-10-1-1-41.eu-west-:46130 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:37066 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:53998 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:32976 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:38546 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:59248 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:50914 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:45328 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:56604 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:53476 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:33890 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:51856 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:60750 server-54-230-29-238.:https CLOSE_WAIT</code>",
  "id": "5c06a7a499ad1556db067f1e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-12-04T16:13:24.078Z",
  "text": "Hi , We are seeing a lot of sockets in CLOSE_WAIT errors  like below `tcp 32 0 ip-10-1-1-41.eu-west-:46130 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:37066 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:53998 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:32976 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:38546 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:59248 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:50914 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:45328 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:56604 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:53476 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:33890 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:51856 server-54-230-29-238.:https CLOSE_WAIT \ntcp 32 0 ip-10-1-1-41.eu-west-:60750 server-54-230-29-238.:https CLOSE_WAIT`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/rajeshnair",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1296228?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1296228?v=4&s=60",
   "displayName": "Rajesh Nair",
   "gv": "4",
   "id": "5c06a745d73408ce4fb0ecbd",
   "url": "/rajeshnair",
   "username": "rajeshnair",
   "v": 1
  },
  "html": "The reverse DNS of 54.230.29.238 suggests it to be  cloudfront server in dublin.  Our application does not make any connection to cloudfront or S3 . Can somebody hint where these connections could emanating from ?",
  "id": "5c06a83bbc1a693e3a55dd27",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2018-12-04T16:15:55.353Z",
  "text": "The reverse DNS of 54.230.29.238 suggests it to be  cloudfront server in dublin.  Our application does not make any connection to cloudfront or S3 . Can somebody hint where these connections could emanating from ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Maybe someone else you don&#39;t know of is using your environment as a Cloudfront origin?",
  "id": "5c0a5a618d4f3a2a7c84ae1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2018-12-07T11:32:49.835Z",
  "text": "Maybe someone else you don't know of is using your environment as a Cloudfront origin?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/raven531",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5564218?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5564218?v=4&s=60",
   "displayName": "raven531",
   "gv": "4",
   "id": "5c1219dad73408ce4fb1ce42",
   "url": "/raven531",
   "username": "raven531",
   "v": 1
  },
  "html": "Hi",
  "id": "5c1219db80986419d5836cb8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-12-13T08:35:39.811Z",
  "text": "Hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/raven531",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5564218?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5564218?v=4&s=60",
   "displayName": "raven531",
   "gv": "4",
   "id": "5c1219dad73408ce4fb1ce42",
   "url": "/raven531",
   "username": "raven531",
   "v": 1
  },
  "html": "How to get Access Token by golang?",
  "id": "5c1219e880986419d5836cc8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-12-13T08:35:52.475Z",
  "text": "How to get Access Token by golang?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/raven531",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/5564218?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/5564218?v=4&s=60",
   "displayName": "raven531",
   "gv": "4",
   "id": "5c1219dad73408ce4fb1ce42",
   "url": "/raven531",
   "username": "raven531",
   "v": 1
  },
  "html": "CognitoIdentity",
  "id": "5c121a1ae4787d16e38c7c6a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2018-12-13T08:36:42.715Z",
  "text": "CognitoIdentity",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/parmarrushabh",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/43805620?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/43805620?v=4&s=60",
   "displayName": "rushabh parmar",
   "gv": "4",
   "id": "5bd15cfad73408ce4facab7c",
   "url": "/parmarrushabh",
   "username": "parmarrushabh",
   "v": 27
  },
  "html": "hello everyone ",
  "id": "5c1caedacac5bc2241c5ae66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-12-21T09:14:02.604Z",
  "text": "hello everyone ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/parmarrushabh",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/43805620?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/43805620?v=4&s=60",
   "displayName": "rushabh parmar",
   "gv": "4",
   "id": "5bd15cfad73408ce4facab7c",
   "url": "/parmarrushabh",
   "username": "parmarrushabh",
   "v": 27
  },
  "html": "any go developer who wants to work as a freelancer please fill free to contact me",
  "id": "5c1caf08babbc178b2b65471",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-12-21T09:14:48.036Z",
  "text": "any go developer who wants to work as a freelancer please fill free to contact me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/chaitanya11",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16046840?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16046840?v=4&s=60",
   "displayName": "Chaitanya Garikipati",
   "gv": "4",
   "id": "5b5bfe8cd73408ce4fa2a068",
   "url": "/chaitanya11",
   "username": "chaitanya11",
   "v": 10
  },
  "html": "Use cognito get idtoken, pass that to cognitoidentity you should be able to get temporary credentials with specified expiration time.",
  "id": "5c1cb215ab910e7d3aae0a51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-12-21T09:27:49.342Z",
  "text": "Use cognito get idtoken, pass that to cognitoidentity you should be able to get temporary credentials with specified expiration time.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/wellsjo",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/823446?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/823446?v=4&s=60",
   "displayName": "Wells Johnston",
   "gv": "4",
   "id": "57ab360740f3a6eec05ec9a2",
   "url": "/wellsjo",
   "username": "wellsjo",
   "v": 6
  },
  "html": "are pointer values returned from the api guaranteed to be non-nil? for example, ListObjects  obj.Size and obj.Key?",
  "id": "5c1d0c28d945b96882d4b7c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2018-12-21T15:52:08.653Z",
  "text": "are pointer values returned from the api guaranteed to be non-nil? for example, ListObjects  obj.Size and obj.Key?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/davxiao",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3964699?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3964699?v=4&s=60",
   "displayName": "davxiao",
   "gv": "4",
   "id": "5c01de09d73408ce4fb09b06",
   "url": "/davxiao",
   "username": "davxiao",
   "v": 11
  },
  "html": "Got this error message &quot;MissingRegion: could not find region configuration&quot; when s3.ListBuckets(). I have set AWS_PROFILE and  specified region in that profile. What can be the problem?",
  "id": "5c21a34f6649aa1f82c801c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2018-12-25T03:26:07.588Z",
  "text": "Got this error message \"MissingRegion: could not find region configuration\" when s3.ListBuckets(). I have set AWS_PROFILE and  specified region in that profile. What can be the problem?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/msolimans",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25428189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25428189?v=4&s=60",
   "displayName": "Muhammad Soliman",
   "gv": "4",
   "id": "5c250ac5d73408ce4fb30375",
   "url": "/msolimans",
   "username": "msolimans",
   "v": 3
  },
  "html": "Hi everyone, is there any api I can use to validate tokens <code>IdToken</code> ..  is there any func that  accepts tokens instead of userName/pass ",
  "id": "5c250b89ab910e7d3adf3823",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-12-27T17:27:37.512Z",
  "text": "Hi everyone, is there any api I can use to validate tokens `IdToken` ..  is there any func that  accepts tokens instead of userName/pass ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/msolimans",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/25428189?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/25428189?v=4&s=60",
   "displayName": "Muhammad Soliman",
   "gv": "4",
   "id": "5c250ac5d73408ce4fb30375",
   "url": "/msolimans",
   "username": "msolimans",
   "v": 3
  },
  "html": "Got it to work :) used go-jwt and jwks pkgs .. followed instructions <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-using-tokens-verifying-a-jwt.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-using-tokens-verifying-a-jwt.html</a>",
  "id": "5c254d91db5b5c688317d17d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-12-27T22:09:21.398Z",
  "text": "Got it to work :) used go-jwt and jwks pkgs .. followed instructions https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-using-tokens-verifying-a-jwt.html",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-using-tokens-verifying-a-jwt.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/CarlosV89",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929740?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929740?v=4&s=60",
   "displayName": "Carlos Eduardo Villalta",
   "gv": "4",
   "id": "58879d4ed73408ce4f45c072",
   "url": "/CarlosV89",
   "username": "CarlosV89",
   "v": 19
  },
  "html": "Howdy guys,  Im having issues with a lambda function that I&#39;ve set as a trigger of a Cognito User pool on PostConfirmation of users",
  "id": "5c290454d945b968821c23de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2018-12-30T17:45:56.165Z",
  "text": "Howdy guys,  Im having issues with a lambda function that I've set as a trigger of a Cognito User pool on PostConfirmation of users",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/CarlosV89",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929740?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929740?v=4&s=60",
   "displayName": "Carlos Eduardo Villalta",
   "gv": "4",
   "id": "58879d4ed73408ce4f45c072",
   "url": "/CarlosV89",
   "username": "CarlosV89",
   "v": 19
  },
  "html": "I can see in the cognito conosole the function listed correctly under the trigger",
  "id": "5c29045fbabbc178b2002b89",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2018-12-30T17:46:07.679Z",
  "text": "I can see in the cognito conosole the function listed correctly under the trigger",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/CarlosV89",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929740?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929740?v=4&s=60",
   "displayName": "Carlos Eduardo Villalta",
   "gv": "4",
   "id": "58879d4ed73408ce4f45c072",
   "url": "/CarlosV89",
   "username": "CarlosV89",
   "v": 19
  },
  "html": "but whenever I confirm a User, the function seems to not be running",
  "id": "5c290469db5b5c68832e7605",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-12-30T17:46:17.159Z",
  "text": "but whenever I confirm a User, the function seems to not be running",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/CarlosV89",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1929740?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1929740?v=4&s=60",
   "displayName": "Carlos Eduardo Villalta",
   "gv": "4",
   "id": "58879d4ed73408ce4f45c072",
   "url": "/CarlosV89",
   "username": "CarlosV89",
   "v": 19
  },
  "html": "do you guys know where I can get logs of whats happening or reasons why this would be happening?",
  "id": "5c29047ababbc178b2002c40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2018-12-30T17:46:34.108Z",
  "text": "do you guys know where I can get logs of whats happening or reasons why this would be happening?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/BuckeyeSQLGuy_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/771398822044073984/lpFVRKbt.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/771398822044073984/lpFVRKbt_bigger.jpg",
   "displayName": "Matthew Haines",
   "id": "5c2cff43d73408ce4fb36ad4",
   "url": "/BuckeyeSQLGuy_twitter",
   "username": "BuckeyeSQLGuy_twitter",
   "v": 1
  },
  "html": "sorry for all the mess-ups here",
  "id": "5c2d00542863d8612bca2797",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2019-01-02T18:17:56.039Z",
  "text": "sorry for all the mess-ups here",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/BuckeyeSQLGuy_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/771398822044073984/lpFVRKbt.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/771398822044073984/lpFVRKbt_bigger.jpg",
   "displayName": "Matthew Haines",
   "id": "5c2cff43d73408ce4fb36ad4",
   "url": "/BuckeyeSQLGuy_twitter",
   "username": "BuckeyeSQLGuy_twitter",
   "v": 1
  },
  "html": "<a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/rds/#example_RDS_ModifyOptionGroup_shared00\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/rds/#example_RDS_ModifyOptionGroup_shared00</a>",
  "id": "5c2d0069babbc178b218ed9c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2019-01-02T18:18:17.580Z",
  "text": "https://docs.aws.amazon.com/sdk-for-go/api/service/rds/#example_RDS_ModifyOptionGroup_shared00",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/rds/#example_RDS_ModifyOptionGroup_shared00"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/BuckeyeSQLGuy_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/771398822044073984/lpFVRKbt.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/771398822044073984/lpFVRKbt_bigger.jpg",
   "displayName": "Matthew Haines",
   "id": "5c2cff43d73408ce4fb36ad4",
   "url": "/BuckeyeSQLGuy_twitter",
   "username": "BuckeyeSQLGuy_twitter",
   "v": 1
  },
  "html": "I need something for MSSQL RDS",
  "id": "5c2d0071ab910e7d3a1022de",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2019-01-02T18:18:25.308Z",
  "text": "I need something for MSSQL RDS",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/BuckeyeSQLGuy_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/771398822044073984/lpFVRKbt.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/771398822044073984/lpFVRKbt_bigger.jpg",
   "displayName": "Matthew Haines",
   "id": "5c2cff43d73408ce4fb36ad4",
   "url": "/BuckeyeSQLGuy_twitter",
   "username": "BuckeyeSQLGuy_twitter",
   "v": 1
  },
  "html": "I want to add the SQLSERVER_BACKUP_RESTORE option to my OptionGroup and then assoicate an IAM role as per the GUI instructions: <a href=\"https://aws.amazon.com/premiumsupport/knowledge-center/native-backup-rds-sql-server/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://aws.amazon.com/premiumsupport/knowledge-center/native-backup-rds-sql-server/</a>",
  "id": "5c2d067ff6166a3027ac01cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2019-01-02T18:44:15.424Z",
  "text": "I want to add the SQLSERVER_BACKUP_RESTORE option to my OptionGroup and then assoicate an IAM role as per the GUI instructions: https://aws.amazon.com/premiumsupport/knowledge-center/native-backup-rds-sql-server/",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/premiumsupport/knowledge-center/native-backup-rds-sql-server/"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2019-01-08T06:26:53.234Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/anatoliyfedorenko",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8424103?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8424103?v=4&s=60",
   "displayName": "Anatoliy",
   "gv": "4",
   "id": "575a288ac2f0db084a1d19eb",
   "url": "/anatoliyfedorenko",
   "username": "anatoliyfedorenko",
   "v": 2
  },
  "html": "Hey folks! Does anyone know how I can access messages in the AWS IoT ? Seems like there is no way I can get them with AWS GO SDK ... or there is and its just me being stupid? ",
  "id": "5c3441303cf6c35a84aafb15",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-01-08T06:20:32.851Z",
  "text": "Hey folks! Does anyone know how I can access messages in the AWS IoT ? Seems like there is no way I can get them with AWS GO SDK ... or there is and its just me being stupid? ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/anatoliyfedorenko",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/8424103?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/8424103?v=4&s=60",
   "displayName": "Anatoliy",
   "gv": "4",
   "id": "575a288ac2f0db084a1d19eb",
   "url": "/anatoliyfedorenko",
   "username": "anatoliyfedorenko",
   "v": 2
  },
  "html": "I have found the issue <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"820\" href=\"https://github.com/aws/aws-sdk-go/issues/820\" data-provider=\"github\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#820</a> which is  still open and seems like no progress relating that issue is being made ",
  "id": "5c344e4b357dd7655d34ec35",
  "issues": [
   {
    "number": "820",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-01-08T07:16:27.554Z",
  "text": "I have found the issue https://github.com/aws/aws-sdk-go/issues/820 which is  still open and seems like no progress relating that issue is being made ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/curicm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/42861837?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/42861837?v=4&s=60",
   "displayName": "Matja\u017e \u010curi\u010d",
   "gv": "4",
   "id": "5c345b64d73408ce4fb3f77e",
   "url": "/curicm",
   "username": "curicm",
   "v": 1
  },
  "html": "Hello, regarding Golang support for AWS IOT-Core API. The offical documentation does not mention Go as supported but on github I found what looks like an IOT-Core golang API under: <a href=\"https://github.com/aws/aws-sdk-go/tree/master/service/iot\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/tree/master/service/iot</a>  Is this the offical API?",
  "id": "5c345c4b4ed1827877787be7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2019-01-08T08:16:11.793Z",
  "text": "Hello, regarding Golang support for AWS IOT-Core API. The offical documentation does not mention Go as supported but on github I found what looks like an IOT-Core golang API under: https://github.com/aws/aws-sdk-go/tree/master/service/iot  Is this the offical API?",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/tree/master/service/iot"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mbonig",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1559437?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1559437?v=4&s=60",
   "displayName": "Matthew Bonig",
   "gv": "4",
   "id": "55e480d80fc9f982beaf2f7e",
   "url": "/mbonig",
   "username": "mbonig",
   "v": 26
  },
  "html": "I&#39;ve been working on the terraform-provider-aws changes, to allow the APIGatewayV2 resources. I&#39;m noticing a pretty strong 1:1 correlation between the AWS GO SDK and the resources. Has any effort been put into making code generators for resources based on the GO SDK?",
  "id": "5c361d9782a6c30b90ad6e2d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-01-09T16:13:11.072Z",
  "text": "I've been working on the terraform-provider-aws changes, to allow the APIGatewayV2 resources. I'm noticing a pretty strong 1:1 correlation between the AWS GO SDK and the resources. Has any effort been put into making code generators for resources based on the GO SDK?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/BigMikes",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/11773412?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/11773412?v=4&s=60",
   "displayName": "Giulio Micheloni",
   "gv": "4",
   "id": "5c37583bd73408ce4fb43d73",
   "url": "/BigMikes",
   "username": "BigMikes",
   "v": 1
  },
  "html": "Hi everyone, I have a question regarding AuthorizeSecurityGroupEgressInput  struct. The documentation of field &quot;IpPermissions&quot; tells the following: &quot;You can&#39;t specify a destination security group and a CIDR IP address range in the same set of permissions&quot;. What does this mean exactly? That I need to split the API call in two, one for permissions using addresses and the other for permissions using sec group ids? Or does it mean that I just need to split it in two different IpPermission{}?",
  "id": "5c375908da98233022ec9a55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 30,
  "sent": "2019-01-10T14:39:04.583Z",
  "text": "Hi everyone, I have a question regarding AuthorizeSecurityGroupEgressInput  struct. The documentation of field \"IpPermissions\" tells the following: \"You can't specify a destination security group and a CIDR IP address range in the same set of permissions\". What does this mean exactly? That I need to split the API call in two, one for permissions using addresses and the other for permissions using sec group ids? Or does it mean that I just need to split it in two different IpPermission{}?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/renjiniravath",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/42031946?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/42031946?v=4&s=60",
   "displayName": "renjiniravath",
   "gv": "4",
   "id": "5c382114d73408ce4fb44dea",
   "url": "/renjiniravath",
   "username": "renjiniravath",
   "v": 1
  },
  "html": "we are having issues with fetching aws go sdk repo",
  "id": "5c382146b35a08776662fd31",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2019-01-11T04:53:26.236Z",
  "text": "we are having issues with fetching aws go sdk repo",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/renjiniravath",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/42031946?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/42031946?v=4&s=60",
   "displayName": "renjiniravath",
   "gv": "4",
   "id": "5c382114d73408ce4fb44dea",
   "url": "/renjiniravath",
   "username": "renjiniravath",
   "v": 1
  },
  "html": "can anyone help us with this?",
  "id": "5c382153317e2407cd12d4c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2019-01-11T04:53:39.637Z",
  "text": "can anyone help us with this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/renjiniravath",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/42031946?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/42031946?v=4&s=60",
   "displayName": "renjiniravath",
   "gv": "4",
   "id": "5c382114d73408ce4fb44dea",
   "url": "/renjiniravath",
   "username": "renjiniravath",
   "v": 1
  },
  "html": "&quot;<a href=\"http://github.com/aws/aws-sdk-go/aws\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/aws</a>&quot;<br>    &quot;<a href=\"http://github.com/aws/aws-sdk-go/aws/session\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/aws/session</a>&quot;<br>    &quot;<a href=\"http://github.com/aws/aws-sdk-go/service/ses\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/service/ses</a>&quot;",
  "id": "5c3821d1da98233022f19adb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2019-01-11T04:55:45.404Z",
  "text": "\"github.com/aws/aws-sdk-go/aws\"\n    \"github.com/aws/aws-sdk-go/aws/session\"\n    \"github.com/aws/aws-sdk-go/service/ses\"",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/aws/aws-sdk-go/aws"
   },
   {
    "url": "http://github.com/aws/aws-sdk-go/aws/session"
   },
   {
    "url": "http://github.com/aws/aws-sdk-go/service/ses"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/renjiniravath",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/42031946?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/42031946?v=4&s=60",
   "displayName": "renjiniravath",
   "gv": "4",
   "id": "5c382114d73408ce4fb44dea",
   "url": "/renjiniravath",
   "username": "renjiniravath",
   "v": 1
  },
  "html": "these repos show 404 when fetched",
  "id": "5c3821eb5aa04d46c5903c26",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 33,
  "sent": "2019-01-11T04:56:11.336Z",
  "text": "these repos show 404 when fetched",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Wphelp98737",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20013090?v=4&s=60",
   "displayName": "Morteza Janjani",
   "gv": "4",
   "id": "586f82b9d73408ce4f41a600",
   "url": "/Wphelp98737",
   "username": "Wphelp98737",
   "v": 15
  },
  "html": "def method_missing(method_name, <em>_args, &amp;_block)<br>      return super unless association?(method_name)<br>      joins(method_name).select(&quot;#{method_name.to_s.pluralize}.</em>&quot;)<br>    end<pre><code><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">respond_to_missing?</span><span class=\"params\">(method_name, include_private = <span class=\"keyword\">false</span>)</span></span>\n  association?(method_name) || <span class=\"keyword\">super</span>\n<span class=\"keyword\">end</span>\n\nprivate\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">association?</span><span class=\"params\">(name)</span></span>\n  model.associations.key?(name.to_sym)\n<span class=\"keyword\">end</span></code></pre>",
  "id": "5c38629d317e2407cd146840",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 32,
  "sent": "2019-01-11T09:32:13.921Z",
  "text": "def method_missing(method_name, *_args, &_block)\n      return super unless association?(method_name)\n      joins(method_name).select(\"#{method_name.to_s.pluralize}.*\")\n    end\n\n    def respond_to_missing?(method_name, include_private = false)\n      association?(method_name) || super\n    end\n\n    private\n\n    def association?(name)\n      model.associations.key?(name.to_sym)\n    end",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/bciceron",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13997?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13997?v=4&s=60",
   "displayName": "bciceron",
   "gv": "4",
   "id": "5bd256ffd73408ce4facc8b7",
   "url": "/bciceron",
   "username": "bciceron",
   "v": 13
  },
  "html": "now that an ecs task can be triggered by a cloudwatch event (e.g s3 putobject), how do we access the content of the event ? ",
  "id": "5c3a57b9ba355012a42b8116",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2019-01-12T21:10:17.408Z",
  "text": "now that an ecs task can be triggered by a cloudwatch event (e.g s3 putobject), how do we access the content of the event ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-01-12T22:56:02.546Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/bciceron",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/13997?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/13997?v=4&s=60",
   "displayName": "bciceron",
   "gv": "4",
   "id": "5bd256ffd73408ce4facc8b7",
   "url": "/bciceron",
   "username": "bciceron",
   "v": 13
  },
  "html": " i.e how to get the s3 object.key from the rule target aka the triggered ecs task ?",
  "id": "5c3a6ea820b78635b6138c0d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 29,
  "sent": "2019-01-12T22:48:08.292Z",
  "text": " i.e how to get the s3 object.key from the rule target aka the triggered ecs task ?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/gurneetiitm_twitter",
   "avatarUrlMedium": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=128",
   "avatarUrlSmall": "https://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png?s=60",
   "displayName": "Gurneet Singh",
   "id": "5c46eb8bd73408ce4fb58b96",
   "url": "/gurneetiitm_twitter",
   "username": "gurneetiitm_twitter",
   "v": 1
  },
  "html": "How do I generate presigned url in aws go sdk for copying encrypted snapshot across regions?",
  "id": "5c46ebb635350772cf6ea101",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-01-22T10:08:54.548Z",
  "text": "How do I generate presigned url in aws go sdk for copying encrypted snapshot across regions?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/_sabarish__twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/839154442842710016/GvkCoye-.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/839154442842710016/GvkCoye-_bigger.jpg",
   "displayName": "Sabarish",
   "id": "59e47771d73408ce4f7a3535",
   "url": "/_sabarish__twitter",
   "username": "_sabarish__twitter",
   "v": 2
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"renjiniravath\" class=\"mention\">@renjiniravath</span> The repo is &quot;<a href=\"http://github.com/aws/aws-sdk-go\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go</a>&quot;, so if you are cloning should use &quot;git clone <a href=\"https://github.com/aws/aws-sdk-go.git\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go.git</a>&quot; ",
  "id": "5c4e98f554f21a71a1b99ca2",
  "issues": [],
  "mentions": [
   {
    "screenName": "renjiniravath",
    "userId": "5c382114d73408ce4fb44dea",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2019-01-28T05:53:57.694Z",
  "text": "@renjiniravath The repo is \"github.com/aws/aws-sdk-go\", so if you are cloning should use \"git clone https://github.com/aws/aws-sdk-go.git\" ",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/aws/aws-sdk-go"
   },
   {
    "url": "https://github.com/aws/aws-sdk-go.git"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Keshav-tokopedia",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/43811769?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/43811769?v=4&s=60",
   "displayName": "keshav-tokoepdia",
   "gv": "4",
   "id": "5c528eaad73408ce4fb66ed7",
   "url": "/Keshav-tokopedia",
   "username": "Keshav-tokopedia",
   "v": 1
  },
  "html": "Hi I am getting signature doesn&#39;t match error",
  "id": "5c528ec1f46373406a2b0187",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-01-31T05:59:29.479Z",
  "text": "Hi I am getting signature doesn't match error",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Keshav-tokopedia",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/43811769?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/43811769?v=4&s=60",
   "displayName": "keshav-tokoepdia",
   "gv": "4",
   "id": "5c528eaad73408ce4fb66ed7",
   "url": "/Keshav-tokopedia",
   "username": "Keshav-tokopedia",
   "v": 1
  },
  "html": "using go sdk",
  "id": "5c528ec98aa5ca5abf5d48f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-01-31T05:59:37.223Z",
  "text": "using go sdk",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Xtigyro",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11665162?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11665162?v=4&s=60",
   "displayName": "Miroslav E. Hadzhiev",
   "gv": "4",
   "id": "59625442d73408ce4f6c523e",
   "url": "/Xtigyro",
   "username": "Xtigyro",
   "v": 2
  },
  "html": "Hey folks! Could you help me find some examples re enabling AWS S3 bucket Server Access Logging?",
  "id": "5c56b69c975714406b885da8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-02-03T09:38:36.710Z",
  "text": "Hey folks! Could you help me find some examples re enabling AWS S3 bucket Server Access Logging?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Xtigyro",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11665162?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11665162?v=4&s=60",
   "displayName": "Miroslav E. Hadzhiev",
   "gv": "4",
   "id": "59625442d73408ce4f6c523e",
   "url": "/Xtigyro",
   "username": "Xtigyro",
   "v": 2
  },
  "html": "For reference purposes - I&#39;ve found these: <a href=\"https://github.com/aws/aws-sdk-go/blob/master/service/s3/examples_test.go#L1520\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/aws/aws-sdk-go/blob/master/service/s3/examples_test.go#L1520</a>",
  "id": "5c56c4e041775971a0cc5aeb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-02-03T10:39:28.424Z",
  "text": "For reference purposes - I've found these: https://github.com/aws/aws-sdk-go/blob/master/service/s3/examples_test.go#L1520",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/aws/aws-sdk-go/blob/master/service/s3/examples_test.go#L1520"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nikskiz",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16333907?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16333907?v=4&s=60",
   "displayName": "Nikola Sepentulevski",
   "gv": "4",
   "id": "5b7b80a1d73408ce4fa53ea7",
   "url": "/nikskiz",
   "username": "nikskiz",
   "v": 5
  },
  "html": "Is there a way I can get a username from a session created?",
  "id": "5c5777a6f04ef00644d5139a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-02-03T23:22:14.521Z",
  "text": "Is there a way I can get a username from a session created?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/onzyone",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2748191?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2748191?v=4&s=60",
   "displayName": "Jason Chinsen",
   "gv": "4",
   "id": "54d3bf1fdb8155e6700f7e6e",
   "url": "/onzyone",
   "username": "onzyone",
   "v": 3
  },
  "html": "Hello there, I am looking for a way to gen both ecs-params.yml and ecs service yaml files with go",
  "id": "5c584f1fceb5a2264f91c0cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-02-04T14:41:35.618Z",
  "text": "Hello there, I am looking for a way to gen both ecs-params.yml and ecs service yaml files with go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/onzyone",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2748191?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2748191?v=4&s=60",
   "displayName": "Jason Chinsen",
   "gv": "4",
   "id": "54d3bf1fdb8155e6700f7e6e",
   "url": "/onzyone",
   "username": "onzyone",
   "v": 3
  },
  "html": "<a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cmd-ecs-cli-compose-ecsparams.html\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cmd-ecs-cli-compose-ecsparams.html</a>",
  "id": "5c584f44f46373406a500f6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-02-04T14:42:12.138Z",
  "text": "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cmd-ecs-cli-compose-ecsparams.html",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cmd-ecs-cli-compose-ecsparams.html"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/onzyone",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2748191?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2748191?v=4&s=60",
   "displayName": "Jason Chinsen",
   "gv": "4",
   "id": "54d3bf1fdb8155e6700f7e6e",
   "url": "/onzyone",
   "username": "onzyone",
   "v": 3
  },
  "html": "I may also be going about it the wrong way :) ",
  "id": "5c5853a054f21a71a1f8f8da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-02-04T15:00:48.164Z",
  "text": "I may also be going about it the wrong way :) ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/onzyone",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/2748191?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/2748191?v=4&s=60",
   "displayName": "Jason Chinsen",
   "gv": "4",
   "id": "54d3bf1fdb8155e6700f7e6e",
   "url": "/onzyone",
   "username": "onzyone",
   "v": 3
  },
  "html": "I can see that I can likely use go templates ... ",
  "id": "5c58770d13a2814df61c37b3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-02-04T17:31:57.907Z",
  "text": "I can see that I can likely use go templates ... ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/abigailbeets-wk",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/43045765?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/43045765?v=4&s=60",
   "displayName": "Abigail Beets",
   "gv": "4",
   "id": "5c4b322ad73408ce4fb5ef1e",
   "url": "/abigailbeets-wk",
   "username": "abigailbeets-wk",
   "v": 7
  },
  "html": "Hi all, is it possible to generate a signedURL when using Upload instead of PutObjectRequest?",
  "id": "5c59d84b8aa5ca5abf8c3f8b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-02-05T18:39:07.333Z",
  "text": "Hi all, is it possible to generate a signedURL when using Upload instead of PutObjectRequest?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/abigailbeets-wk",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/43045765?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/43045765?v=4&s=60",
   "displayName": "Abigail Beets",
   "gv": "4",
   "id": "5c4b322ad73408ce4fb5ef1e",
   "url": "/abigailbeets-wk",
   "username": "abigailbeets-wk",
   "v": 7
  },
  "html": "I have some code that uploads to an S3 bucket. In order to use my PipeReader, I had to use Upload instead of PutObjectRequest<pre><code>    sess <span class=\"value\">:= session.<span class=\"function\">Must</span>(session.<span class=\"function\">NewSession</span>(&amp;aws.Config{Region: aws.<span class=\"function\">String</span>(os.<span class=\"function\">Getenv</span>(<span class=\"string\">\"AWS_REGION\"</span>))}))\n    uploader := s3manager.<span class=\"function\">NewUploader</span>(sess)\n    key := fmt.<span class=\"function\">Sprintf</span>(<span class=\"string\">\"/%s/%s\"</span>, folder, path)\n\n    uploadInput := s3manager.UploadInput{\n        Bucket:               aws.<span class=\"function\">String</span>(os.<span class=\"function\">Getenv</span>(<span class=\"string\">\"S3Bucket\"</span>)),\n        Key:                  aws.<span class=\"function\">String</span>(key),\n        Body:                 pr,\n        ServerSideEncryption: aws.<span class=\"function\">String</span>(<span class=\"string\">\"aws:kms\"</span>),\n        SSEKMSKeyId:          aws.<span class=\"function\">String</span>(os.<span class=\"function\">Getenv</span>(<span class=\"string\">\"KMSKeyID\"</span>)),\n    }\n\n    result, err := uploader.<span class=\"function\">Upload</span>(&amp;uploadInput)\n    if err != nil {\n        log.<span class=\"function\">Println</span>(err.<span class=\"function\">Error</span>())\n        return <span class=\"string\">\"\"</span>, errors.<span class=\"function\">New</span>(errorMessage)\n    }</span></code></pre>",
  "id": "5c59d8cbc2dba5382ee6e0a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-02-05T18:41:15.677Z",
  "text": "I have some code that uploads to an S3 bucket. In order to use my PipeReader, I had to use Upload instead of PutObjectRequest\n\n```\n\tsess := session.Must(session.NewSession(&aws.Config{Region: aws.String(os.Getenv(\"AWS_REGION\"))}))\n\tuploader := s3manager.NewUploader(sess)\n\tkey := fmt.Sprintf(\"/%s/%s\", folder, path)\n\n\tuploadInput := s3manager.UploadInput{\n\t\tBucket:               aws.String(os.Getenv(\"S3Bucket\")),\n\t\tKey:                  aws.String(key),\n\t\tBody:                 pr,\n\t\tServerSideEncryption: aws.String(\"aws:kms\"),\n\t\tSSEKMSKeyId:          aws.String(os.Getenv(\"KMSKeyID\")),\n\t}\n\n\tresult, err := uploader.Upload(&uploadInput)\n\tif err != nil {\n\t\tlog.Println(err.Error())\n\t\treturn \"\", errors.New(errorMessage)\n\t}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/abigailbeets-wk",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/43045765?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/43045765?v=4&s=60",
   "displayName": "Abigail Beets",
   "gv": "4",
   "id": "5c4b322ad73408ce4fb5ef1e",
   "url": "/abigailbeets-wk",
   "username": "abigailbeets-wk",
   "v": 7
  },
  "html": "Is there a way I can still generate a signed URL with this code?",
  "id": "5c59d8d9ca428b06455d4c53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2019-02-05T18:41:29.382Z",
  "text": "Is there a way I can still generate a signed URL with this code?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-02-08T17:30:36.120Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/vitaly-zdanevich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3514015?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3514015?v=4&s=60",
   "displayName": "Vitaly Zdanevich",
   "gv": "4",
   "id": "570bccd0187bb6f0eadeea9e",
   "url": "/vitaly-zdanevich",
   "username": "vitaly-zdanevich",
   "v": 14
  },
  "html": "<code>If LastEvaluatedKey is not empty, it does not necessarily mean that there\n    is more data in the result set. The only way to know when you have reached\n    the end of the result set is when LastEvaluatedKey is empty.</code>",
  "id": "5c5dbcb14003460b2d18f8ea",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-02-08T17:30:25.425Z",
  "text": "`If LastEvaluatedKey is not empty, it does not necessarily mean that there\n    is more data in the result set. The only way to know when you have reached\n    the end of the result set is when LastEvaluatedKey is empty.`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/vitaly-zdanevich",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/3514015?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/3514015?v=4&s=60",
   "displayName": "Vitaly Zdanevich",
   "gv": "4",
   "id": "570bccd0187bb6f0eadeea9e",
   "url": "/vitaly-zdanevich",
   "username": "vitaly-zdanevich",
   "v": 14
  },
  "html": "Hm...",
  "id": "5c5dbcbf126af75deb71d0be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-02-08T17:30:39.550Z",
  "text": "Hm...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/knrt10",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24803604?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24803604?v=4&s=60",
   "displayName": "Kautilya Tripathi",
   "gv": "4",
   "id": "58a0a69dd73408ce4f49d161",
   "url": "/knrt10",
   "username": "knrt10",
   "v": 17
  },
  "html": "I am using <code>svc.ReceiveMessage</code> on a different server and doing <code>svc.SendMessage</code> on a different server for golang. Problem is when I send the data to the consumer I have to restart the server again and again to consume the task sent. ",
  "id": "5c6411488328315dece943ba",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-02-13T12:44:56.539Z",
  "text": "I am using `svc.ReceiveMessage` on a different server and doing `svc.SendMessage` on a different server for golang. Problem is when I send the data to the consumer I have to restart the server again and again to consume the task sent. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-02-13T12:47:44.420Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/knrt10",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24803604?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24803604?v=4&s=60",
   "displayName": "Kautilya Tripathi",
   "gv": "4",
   "id": "58a0a69dd73408ce4f49d161",
   "url": "/knrt10",
   "username": "knrt10",
   "v": 17
  },
  "html": "<p>This is my consumer</p><pre><code>forever := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"typename\">bool</span>)\n<span class=\"keyword\">go</span> <span class=\"keyword\">func</span>() {\n        <span class=\"keyword\">var</span> data fileroute.TaskType\n        <span class=\"keyword\">for</span> i, d := <span class=\"keyword\">range</span> resultMessages.Messages {\n            <span class=\"keyword\">for</span> _, val := <span class=\"keyword\">range</span> d.MessageAttributes {\n                <span class=\"keyword\">if</span> err := data.UnmarshalBinary([]<span class=\"typename\">byte</span>(val.BinaryValue)); err != <span class=\"constant\">nil</span> {\n                    log.Fatalf(<span class=\"string\">\"Error in decoding message: %s\"</span>, err)\n                }\n\n            _, err = svc.DeleteMessage(&amp;sqs.DeleteMessageInput{\n                QueueUrl:      &amp;qurlCreated,\n                ReceiptHandle: resultMessages.Messages[i].ReceiptHandle,\n            })\n\n            <span class=\"keyword\">if</span> err != <span class=\"constant\">nil</span> {\n                fmt.Println(<span class=\"string\">\"Delete Error\"</span>, err)\n            }\n        }\n    }()\n\n    fmt.Println(<span class=\"string\">\" [*] Waiting for messages. To exit press CTRL+C\"</span>)\n    &lt;-forever</code></pre><p>it should automatically listen for new task sent. What is the problem? Can someone please help</p>",
  "id": "5c6411de253c2b5ea305ed50",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-02-13T12:47:26.858Z",
  "text": "This is my consumer\n\n```\nforever := make(chan bool)\ngo func() {\n\t\tvar data fileroute.TaskType\n\t\tfor i, d := range resultMessages.Messages {\n\t\t\tfor _, val := range d.MessageAttributes {\n\t\t\t\tif err := data.UnmarshalBinary([]byte(val.BinaryValue)); err != nil {\n\t\t\t\t\tlog.Fatalf(\"Error in decoding message: %s\", err)\n\t\t\t\t}\n\n\t\t\t_, err = svc.DeleteMessage(&sqs.DeleteMessageInput{\n\t\t\t\tQueueUrl:      &qurlCreated,\n\t\t\t\tReceiptHandle: resultMessages.Messages[i].ReceiptHandle,\n\t\t\t})\n\n\t\t\tif err != nil {\n\t\t\t\tfmt.Println(\"Delete Error\", err)\n\t\t\t}\n\t\t}\n\t}()\n\n\tfmt.Println(\" [*] Waiting for messages. To exit press CTRL+C\")\n\t<-forever\n```\n\nit should automatically listen for new task sent. What is the problem? Can someone please help",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/knrt10",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/24803604?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/24803604?v=4&s=60",
   "displayName": "Kautilya Tripathi",
   "gv": "4",
   "id": "58a0a69dd73408ce4f49d161",
   "url": "/knrt10",
   "username": "knrt10",
   "v": 17
  },
  "html": "And this is my resultMessages<pre><code>resultMessages, err <span class=\"value\">:= svc.<span class=\"function\">ReceiveMessage</span>(&amp;sqs.ReceiveMessageInput{\n        AttributeNames: []*string{\n            aws.<span class=\"function\">String</span>(sqs.MessageSystemAttributeNameSentTimestamp),\n        },\n        MessageAttributeNames: []*string{\n            aws.<span class=\"function\">String</span>(sqs.QueueAttributeNameAll),\n        },\n        QueueUrl:            &amp;qurlCreated,\n        MaxNumberOfMessages: aws.<span class=\"function\">Int64</span>(<span class=\"number\">10</span>),\n        VisibilityTimeout:   aws.<span class=\"function\">Int64</span>(<span class=\"number\">60</span>),\n        WaitTimeSeconds:     aws.<span class=\"function\">Int64</span>(<span class=\"number\">0</span>),\n    })</span></code></pre>",
  "id": "5c64121f8328315dece9498b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-02-13T12:48:31.707Z",
  "text": "And this is my resultMessages\n\n```\nresultMessages, err := svc.ReceiveMessage(&sqs.ReceiveMessageInput{\n\t\tAttributeNames: []*string{\n\t\t\taws.String(sqs.MessageSystemAttributeNameSentTimestamp),\n\t\t},\n\t\tMessageAttributeNames: []*string{\n\t\t\taws.String(sqs.QueueAttributeNameAll),\n\t\t},\n\t\tQueueUrl:            &qurlCreated,\n\t\tMaxNumberOfMessages: aws.Int64(10),\n\t\tVisibilityTimeout:   aws.Int64(60),\n\t\tWaitTimeSeconds:     aws.Int64(0),\n\t})\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/b-dean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3189231?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3189231?v=4&s=60",
   "displayName": "Ben Dean",
   "gv": "4",
   "id": "55f72f3a0fc9f982beb0abef",
   "url": "/b-dean",
   "username": "b-dean",
   "v": 26
  },
  "html": "Has anyone seen <code>DescribeInstances</code> give a <code>InvalidInstanceID.NotFound</code> on a newly created EC2 instance even <em>after</em> waiting until it exists with <code>WaitUntilInstanceExists</code>?",
  "id": "5c6da9bba7d733509d9b45e3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-02-20T19:25:47.770Z",
  "text": "Has anyone seen `DescribeInstances` give a `InvalidInstanceID.NotFound` on a newly created EC2 instance even _after_ waiting until it exists with `WaitUntilInstanceExists`?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/b-dean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3189231?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3189231?v=4&s=60",
   "displayName": "Ben Dean",
   "gv": "4",
   "id": "55f72f3a0fc9f982beb0abef",
   "url": "/b-dean",
   "username": "b-dean",
   "v": 26
  },
  "html": "I could certainly add some additional retry loop of sorts around <code>DescribeInstances</code>, but I thought that was the whole point of the waiters",
  "id": "5c6daa38c82c68509e0b8217",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2019-02-20T19:27:52.547Z",
  "text": "I could certainly add some additional retry loop of sorts around `DescribeInstances`, but I thought that was the whole point of the waiters",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/b-dean",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3189231?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3189231?v=4&s=60",
   "displayName": "Ben Dean",
   "gv": "4",
   "id": "55f72f3a0fc9f982beb0abef",
   "url": "/b-dean",
   "username": "b-dean",
   "v": 26
  },
  "html": "I made an issue about the question I asked earlier: <a target=\"_blank\" data-link-type=\"issue\" data-issue=\"2467\" href=\"https://github.com/aws/aws-sdk-go/issues/2467\" data-provider=\"github\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#2467</a>",
  "id": "5c6dba0be5eeec0d9b9b58e0",
  "issues": [
   {
    "number": "2467",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2019-02-20T20:35:23.128Z",
  "text": "I made an issue about the question I asked earlier: https://github.com/aws/aws-sdk-go/issues/2467",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ummarvali",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38433216?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38433216?v=4&s=60",
   "displayName": "ummarvali",
   "gv": "4",
   "id": "5c6e5a47d73408ce4fb8746f",
   "url": "/ummarvali",
   "username": "ummarvali",
   "v": 1
  },
  "html": "Hi",
  "id": "5c6e5a51e5eeec0d9b9f1c6d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-02-21T07:59:13.562Z",
  "text": "Hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/ummarvali",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38433216?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38433216?v=4&s=60",
   "displayName": "ummarvali",
   "gv": "4",
   "id": "5c6e5a47d73408ce4fb8746f",
   "url": "/ummarvali",
   "username": "ummarvali",
   "v": 1
  },
  "html": "any reference for install SKD and use AWS api service",
  "id": "5c6e5a91a378ef11f6153a31",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 28,
  "sent": "2019-02-21T08:00:17.527Z",
  "text": "any reference for install SKD and use AWS api service",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/sciabarra",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/542601?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/542601?v=4&s=60",
   "displayName": "Michele Sciabarra",
   "gv": "4",
   "id": "54bebd13db8155e6700ee0c7",
   "url": "/sciabarra",
   "username": "sciabarra",
   "v": 28
  },
  "html": "hello, I cannot figure out how to associate a public ip address with RunInstance ",
  "id": "5c6ff1e89155d45d90578305",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2019-02-22T12:58:16.399Z",
  "text": "hello, I cannot figure out how to associate a public ip address with RunInstance ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/abigailbeets-wk",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/43045765?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/43045765?v=4&s=60",
   "displayName": "Abigail Beets",
   "gv": "4",
   "id": "5c4b322ad73408ce4fb5ef1e",
   "url": "/abigailbeets-wk",
   "username": "abigailbeets-wk",
   "v": 7
  },
  "html": "Hi, I need to presign a request with signature v4. Here is my current code. I&#39;m not seeing how to add the v4 signature to what I have - can anyone provide insight?<pre><code>    cfg <span class=\"value\">:= aws.<span class=\"function\">NewConfig</span>().<span class=\"function\">WithRegion</span>(os.<span class=\"function\">Getenv</span>(<span class=\"string\">\"AWS_REGION\"</span>))\n    svc := s3.<span class=\"function\">New</span>(session.<span class=\"function\">New</span>(), cfg)\n\n    key := fmt.<span class=\"function\">Sprintf</span>(<span class=\"string\">\"/%s/%s\"</span>, folder, path)\n    params := &amp;s3.PutObjectInput{\n        Body:                 fileStream,\n        Bucket:               aws.<span class=\"function\">String</span>(os.<span class=\"function\">Getenv</span>(<span class=\"string\">\"S3Bucket\"</span>)),\n        Key:                  aws.<span class=\"function\">String</span>(key),\n        ServerSideEncryption: aws.<span class=\"function\">String</span>(<span class=\"string\">\"aws:kms\"</span>),\n        SSEKMSKeyId:          aws.<span class=\"function\">String</span>(os.<span class=\"function\">Getenv</span>(<span class=\"string\">\"KMSKeyID\"</span>)),\n    }\n\n    // url signature is wrong, need updated keyID\n    req, _ := svc.<span class=\"function\">PutObjectRequest</span>(params)\n    err := req.<span class=\"function\">Send</span>()\n    if err != nil {\n        errorMessage := fmt.<span class=\"function\">Sprintf</span>(<span class=\"string\">\"aws#UploadToS3 failed to generate PutObject request: %s\"</span>, err.<span class=\"function\">Error</span>())\n        log.<span class=\"function\">Println</span>(errorMessage)\n        return <span class=\"string\">\"\"</span>, errors.<span class=\"function\">New</span>(errorMessage)\n    }\n\n    // var signer = v4.<span class=\"function\">NewSigner</span>()\n\n    signedURL, err := req.<span class=\"function\">Presign</span>(<span class=\"number\">1</span> * time.Hour)\n    if err != nil {\n        errorMessage := fmt.<span class=\"function\">Sprintf</span>(<span class=\"string\">\"aws#UploadToS3 failed to generate signedURL: %s\"</span>, err.<span class=\"function\">Error</span>())\n        log.<span class=\"function\">Println</span>(errorMessage)\n        return <span class=\"string\">\"\"</span>, errors.<span class=\"function\">New</span>(errorMessage)\n    }</span></code></pre>",
  "id": "5c7040449e430b3086ad08d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2019-02-22T18:32:36.156Z",
  "text": "Hi, I need to presign a request with signature v4. Here is my current code. I'm not seeing how to add the v4 signature to what I have - can anyone provide insight?\n\n```\n\tcfg := aws.NewConfig().WithRegion(os.Getenv(\"AWS_REGION\"))\n\tsvc := s3.New(session.New(), cfg)\n\n\tkey := fmt.Sprintf(\"/%s/%s\", folder, path)\n\tparams := &s3.PutObjectInput{\n\t\tBody:                 fileStream,\n\t\tBucket:               aws.String(os.Getenv(\"S3Bucket\")),\n\t\tKey:                  aws.String(key),\n\t\tServerSideEncryption: aws.String(\"aws:kms\"),\n\t\tSSEKMSKeyId:          aws.String(os.Getenv(\"KMSKeyID\")),\n\t}\n\n\t// url signature is wrong, need updated keyID\n\treq, _ := svc.PutObjectRequest(params)\n\terr := req.Send()\n\tif err != nil {\n\t\terrorMessage := fmt.Sprintf(\"aws#UploadToS3 failed to generate PutObject request: %s\", err.Error())\n\t\tlog.Println(errorMessage)\n\t\treturn \"\", errors.New(errorMessage)\n\t}\n\n\t// var signer = v4.NewSigner()\n\n\tsignedURL, err := req.Presign(1 * time.Hour)\n\tif err != nil {\n\t\terrorMessage := fmt.Sprintf(\"aws#UploadToS3 failed to generate signedURL: %s\", err.Error())\n\t\tlog.Println(errorMessage)\n\t\treturn \"\", errors.New(errorMessage)\n\t}\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jay-dee7",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10788442?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10788442?v=4&s=60",
   "displayName": "Jasdeep Singh",
   "gv": "4",
   "id": "58b09722d73408ce4f4cb1ef",
   "url": "/jay-dee7",
   "username": "jay-dee7",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"all\" class=\"mention\">@all</span> guys can anyone suggest an approach for how to execute commands on the newly generated ec2 instances via the aws-go-sdk?",
  "id": "5c7808218a7def0752ef9800",
  "issues": [],
  "mentions": [
   {
    "screenName": "all",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 25,
  "sent": "2019-02-28T16:11:13.435Z",
  "text": "@all guys can anyone suggest an approach for how to execute commands on the newly generated ec2 instances via the aws-go-sdk?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jay-dee7",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10788442?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10788442?v=4&s=60",
   "displayName": "Jasdeep Singh",
   "gv": "4",
   "id": "58b09722d73408ce4f4cb1ef",
   "url": "/jay-dee7",
   "username": "jay-dee7",
   "v": 23
  },
  "html": "i&#39;m creating a new instance but along with provisioning it, i want to install few dependecies as well",
  "id": "5c7808472ca5ec5474550792",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2019-02-28T16:11:51.748Z",
  "text": "i'm creating a new instance but along with provisioning it, i want to install few dependecies as well",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/feartomorrow_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/2094750948/imfine.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/2094750948/imfine_bigger.jpg",
   "displayName": "soup",
   "id": "5a68d81cd73408ce4f89f582",
   "url": "/feartomorrow_twitter",
   "username": "feartomorrow_twitter",
   "v": 1
  },
  "html": "pass sh to the instance with the userdata",
  "id": "5c7823332ca5ec547455d2e2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-02-28T18:06:43.669Z",
  "text": "pass sh to the instance with the userdata",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jay-dee7",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10788442?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10788442?v=4&s=60",
   "displayName": "Jasdeep Singh",
   "gv": "4",
   "id": "58b09722d73408ce4f4cb1ef",
   "url": "/jay-dee7",
   "username": "jay-dee7",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"feartomorrow_twitter\" class=\"mention\">@feartomorrow_twitter</span> i tried userdata option and it worked flawlessly",
  "id": "5c78237b212d0c1e1aaf348c",
  "issues": [],
  "mentions": [
   {
    "screenName": "feartomorrow_twitter",
    "userId": "5a68d81cd73408ce4f89f582",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 27,
  "sent": "2019-02-28T18:07:55.582Z",
  "text": "@feartomorrow_twitter i tried userdata option and it worked flawlessly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jay-dee7",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10788442?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10788442?v=4&s=60",
   "displayName": "Jasdeep Singh",
   "gv": "4",
   "id": "58b09722d73408ce4f4cb1ef",
   "url": "/jay-dee7",
   "username": "jay-dee7",
   "v": 23
  },
  "html": "i wonder there&#39;s another package named ssm",
  "id": "5c7823d64a65f75473411def",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-02-28T18:09:26.060Z",
  "text": "i wonder there's another package named ssm",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-02-28T18:09:44.420Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jay-dee7",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10788442?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10788442?v=4&s=60",
   "displayName": "Jasdeep Singh",
   "gv": "4",
   "id": "58b09722d73408ce4f4cb1ef",
   "url": "/jay-dee7",
   "username": "jay-dee7",
   "v": 23
  },
  "html": "<pre><code>c <span class=\"value\">:= ssm.<span class=\"function\">New</span>(config)\n    resp, err := c.<span class=\"function\">SendCommand</span>(&amp;ssm.SendCommandInput{\n        InstanceIds: aws.<span class=\"function\">StringSlice</span>(instanceIDs),\n        DocumentName: aws.<span class=\"function\">String</span>(<span class=\"string\">\"run.sh\"</span>),\n    })</span></code></pre>",
  "id": "5c7823dc8a7def0752f0466d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-02-28T18:09:32.918Z",
  "text": "```\nc := ssm.New(config)\n\tresp, err := c.SendCommand(&ssm.SendCommandInput{\n\t\tInstanceIds: aws.StringSlice(instanceIDs),\n\t\tDocumentName: aws.String(\"run.sh\"),\n\t})\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jay-dee7",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/10788442?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/10788442?v=4&s=60",
   "displayName": "Jasdeep Singh",
   "gv": "4",
   "id": "58b09722d73408ce4f4cb1ef",
   "url": "/jay-dee7",
   "username": "jay-dee7",
   "v": 23
  },
  "html": "would this work too?",
  "id": "5c7823f847276019e993e840",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-02-28T18:10:00.261Z",
  "text": "would this work too?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/ilyaglow",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/1165242?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/1165242?v=4&s=60",
   "displayName": "Ilya Glotov",
   "gv": "4",
   "id": "58035dfbd73408ce4f2e96c0",
   "url": "/ilyaglow",
   "username": "ilyaglow",
   "v": 19
  },
  "html": "Hey anyone, I&#39;d like to write a library for <a href=\"https://docs.aws.amazon.com/AlexaWebInfoService/latest/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">Alexa Web Information Service</a> and I wonder if aws-sdk-go can help me somehow. I see that the code of services in the repo is generated automatically, but can&#39;t really figure out if it&#39;s applicable for AWIS case.",
  "id": "5c7a5d3dcbebcf784a28b1d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2019-03-02T10:38:53.925Z",
  "text": "Hey anyone, I'd like to write a library for [Alexa Web Information Service](https://docs.aws.amazon.com/AlexaWebInfoService/latest/) and I wonder if aws-sdk-go can help me somehow. I see that the code of services in the repo is generated automatically, but can't really figure out if it's applicable for AWIS case.",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/AlexaWebInfoService/latest/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/hopedata",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/15862063?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/15862063?v=4&s=60",
   "displayName": "Tim",
   "gv": "4",
   "id": "5c69bfedd73408ce4fb8113c",
   "url": "/hopedata",
   "username": "hopedata",
   "v": 3
  },
  "html": "Hi. I have a question about the API models in the distribution. I see (and ran) the gen-test makefile target, which generates some protocol tests, but that doesn&#39;t appear to cover any of the APIs, though the API models look like they&#39;re intended for that. (e.g. models/apis/s3/2006-03-01/api-2.json) Are there model-based tests for the APIs (and they&#39;re AWS internal perhaps), or are they planned? ",
  "id": "5c7cb42b53efa91203ac7e7a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2019-03-04T05:14:19.536Z",
  "text": "Hi. I have a question about the API models in the distribution. I see (and ran) the gen-test makefile target, which generates some protocol tests, but that doesn't appear to cover any of the APIs, though the API models look like they're intended for that. (e.g. models/apis/s3/2006-03-01/api-2.json) Are there model-based tests for the APIs (and they're AWS internal perhaps), or are they planned? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/danielpsf",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3307367?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3307367?v=4&s=60",
   "displayName": "Daniel Fernandes",
   "gv": "4",
   "id": "561fe65e16b6c7089cb71e98",
   "url": "/danielpsf",
   "username": "danielpsf",
   "v": 5
  },
  "html": "<p>Hey there, question:</p><p>1) Do I need to use aws-sdk-go-v2 to use Go Mod?<br>2) I did migrate to aws-sdk-go-v2, now I lost support to X-Ray, is there news from AWS side of things for when they\u2019ll introduce Client support for X-Ray on aws-sdk-go-v2?</p>",
  "id": "5c7e8c9565ffa019ea8fc582",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2019-03-05T14:49:57.148Z",
  "text": "Hey there, question:\n\n1) Do I need to use aws-sdk-go-v2 to use Go Mod?\n2) I did migrate to aws-sdk-go-v2, now I lost support to X-Ray, is there news from AWS side of things for when they\u2019ll introduce Client support for X-Ray on aws-sdk-go-v2?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gcrawfordking",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26099339?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26099339?v=4&s=60",
   "displayName": "Crawford King",
   "gv": "4",
   "id": "5c7f30abd73408ce4fb9c1a6",
   "url": "/gcrawfordking",
   "username": "gcrawfordking",
   "v": 1
  },
  "html": "Hi I&#39;m having lots of trouble using the boolean data type. I&#39;m trying to make a query print in descending order, using the ScanIndexForward property, trying to set it to false. ",
  "id": "5c7f30e68f294b134af59c98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2019-03-06T02:31:02.819Z",
  "text": "Hi I'm having lots of trouble using the boolean data type. I'm trying to make a query print in descending order, using the ScanIndexForward property, trying to set it to false. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gcrawfordking",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/26099339?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/26099339?v=4&s=60",
   "displayName": "Crawford King",
   "gv": "4",
   "id": "5c7f30abd73408ce4fb9c1a6",
   "url": "/gcrawfordking",
   "username": "gcrawfordking",
   "v": 1
  },
  "html": "  params := &amp;dynamodb.QueryInput{<br>    TableName:              aws.String(&quot;Products3&quot;),<br>    ScanIndexForward:       aws.String(&quot;:bool&quot;),<br>    KeyConditionExpression: aws.String(&quot;#s = :status&quot;),<br>    ExpressionAttributeNames: map[string]<em>string{<br>      &quot;#s&quot;: aws.String(&quot;Status&quot;)},<br>    ExpressionAttributeValues: map[string]</em>dynamodb.AttributeValue{<br>      &quot;:status&quot;: { S: aws.String(&quot;OK&quot;),},<br>      &quot;:bool&quot;: { BOOL: aws.String(&quot;0&quot;),},<br>    },<br>  }",
  "id": "5c7f3111d3b35423cb700ee0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2019-03-06T02:31:45.184Z",
  "text": "  params := &dynamodb.QueryInput{\n    TableName:              aws.String(\"Products3\"),\n    ScanIndexForward:       aws.String(\":bool\"),\n    KeyConditionExpression: aws.String(\"#s = :status\"),\n    ExpressionAttributeNames: map[string]*string{\n      \"#s\": aws.String(\"Status\")},\n    ExpressionAttributeValues: map[string]*dynamodb.AttributeValue{\n      \":status\": { S: aws.String(\"OK\"),},\n      \":bool\": { BOOL: aws.String(\"0\"),},\n    },\n  }\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/videte47",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18494956?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18494956?v=4&s=60",
   "displayName": "gmo",
   "gv": "4",
   "id": "58081419d73408ce4f2f7947",
   "url": "/videte47",
   "username": "videte47",
   "v": 4
  },
  "html": "Hello all, quick question I am unable to find the API that allows me to get my aws account limits",
  "id": "5c8577870a6b9151630a0f92",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2019-03-10T20:45:59.345Z",
  "text": "Hello all, quick question I am unable to find the API that allows me to get my aws account limits",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/videte47",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/18494956?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/18494956?v=4&s=60",
   "displayName": "gmo",
   "gv": "4",
   "id": "58081419d73408ce4f2f7947",
   "url": "/videte47",
   "username": "videte47",
   "v": 4
  },
  "html": "Am I missing something really obvious?",
  "id": "5c85779ec8e5bc51621c99f1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2019-03-10T20:46:22.319Z",
  "text": "Am I missing something really obvious?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/g/u/smartinez3_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/7d0a40f47e7bb049ee9d68a675540a61?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/7d0a40f47e7bb049ee9d68a675540a61?s=60&d=identicon",
   "displayName": "Santiago Martinez",
   "id": "5c87c00dd73408ce4fba6766",
   "url": "/smartinez3_gitlab",
   "username": "smartinez3_gitlab",
   "v": 1
  },
  "html": "hello, in dynamodb how can I get the last element of a list using the getItem or the query?",
  "id": "5c87c5baac408e119249d0dd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2019-03-12T14:44:10.634Z",
  "text": "hello, in dynamodb how can I get the last element of a list using the getItem or the query?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Rajags",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/21356146?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/21356146?v=4&s=60",
   "displayName": "Rajags",
   "gv": "4",
   "id": "5c87e176d73408ce4fba6bd3",
   "url": "/Rajags",
   "username": "Rajags",
   "v": 3
  },
  "html": "hi",
  "id": "5c87e17cac408e11924aa7da",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-03-12T16:42:36.013Z",
  "text": "hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Rajags",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/21356146?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/21356146?v=4&s=60",
   "displayName": "Rajags",
   "gv": "4",
   "id": "5c87e176d73408ce4fba6bd3",
   "url": "/Rajags",
   "username": "Rajags",
   "v": 3
  },
  "html": "quick question i am unable to download s3 bucket under sub folder ",
  "id": "5c87e1bb0a6b9151631a41b4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-03-12T16:43:39.912Z",
  "text": "quick question i am unable to download s3 bucket under sub folder ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Rajags",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/21356146?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/21356146?v=4&s=60",
   "displayName": "Rajags",
   "gv": "4",
   "id": "5c87e176d73408ce4fba6bd3",
   "url": "/Rajags",
   "username": "Rajags",
   "v": 3
  },
  "html": "can you help me out from this issue",
  "id": "5c87e1f1293ac75db595fad3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-03-12T16:44:33.609Z",
  "text": "can you help me out from this issue",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Rajags",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/21356146?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/21356146?v=4&s=60",
   "displayName": "Rajags",
   "gv": "4",
   "id": "5c87e176d73408ce4fba6bd3",
   "url": "/Rajags",
   "username": "Rajags",
   "v": 3
  },
  "html": "hello ",
  "id": "5c87e247f895944c0882c482",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-03-12T16:45:59.428Z",
  "text": "hello ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Rajags",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/21356146?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/21356146?v=4&s=60",
   "displayName": "Rajags",
   "gv": "4",
   "id": "5c87e176d73408ce4fba6bd3",
   "url": "/Rajags",
   "username": "Rajags",
   "v": 3
  },
  "html": "anybody is there?",
  "id": "5c87e24d1fae6423ca73763b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-03-12T16:46:05.830Z",
  "text": "anybody is there?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "What exactly doesn&#39;t work as expected?",
  "id": "5c882c85bf7990126e925faa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 27,
  "sent": "2019-03-12T22:02:45.656Z",
  "text": "What exactly doesn't work as expected?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Rajags",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/21356146?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/21356146?v=4&s=60",
   "displayName": "Rajags",
   "gv": "4",
   "id": "5c87e176d73408ce4fba6bd3",
   "url": "/Rajags",
   "username": "Rajags",
   "v": 3
  },
  "html": "i unable to download s3 folder",
  "id": "5c89e49a85ec5665f3f29c72",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2019-03-14T05:20:26.512Z",
  "text": "i unable to download s3 folder",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "S3 doesn&#39;t have any concept of folders, it&#39;s just a  key/value  store that happens to keep files, the objects are defined by the full path ",
  "id": "5c8c063b8126720abceb3fa5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-03-15T20:08:27.295Z",
  "text": "S3 doesn't have any concept of folders, it's just a  key/value  store that happens to keep files, the objects are defined by the full path ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "The folders you have in the aws console and CLI are based on the key prefix when iterating over a listing ",
  "id": "5c8c06aba21ce51a2067ac88",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-03-15T20:10:19.842Z",
  "text": "The folders you have in the aws console and CLI are based on the key prefix when iterating over a listing ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "You would have to do it similarly ",
  "id": "5c8c072edfc69a14549d7b3d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-03-15T20:12:30.089Z",
  "text": "You would have to do it similarly ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/venusDeveleper1202",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/47501016?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/47501016?v=4&s=60",
   "displayName": "venusDeveleper1202",
   "gv": "4",
   "id": "5c8ecb03d73408ce4fbaf21b",
   "url": "/venusDeveleper1202",
   "username": "venusDeveleper1202",
   "v": 1
  },
  "html": "Hello everyone",
  "id": "5c8ecb0e52c7a91455afd99d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-03-17T22:32:46.613Z",
  "text": "Hello everyone",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/venusDeveleper1202",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/47501016?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/47501016?v=4&s=60",
   "displayName": "venusDeveleper1202",
   "gv": "4",
   "id": "5c8ecb03d73408ce4fbaf21b",
   "url": "/venusDeveleper1202",
   "username": "venusDeveleper1202",
   "v": 1
  },
  "html": "I want to read json file from s3 bucket in aws golang lambda.",
  "id": "5c8ecb4449fdaa0d81cfd0a0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-03-17T22:33:40.678Z",
  "text": "I want to read json file from s3 bucket in aws golang lambda.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/venusDeveleper1202",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/47501016?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/47501016?v=4&s=60",
   "displayName": "venusDeveleper1202",
   "gv": "4",
   "id": "5c8ecb03d73408ce4fbaf21b",
   "url": "/venusDeveleper1202",
   "username": "venusDeveleper1202",
   "v": 1
  },
  "html": "But I&#39;m not sure if I should download file or read file from s3.",
  "id": "5c8ecb608126720abcfc7a70",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-03-17T22:34:08.271Z",
  "text": "But I'm not sure if I should download file or read file from s3.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/venusDeveleper1202",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/47501016?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/47501016?v=4&s=60",
   "displayName": "venusDeveleper1202",
   "gv": "4",
   "id": "5c8ecb03d73408ce4fbaf21b",
   "url": "/venusDeveleper1202",
   "username": "venusDeveleper1202",
   "v": 1
  },
  "html": "Please help me",
  "id": "5c8ecb63a21ce51a2078faf4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-03-17T22:34:11.581Z",
  "text": "Please help me",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-03-17T22:35:02.099Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/venusDeveleper1202",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/47501016?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/47501016?v=4&s=60",
   "displayName": "venusDeveleper1202",
   "gv": "4",
   "id": "5c8ecb03d73408ce4fbaf21b",
   "url": "/venusDeveleper1202",
   "username": "venusDeveleper1202",
   "v": 1
  },
  "html": "How can read json file from s3 bucket in aws golang lambda?",
  "id": "5c8ecb93dfc69a1454aed267",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-03-17T22:34:59.804Z",
  "text": "How can read json file from s3 bucket in aws golang lambda?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "You will need to download the object to the Lambda temporary filesystem, then once you have the file locally you open it and read it as with any file ",
  "id": "5c8ff4c20d7190505727a82d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-03-18T19:42:58.161Z",
  "text": "You will need to download the object to the Lambda temporary filesystem, then once you have the file locally you open it and read it as with any file ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<a href=\"https://github.com/awsdocs/aws-doc-sdk-examples/blob/master/go/example_code/s3/s3_download_object.go\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/awsdocs/aws-doc-sdk-examples/blob/master/go/example_code/s3/s3_download_object.go</a>",
  "id": "5c8ff586dfc69a1454b68a4a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2019-03-18T19:46:14.519Z",
  "text": "https://github.com/awsdocs/aws-doc-sdk-examples/blob/master/go/example_code/s3/s3_download_object.go",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/awsdocs/aws-doc-sdk-examples/blob/master/go/example_code/s3/s3_download_object.go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/krishnavaltix",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/47334064?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/47334064?v=4&s=60",
   "displayName": "krishnavaltix",
   "gv": "4",
   "id": "5c919165d73408ce4fbb3016",
   "url": "/krishnavaltix",
   "username": "krishnavaltix",
   "v": 1
  },
  "html": "<p>Hello, I am trying to read the json generated by CloudTrail events back into GO structs. However there are no json tags in the generated struct, can this be added?<br>type StartInstancesOutput struct {<br>    _ struct{} <code>type:&quot;structure&quot;</code></p><pre><code><span class=\"comment\">// Information about one or more started instances.</span>\nStartingInstances []*InstanceStateChange `<span class=\"string\">locationName:</span><span class=\"string\">\"instancesSet\"</span> <span class=\"string\">locationNameList:</span><span class=\"string\">\"item\"</span> <span class=\"string\">type:</span><span class=\"string\">\"list\"</span>`</code></pre><p>}</p>",
  "id": "5c919ff59d9cc8114aec3792",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-03-20T02:05:41.479Z",
  "text": "Hello, I am trying to read the json generated by CloudTrail events back into GO structs. However there are no json tags in the generated struct, can this be added?\ntype StartInstancesOutput struct {\n\t_ struct{} `type:\"structure\"`\n\n\t// Information about one or more started instances.\n\tStartingInstances []*InstanceStateChange `locationName:\"instancesSet\" locationNameList:\"item\" type:\"list\"`\n}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/krishnavaltix",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/47334064?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/47334064?v=4&s=60",
   "displayName": "krishnavaltix",
   "gv": "4",
   "id": "5c919165d73408ce4fbb3016",
   "url": "/krishnavaltix",
   "username": "krishnavaltix",
   "v": 1
  },
  "html": "The code generator has to generate the following instead of the above<br>StartingInstances []*InstanceStateChange <code>locationName:&quot;instancesSet&quot; locationNameList:&quot;item&quot; type:&quot;list&quot; json:instancesSet</code>",
  "id": "5c91a10a9d9cc8114aec4180",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2019-03-20T02:10:18.587Z",
  "text": "The code generator has to generate the following instead of the above\nStartingInstances []*InstanceStateChange `locationName:\"instancesSet\" locationNameList:\"item\" type:\"list\" json:instancesSet`\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Soldi3r86",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/13217657?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/13217657?v=4&s=60",
   "displayName": "Zainul",
   "gv": "4",
   "id": "5c922114d73408ce4fbb3cae",
   "url": "/Soldi3r86",
   "username": "Soldi3r86",
   "v": 3
  },
  "html": "Hi, is anyone there ?",
  "id": "5c9225046a3d2e230df57552",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2019-03-20T11:33:24.831Z",
  "text": "Hi, is anyone there ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/pulpfree",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/589916?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/589916?v=4&s=60",
   "displayName": "Ron Dyck",
   "gv": "4",
   "id": "532de20b5e986b0712eff773",
   "url": "/pulpfree",
   "username": "pulpfree",
   "v": 7
  },
  "html": "Is it possible to search for Keys with a wildcard? I.E.: Sample*",
  "id": "5c924ce2dfc69a1454c67399",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 25,
  "sent": "2019-03-20T14:23:30.800Z",
  "text": "Is it possible to search for Keys with a wildcard? I.E.: Sample*",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/someword",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/225537?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/225537?v=4&s=60",
   "displayName": "Derek Olsen",
   "gv": "4",
   "id": "5a9067fcd73408ce4f8e8cb3",
   "url": "/someword",
   "username": "someword",
   "v": 3
  },
  "html": "I&#39;m new to go and aws-sdk-go.  I have created a simple setup that will return a given ec2 host that matches specific tags/state which works fine.   When i added the unit tests the filters are not being applied to the describeinstances query and i&#39;m at a loss as to what i did wrong.   The code is here <a href=\"https://github.com/someword/aws-sdk-unit-test\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/someword/aws-sdk-unit-test</a>  - any tips appreciated",
  "id": "5c9267038aa66959b6411b98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2019-03-20T16:14:59.808Z",
  "text": "I'm new to go and aws-sdk-go.  I have created a simple setup that will return a given ec2 host that matches specific tags/state which works fine.   When i added the unit tests the filters are not being applied to the describeinstances query and i'm at a loss as to what i did wrong.   The code is here https://github.com/someword/aws-sdk-unit-test  - any tips appreciated",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/someword/aws-sdk-unit-test"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/joshdegraw",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/28817459?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/28817459?v=4&s=60",
   "displayName": "Josh DeGraw",
   "gv": "4",
   "id": "5c983ecfd73408ce4fbbaf10",
   "url": "/joshdegraw",
   "username": "joshdegraw",
   "v": 1
  },
  "html": "I&#39;m a bit confused on how to launch an EC2 from a launch template. Can anybody point me to an example of this?",
  "id": "5c983ee23dd817114947fc44",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2019-03-25T02:37:22.106Z",
  "text": "I'm a bit confused on how to launch an EC2 from a launch template. Can anybody point me to an example of this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/vvhuang0909",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16496089?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16496089?v=4&s=60",
   "displayName": "vvhuang0909",
   "gv": "4",
   "id": "5c99ef8bd73408ce4fbbd6e5",
   "url": "/vvhuang0909",
   "username": "vvhuang0909",
   "v": 3
  },
  "html": "hello, i wanna ask if it`s possible to directly write to a file that uploaded to the S3 before ? if possible, use whic API ? ",
  "id": "5c99f007dfc69a1454f96b24",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2019-03-26T09:25:27.072Z",
  "text": "hello, i wanna ask if it`s possible to directly write to a file that uploaded to the S3 before ? if possible, use whic API ? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "You can only upload it from scratch and overwrite the existing object ",
  "id": "5c9b70338126720abc508e90",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2019-03-27T12:44:35.101Z",
  "text": "You can only upload it from scratch and overwrite the existing object ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "with versioning enabled the old version would still be kept",
  "id": "5c9b70745636de703ded34d6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 24,
  "sent": "2019-03-27T12:45:40.406Z",
  "text": "with versioning enabled the old version would still be kept",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/prfcttone_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/6da900dfbeae200cda8129945bb434b1?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/6da900dfbeae200cda8129945bb434b1?s=60&d=identicon",
   "displayName": "Andrew Martin Farias",
   "id": "5c9b6c72d73408ce4fbbf8cc",
   "url": "/prfcttone_gitlab",
   "username": "prfcttone_gitlab",
   "v": 2
  },
  "html": "Hello",
  "id": "5c9b733a5636de703ded47fd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2019-03-27T12:57:30.000Z",
  "text": "Hello",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/subodh-dharma",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/12895450?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/12895450?v=4&s=60",
   "displayName": "Subodh Dharmadhikari",
   "gv": "4",
   "id": "574099cac43b8c601974307b",
   "url": "/subodh-dharma",
   "username": "subodh-dharma",
   "v": 6
  },
  "html": "Hello there, I am new at using the aws go-sdk, Is there any way to set the AWS credentials in the environment, I dont want to store the variables on the server in a file at well known location. ",
  "id": "5c9ea233b6711251984def13",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2019-03-29T22:54:43.752Z",
  "text": "Hello there, I am new at using the aws go-sdk, Is there any way to set the AWS credentials in the environment, I dont want to store the variables on the server in a file at well known location. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "The usual environment variables supported by the AWS SDKs for other programming language work as well ",
  "id": "5c9f25d83ebbdc55b32f3b95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2019-03-30T08:16:24.882Z",
  "text": "The usual environment variables supported by the AWS SDKs for other programming language work as well ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/leelak77",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/49150364?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/49150364?v=4&s=60",
   "displayName": "leelak77",
   "gv": "4",
   "id": "5ca1e277d73408ce4fbc6d3d",
   "url": "/leelak77",
   "username": "leelak77",
   "v": 1
  },
  "html": "HI ,",
  "id": "5ca1e2b331aec969e83335fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2019-04-01T10:06:43.114Z",
  "text": "HI ,",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/leelak77",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/49150364?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/49150364?v=4&s=60",
   "displayName": "leelak77",
   "gv": "4",
   "id": "5ca1e277d73408ce4fbc6d3d",
   "url": "/leelak77",
   "username": "leelak77",
   "v": 1
  },
  "html": "I need one clarification  AWS -how to get list all resources in particular regions using api?",
  "id": "5ca1e2e71f6e900d5ebc9cef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2019-04-01T10:07:35.513Z",
  "text": "I need one clarification  AWS -how to get list all resources in particular regions using api?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/leelak77",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/49150364?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/49150364?v=4&s=60",
   "displayName": "leelak77",
   "gv": "4",
   "id": "5ca1e277d73408ce4fbc6d3d",
   "url": "/leelak77",
   "username": "leelak77",
   "v": 1
  },
  "html": "could you please some one will help for this?",
  "id": "5ca1e2ffbd70a40d5fd8359a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2019-04-01T10:07:59.469Z",
  "text": "could you please some one will help for this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-04-03T19:00:52.228Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tmccoy14",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/44643066?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/44643066?v=4&s=60",
   "displayName": "Tucker McCoy",
   "gv": "4",
   "id": "5ca50151d73408ce4fbcb95d",
   "url": "/tmccoy14",
   "username": "tmccoy14",
   "v": 1
  },
  "html": "Cloud anyone please help me with using the costexplorer api? I am trying to use GetReservationCoverage but I keep getting invalid parameter. Could anyone assist me with how to format GetReservationCoverageInput with a parameter please?",
  "id": "5ca501ab93fb4a7dc2cb42d8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-04-03T18:55:39.611Z",
  "text": "Cloud anyone please help me with using the costexplorer api? I am trying to use GetReservationCoverage but I keep getting invalid parameter. Could anyone assist me with how to format GetReservationCoverageInput with a parameter please?",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/tmccoy14",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/44643066?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/44643066?v=4&s=60",
   "displayName": "Tucker McCoy",
   "gv": "4",
   "id": "5ca50151d73408ce4fbcb95d",
   "url": "/tmccoy14",
   "username": "tmccoy14",
   "v": 1
  },
  "html": "Or really any with a parameter would help me out",
  "id": "5ca503005a83c30a4605d2a1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2019-04-03T19:01:20.477Z",
  "text": "Or really any with a parameter would help me out",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/petrogdev",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1915276?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1915276?v=4&s=60",
   "displayName": "Petro Gorobchenko",
   "gv": "4",
   "id": "5ca58051d73408ce4fbcc087",
   "url": "/petrogdev",
   "username": "petrogdev",
   "v": 1
  },
  "html": "does anyone has a good example of invoking a lambda from lambda?<br>Im most likely very blind, but not able to find anything out there.",
  "id": "5ca586b5b34ccd69e7604a05",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-04-04T04:23:17.221Z",
  "text": "does anyone has a good example of invoking a lambda from lambda?\nIm most likely very blind, but not able to find anything out there.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-04-04T13:31:33.183Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Sanji515",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/32524438?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/32524438?v=4&s=60",
   "displayName": "Sanjeev Singh",
   "gv": "4",
   "id": "5b7c1825d73408ce4fa54d18",
   "url": "/Sanji515",
   "username": "Sanji515",
   "v": 11
  },
  "html": "Hello guys,<br>I&#39;ve a project which I deployed using  Lightsail service of Amazon, now I used <code>CodePipeline</code> to deploy my from <code>Github</code> but I want to know where it upload my code from <code>Github</code>",
  "id": "5ca6061493fb4a7dc2d228be",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2019-04-04T13:26:44.488Z",
  "text": "Hello guys,\nI've a project which I deployed using  Lightsail service of Amazon, now I used `CodePipeline` to deploy my from `Github` but I want to know where it upload my code from `Github`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"petrogdev\" class=\"mention\">@petrogdev</span> I just wrote such a thing in python a few weeks ago, I can share that, should be easy to port it to go or maybe just use it as it is ",
  "id": "5ca60930a84e0c501ad5bacf",
  "issues": [],
  "mentions": [
   {
    "screenName": "petrogdev",
    "userId": "5ca58051d73408ce4fbcc087",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2019-04-04T13:40:00.672Z",
  "text": "@petrogdev I just wrote such a thing in python a few weeks ago, I can share that, should be easy to port it to go or maybe just use it as it is ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "AutoSpotting/cloudformation/stacks/AutoSpotting/regional_template.yaml",
  "id": "5ca609941f6e900d5ed97cc8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2019-04-04T13:41:40.266Z",
  "text": "AutoSpotting/cloudformation/stacks/AutoSpotting/regional_template.yaml",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Sorry, <a href=\"https://raw.githubusercontent.com/AutoSpotting/AutoSpotting/a6b13719ff55fe82448ee5aa80a07757e1d77a59/cloudformation/stacks/AutoSpotting/regional_template.yaml\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://raw.githubusercontent.com/AutoSpotting/AutoSpotting/a6b13719ff55fe82448ee5aa80a07757e1d77a59/cloudformation/stacks/AutoSpotting/regional_template.yaml</a>",
  "id": "5ca609c1016a930a4560e5c0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 26,
  "sent": "2019-04-04T13:42:25.232Z",
  "text": "Sorry, https://raw.githubusercontent.com/AutoSpotting/AutoSpotting/a6b13719ff55fe82448ee5aa80a07757e1d77a59/cloudformation/stacks/AutoSpotting/regional_template.yaml",
  "unread": false,
  "urls": [
   {
    "url": "https://raw.githubusercontent.com/AutoSpotting/AutoSpotting/a6b13719ff55fe82448ee5aa80a07757e1d77a59/cloudformation/stacks/AutoSpotting/regional_template.yaml"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/petrogdev",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1915276?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1915276?v=4&s=60",
   "displayName": "Petro Gorobchenko",
   "gv": "4",
   "id": "5ca58051d73408ce4fbcc087",
   "url": "/petrogdev",
   "username": "petrogdev",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span> - thanks for replying and sharing. Will definitely review and see if I can utilize it.  ",
  "id": "5ca609fdc55bd14d3589e6a4",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 26,
  "sent": "2019-04-04T13:43:25.398Z",
  "text": "@cristim - thanks for replying and sharing. Will definitely review and see if I can utilize it.  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-04-05T17:44:20.190Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Sanji515",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/32524438?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/32524438?v=4&s=60",
   "displayName": "Sanjeev Singh",
   "gv": "4",
   "id": "5b7c1825d73408ce4fa54d18",
   "url": "/Sanji515",
   "username": "Sanji515",
   "v": 11
  },
  "html": "<p>Hii,<br>I&#39;m getting this error  when I tried to ssh on my window machine the <code>ubuntu 18.04 AMI</code></p><p><code>Disconnected: No supported authentication methods available (server sent: publickey)</code><br>please help someone?</p>",
  "id": "5ca793d28148e555b254bf29",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-04-05T17:43:46.846Z",
  "text": "Hii,\nI'm getting this error  when I tried to ssh on my window machine the `ubuntu 18.04 AMI`\n\n`Disconnected: No supported authentication methods available (server sent: publickey)`\nplease help someone?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/petrogdev",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1915276?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1915276?v=4&s=60",
   "displayName": "Petro Gorobchenko",
   "gv": "4",
   "id": "5ca58051d73408ce4fbcc087",
   "url": "/petrogdev",
   "username": "petrogdev",
   "v": 1
  },
  "html": "has anyone experienced the same issue?<br><a target=\"_blank\" data-link-type=\"issue\" data-issue=\"2560\" href=\"https://github.com/aws/aws-sdk-go/issues/2560\" data-provider=\"github\" data-issue-repo=\"aws/aws-sdk-go\" class=\"issue\">aws/aws-sdk-go#2560</a>",
  "id": "5cb09f2993fb4a7dc219143b",
  "issues": [
   {
    "number": "2560",
    "repo": "aws/aws-sdk-go"
   }
  ],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2019-04-12T14:22:33.952Z",
  "text": "has anyone experienced the same issue?\nhttps://github.com/aws/aws-sdk-go/issues/2560",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "Hello everybody",
  "id": "5cb0c1fc016a930a45aaab62",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-04-12T16:51:08.700Z",
  "text": "Hello everybody",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-04-12T16:52:00.330Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "I am having  authorization/access control issue",
  "id": "5cb0c21f20fbe911eea431fe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-04-12T16:51:43.523Z",
  "text": "I am having  authorization/access control issue",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2019-04-12T16:53:29.517Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "I have created a user, and added him to a group with a policy the looks like below:<pre><code>{\n  \"<span class=\"attribute\">Version</span>\": <span class=\"value\"><span class=\"string\">\"2012-10-17\"</span></span>,\n  \"<span class=\"attribute\">Statement</span>\": <span class=\"value\">[\n    {\n      \"<span class=\"attribute\">Sid</span>\": <span class=\"value\"><span class=\"string\">\"ListObjectsInBucket\"</span></span>,\n      \"<span class=\"attribute\">Effect</span>\": <span class=\"value\"><span class=\"string\">\"Allow\"</span></span>,\n      \"<span class=\"attribute\">Action</span>\": <span class=\"value\">[\n        <span class=\"string\">\"s3:ListBucket\"</span>\n      ]</span>,\n      \"<span class=\"attribute\">Resource</span>\": <span class=\"value\">[\n        <span class=\"string\">\"arn:aws:s3:::mybucket\"</span>\n      ]\n    </span>},\n    {\n      \"<span class=\"attribute\">Sid</span>\": <span class=\"value\"><span class=\"string\">\"AllObjectActions\"</span></span>,\n      \"<span class=\"attribute\">Effect</span>\": <span class=\"value\"><span class=\"string\">\"Allow\"</span></span>,\n      \"<span class=\"attribute\">Action</span>\": <span class=\"value\"><span class=\"string\">\"s3:*Object\"</span></span>,\n      \"<span class=\"attribute\">Resource</span>\": <span class=\"value\">[\n        <span class=\"string\">\"arn:aws:s3:::mybucket/*\"</span>\n      ]\n    </span>}\n  ]\n</span>}</code></pre>",
  "id": "5cb0c2651f6e900d5e20b2f3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2019-04-12T16:52:53.624Z",
  "text": "I have created a user, and added him to a group with a policy the looks like below:\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"ListObjectsInBucket\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:ListBucket\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::mybucket\"\n      ]\n    },\n    {\n      \"Sid\": \"AllObjectActions\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:*Object\",\n      \"Resource\": [\n        \"arn:aws:s3:::mybucket/*\"\n      ]\n    }\n  ]\n}\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "If I am not mistaken, the policy allows read/write access to  <code>mybucket</code>",
  "id": "5cb0c2cc3ebbdc55b3a79342",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-04-12T16:54:36.926Z",
  "text": "If I am not mistaken, the policy allows read/write access to  `mybucket`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "I tested using the cli and it works properly ",
  "id": "5cb0c2d531aec969e89531ef",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-04-12T16:54:45.910Z",
  "text": "I tested using the cli and it works properly ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "using the golang sdk I get <code>Error occured:  [] AccessDenied: Access Denied</code>",
  "id": "5cb0c307bd70a40d5f3b9cf0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-04-12T16:55:35.559Z",
  "text": "using the golang sdk I get `Error occured:  [] AccessDenied: Access Denied`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-04-12T16:57:02.958Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "is there a difference between the two access methods (cli vs sdk), I thought both use the same HTTP mechanism underneath",
  "id": "5cb0c339016a930a45aab2bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-04-12T16:56:25.294Z",
  "text": "is there a difference between the two access methods (cli vs sdk), I thought both use the same HTTP mechanism underneath",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "(when I use root access, it works )",
  "id": "5cb0c4da20fbe911eea4435e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-04-12T17:03:22.480Z",
  "text": "(when I use root access, it works )",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zak905",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6265563?v=4&s=60",
   "displayName": "Zakaria Amine",
   "gv": "4",
   "id": "57c1d2d040f3a6eec061a234",
   "url": "/zak905",
   "username": "zak905",
   "v": 24
  },
  "html": "I figured it out, since my request contained ACL, I needed to add <code>s3:PutObjectAcl</code>to the list of actions",
  "id": "5cb0debb1f6e900d5e21724e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-04-12T18:53:47.139Z",
  "text": "I figured it out, since my request contained ACL, I needed to add `s3:PutObjectAcl`to the list of actions",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zyin",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1069769?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1069769?v=4&s=60",
   "displayName": "newbage",
   "gv": "4",
   "id": "55fc69320fc9f982beb11f86",
   "url": "/zyin",
   "username": "zyin",
   "v": 7
  },
  "html": "Hello",
  "id": "5cb4b3c8a84e0c501a3771dc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-04-15T16:39:36.848Z",
  "text": "Hello",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zyin",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1069769?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1069769?v=4&s=60",
   "displayName": "newbage",
   "gv": "4",
   "id": "55fc69320fc9f982beb11f86",
   "url": "/zyin",
   "username": "zyin",
   "v": 7
  },
  "html": "The SDK reported an error with http status 400 in my environment : MalformedXML: The XML you provided was not well-formed or did not validate against our published schema",
  "id": "5cb4b3f131aec969e8ae50c3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-04-15T16:40:17.656Z",
  "text": "The SDK reported an error with http status 400 in my environment : MalformedXML: The XML you provided was not well-formed or did not validate against our published schema",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zyin",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1069769?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1069769?v=4&s=60",
   "displayName": "newbage",
   "gv": "4",
   "id": "55fc69320fc9f982beb11f86",
   "url": "/zyin",
   "username": "zyin",
   "v": 7
  },
  "html": "But it works at most time",
  "id": "5cb4b41225686a7dc336b20b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-04-15T16:40:50.432Z",
  "text": "But it works at most time",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zyin",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1069769?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1069769?v=4&s=60",
   "displayName": "newbage",
   "gv": "4",
   "id": "55fc69320fc9f982beb11f86",
   "url": "/zyin",
   "username": "zyin",
   "v": 7
  },
  "html": "what do I need to do?",
  "id": "5cb4b4183ebbdc55b3c18809",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-04-15T16:40:56.434Z",
  "text": "what do I need to do?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/zyin",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1069769?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1069769?v=4&s=60",
   "displayName": "newbage",
   "gv": "4",
   "id": "55fc69320fc9f982beb11f86",
   "url": "/zyin",
   "username": "zyin",
   "v": 7
  },
  "html": "Who can help me?",
  "id": "5cb4bf541f6e900d5e3a5f7d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-04-15T17:28:52.240Z",
  "text": "Who can help me?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/vvhuang0909",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/16496089?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/16496089?v=4&s=60",
   "displayName": "vvhuang0909",
   "gv": "4",
   "id": "5c99ef8bd73408ce4fbbd6e5",
   "url": "/vvhuang0909",
   "username": "vvhuang0909",
   "v": 3
  },
  "html": "hello there\uff0c i`am test SQS TCP connection persistence when sending or receiving message to/from AWS-SQS server. I found the established connection only lastes for about 1 minute and then close automatically. Even i keep sending messages using the same SQS client, the connection automatically changes (close old connection and establish new one on another port). i wanna ask if  there is a way to reuse the connection , and control the idle connection alive time. (i tried IdleConnTimeout in aws.Config.HTTPClient, but no effects) .",
  "id": "5cb6a35be416b8451990bc82",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2019-04-17T03:54:03.064Z",
  "text": "hello there\uff0c i`am test SQS TCP connection persistence when sending or receiving message to/from AWS-SQS server. I found the established connection only lastes for about 1 minute and then close automatically. Even i keep sending messages using the same SQS client, the connection automatically changes (close old connection and establish new one on another port). i wanna ask if  there is a way to reuse the connection , and control the idle connection alive time. (i tried IdleConnTimeout in aws.Config.HTTPClient, but no effects) .",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/rony358_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/643202640722006016/I-Uk3xhG.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/643202640722006016/I-Uk3xhG_bigger.jpg",
   "displayName": "Abhishek Chanda",
   "id": "58de2a8cd73408ce4f55154b",
   "url": "/rony358_twitter",
   "username": "rony358_twitter",
   "v": 1
  },
  "html": "Hi, I am trying to use the DeleteTags method to delete some tags for a subnet. I get no error, but the tags are not deleted. What else should I look at?",
  "id": "5cb723fa5b3f941aa5478101",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-04-17T13:02:50.379Z",
  "text": "Hi, I am trying to use the DeleteTags method to delete some tags for a subnet. I get no error, but the tags are not deleted. What else should I look at?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/nekperu15739",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3081992?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3081992?v=4&s=60",
   "displayName": "Charly",
   "gv": "4",
   "id": "59765b8bd73408ce4f6e9264",
   "url": "/nekperu15739",
   "username": "nekperu15739",
   "v": 2
  },
  "html": "Hi guys, i see that on v1 there is topic called session, however, in v2 there is not, any reason? ",
  "id": "5cbeddb7990feb4518eaddf1",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-04-23T09:41:11.024Z",
  "text": "Hi guys, i see that on v1 there is topic called session, however, in v2 there is not, any reason? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mbadran",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13339?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13339?v=4&s=60",
   "displayName": "Mohammed",
   "gv": "4",
   "id": "5cbfcda1d73408ce4fbe80b4",
   "url": "/mbadran",
   "username": "mbadran",
   "v": 1
  },
  "html": "hi guys. trying to use dynamodb local with v2, but i can&#39;t figure out how to set the localhost endpoint. there are no examples of this out there (only for v1), and trawling through the source doesn&#39;t reveal many clues. i&#39;ve tried using <code>external.WithCredentialsEndpoint(&quot;http://localhost:8000&quot;)</code>, but then i get an error: <code>CredentialsEndpointError: failed to load credentials\\ncaused by: : Request must contain either a valid (registered) AWS access key ID or X.509 certificate.</code> any ideas?",
  "id": "5cbfcf6ab489bb6ed7b4e983",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-04-24T02:52:26.308Z",
  "text": "hi guys. trying to use dynamodb local with v2, but i can't figure out how to set the localhost endpoint. there are no examples of this out there (only for v1), and trawling through the source doesn't reveal many clues. i've tried using `external.WithCredentialsEndpoint(\"http://localhost:8000\")`, but then i get an error: `CredentialsEndpointError: failed to load credentials\\ncaused by: : Request must contain either a valid (registered) AWS access key ID or X.509 certificate.` any ideas?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mbadran",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13339?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13339?v=4&s=60",
   "displayName": "Mohammed",
   "gv": "4",
   "id": "5cbfcda1d73408ce4fbe80b4",
   "url": "/mbadran",
   "username": "mbadran",
   "v": 1
  },
  "html": "<pre><code>        <span class=\"comment\">// hard code fake credentials for dynamodb local</span>\n        config, err = <span class=\"literal\">external</span>.LoadDefaultAWSConfig(\n            <span class=\"literal\">external</span>.WithCredentialsValue(aws.Credentials{\n                AccessKeyID:     <span class=\"string\">\"FAKEAKID\"</span>,\n                SecretAccessKey: <span class=\"string\">\"FAKESECRET\"</span>,\n                SessionToken:    <span class=\"string\">\"SESSION\"</span>,\n                Source:          <span class=\"string\">\"fake hard coded credentials\"</span>,\n            }),\n            <span class=\"literal\">external</span>.WithCredentialsEndpoint(<span class=\"string\">\"http://localhost:8000\"</span>),\n        )</code></pre>",
  "id": "5cbfcf97b4700e023dc164fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-04-24T02:53:11.696Z",
  "text": "```\n\t\t// hard code fake credentials for dynamodb local\n\t\tconfig, err = external.LoadDefaultAWSConfig(\n\t\t\texternal.WithCredentialsValue(aws.Credentials{\n\t\t\t\tAccessKeyID:     \"FAKEAKID\",\n\t\t\t\tSecretAccessKey: \"FAKESECRET\",\n\t\t\t\tSessionToken:    \"SESSION\",\n\t\t\t\tSource:          \"fake hard coded credentials\",\n\t\t\t}),\n\t\t\texternal.WithCredentialsEndpoint(\"http://localhost:8000\"),\n\t\t)\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-04-24T02:55:33.137Z",
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/mbadran",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13339?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13339?v=4&s=60",
   "displayName": "Mohammed",
   "gv": "4",
   "id": "5cbfcda1d73408ce4fbe80b4",
   "url": "/mbadran",
   "username": "mbadran",
   "v": 1
  },
  "html": "also when i initialise the dynamodb client afterwards, i can see the fake credentials come through, but it&#39;s not using the localhost endpoint (when i print <code>ddb.Metadata.Endpoint</code> -- if that&#39;s the right struct/var -- it comes up empty)",
  "id": "5cbfd0181cd0b8307d616b51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-04-24T02:55:20.192Z",
  "text": "also when i initialise the dynamodb client afterwards, i can see the fake credentials come through, but it's not using the localhost endpoint (when i print `ddb.Metadata.Endpoint` -- if that's the right struct/var -- it comes up empty)",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/rezafarzin",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/7265936?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/7265936?v=4&s=60",
   "displayName": "Reza Farzin",
   "gv": "4",
   "id": "5ab5a68dd73408ce4f92e4f1",
   "url": "/rezafarzin",
   "username": "rezafarzin",
   "v": 2
  },
  "html": "What is the correct way to check if the sqsNew() was successful opening the connection, short of sending a msg?",
  "id": "5cc1ece32e2caa1aa6ba311b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-04-25T17:22:43.502Z",
  "text": "What is the correct way to check if the sqsNew() was successful opening the connection, short of sending a msg?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/redbarron23",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1723913?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1723913?v=4&s=60",
   "displayName": "jaime",
   "gv": "4",
   "id": "58ccbe32d73408ce4f51beb9",
   "url": "/redbarron23",
   "username": "redbarron23",
   "v": 3
  },
  "html": "How does one add security groups to ec2 instance?",
  "id": "5cc8500cb489bb6ed7ef4c51",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2019-04-30T13:39:24.986Z",
  "text": "How does one add security groups to ec2 instance?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Is the instance running or you want to add them at launch?",
  "id": "5cc8d3543b6cb0686a7fb571",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-04-30T22:59:32.947Z",
  "text": "Is the instance running or you want to add them at launch?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/redbarron23",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1723913?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1723913?v=4&s=60",
   "displayName": "jaime",
   "gv": "4",
   "id": "58ccbe32d73408ce4f51beb9",
   "url": "/redbarron23",
   "username": "redbarron23",
   "v": 3
  },
  "html": "ahh good one. initially at launch but I solved that one",
  "id": "5cc97c05375bac7470376324",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2019-05-01T10:59:17.160Z",
  "text": "ahh good one. initially at launch but I solved that one",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/redbarron23",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/1723913?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/1723913?v=4&s=60",
   "displayName": "jaime",
   "gv": "4",
   "id": "58ccbe32d73408ce4f51beb9",
   "url": "/redbarron23",
   "username": "redbarron23",
   "v": 3
  },
  "html": "but now you mention the already running one that would be interesting to add after launch",
  "id": "5cc97c25990feb451832c386",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2019-05-01T10:59:49.084Z",
  "text": "but now you mention the already running one that would be interesting to add after launch",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "IDE",
  "id": "5cc9cb1a990feb4518352444",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-05-01T16:36:42.660Z",
  "text": "IDE",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Die ",
  "id": "5cc9cb3ca4ef097471300130",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-05-01T16:37:15.999Z",
  "text": "Die ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Damn iPhone Keyboard ",
  "id": "5cc9cb64e416b8451911aac2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-05-01T16:37:56.911Z",
  "text": "Damn iPhone Keyboard ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Ideally you shouldn&#39;t maintain instances using API calls but use some infrastructure as code tools like Terraform or Cloudformation, but the API allows you to create tags on existing resources ",
  "id": "5cc9cc544b4cb471d98d1b55",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-05-01T16:41:56.925Z",
  "text": "Ideally you shouldn't maintain instances using API calls but use some infrastructure as code tools like Terraform or Cloudformation, but the API allows you to create tags on existing resources ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/akgl_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/136ec6b1895ee7afe2cb224416a950b4?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/136ec6b1895ee7afe2cb224416a950b4?s=60&d=identicon",
   "displayName": "Ajay",
   "id": "5cca7935d73408ce4fbf2c69",
   "url": "/akgl_gitlab",
   "username": "akgl_gitlab",
   "v": 1
  },
  "html": "hi",
  "id": "5cca793f375bac74703e5dbc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-05-02T04:59:43.911Z",
  "text": "hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/akgl_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/136ec6b1895ee7afe2cb224416a950b4?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/136ec6b1895ee7afe2cb224416a950b4?s=60&d=identicon",
   "displayName": "Ajay",
   "id": "5cca7935d73408ce4fbf2c69",
   "url": "/akgl_gitlab",
   "username": "akgl_gitlab",
   "v": 1
  },
  "html": "problem with public access of s3 upload",
  "id": "5cca7954b4700e023d096e57",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-05-02T05:00:04.148Z",
  "text": "problem with public access of s3 upload",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/joshprocore",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/48456634?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/48456634?v=4&s=60",
   "displayName": "Josh Santos",
   "gv": "4",
   "id": "5ccb5e70d73408ce4fbf3f53",
   "url": "/joshprocore",
   "username": "joshprocore",
   "v": 1
  },
  "html": "Hello, I am trying to access an SSM resource locally using both the go sdk and the python cli, both give a 400 error while the console for this user is able to access the data, here is the go source and error<pre><code><span class=\"keyword\">package</span> main\n\n<span class=\"keyword\">import</span> <span class=\"string\">\"fmt\"</span>\n<span class=\"keyword\">import</span> <span class=\"string\">\"github.com/aws/aws-sdk-go/aws\"</span>\n<span class=\"keyword\">import</span> <span class=\"string\">\"github.com/aws/aws-sdk-go/aws/session\"</span>\n<span class=\"keyword\">import</span> <span class=\"string\">\"github.com/aws/aws-sdk-go/service/ssm\"</span>\n\nfunc main() {\n  sess, <span class=\"string\">err :</span>= session.NewSessionWithOptions(session.Options{\n<span class=\"label\">    Config:</span> aws.Config{\n<span class=\"label\">      Region:</span> aws.String(<span class=\"string\">\"us-east-1\"</span>),\n    },\n<span class=\"label\">    SharedConfigState:</span> session.SharedConfigEnable,\n<span class=\"label\">    Profile:</span>           <span class=\"string\">\"prnd_staging\"</span>,\n  })\n  <span class=\"keyword\">if</span> err != nil {\n    panic(err)\n  }\n\n  <span class=\"string\">ssmsvc :</span>= ssm.New(sess, aws.NewConfig())\n  <span class=\"string\">keyname :</span>= <span class=\"string\">\"/app/stage/secrets/secret\"</span>                                                             \n  <span class=\"string\">withDecryption :</span>= <span class=\"literal\">false</span>\n  param, <span class=\"string\">err :</span>= ssmsvc.GetParameter(&amp;ssm.GetParameterInput{\n<span class=\"label\">    Name:</span>           &amp;keyname,\n<span class=\"label\">    WithDecryption:</span> &amp;withDecryption,\n  })\n  <span class=\"keyword\">if</span> err != nil {\n    panic(err)\n  }\n\n  <span class=\"string\">value :</span>= *param.Parameter.Value\n  fmt.Println(value)\n}\n<span class=\"label\">\npanic:</span> <span class=\"string\">AccessDeniedException:</span> <span class=\"string\">User:</span> <span class=\"string\">arn:</span><span class=\"string\">aws:</span><span class=\"string\">iam:</span>:&lt;ID&gt;:user<span class=\"regexp\">/&lt;USER&gt; is not authorized to perform: ssm:GetParameter on resource: arn:aws:ssm:us-east-1:&lt;ID&gt;:parameter/</span>&lt;DOC&gt; with an explicit deny\n    status <span class=\"string\">code:</span> <span class=\"number\">400</span>, request <span class=\"string\">id:</span> &lt;ID&gt;</code></pre>",
  "id": "5ccb5f295b3f941aa5cf6482",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-05-02T21:20:41.787Z",
  "text": "Hello, I am trying to access an SSM resource locally using both the go sdk and the python cli, both give a 400 error while the console for this user is able to access the data, here is the go source and error\n\n```\npackage main\n\nimport \"fmt\"\nimport \"github.com/aws/aws-sdk-go/aws\"\nimport \"github.com/aws/aws-sdk-go/aws/session\"\nimport \"github.com/aws/aws-sdk-go/service/ssm\"\n\nfunc main() {\n  sess, err := session.NewSessionWithOptions(session.Options{\n    Config: aws.Config{\n      Region: aws.String(\"us-east-1\"),\n    },\n    SharedConfigState: session.SharedConfigEnable,\n    Profile:           \"prnd_staging\",\n  })\n  if err != nil {\n    panic(err)\n  }\n\n  ssmsvc := ssm.New(sess, aws.NewConfig())\n  keyname := \"/app/stage/secrets/secret\"                                                             \n  withDecryption := false\n  param, err := ssmsvc.GetParameter(&ssm.GetParameterInput{\n    Name:           &keyname,\n    WithDecryption: &withDecryption,\n  })\n  if err != nil {\n    panic(err)\n  }\n\n  value := *param.Parameter.Value\n  fmt.Println(value)\n}\n\npanic: AccessDeniedException: User: arn:aws:iam::<ID>:user/<USER> is not authorized to perform: ssm:GetParameter on resource: arn:aws:ssm:us-east-1:<ID>:parameter/<DOC> with an explicit deny\n\tstatus code: 400, request id: <ID>\n```",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/joshprocore",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/48456634?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/48456634?v=4&s=60",
   "displayName": "Josh Santos",
   "gv": "4",
   "id": "5ccb5e70d73408ce4fbf3f53",
   "url": "/joshprocore",
   "username": "joshprocore",
   "v": 1
  },
  "html": "For reference, my user has the ReadOnlyAccess policy attached to it, which has an allow for this action, and in IAM policy simulator it says it should be allowed",
  "id": "5ccb5fa0b4700e023d100598",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2019-05-02T21:22:40.944Z",
  "text": "For reference, my user has the ReadOnlyAccess policy attached to it, which has an allow for this action, and in IAM policy simulator it says it should be allowed",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/joshprocore",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/48456634?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/48456634?v=4&s=60",
   "displayName": "Josh Santos",
   "gv": "4",
   "id": "5ccb5e70d73408ce4fbf3f53",
   "url": "/joshprocore",
   "username": "joshprocore",
   "v": 1
  },
  "html": "As a heads up, this has been fixed, was due to not using MFA",
  "id": "5cccb5bfb489bb6ed70e853b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-05-03T21:42:23.215Z",
  "text": "As a heads up, this has been fixed, was due to not using MFA",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/zhiyouce",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/34336426?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/34336426?v=4&s=60",
   "displayName": "\u5317\u4eac\u667a\u4f18\u7b56",
   "gv": "4",
   "id": "5cd1631dd73408ce4fbf9a8d",
   "url": "/zhiyouce",
   "username": "zhiyouce",
   "v": 1
  },
  "html": "HI I am a new guy for aws-sdk-go.My problem is this: when creating a stack in the cloudformation using lambad service , the time is too long ",
  "id": "5cd1646ab489bb6ed72e1a8b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-05-07T10:56:42.532Z",
  "text": "HI I am a new guy for aws-sdk-go.My problem is this: when creating a stack in the cloudformation using lambad service , the time is too long ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/zhiyouce",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/34336426?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/34336426?v=4&s=60",
   "displayName": "\u5317\u4eac\u667a\u4f18\u7b56",
   "gv": "4",
   "id": "5cd1631dd73408ce4fbf9a8d",
   "url": "/zhiyouce",
   "username": "zhiyouce",
   "v": 1
  },
  "html": "Does anyone have the solution\uff1f",
  "id": "5cd1647f3d78aa6c03fd2d9f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-05-07T10:57:03.595Z",
  "text": "Does anyone have the solution\uff1f",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-05-07T10:57:39.334Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/zhiyouce",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/34336426?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/34336426?v=4&s=60",
   "displayName": "\u5317\u4eac\u667a\u4f18\u7b56",
   "gv": "4",
   "id": "5cd1631dd73408ce4fbf9a8d",
   "url": "/zhiyouce",
   "username": "zhiyouce",
   "v": 1
  },
  "html": "Can just send the querying request\uff1f",
  "id": "5cd1648c3d78aa6c03fd2e19",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-05-07T10:57:16.748Z",
  "text": "Can just send the querying request\uff1f",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/zhiyouce",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/34336426?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/34336426?v=4&s=60",
   "displayName": "\u5317\u4eac\u667a\u4f18\u7b56",
   "gv": "4",
   "id": "5cd1631dd73408ce4fbf9a8d",
   "url": "/zhiyouce",
   "username": "zhiyouce",
   "v": 1
  },
  "html": " Thanks\uff01\uff01\uff01",
  "id": "5cd166055b3f941aa5f7d23d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-05-07T11:03:33.903Z",
  "text": " Thanks\uff01\uff01\uff01",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Cloudformation is slow for certain resources, you can&#39;t do anything about it ",
  "id": "5cd1cb645b3f941aa5fac5f7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-05-07T18:16:04.051Z",
  "text": "Cloudformation is slow for certain resources, you can't do anything about it ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/brainstorm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/175587?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/175587?v=4&s=60",
   "displayName": "Roman Valls Guimera",
   "gv": "4",
   "id": "543268e1163965c9bc20916c",
   "url": "/brainstorm",
   "username": "brainstorm",
   "v": 23
  },
  "html": "Is there a good (simple) example of aws-sdk-go http request?",
  "id": "5cdcd09c6fd7c11cd8c5f5e4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-05-16T02:53:16.714Z",
  "text": "Is there a good (simple) example of aws-sdk-go http request?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/brainstorm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/175587?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/175587?v=4&s=60",
   "displayName": "Roman Valls Guimera",
   "gv": "4",
   "id": "543268e1163965c9bc20916c",
   "url": "/brainstorm",
   "username": "brainstorm",
   "v": 23
  },
  "html": "All examples I find are from the lambda/server side, I just need a small snippet for the http client request for a CLI I&#39;m building.",
  "id": "5cdcd0be0f381d0a76c335f0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-05-16T02:53:50.113Z",
  "text": "All examples I find are from the lambda/server side, I just need a small snippet for the http client request for a CLI I'm building.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/brainstorm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/175587?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/175587?v=4&s=60",
   "displayName": "Roman Valls Guimera",
   "gv": "4",
   "id": "543268e1163965c9bc20916c",
   "url": "/brainstorm",
   "username": "brainstorm",
   "v": 23
  },
  "html": "I just want to do a GET request against a API Gateway endpoint. I did that successfully with Postman, but I really would prefer not to go down to <code>net/http</code> and cook it by myself :/",
  "id": "5cdcd386bdc3b64fcf53a531",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-05-16T03:05:42.759Z",
  "text": "I just want to do a GET request against a API Gateway endpoint. I did that successfully with Postman, but I really would prefer not to go down to `net/http` and cook it by myself :/",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/brainstorm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/175587?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/175587?v=4&s=60",
   "displayName": "Roman Valls Guimera",
   "gv": "4",
   "id": "543268e1163965c9bc20916c",
   "url": "/brainstorm",
   "username": "brainstorm",
   "v": 23
  },
  "html": "In other words, not going this way but in golang: <a href=\"https://github.com/kreuzwerker/Call-AWS-API-With-Bash/blob/master/aws-api.sh\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/kreuzwerker/Call-AWS-API-With-Bash/blob/master/aws-api.sh</a>",
  "id": "5cdce3430ec37966a17814f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-05-16T04:12:51.008Z",
  "text": "In other words, not going this way but in golang: https://github.com/kreuzwerker/Call-AWS-API-With-Bash/blob/master/aws-api.sh",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/kreuzwerker/Call-AWS-API-With-Bash/blob/master/aws-api.sh"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/brainstorm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/175587?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/175587?v=4&s=60",
   "displayName": "Roman Valls Guimera",
   "gv": "4",
   "id": "543268e1163965c9bc20916c",
   "url": "/brainstorm",
   "username": "brainstorm",
   "v": 23
  },
  "html": "Anyhow, I just put up the question in StackOverflow: <a href=\"https://stackoverflow.com/questions/56163092/api-gateway-http-client-request-with-iam-auth\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/questions/56163092/api-gateway-http-client-request-with-iam-auth</a>, let&#39;s hope for an easy way out on all this :)",
  "id": "5cdd27577c363c75a7eb2832",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-05-16T09:03:19.343Z",
  "text": "Anyhow, I just put up the question in StackOverflow: https://stackoverflow.com/questions/56163092/api-gateway-http-client-request-with-iam-auth, let's hope for an easy way out on all this :)",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/questions/56163092/api-gateway-http-client-request-with-iam-auth"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/craftsource",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/939498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/939498?v=4&s=60",
   "displayName": "Todd Jason Lehn",
   "gv": "4",
   "id": "5ab3ef6bd73408ce4f92b2e5",
   "url": "/craftsource",
   "username": "craftsource",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"brainstorm\" class=\"mention\">@brainstorm</span> You need to sign the request with Signature v4. The AWS SDK provides signing functionality using the v4.Signer. Please see: <a href=\"https://godoc.org/github.com/aws/aws-sdk-go-v2/aws/signer/v4\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://godoc.org/github.com/aws/aws-sdk-go-v2/aws/signer/v4</a>. I can send you a code snippet as well if you need one.",
  "id": "5cdd89f1d522695bba536335",
  "issues": [],
  "mentions": [
   {
    "screenName": "brainstorm",
    "userId": "543268e1163965c9bc20916c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 17,
  "sent": "2019-05-16T16:04:01.377Z",
  "text": "@brainstorm You need to sign the request with Signature v4. The AWS SDK provides signing functionality using the v4.Signer. Please see: https://godoc.org/github.com/aws/aws-sdk-go-v2/aws/signer/v4. I can send you a code snippet as well if you need one.",
  "unread": false,
  "urls": [
   {
    "url": "https://godoc.org/github.com/aws/aws-sdk-go-v2/aws/signer/v4"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dsahithi",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/26980415?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/26980415?v=4&s=60",
   "displayName": "dsahithi",
   "gv": "4",
   "id": "5cddcbb5d73408ce4fc07f1e",
   "url": "/dsahithi",
   "username": "dsahithi",
   "v": 1
  },
  "html": "HI,  I am a new to aws-sdk-go, I&#39;m trying to delete folder in s3 bucket which has multiple objects. I found way&#39;s to delete one file or delete everything in the bucket, but i&#39;m looking for deleting just a folder. Should i create a  custom iterator? or Does anyone have the solution?            Thanks in advance!!",
  "id": "5cddcd460ec37966a17f0fad",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-05-16T20:51:18.642Z",
  "text": "HI,  I am a new to aws-sdk-go, I'm trying to delete folder in s3 bucket which has multiple objects. I found way's to delete one file or delete everything in the bucket, but i'm looking for deleting just a folder. Should i create a  custom iterator? or Does anyone have the solution?            Thanks in advance!!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jasdel",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/961963?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/961963?v=4&s=60",
   "displayName": "Jason Del Ponte",
   "gv": "4",
   "id": "555cbfe815522ed4b3e0af04",
   "url": "/jasdel",
   "username": "jasdel",
   "v": 23
  },
  "html": "HI <span data-link-type=\"mention\" data-screen-name=\"dsahithi\" class=\"mention\">@dsahithi</span> check out the SDK S3 Manager&#39;s BatchDelete utility, you provide it with an iterator (that can be sourced from a ListObjects call) <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#BatchDelete\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#BatchDelete</a>",
  "id": "5cddcfe95b63ea22b3b9a2bd",
  "issues": [],
  "mentions": [
   {
    "screenName": "dsahithi",
    "userId": "5cddcbb5d73408ce4fc07f1e",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2019-05-16T21:02:33.339Z",
  "text": "HI @dsahithi check out the SDK S3 Manager's BatchDelete utility, you provide it with an iterator (that can be sourced from a ListObjects call) https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#BatchDelete",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/s3/s3manager/#BatchDelete"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/dsahithi",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/26980415?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/26980415?v=4&s=60",
   "displayName": "dsahithi",
   "gv": "4",
   "id": "5cddcbb5d73408ce4fc07f1e",
   "url": "/dsahithi",
   "username": "dsahithi",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"jasdel\" class=\"mention\">@jasdel</span> thanks for the quick response, if someone could point me to example usage I can check that out",
  "id": "5cddd5eb6366992a94cd8e8c",
  "issues": [],
  "mentions": [
   {
    "screenName": "jasdel",
    "userId": "555cbfe815522ed4b3e0af04",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2019-05-16T21:28:11.978Z",
  "text": "@jasdel thanks for the quick response, if someone could point me to example usage I can check that out\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/brainstorm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/175587?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/175587?v=4&s=60",
   "displayName": "Roman Valls Guimera",
   "gv": "4",
   "id": "543268e1163965c9bc20916c",
   "url": "/brainstorm",
   "username": "brainstorm",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"craftsource\" class=\"mention\">@craftsource</span> Please do send me the snippet(s), thanks in advance!",
  "id": "5cdddc78ad024978c6da5291",
  "issues": [],
  "mentions": [
   {
    "screenName": "craftsource",
    "userId": "5ab3ef6bd73408ce4f92b2e5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2019-05-16T21:56:08.959Z",
  "text": "@craftsource Please do send me the snippet(s), thanks in advance!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/brainstorm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/175587?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/175587?v=4&s=60",
   "displayName": "Roman Valls Guimera",
   "gv": "4",
   "id": "543268e1163965c9bc20916c",
   "url": "/brainstorm",
   "username": "brainstorm",
   "v": 23
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"craftsource\" class=\"mention\">@craftsource</span> I&#39;m trying to work it out over SO, but still wrestling the default structures for <code>request.New()</code>: <a href=\"https://stackoverflow.com/questions/56163092/api-gateway-http-client-request-with-iam-auth-with-go#comment98983563_56165132\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/questions/56163092/api-gateway-http-client-request-with-iam-auth-with-go#comment98983563_56165132</a>... A simple HTTP GET example with SigV4 and all the required boilerplate would be super appreciated ;)",
  "id": "5cde1a2f8265145bbb237158",
  "issues": [],
  "mentions": [
   {
    "screenName": "craftsource",
    "userId": "5ab3ef6bd73408ce4f92b2e5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2019-05-17T02:19:27.578Z",
  "text": "@craftsource I'm trying to work it out over SO, but still wrestling the default structures for `request.New()`: https://stackoverflow.com/questions/56163092/api-gateway-http-client-request-with-iam-auth-with-go#comment98983563_56165132... A simple HTTP GET example with SigV4 and all the required boilerplate would be super appreciated ;)",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/questions/56163092/api-gateway-http-client-request-with-iam-auth-with-go#comment98983563_56165132"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/craftsource",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/939498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/939498?v=4&s=60",
   "displayName": "Todd Jason Lehn",
   "gv": "4",
   "id": "5ab3ef6bd73408ce4f92b2e5",
   "url": "/craftsource",
   "username": "craftsource",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"brainstorm\" class=\"mention\">@brainstorm</span> <a href=\"https://stackoverflow.com/a/56179113/1223579\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/a/56179113/1223579</a>",
  "id": "5cde2a726366992a94cfc76b",
  "issues": [],
  "mentions": [
   {
    "screenName": "brainstorm",
    "userId": "543268e1163965c9bc20916c",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2019-05-17T03:28:50.313Z",
  "text": "@brainstorm https://stackoverflow.com/a/56179113/1223579",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/a/56179113/1223579"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/brainstorm",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/175587?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/175587?v=4&s=60",
   "displayName": "Roman Valls Guimera",
   "gv": "4",
   "id": "543268e1163965c9bc20916c",
   "url": "/brainstorm",
   "username": "brainstorm",
   "v": 23
  },
  "html": "Nice, thanks! :)",
  "id": "5cde35d55b63ea22b3bc5a32",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-05-17T04:17:25.655Z",
  "text": "Nice, thanks! :)",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/mustanish_gitlab",
   "avatarUrlMedium": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/2097748/avatar.png?s=128",
   "avatarUrlSmall": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/2097748/avatar.png?s=60",
   "displayName": "Mustanish Altamash",
   "id": "5ce675efd73408ce4fc11e3a",
   "url": "/mustanish_gitlab",
   "username": "mustanish_gitlab",
   "v": 1
  },
  "html": "Hi, I am trying to read metaData from an object , for reading I used HeadObject, ",
  "id": "5ce6767eb313d72314147086",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2019-05-23T10:31:26.144Z",
  "text": "Hi, I am trying to read metaData from an object , for reading I used HeadObject, ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/mustanish_gitlab",
   "avatarUrlMedium": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/2097748/avatar.png?s=128",
   "avatarUrlSmall": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/2097748/avatar.png?s=60",
   "displayName": "Mustanish Altamash",
   "id": "5ce675efd73408ce4fc11e3a",
   "url": "/mustanish_gitlab",
   "username": "mustanish_gitlab",
   "v": 1
  },
  "html": "HeadObject returned {<br>  AcceptRanges: &quot;bytes&quot;,<br>  ContentLength: 281212,<br>  ContentType: &quot;binary/octet-stream&quot;,<br>  ETag: &quot;\\&quot;eb9a169678dda0f3940eaa2a99cd96ef\\&quot;&quot;,<br>  LastModified: 2019-05-22 11:27:32 +0000 UTC,<br>  Metadata: {<br>    Pinid: &quot;6d4e01ff-463f-44d9-bf55-216a19dadfda&quot;,<br>    Eloc: &quot;ONMAPS&quot;,<br>    Type: &quot;report&quot;<br>  }<br>}",
  "id": "5ce6768e75d9a575a62e011b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2019-05-23T10:31:42.427Z",
  "text": "HeadObject returned {\n  AcceptRanges: \"bytes\",\n  ContentLength: 281212,\n  ContentType: \"binary/octet-stream\",\n  ETag: \"\\\"eb9a169678dda0f3940eaa2a99cd96ef\\\"\",\n  LastModified: 2019-05-22 11:27:32 +0000 UTC,\n  Metadata: {\n    Pinid: \"6d4e01ff-463f-44d9-bf55-216a19dadfda\",\n    Eloc: \"ONMAPS\",\n    Type: \"report\"\n  }\n}",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/mustanish_gitlab",
   "avatarUrlMedium": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/2097748/avatar.png?s=128",
   "avatarUrlSmall": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/2097748/avatar.png?s=60",
   "displayName": "Mustanish Altamash",
   "id": "5ce675efd73408ce4fc11e3a",
   "url": "/mustanish_gitlab",
   "username": "mustanish_gitlab",
   "v": 1
  },
  "html": "Then to read custom metadata I used result.Metadata but this is returninh following map map[Eloc:0xc00044e070 Type:0xc00044e050 Pinid:0xc00044e060]. As object posted  above clearly showing the in need but after using result.Metadata it is showing something else",
  "id": "5ce677227c363c75a72bf823",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-05-23T10:34:10.676Z",
  "text": "Then to read custom metadata I used result.Metadata but this is returninh following map map[Eloc:0xc00044e070 Type:0xc00044e050 Pinid:0xc00044e060]. As object posted  above clearly showing the in need but after using result.Metadata it is showing something else",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/iguinealinke",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/46750800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/46750800?v=4&s=60",
   "displayName": "I\u00f1aki Guinea",
   "gv": "4",
   "id": "5c5b054ad73408ce4fb70d76",
   "url": "/iguinealinke",
   "username": "iguinealinke",
   "v": 3
  },
  "html": "HI folks, ",
  "id": "5ce6a03a9d64e537bcf9da45",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-05-23T13:29:30.099Z",
  "text": "HI folks, ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/iguinealinke",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/46750800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/46750800?v=4&s=60",
   "displayName": "I\u00f1aki Guinea",
   "gv": "4",
   "id": "5c5b054ad73408ce4fb70d76",
   "url": "/iguinealinke",
   "username": "iguinealinke",
   "v": 3
  },
  "html": "I am trying to make a HTTP signed call to API Gateway method using the following info(<a href=\"https://docs.aws.amazon.com/apigateway/api-reference/signing-requests/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/apigateway/api-reference/signing-requests/</a>). Anybody knows some github7gitlab example i could take a look at? My code is on GOLANG",
  "id": "5ce6a084b313d7231415ac5a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-05-23T13:30:44.399Z",
  "text": "I am trying to make a HTTP signed call to API Gateway method using the following info(https://docs.aws.amazon.com/apigateway/api-reference/signing-requests/). Anybody knows some github7gitlab example i could take a look at? My code is on GOLANG",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/apigateway/api-reference/signing-requests/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/iguinealinke",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/46750800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/46750800?v=4&s=60",
   "displayName": "I\u00f1aki Guinea",
   "gv": "4",
   "id": "5c5b054ad73408ce4fb70d76",
   "url": "/iguinealinke",
   "username": "iguinealinke",
   "v": 3
  },
  "html": "Thanks in advance",
  "id": "5ce6a08763dea422b4d06e99",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-05-23T13:30:47.125Z",
  "text": "Thanks in advance",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/iguinealinke",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/46750800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/46750800?v=4&s=60",
   "displayName": "I\u00f1aki Guinea",
   "gv": "4",
   "id": "5c5b054ad73408ce4fb70d76",
   "url": "/iguinealinke",
   "username": "iguinealinke",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"craftsource\" class=\"mention\">@craftsource</span>  Hi, i will be very interested on thoose code snippet you where talking about.",
  "id": "5ce6a1249404bf2aed96c3ff",
  "issues": [],
  "mentions": [
   {
    "screenName": "craftsource",
    "userId": "5ab3ef6bd73408ce4f92b2e5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2019-05-23T13:33:24.289Z",
  "text": "@craftsource  Hi, i will be very interested on thoose code snippet you where talking about.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/tinyzimmer",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/38474291?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/38474291?v=4&s=60",
   "displayName": "Avi Zimmerman",
   "gv": "4",
   "id": "5b522117d73408ce4fa1b457",
   "url": "/tinyzimmer",
   "username": "tinyzimmer",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"iguinealinke\" class=\"mention\">@iguinealinke</span> there is this project <a href=\"https://github.com/okigan/awscurl\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/okigan/awscurl</a> but it&#39;s in python",
  "id": "5ce945658f019114aeb4777e",
  "issues": [],
  "mentions": [
   {
    "screenName": "iguinealinke",
    "userId": "5c5b054ad73408ce4fb70d76",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2019-05-25T13:38:45.591Z",
  "text": "@iguinealinke there is this project https://github.com/okigan/awscurl but it's in python",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/okigan/awscurl"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/NEPDAVE",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8001932?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8001932?v=4&s=60",
   "displayName": "Dave Streckert",
   "gv": "4",
   "id": "57141e3f187bb6f0eadfea85",
   "url": "/NEPDAVE",
   "username": "NEPDAVE",
   "v": 2
  },
  "html": "<p>Hello, I have a script that uploades a log file to S3 every few minutes. My &quot;AWS_ACCESS_KEY_ID&quot; and &quot;AWS_SECRET_ACCESS_KEY&quot; are active and are being loaded in as Environment Variables. The script ran successfully for about 24 hours.</p><p>However, I am now getting the following error message:<br>&quot;Unable to authenticate the request due to an error: [invalid bearer token, [invalid bearer token, unknown]]&quot;</p><p>Each time I upload to S3 I am creating a new Session object. Any information is appreciated. </p>",
  "id": "5ced81c8f3a60a79a4167cc3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2019-05-28T18:45:28.797Z",
  "text": "Hello, I have a script that uploades a log file to S3 every few minutes. My \"AWS_ACCESS_KEY_ID\" and \"AWS_SECRET_ACCESS_KEY\" are active and are being loaded in as Environment Variables. The script ran successfully for about 24 hours.\n\nHowever, I am now getting the following error message:\n\"Unable to authenticate the request due to an error: [invalid bearer token, [invalid bearer token, unknown]]\"\n\nEach time I upload to S3 I am creating a new Session object. Any information is appreciated. ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/danapsimer",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/134839?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/134839?v=4&s=60",
   "displayName": "Dana P'Simer",
   "gv": "4",
   "id": "563e1fa016b6c7089cb9d427",
   "url": "/danapsimer",
   "username": "danapsimer",
   "v": 3
  },
  "html": "I am pulling my hair out trying to find the documentation for how to calculate the &quot;SecretHash&quot; for cognitoidentityprovider calls like IntiateAuth.",
  "id": "5cedb997bf4cbd167cf2a9f8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-05-28T22:43:35.203Z",
  "text": "I am pulling my hair out trying to find the documentation for how to calculate the \"SecretHash\" for cognitoidentityprovider calls like IntiateAuth.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"NEPDAVE\" class=\"mention\">@NEPDAVE</span> sometimes you also have a session token that expires after 24 hours ",
  "id": "5cee50dfb76eac527a6a2f79",
  "issues": [],
  "mentions": [
   {
    "screenName": "NEPDAVE",
    "userId": "57141e3f187bb6f0eadfea85",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2019-05-29T09:29:03.720Z",
  "text": "@NEPDAVE sometimes you also have a session token that expires after 24 hours ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Usually the key, secret ",
  "id": "5cee5105e41fe15e75d8f55c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-05-29T09:29:41.119Z",
  "text": "Usually the key, secret ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-05-31T15:33:10.716Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/bklau2006_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/3707625005/f88190b4982385a8c07cb82d77c3b595.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/3707625005/f88190b4982385a8c07cb82d77c3b595_bigger.jpeg",
   "displayName": "BK Lau",
   "id": "5cf147fad73408ce4fc1ddbd",
   "url": "/bklau2006_twitter",
   "username": "bklau2006_twitter",
   "v": 2
  },
  "html": "I&#39;m using Athena Golang SDK API. Is QueryExecutionContext <em>QueryExecutionContext optional if I specify WorkGroup </em>string <code>type:&quot;string&quot;</code>?",
  "id": "5cf1483aff3f016baa809954",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-05-31T15:28:58.574Z",
  "text": "I'm using Athena Golang SDK API. Is QueryExecutionContext *QueryExecutionContext optional if I specify WorkGroup *string `type:\"string\"`?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/bklau2006_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/3707625005/f88190b4982385a8c07cb82d77c3b595.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/3707625005/f88190b4982385a8c07cb82d77c3b595_bigger.jpeg",
   "displayName": "BK Lau",
   "id": "5cf147fad73408ce4fc1ddbd",
   "url": "/bklau2006_twitter",
   "username": "bklau2006_twitter",
   "v": 2
  },
  "html": "<a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/athena/#StartQueryExecutionInput\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/athena/#StartQueryExecutionInput</a>",
  "id": "5cf14847481ef4167ba9ac7e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-05-31T15:29:11.755Z",
  "text": "https://docs.aws.amazon.com/sdk-for-go/api/service/athena/#StartQueryExecutionInput",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/athena/#StartQueryExecutionInput"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2019-05-31T15:33:44.266Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/bklau2006_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/3707625005/f88190b4982385a8c07cb82d77c3b595.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/3707625005/f88190b4982385a8c07cb82d77c3b595_bigger.jpeg",
   "displayName": "BK Lau",
   "id": "5cf147fad73408ce4fc1ddbd",
   "url": "/bklau2006_twitter",
   "username": "bklau2006_twitter",
   "v": 2
  },
  "html": "I can execute a query like this : <code>aws athena start-query-execution --query-string &quot;SELECT *  FROM  db1.table1 limit 5&quot; --work-group &quot;myWorkspace&quot; --region us-west-2</code>",
  "id": "5cf149006f530d3b61139141",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-05-31T15:32:16.565Z",
  "text": "I can execute a query like this : `aws athena start-query-execution --query-string \"SELECT *  FROM  db1.table1 limit 5\" --work-group \"myWorkspace\" --region us-west-2`",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "editedAt": "2019-05-31T15:37:03.161Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/bklau2006_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/3707625005/f88190b4982385a8c07cb82d77c3b595.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/3707625005/f88190b4982385a8c07cb82d77c3b595_bigger.jpeg",
   "displayName": "BK Lau",
   "id": "5cf147fad73408ce4fc1ddbd",
   "url": "/bklau2006_twitter",
   "username": "bklau2006_twitter",
   "v": 2
  },
  "html": "Obviously, I didn&#39;t specify an Athena database, so QueryExecutionContext seems to be optional. Can someone confirm about this?",
  "id": "5cf149946f530d3b611395e8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-05-31T15:34:44.113Z",
  "text": "Obviously, I didn't specify an Athena database, so QueryExecutionContext seems to be optional. Can someone confirm about this?",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/Peymanmi",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/233053?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/233053?v=4&s=60",
   "displayName": "Peymanmi",
   "gv": "4",
   "id": "5cf711e2d73408ce4fc230e3",
   "url": "/Peymanmi",
   "username": "Peymanmi",
   "v": 1
  },
  "html": "I want to upload around 40 millions file to S3, all files are generating on fly by multiple tasks. So what&#39;s the best solution to achieve the best performance?",
  "id": "5cf712e3cea8295279f3b0d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-06-05T00:54:59.359Z",
  "text": "I want to upload around 40 millions file to S3, all files are generating on fly by multiple tasks. So what's the best solution to achieve the best performance?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/david.cardoso_gitlab",
   "avatarUrlMedium": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/2884145/avatar.png?s=128",
   "avatarUrlSmall": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/2884145/avatar.png?s=60",
   "displayName": "David de Souza Cardoso",
   "id": "5cf98684d73408ce4fc264d9",
   "url": "/david.cardoso_gitlab",
   "username": "david.cardoso_gitlab",
   "v": 1
  },
  "html": "Hi, I want to filter Volumes by their create-time. The docs say &quot;create-time - The time stamp when the volume was created.&quot; Will a simple aws.String(&quot;YYYY-MM-DD&quot;) do the trick? I&#39;m using AWS SDK for Go",
  "id": "5cf986f34dfb4240048fccd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-06-06T21:34:43.796Z",
  "text": "Hi, I want to filter Volumes by their create-time. The docs say \"create-time - The time stamp when the volume was created.\" Will a simple aws.String(\"YYYY-MM-DD\") do the trick? I'm using AWS SDK for Go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/g/u/marianna.cattani_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/c24dca17c2a05b615dd1c15af08923ab?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/c24dca17c2a05b615dd1c15af08923ab?s=60&d=identicon",
   "displayName": "marianna cattani",
   "id": "5cfa4c01d73408ce4fc26fd8",
   "url": "/marianna.cattani_gitlab",
   "username": "marianna.cattani_gitlab",
   "v": 1
  },
  "html": "Dear all,<br>I&#39;m looking for a &quot;way&quot; to create a backup of my AWS infrastructure (an existing one) and to be able to restore it easily.<br>Looking at these API It seems a feasible thing to me , but since I am only at the beginning of my experience as an AWS programmer I would like to ask your opinions on the real feasibility of my idea and on what could be the simplest approach to achieve this goal.<br>Every help is greatly appreciated.",
  "id": "5cfa4c259b50f6393598dab9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-06-07T11:36:05.310Z",
  "text": "Dear all,\nI'm looking for a \"way\" to create a backup of my AWS infrastructure (an existing one) and to be able to restore it easily. \nLooking at these API It seems a feasible thing to me , but since I am only at the beginning of my experience as an AWS programmer I would like to ask your opinions on the real feasibility of my idea and on what could be the simplest approach to achieve this goal.\nEvery help is greatly appreciated.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/bklau2006_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/3707625005/f88190b4982385a8c07cb82d77c3b595.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/3707625005/f88190b4982385a8c07cb82d77c3b595_bigger.jpeg",
   "displayName": "BK Lau",
   "id": "5cf147fad73408ce4fc1ddbd",
   "url": "/bklau2006_twitter",
   "username": "bklau2006_twitter",
   "v": 2
  },
  "html": "Hi : I have question regarding session.NewSession():<br>So I run  <code>sess :=session.NewSession()</code> inside a Docker container (not ECS, btw) on an EC2 with instance IAM role ABC. I don&#39;t use any config or credential files or set any AWS_* envronment variables.<br>Q: Does the above code ultimately get IAM role ABC temporary credentials from EC2 metadata service at : <code>http://169.254.169.254/</code>?",
  "id": "5d070dcb4e8f972d3732495d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-06-17T03:49:31.002Z",
  "text": "Hi : I have question regarding session.NewSession():\nSo I run  ` sess :=session.NewSession()` inside a Docker container (not ECS, btw) on an EC2 with instance IAM role ABC. I don't use any config or credential files or set any AWS_* envronment variables.\nQ: Does the above code ultimately get IAM role ABC temporary credentials from EC2 metadata service at : `http://169.254.169.254/`?\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "The container IAM roles rely on some iptables magic done by the host, if you have no such magic rules your containers will indeed inherit the host IAM setup ",
  "id": "5d07ba3dfbcc305cc4894152",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-06-17T16:05:17.715Z",
  "text": "The container IAM roles rely on some iptables magic done by the host, if you have no such magic rules your containers will indeed inherit the host IAM setup ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "Greetings Everyone",
  "id": "5d0c2de0d35d4162a86d841e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2019-06-21T01:07:44.821Z",
  "text": "Greetings Everyone",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "I am using go version 1.12.6 linux/amd64",
  "id": "5d0c2e0ed16b28559f5900d4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-06-21T01:08:30.048Z",
  "text": "I am using go version 1.12.6 linux/amd64",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "And have set environment variable GO111MODULE=on",
  "id": "5d0c2e374291ad76a5992ddd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-06-21T01:09:11.143Z",
  "text": "And have set environment variable GO111MODULE=on",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "for automatically going and getting the unmet github dependencies from web when I go run program",
  "id": "5d0c2e68207f6e6963d0eeca",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-06-21T01:10:00.963Z",
  "text": "for automatically going and getting the unmet github dependencies from web when I go run program",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "When I ran the following program, I did not have logrus on my computer, but it downloaded it, and ran, the next time I ran go run on it, it did not download as it already had done it before, and was available on the system",
  "id": "5d0c2eddd1aaa16964db1ff5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2019-06-21T01:11:57.285Z",
  "text": "When I ran the following program, I did not have logrus on my computer, but it downloaded it, and ran, the next time I ran go run on it, it did not download as it already had done it before, and was available on the system",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "<p>package main</p><p>import (<br>        &quot;<a href=\"http://github.com/sirupsen/logrus\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/sirupsen/logrus</a>&quot;<br>)</p><p>func main(){<br>        logrus.Info(&quot;test log&quot;)<br>}</p>",
  "id": "5d0c2edee7267a62a910b075",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2019-06-21T01:11:58.530Z",
  "text": "package main\n\nimport (\n        \"github.com/sirupsen/logrus\"\n)\n\nfunc main(){\n        logrus.Info(\"test log\")\n}\n",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/sirupsen/logrus"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "But I ran into problem with aws-sdk-go",
  "id": "5d0c2efcfd4aa914b5123802",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-06-21T01:12:28.143Z",
  "text": "But I ran into problem with aws-sdk-go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "I ran the following program",
  "id": "5d0c2f097456db0bb8241b53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-06-21T01:12:41.811Z",
  "text": "I ran the following program",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "<p>package main</p><p>import (<br>        &quot;fmt&quot;<br>        &quot;<a href=\"http://github.com/aws/aws-sdk-go/aws\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/aws</a>&quot;<br>        &quot;<a href=\"http://github.com/aws/aws-sdk-go/aws/session\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/aws/session</a>&quot;<br>        &quot;<a href=\"http://github.com/aws/aws-sdk-go/service/s3\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/service/s3</a>&quot;<br>)</p><p>func main() {<br>        svc := s3.New(session.New(), &amp;aws.Config{Region: aws.String(&quot;ap-south-1&quot;)})</p><pre><code>    <span class=\"string\">params :</span>= &amp;s3.ListObjectsInput{\n<span class=\"label\">            Bucket:</span> aws.String(<span class=\"string\">\"cdr-table\"</span>),\n    }\n\n    resp, <span class=\"string\">_ :</span>= svc.ListObjects(params)\n    <span class=\"keyword\">for</span> _, <span class=\"string\">key :</span>= range resp.Contents {\n            fmt.Println(*key.Key)\n    }</code></pre><p>}</p>",
  "id": "5d0c2f0be7267a62a910b29d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-06-21T01:12:43.472Z",
  "text": "package main\n\nimport (\n        \"fmt\"\n        \"github.com/aws/aws-sdk-go/aws\"\n        \"github.com/aws/aws-sdk-go/aws/session\"\n        \"github.com/aws/aws-sdk-go/service/s3\"\n)\n\nfunc main() {\n        svc := s3.New(session.New(), &aws.Config{Region: aws.String(\"ap-south-1\")})\n\n        params := &s3.ListObjectsInput{\n                Bucket: aws.String(\"cdr-table\"),\n        }\n\n        resp, _ := svc.ListObjects(params)\n        for _, key := range resp.Contents {\n                fmt.Println(*key.Key)\n        }\n}\n",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/aws/aws-sdk-go/aws"
   },
   {
    "url": "http://github.com/aws/aws-sdk-go/aws/session"
   },
   {
    "url": "http://github.com/aws/aws-sdk-go/service/s3"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "<pre><code>    <span class=\"keyword\">package</span> main\n\n    <span class=\"keyword\">import</span> (\n            <span class=\"string\">\"fmt\"</span>\n            <span class=\"string\">\"github.com/aws/aws-sdk-go/aws\"</span>\n            <span class=\"string\">\"github.com/aws/aws-sdk-go/aws/session\"</span>\n            <span class=\"string\">\"github.com/aws/aws-sdk-go/service/s3\"</span>\n    )\n\n    func main() {\n            <span class=\"string\">svc :</span>= s3.New(session.New(), &amp;aws.Config{<span class=\"string\">Region:</span> aws.String(<span class=\"string\">\"ap-south-1\"</span>)})\n\n            <span class=\"string\">params :</span>= &amp;s3.ListObjectsInput{\n<span class=\"label\">                    Bucket:</span> aws.String(<span class=\"string\">\"cdr-table\"</span>),\n            }\n\n            resp, <span class=\"string\">_ :</span>= svc.ListObjects(params)\n            <span class=\"keyword\">for</span> _, <span class=\"string\">key :</span>= range resp.Contents {\n                    fmt.Println(*key.Key)\n            }\n    }</code></pre>",
  "id": "5d0c2f6a41654c559ecd2ce2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-06-21T01:14:18.805Z",
  "text": "        package main\n\n        import (\n                \"fmt\"\n                \"github.com/aws/aws-sdk-go/aws\"\n                \"github.com/aws/aws-sdk-go/aws/session\"\n                \"github.com/aws/aws-sdk-go/service/s3\"\n        )\n\n        func main() {\n                svc := s3.New(session.New(), &aws.Config{Region: aws.String(\"ap-south-1\")})\n\n                params := &s3.ListObjectsInput{\n                        Bucket: aws.String(\"cdr-table\"),\n                }\n\n                resp, _ := svc.ListObjects(params)\n                for _, key := range resp.Contents {\n                        fmt.Println(*key.Key)\n                }\n        }\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "When I run go run program on the above",
  "id": "5d0c2f874291ad76a59936d2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-06-21T01:14:47.151Z",
  "text": "When I run go run program on the above",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "It goes and gets the aws-sdk-go package everytime from the web",
  "id": "5d0c2f985bc3210bb76a1ddb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-06-21T01:15:04.482Z",
  "text": "It goes and gets the aws-sdk-go package everytime from the web",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "Why doesn&#39;t it save the package on my system ?",
  "id": "5d0c2fa7bc834f76a4b12e66",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-06-21T01:15:19.865Z",
  "text": "Why doesn't it save the package on my system ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "I also did <code>go get github.com/aws/aws-sdk-go</code>",
  "id": "5d0c2fbce7267a62a910b7fc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-06-21T01:15:40.247Z",
  "text": "I also did `go get github.com/aws/aws-sdk-go`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "and <code>go get -u github.com/aws/aws-sdk-go</code>",
  "id": "5d0c2fdd4b0b7b477b2df7d5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-06-21T01:16:13.703Z",
  "text": "and `go get -u github.com/aws/aws-sdk-go`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "But it did not save aws-sdk-go on my system",
  "id": "5d0c2febfd4aa914b5123fe8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-06-21T01:16:27.832Z",
  "text": "But it did not save aws-sdk-go on my system",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/GypsyCosmonaut",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/16204800?v=4&s=60",
   "displayName": "Rahul Bansal",
   "gv": "4",
   "id": "5d0c2d60d73408ce4fc41c02",
   "url": "/GypsyCosmonaut",
   "username": "GypsyCosmonaut",
   "v": 1
  },
  "html": "my $GOPATH = /home/me/go",
  "id": "5d0c3010007cff7a82e9d9cf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-06-21T01:17:04.005Z",
  "text": "my $GOPATH = /home/me/go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/msummers",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/20535?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/20535?v=4&s=60",
   "displayName": "Mike",
   "gv": "4",
   "id": "5cc9c12bd73408ce4fbf226a",
   "url": "/msummers",
   "username": "msummers",
   "v": 7
  },
  "html": "I&#39;m having trouble locating information on the http client connection pool- specifically for S3. I&#39;ve grep&#39;d the code but no joy. Pointers would be appreciated.",
  "id": "5d0ce171bc834f76a4b719c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-06-21T13:53:53.552Z",
  "text": "I'm having trouble locating information on the http client connection pool- specifically for S3. I've grep'd the code but no joy. Pointers would be appreciated.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/saurabhsharma721",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14283388?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14283388?v=4&s=60",
   "displayName": "Saurabh Sharma",
   "gv": "4",
   "id": "5be9d1fcd73408ce4faeaf46",
   "url": "/saurabhsharma721",
   "username": "saurabhsharma721",
   "v": 3
  },
  "html": "<p>Hi Team.. I am new to Go language and trying picking it up , so pardon for any obvious issues but need some help.. Question : I am trying to filter only Organization Entities returned in by Comprehend in DetectEntitiesOutput.. My code is something like this func Filter(vs []Entity, f func(Entity) bool) []Entity {<br>    vsf := make([]Entity, 0)<br>    for _, v := range vs {<br>        if f(v) {<br>            vsf = append(vsf, v)<br>        }<br>    }<br>    return vsf<br>}</p><p>func isOrg(vs Entity) bool {<br>    return strings.EqualFold(Entity.Type, &quot;ORGANIZATION&quot;)<br>}<br>But i am getting following error  ./main.go:52:18: undefined: Entity<br>./main.go:53:16: undefined: Entity<br>./main.go:62:15: undefined: Entity<br>./main.go:63:27: undefined: Entity<br>My imports are following<br>&quot;context&quot;<br>    &quot;errors&quot;<br>    &quot;fmt&quot;<br>    &quot;strings&quot;</p><pre><code><span class=\"string\">\"github.com/aws/aws-lambda-go/lambda\"</span>\n<span class=\"string\">\"github.com/aws/aws-sdk-go/aws\"</span>\n<span class=\"string\">\"github.com/aws/aws-sdk-go/aws/session\"</span>\n<span class=\"string\">\"github.com/aws/aws-sdk-go/service/comprehend\"</span></code></pre><p>Can someone help?</p>",
  "id": "5d1a135fa611a04ff1b63cd3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2019-07-01T14:06:23.628Z",
  "text": "Hi Team.. I am new to Go language and trying picking it up , so pardon for any obvious issues but need some help.. Question : I am trying to filter only Organization Entities returned in by Comprehend in DetectEntitiesOutput.. My code is something like this func Filter(vs []Entity, f func(Entity) bool) []Entity {\n\tvsf := make([]Entity, 0)\n\tfor _, v := range vs {\n\t\tif f(v) {\n\t\t\tvsf = append(vsf, v)\n\t\t}\n\t}\n\treturn vsf\n}\n\nfunc isOrg(vs Entity) bool {\n\treturn strings.EqualFold(Entity.Type, \"ORGANIZATION\")\n} \nBut i am getting following error  ./main.go:52:18: undefined: Entity\n./main.go:53:16: undefined: Entity\n./main.go:62:15: undefined: Entity\n./main.go:63:27: undefined: Entity\nMy imports are following \n\"context\"\n\t\"errors\"\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com/aws/aws-lambda-go/lambda\"\n\t\"github.com/aws/aws-sdk-go/aws\"\n\t\"github.com/aws/aws-sdk-go/aws/session\"\n\t\"github.com/aws/aws-sdk-go/service/comprehend\"\n\nCan someone help?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/craftsource",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/939498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/939498?v=4&s=60",
   "displayName": "Todd Jason Lehn",
   "gv": "4",
   "id": "5ab3ef6bd73408ce4f92b2e5",
   "url": "/craftsource",
   "username": "craftsource",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"saurabhsharma721\" class=\"mention\">@saurabhsharma721</span> use comprehend.Entity for the type",
  "id": "5d1a1e01aa095d404cf53688",
  "issues": [],
  "mentions": [
   {
    "screenName": "saurabhsharma721",
    "userId": "5be9d1fcd73408ce4faeaf46",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2019-07-01T14:51:45.208Z",
  "text": "@saurabhsharma721 use comprehend.Entity for the type",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/saurabhsharma721",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/14283388?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/14283388?v=4&s=60",
   "displayName": "Saurabh Sharma",
   "gv": "4",
   "id": "5be9d1fcd73408ce4faeaf46",
   "url": "/saurabhsharma721",
   "username": "saurabhsharma721",
   "v": 3
  },
  "html": "<p>Hello <span data-link-type=\"mention\" data-screen-name=\"craftsource\" class=\"mention\">@craftsource</span>  .. I have changed the code by running into another error... The new code is `func Filter(vs []comprehend.Entity, f func(string) bool) []comprehend.Entity {<br>    vsf := make([]comprehend.Entity, 0)<br>    for _, v := range vs {<br>        enttype := *v.Type<br>        if f(enttype) {<br>            vsf = append(vsf, v)<br>        }<br>    }<br>    return vsf<br>}</p><p>func isOrg(vs string) bool {<br>    return strings.EqualFold(vs, &quot;ORGANIZATION&quot;)<br>}`</p><p>When i am trying to use the function like this         filterent := Filter(<em>resp.Entities, isOrg)<br>I am getting following error [go] invalid indirect of resp.Entities (type []</em>comprehend.Entity)</p>",
  "id": "5d1a56613d12712ce4c6b8fa",
  "issues": [],
  "mentions": [
   {
    "screenName": "craftsource",
    "userId": "5ab3ef6bd73408ce4f92b2e5",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2019-07-01T18:52:17.091Z",
  "text": "Hello @craftsource  .. I have changed the code by running into another error... The new code is `func Filter(vs []comprehend.Entity, f func(string) bool) []comprehend.Entity {\n\tvsf := make([]comprehend.Entity, 0)\n\tfor _, v := range vs {\n\t\tenttype := *v.Type\n\t\tif f(enttype) {\n\t\t\tvsf = append(vsf, v)\n\t\t}\n\t}\n\treturn vsf\n}\n\nfunc isOrg(vs string) bool {\n\treturn strings.EqualFold(vs, \"ORGANIZATION\")\n}`\n\nWhen i am trying to use the function like this \t\tfilterent := Filter(*resp.Entities, isOrg)\nI am getting following error [go] invalid indirect of resp.Entities (type []*comprehend.Entity)\n\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I think the make call expects a plain type instead of the slice. Try to define a custom types ",
  "id": "5d1a72df189e7b4ff04d13aa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-07-01T20:53:51.959Z",
  "text": "I think the make call expects a plain type instead of the slice. Try to define a custom types ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Instead of <code>[]comprehend.Entity</code>",
  "id": "5d1a730903d62b4d28c6cb98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-07-01T20:54:33.867Z",
  "text": "Instead of `[]comprehend.Entity`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/the1337beauty",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16466938?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16466938?v=4&s=60",
   "displayName": "the1337beauty",
   "gv": "4",
   "id": "5d1b407ed73408ce4fc50e64",
   "url": "/the1337beauty",
   "username": "the1337beauty",
   "v": 1
  },
  "html": "Does anyone have experience with using Cognito refresh tokens? I&#39;m using cognito-idp server-side authentication and I haven&#39;t been able to store the refreshtoken in the browser session using my web framework.",
  "id": "5d1b40dfdd5b167204db23cd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2019-07-02T11:32:47.293Z",
  "text": "Does anyone have experience with using Cognito refresh tokens? I'm using cognito-idp server-side authentication and I haven't been able to store the refreshtoken in the browser session using my web framework.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-05T13:25:02.954Z",
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/williams-brian",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/41339062?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/41339062?v=4&s=60",
   "displayName": "Brian Williams",
   "gv": "4",
   "id": "5d1f4bbcd73408ce4fc558d4",
   "url": "/williams-brian",
   "username": "williams-brian",
   "v": 1
  },
  "html": "<p>Can someone help me understand why base64 types are <code>*string</code>? I would like to use SSE-C and generate a key of random bytes to use for SSECustomerKey, but that has a data  type of <code>*string</code> and the string is base64 encoded before being sent in the request, so I can&#39;t use an encoded string.</p><p>How am I meant to use this? Something like this?</p><pre><code>key := <span class=\"function\"><span class=\"title\">make</span><span class=\"params\">([]byte, <span class=\"number\">32</span>)</span></span>\nrand.<span class=\"function\"><span class=\"title\">Read</span><span class=\"params\">(key)</span></span>\n<span class=\"tag\">input</span><span class=\"class\">.SSECustomerKey</span> = aws.<span class=\"function\"><span class=\"title\">String</span><span class=\"params\">(string(key)</span></span>)</code></pre>",
  "id": "5d1f4f9277c54c13e6041001",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2019-07-05T13:24:34.365Z",
  "text": "Can someone help me understand why base64 types are `*string`? I would like to use SSE-C and generate a key of random bytes to use for SSECustomerKey, but that has a data  type of `*string` and the string is base64 encoded before being sent in the request, so I can't use an encoded string.\n\nHow am I meant to use this? Something like this?\n\n```\nkey := make([]byte, 32)\nrand.Read(key)\ninput.SSECustomerKey = aws.String(string(key))\n```",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "If this compiles successfully it should work ",
  "id": "5d1f503f07d71829adb8a34b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-07-05T13:27:27.856Z",
  "text": "If this compiles successfully it should work ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/williams-brian",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/41339062?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/41339062?v=4&s=60",
   "displayName": "Brian Williams",
   "gv": "4",
   "id": "5d1f4bbcd73408ce4fc558d4",
   "url": "/williams-brian",
   "username": "williams-brian",
   "v": 1
  },
  "html": "I am mainly concerned with the bytes becoming mutated during the type conversion. I am not familiar enough with Go&#39;s strings to know what happens when you try to store arbitrary bytes in them.",
  "id": "5d1f516add0b530e40a17023",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-07-05T13:32:26.008Z",
  "text": "I am mainly concerned with the bytes becoming mutated during the type conversion. I am not familiar enough with Go's strings to know what happens when you try to store arbitrary bytes in them.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shwetaagg",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/52123566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/52123566?v=4&s=60",
   "displayName": "shwetaagg",
   "gv": "4",
   "id": "5d26edbcd73408ce4fc5caf7",
   "url": "/shwetaagg",
   "username": "shwetaagg",
   "v": 1
  },
  "html": "how can we find out the amount of lag on my slave using RDS API in go?",
  "id": "5d26ee170c8daa1686c406a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-07-11T08:06:47.077Z",
  "text": "how can we find out the amount of lag on my slave using RDS API in go?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/shwetaagg",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/52123566?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/52123566?v=4&s=60",
   "displayName": "shwetaagg",
   "gv": "4",
   "id": "5d26edbcd73408ce4fc5caf7",
   "url": "/shwetaagg",
   "username": "shwetaagg",
   "v": 1
  },
  "html": "?",
  "id": "5d26efcdd0e06b6675852957",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-07-11T08:14:05.426Z",
  "text": "?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/AvinashKorukollu",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/28903876?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/28903876?v=4&s=60",
   "displayName": "AvinashKorukollu",
   "gv": "4",
   "id": "5cb8cbf9d73408ce4fbe1aa0",
   "url": "/AvinashKorukollu",
   "username": "AvinashKorukollu",
   "v": 3
  },
  "html": "Hello there! Need one small help<br>I&#39;m trying to connect to an AWS lambda from my go application and using aws-sdk is one way to connect. Are there any libraries that could sign my request with aws_sigv4 over simple net/http?<br>P.S. googling this gave me bunch of results on how to build lambda on go",
  "id": "5d27f21d7dbfff324291579b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-07-12T02:36:13.724Z",
  "text": "Hello there! Need one small help\nI'm trying to connect to an AWS lambda from my go application and using aws-sdk is one way to connect. Are there any libraries that could sign my request with aws_sigv4 over simple net/http?\nP.S. googling this gave me bunch of results on how to build lambda on go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/craftsource",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/939498?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/939498?v=4&s=60",
   "displayName": "Todd Jason Lehn",
   "gv": "4",
   "id": "5ab3ef6bd73408ce4f92b2e5",
   "url": "/craftsource",
   "username": "craftsource",
   "v": 4
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"AvinashKorukollu\" class=\"mention\">@AvinashKorukollu</span> Not a library but a small code snippet: <a href=\"https://stackoverflow.com/a/56179113/1223579\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://stackoverflow.com/a/56179113/1223579</a>",
  "id": "5d2875ff3e2c7e3970707b8a",
  "issues": [],
  "mentions": [
   {
    "screenName": "AvinashKorukollu",
    "userId": "5cb8cbf9d73408ce4fbe1aa0",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 20,
  "sent": "2019-07-12T11:58:55.133Z",
  "text": "@AvinashKorukollu Not a library but a small code snippet: https://stackoverflow.com/a/56179113/1223579",
  "unread": false,
  "urls": [
   {
    "url": "https://stackoverflow.com/a/56179113/1223579"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/clash.io_gitlab",
   "avatarUrlMedium": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/4236182/avatar.png?s=128",
   "avatarUrlSmall": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/4236182/avatar.png?s=60",
   "displayName": "Clash.io",
   "id": "5d1c459cd73408ce4fc5204a",
   "url": "/clash.io_gitlab",
   "username": "clash.io_gitlab",
   "v": 1
  },
  "html": "How can i give region name in environment variable? I tried to insert the<br>export AWS_DEFAULT_REGION=ap-south-1<br>export AWS_REGION=ap-south-1<br>in  environment variable (~/.bash_profile) but it not works...",
  "id": "5d2edc794d750532415e3cd7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-07-17T08:29:45.194Z",
  "text": "How can i give region name in environment variable? I tried to insert the \nexport AWS_DEFAULT_REGION=ap-south-1\nexport AWS_REGION=ap-south-1\nin  environment variable (~/.bash_profile) but it not works...",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karthikheyavarma",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/43844524?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/43844524?v=4&s=60",
   "displayName": "karthikheyavarma",
   "gv": "4",
   "id": "5d2ef007d73408ce4fc64656",
   "url": "/karthikheyavarma",
   "username": "karthikheyavarma",
   "v": 3
  },
  "html": "can &quot;cloudfront.New&quot; be used with IAM information to access or perform read operations on existing cloud front distribution?",
  "id": "5d2ef0957dbfff3242c2e0a4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-07-17T09:55:33.313Z",
  "text": "can \"cloudfront.New\" be used with IAM information to access or perform read operations on existing cloud front distribution?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-07-17T11:40:00.039Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/the1337beauty",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16466938?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16466938?v=4&s=60",
   "displayName": "the1337beauty",
   "gv": "4",
   "id": "5d1b407ed73408ce4fc50e64",
   "url": "/the1337beauty",
   "username": "the1337beauty",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"clash.io_gitlab\" class=\"mention\">@clash.io_gitlab</span> in your ~/.bash_profile it should just be <code>export REGION=&quot;ap-south-1&quot;</code><br>then in your code you can do something like <code>REGION = os.Getenv(&quot;REGION&quot;)</code>",
  "id": "5d2f08814d750532415f7cd9",
  "issues": [],
  "mentions": [
   {
    "screenName": "clash.io_gitlab",
    "userId": "5d1c459cd73408ce4fc5204a",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2019-07-17T11:37:37.755Z",
  "text": "@clash.io_gitlab in your ~/.bash_profile it should just be `export REGION=\"ap-south-1\"`\nthen in your code you can do something like `REGION = os.Getenv(\"REGION\")`",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "editedAt": "2019-07-17T13:32:31.943Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/clash.io_gitlab",
   "avatarUrlMedium": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/4236182/avatar.png?s=128",
   "avatarUrlSmall": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/4236182/avatar.png?s=60",
   "displayName": "Clash.io",
   "id": "5d1c459cd73408ce4fc5204a",
   "url": "/clash.io_gitlab",
   "username": "clash.io_gitlab",
   "v": 1
  },
  "html": "thanks <span data-link-type=\"mention\" data-screen-name=\"the1337beauty\" class=\"mention\">@the1337beauty</span>  but i don&#39;t want to use region like REGION = os.Getenv(&quot;REGION&quot;), I want it to use it as AWS_ACCESS_KEY_ID and  AWS_SECRET_ACCESS_KEY is used...",
  "id": "5d2f235b54d338393722f1ce",
  "issues": [],
  "mentions": [
   {
    "screenName": "the1337beauty",
    "userId": "5d1b407ed73408ce4fc50e64",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2019-07-17T13:32:11.560Z",
  "text": "thanks @the1337beauty  but i don't want to use region like REGION = os.Getenv(\"REGION\"), I want it to use it as AWS_ACCESS_KEY_ID and  AWS_SECRET_ACCESS_KEY is used...",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/the1337beauty",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/16466938?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/16466938?v=4&s=60",
   "displayName": "the1337beauty",
   "gv": "4",
   "id": "5d1b407ed73408ce4fc50e64",
   "url": "/the1337beauty",
   "username": "the1337beauty",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"clash.io_gitlab\" class=\"mention\">@clash.io_gitlab</span> you mean like in a credentials file?",
  "id": "5d2f3b5d01621760bccf856b",
  "issues": [],
  "mentions": [
   {
    "screenName": "clash.io_gitlab",
    "userId": "5d1c459cd73408ce4fc5204a",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 22,
  "sent": "2019-07-17T15:14:37.694Z",
  "text": "@clash.io_gitlab you mean like in a credentials file?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/xrenold_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/a0f7ba5e424ca907a62344643bb25077?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/a0f7ba5e424ca907a62344643bb25077?s=60&d=identicon",
   "displayName": "Renold Xavier",
   "id": "5d318a22d73408ce4fc67611",
   "url": "/xrenold_gitlab",
   "username": "xrenold_gitlab",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"clash.io_gitlab\" class=\"mention\">@clash.io_gitlab</span> why dont you put region and other creds in a .env file, and then use static configuration as said in the aws docs???",
  "id": "5d318a74ec5abe7bbc0e8a05",
  "issues": [],
  "mentions": [
   {
    "screenName": "clash.io_gitlab",
    "userId": "5d1c459cd73408ce4fc5204a",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 21,
  "sent": "2019-07-19T09:16:36.019Z",
  "text": "@clash.io_gitlab why dont you put region and other creds in a .env file, and then use static configuration as said in the aws docs???",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/xrenold_gitlab",
   "avatarUrlMedium": "https://secure.gravatar.com/avatar/a0f7ba5e424ca907a62344643bb25077?s=128&d=identicon",
   "avatarUrlSmall": "https://secure.gravatar.com/avatar/a0f7ba5e424ca907a62344643bb25077?s=60&d=identicon",
   "displayName": "Renold Xavier",
   "id": "5d318a22d73408ce4fc67611",
   "url": "/xrenold_gitlab",
   "username": "xrenold_gitlab",
   "v": 1
  },
  "html": "this might help with reading from the env file: <a href=\"https://github.com/joho/godotenv\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/joho/godotenv</a>",
  "id": "5d318ab28fe53b671d9bcfa4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-07-19T09:17:38.809Z",
  "text": "this might help with reading from the env file: https://github.com/joho/godotenv",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/joho/godotenv"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/karthikheyavarma",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/43844524?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/43844524?v=4&s=60",
   "displayName": "karthikheyavarma",
   "gv": "4",
   "id": "5d2ef007d73408ce4fc64656",
   "url": "/karthikheyavarma",
   "username": "karthikheyavarma",
   "v": 3
  },
  "html": "Using go language how do we access AWS S3 bucket with just IAM access?",
  "id": "5d3727a7437a3a13484025a5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-07-23T15:28:39.019Z",
  "text": "Using go language how do we access AWS S3 bucket with just IAM access?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/SuddenGunter",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/15653599?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/15653599?v=4&s=60",
   "displayName": "Artem Kolomytsev",
   "gv": "4",
   "id": "57664e1cc2f0db084a1eb543",
   "url": "/SuddenGunter",
   "username": "SuddenGunter",
   "v": 8
  },
  "html": "Hi guys. Does aws charges money for api calls (e.g.  use aws sdk to look sqs queues list in region)? I can&#39;t find any info about pricing. I was playing around with some go benchmarks - and each benchmark made several calls to aws api - and I runned benchmarks many times. And this all was done in my employer aws subscription - well because I was benchmarking  the tool required realistic data at least from our staging env. Am I in trouble? ))",
  "id": "5d37898e5ea6e644ec0988d9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-07-23T22:26:22.184Z",
  "text": "Hi guys. Does aws charges money for api calls (e.g.  use aws sdk to look sqs queues list in region)? I can't find any info about pricing. I was playing around with some go benchmarks - and each benchmark made several calls to aws api - and I runned benchmarks many times. And this all was done in my employer aws subscription - well because I was benchmarking  the tool required realistic data at least from our staging env. Am I in trouble? ))",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I think you will pay for the network traffic consumed by those API calls",
  "id": "5d3b0beb6cf91f06f285e38e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 23,
  "sent": "2019-07-26T14:19:23.632Z",
  "text": "I think you will pay for the network traffic consumed by those API calls",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/hbd",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/6836886?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/6836886?v=4&s=60",
   "displayName": "Zak",
   "gv": "4",
   "id": "571e1a56659847a7aff4695c",
   "url": "/hbd",
   "username": "hbd",
   "v": 9
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"SuddenGunter\" class=\"mention\">@SuddenGunter</span> Yes, traffic to the internet is charged. Some traffic between AWS services in the same AZ is free. See &quot;Data Transfer within the same AWS Region&quot; here: <a href=\"https://aws.amazon.com/ec2/pricing/on-demand/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://aws.amazon.com/ec2/pricing/on-demand/</a>",
  "id": "5d3ca6abf0ff3e2bba7b4c76",
  "issues": [],
  "mentions": [
   {
    "screenName": "SuddenGunter",
    "userId": "57664e1cc2f0db084a1eb543",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2019-07-27T19:31:55.435Z",
  "text": "@SuddenGunter Yes, traffic to the internet is charged. Some traffic between AWS services in the same AZ is free. See \"Data Transfer within the same AWS Region\" here: https://aws.amazon.com/ec2/pricing/on-demand/",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/ec2/pricing/on-demand/"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/prayashm",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/424487?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/424487?v=4&s=60",
   "displayName": "Prayash Mohapatra",
   "gv": "4",
   "id": "56532ba516b6c7089cbbd53f",
   "url": "/prayashm",
   "username": "prayashm",
   "v": 12
  },
  "html": "Anyone has an example on how to use s3manager.BatchDownloadIterator?",
  "id": "5d431e124635976e0410e4a9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-08-01T17:14:58.046Z",
  "text": "Anyone has an example on how to use s3manager.BatchDownloadIterator?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/adityakamble_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/1135324602417082368/9GTugyuW.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/1135324602417082368/9GTugyuW_bigger.jpg",
   "displayName": "Aditya Kamble",
   "id": "5d44982ad73408ce4fc79bad",
   "url": "/adityakamble_twitter",
   "username": "adityakamble_twitter",
   "v": 1
  },
  "html": "Hi all,<br>I was trying to log the number of cloudformation stacks used by my aws account. Although when I use DescribeStacks or ListStacks and get the length of that array, it differs from the value that I see on AWS UI web page? Any help from anyone familiar with this would be appreciated a lot. Thanks!",
  "id": "5d4498c03d8f1f29e0fe96fa",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-08-02T20:10:40.405Z",
  "text": "Hi all,\nI was trying to log the number of cloudformation stacks used by my aws account. Although when I use DescribeStacks or ListStacks and get the length of that array, it differs from the value that I see on AWS UI web page? Any help from anyone familiar with this would be appreciated a lot. Thanks!",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/g/u/adityakamble_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/1135324602417082368/9GTugyuW.jpg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/1135324602417082368/9GTugyuW_bigger.jpg",
   "displayName": "Aditya Kamble",
   "id": "5d44982ad73408ce4fc79bad",
   "url": "/adityakamble_twitter",
   "username": "adityakamble_twitter",
   "v": 1
  },
  "html": "Just realized that it is a paginated response..will try modifying accordingly",
  "id": "5d449aace939ab2447e5cf71",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 22,
  "sent": "2019-08-02T20:18:52.117Z",
  "text": "Just realized that it is a paginated response..will try modifying accordingly",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/camhart",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3038809?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3038809?v=4&s=60",
   "displayName": "camhart",
   "gv": "4",
   "id": "54d54394db8155e6700f8ae2",
   "url": "/camhart",
   "username": "camhart",
   "v": 14
  },
  "html": "I&#39;m new to Go...  trying to simply make a dynamodb GetItem call.  However the call to GetItem blocks and never returns--no errors or anything logged (at least with my current settings).  Has anyone experienced this before?",
  "id": "5d45f58fd7fc954750f3d6bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 21,
  "sent": "2019-08-03T20:58:55.749Z",
  "text": "I'm new to Go...  trying to simply make a dynamodb GetItem call.  However the call to GetItem blocks and never returns--no errors or anything logged (at least with my current settings).  Has anyone experienced this before?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/webdev",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/49542?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/49542?v=4&s=60",
   "displayName": "George Blazer",
   "gv": "4",
   "id": "5461b97fdb8155e6700d388f",
   "url": "/webdev",
   "username": "webdev",
   "v": 6
  },
  "html": "Hello, is there any way to run a local version of Aurora for local development, so I don&#39;t need to access aws resource?",
  "id": "5d4899647c877461651a9994",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 20,
  "sent": "2019-08-05T21:02:28.698Z",
  "text": "Hello, is there any way to run a local version of Aurora for local development, so I don't need to access aws resource?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/Kalyanipremkumar",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/38685478?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/38685478?v=4&s=60",
   "displayName": "Kalyanipremkumar",
   "gv": "4",
   "id": "5d52e992d73408ce4fc85aee",
   "url": "/Kalyanipremkumar",
   "username": "Kalyanipremkumar",
   "v": 1
  },
  "html": "Is there any way to get the rightsize recommendation programatically??",
  "id": "5d52e9c4bb5364334c2550b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-08-13T16:48:04.263Z",
  "text": "Is there any way to get the rightsize recommendation programatically??",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/jesjess8181",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/52759880?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/52759880?v=4&s=60",
   "displayName": "jesjess8181",
   "gv": "4",
   "id": "5d464c44d73408ce4fc7a9b5",
   "url": "/jesjess8181",
   "username": "jesjess8181",
   "v": 10
  },
  "html": "Help find my code",
  "id": "5d557f51beba830fff9a5754",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2019-08-15T15:50:41.533Z",
  "text": "Help find my code",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/iancullinane",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3598675?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3598675?v=4&s=60",
   "displayName": "Ian Cullinane",
   "gv": "4",
   "id": "5b65d41ed73408ce4fa37f11",
   "url": "/iancullinane",
   "username": "iancullinane",
   "v": 11
  },
  "html": "Can s3 cross region replication have multiple spoke accounts pointing to a single central bucket?",
  "id": "5d5ab255bb5364334c619653",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-08-19T14:29:41.274Z",
  "text": "Can s3 cross region replication have multiple spoke accounts pointing to a single central bucket?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "I doubt but why don&#39;t you just test it?",
  "id": "5d5c0cd3bb5364334c6cdab2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-08-20T15:08:03.394Z",
  "text": "I doubt but why don't you just test it?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "hi",
  "id": "5d5c488e5ba4a84f695f3e4c",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-08-20T19:22:54.040Z",
  "text": "hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "NewDownloader or DownloadObjectsIterator ?",
  "id": "5d5c489b86c1a96ad506fd6e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-08-20T19:23:07.031Z",
  "text": "NewDownloader or DownloadObjectsIterator ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "or GetObject ?",
  "id": "5d5c490979229b63d98fd4d3",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-08-20T19:24:57.234Z",
  "text": "or GetObject ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "or s3manager.NewDownloaderWithClient ?",
  "id": "5d5c49117d3c1636410efaf8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-08-20T19:25:05.057Z",
  "text": "or s3manager.NewDownloaderWithClient ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/hankduan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1059345?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1059345?v=4&s=60",
   "displayName": "Hank Duan",
   "gv": "4",
   "id": "5d5de2bdd73408ce4fc8f419",
   "url": "/hankduan",
   "username": "hankduan",
   "v": 1
  },
  "html": "Is there any example of using swf with go?",
  "id": "5d5de300fa99e74f6a6c6497",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-08-22T00:34:08.973Z",
  "text": "Is there any example of using swf with go?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/hankduan",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1059345?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1059345?v=4&s=60",
   "displayName": "Hank Duan",
   "gv": "4",
   "id": "5d5de2bdd73408ce4fc8f419",
   "url": "/hankduan",
   "username": "hankduan",
   "v": 1
  },
  "html": "the document is really lacking for swf/go",
  "id": "5d5de30c67969726f9406eb5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-08-22T00:34:20.279Z",
  "text": "the document is really lacking for swf/go",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AjithKumar-Raj",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/21317792?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/21317792?v=4&s=60",
   "displayName": "Ajith Kumar Rajendran",
   "gv": "4",
   "id": "5d634346d73408ce4fc93a6c",
   "url": "/AjithKumar-Raj",
   "username": "AjithKumar-Raj",
   "v": 1
  },
  "html": "HI",
  "id": "5d634362dbf5ae2d42c5da14",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-08-26T02:26:42.958Z",
  "text": "HI",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AjithKumar-Raj",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/21317792?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/21317792?v=4&s=60",
   "displayName": "Ajith Kumar Rajendran",
   "gv": "4",
   "id": "5d634346d73408ce4fc93a6c",
   "url": "/AjithKumar-Raj",
   "username": "AjithKumar-Raj",
   "v": 1
  },
  "html": "In cost explorer API, I need a multi-dimensions filter for example  Key=&quot;SERVICE&quot;, Values=[&quot;EC2 - Other&quot;] and Key=&quot;USAGE_TYPE_GROUP&quot;,Values=[&quot;EC2: EBS - SSD(gp2)&quot;]",
  "id": "5d634505c8228962acc55f95",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-08-26T02:33:41.440Z",
  "text": "In cost explorer API, I need a multi-dimensions filter for example  Key=\"SERVICE\", Values=[\"EC2 - Other\"] and Key=\"USAGE_TYPE_GROUP\",Values=[\"EC2: EBS - SSD(gp2)\"]",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AjithKumar-Raj",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/21317792?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/21317792?v=4&s=60",
   "displayName": "Ajith Kumar Rajendran",
   "gv": "4",
   "id": "5d634346d73408ce4fc93a6c",
   "url": "/AjithKumar-Raj",
   "username": "AjithKumar-Raj",
   "v": 1
  },
  "html": "How can I achieve this?",
  "id": "5d63451ddbf5ae2d42c5e5bd",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-08-26T02:34:05.705Z",
  "text": "How can I achieve this?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/puppeteer701vungle",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/44464841?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/44464841?v=4&s=60",
   "displayName": "puppeteer701vungle",
   "gv": "4",
   "id": "5d31a3d0d73408ce4fc678d7",
   "url": "/puppeteer701vungle",
   "username": "puppeteer701vungle",
   "v": 3
  },
  "html": "Hi guys, I used code from this example to upload a directory to S3: <a href=\"https://aws.amazon.com/blogs/developer/aws-sdk-for-go-batch-operations-with-amazon-s3/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://aws.amazon.com/blogs/developer/aws-sdk-for-go-batch-operations-with-amazon-s3/</a>, but what I found is that a lot of memory is consumed, and it is not released after the upload. I know that the memory consumption comes from the upload, because if I comment out the upload code, the memory looks mora appropriate ",
  "id": "5d64453e4b1189084e6c6b5e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-08-26T20:46:54.436Z",
  "text": "Hi guys, I used code from this example to upload a directory to S3: https://aws.amazon.com/blogs/developer/aws-sdk-for-go-batch-operations-with-amazon-s3/, but what I found is that a lot of memory is consumed, and it is not released after the upload. I know that the memory consumption comes from the upload, because if I comment out the upload code, the memory looks mora appropriate ",
  "unread": false,
  "urls": [
   {
    "url": "https://aws.amazon.com/blogs/developer/aws-sdk-for-go-batch-operations-with-amazon-s3/"
   }
  ],
  "v": 1
 },
 {
  "editedAt": "2019-08-26T20:48:12.602Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/puppeteer701vungle",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/44464841?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/44464841?v=4&s=60",
   "displayName": "puppeteer701vungle",
   "gv": "4",
   "id": "5d31a3d0d73408ce4fc678d7",
   "url": "/puppeteer701vungle",
   "username": "puppeteer701vungle",
   "v": 3
  },
  "html": "Advice please, because this functionality is to memory hungry and I cannot find any other implementations of upload a directive to S3",
  "id": "5d644583c8228962accc8540",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-08-26T20:48:03.063Z",
  "text": "Advice please, because this functionality is to memory hungry and I cannot find any other implementations of upload a directive to S3",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/teivah",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/934784?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/934784?v=4&s=60",
   "displayName": "Teiva Harsanyi",
   "gv": "4",
   "id": "5af1ac99d73408ce4f988bb0",
   "url": "/teivah",
   "username": "teivah",
   "v": 19
  },
  "html": "what&#39;s the expected error type in case of a transient error?",
  "id": "5d67de4fce6f764db2fb374d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-08-29T14:16:47.913Z",
  "text": "what's the expected error type in case of a transient error?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/teivah",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/934784?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/934784?v=4&s=60",
   "displayName": "Teiva Harsanyi",
   "gv": "4",
   "id": "5af1ac99d73408ce4f988bb0",
   "url": "/teivah",
   "username": "teivah",
   "v": 19
  },
  "html": "let&#39;s say a temporary network outage and for example I was calling <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/ses/#SES.SendRawEmail\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/ses/#SES.SendRawEmail</a>",
  "id": "5d67de67ed0bf6683aa969e0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-08-29T14:17:11.535Z",
  "text": "let's say a temporary network outage and for example I was calling https://docs.aws.amazon.com/sdk-for-go/api/service/ses/#SES.SendRawEmail",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/ses/#SES.SendRawEmail"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/teivah",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/934784?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/934784?v=4&s=60",
   "displayName": "Teiva Harsanyi",
   "gv": "4",
   "id": "5af1ac99d73408ce4f988bb0",
   "url": "/teivah",
   "username": "teivah",
   "v": 19
  },
  "html": "the doc does not say what will be the error type",
  "id": "5d67de80a563676ace8cf97b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-08-29T14:17:36.705Z",
  "text": "the doc does not say what will be the error type",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/AjithKumar-Raj",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/21317792?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/21317792?v=4&s=60",
   "displayName": "Ajith Kumar Rajendran",
   "gv": "4",
   "id": "5d634346d73408ce4fc93a6c",
   "url": "/AjithKumar-Raj",
   "username": "AjithKumar-Raj",
   "v": 1
  },
  "html": "Hi",
  "id": "5d67e79185a9157cb4450a96",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-08-29T14:56:17.462Z",
  "text": "Hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/subodh-dharma",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/12895450?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/12895450?v=4&s=60",
   "displayName": "Subodh Dharmadhikari",
   "gv": "4",
   "id": "574099cac43b8c601974307b",
   "url": "/subodh-dharma",
   "username": "subodh-dharma",
   "v": 6
  },
  "html": "Is it safe to upgrade the aws-sdk-go from v1.16.26 to the current version i.e. v1.23.12 ? Any breaking changes that I should be checking for? ",
  "id": "5d682ba4f94e7d10a163db37",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-08-29T19:46:44.766Z",
  "text": "Is it safe to upgrade the aws-sdk-go from v1.16.26 to the current version i.e. v1.23.12 ? Any breaking changes that I should be checking for? ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/cgupta",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/925530?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/925530?v=4&s=60",
   "displayName": "Chirag Gupta",
   "gv": "4",
   "id": "5d68a67ed73408ce4fc99af2",
   "url": "/cgupta",
   "username": "cgupta",
   "v": 1
  },
  "html": "Hi",
  "id": "5d68a691ce6f764db2009c98",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-08-30T04:31:13.715Z",
  "text": "Hi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/cgupta",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/925530?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/925530?v=4&s=60",
   "displayName": "Chirag Gupta",
   "gv": "4",
   "id": "5d68a67ed73408ce4fc99af2",
   "url": "/cgupta",
   "username": "cgupta",
   "v": 1
  },
  "html": "my nested stack is failing when using golang createstack",
  "id": "5d68a6a0986f5c6ff46d7836",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-08-30T04:31:28.169Z",
  "text": "my nested stack is failing when using golang createstack",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/cgupta",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/925530?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/925530?v=4&s=60",
   "displayName": "Chirag Gupta",
   "gv": "4",
   "id": "5d68a67ed73408ce4fc99af2",
   "url": "/cgupta",
   "username": "cgupta",
   "v": 1
  },
  "html": "if I try same stack using AWS CLI or console it works",
  "id": "5d68a6abbee75051a41eb824",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-08-30T04:31:39.370Z",
  "text": "if I try same stack using AWS CLI or console it works",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/anjul",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1264595?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1264595?v=4&s=60",
   "displayName": "Anjul Sharma",
   "gv": "4",
   "id": "5b11fa2ad73408ce4f9b9a19",
   "url": "/anjul",
   "username": "anjul",
   "v": 24
  },
  "html": "unable to use aws/session in golang as getting package github.com/aws/aws-sdk-go/aws/session/...: exit status 1",
  "id": "5d6f4f8cdc5bb2549de200c5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2019-09-04T05:45:45.655Z",
  "text": "unable to use aws/session in golang as getting package github.com/aws/aws-sdk-go/aws/session/...: exit status 1",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/anjul",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1264595?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1264595?v=4&s=60",
   "displayName": "Anjul Sharma",
   "gv": "4",
   "id": "5b11fa2ad73408ce4f9b9a19",
   "url": "/anjul",
   "username": "anjul",
   "v": 24
  },
  "html": "does anybody facing the same issue?",
  "id": "5d6f4f971a16fc388740bfc0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2019-09-04T05:45:59.565Z",
  "text": "does anybody facing the same issue?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ranman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/175163?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/175163?v=4&s=60",
   "displayName": "J. Randall Hunt",
   "gv": "4",
   "id": "529c6dd9ed5ab0b3bf04dcd6",
   "url": "/ranman",
   "username": "ranman",
   "v": 7
  },
  "html": "is there a bug in the docs listing the import strings incorrectly? e.g. import &quot;<a href=\"http://github.com/aws/aws-sdk-go/github.com/aws/aws-sdk-go/service/connect\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">github.com/aws/aws-sdk-go/github.com/aws/aws-sdk-go/service/connect</a>&quot;",
  "id": "5d78286fc38d634123d08d40",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2019-09-10T22:49:19.227Z",
  "text": "is there a bug in the docs listing the import strings incorrectly? e.g. import \"github.com/aws/aws-sdk-go/github.com/aws/aws-sdk-go/service/connect\"",
  "unread": false,
  "urls": [
   {
    "url": "http://github.com/aws/aws-sdk-go/github.com/aws/aws-sdk-go/service/connect"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/ranman",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/175163?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/175163?v=4&s=60",
   "displayName": "J. Randall Hunt",
   "gv": "4",
   "id": "529c6dd9ed5ab0b3bf04dcd6",
   "url": "/ranman",
   "username": "ranman",
   "v": 7
  },
  "html": "looks like github.com is double listed?",
  "id": "5d782875767de913fcba008f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2019-09-10T22:49:25.473Z",
  "text": "looks like github.com is double listed?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/sumanchowdare",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/22829813?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/22829813?v=4&s=60",
   "displayName": "sumanchowdare",
   "gv": "4",
   "id": "5bb48e09d73408ce4faa334a",
   "url": "/sumanchowdare",
   "username": "sumanchowdare",
   "v": 9
  },
  "html": "Hello folks,<br>Can anyone help me how to automate fallowing using ansible for eg: assume I have an aws images AMI-123latest and currently I\u2019m already running 10 ec2 instances running on old AMI-123OLD so now i have to automate the upgradation of all 10 ec2 instances to latest AMI-123latest<br>suuggest best practies to automate  this usecase If possible any sample scripts URL in github ??",
  "id": "5d7a5fba62f0416c19b060c8",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-09-12T15:09:46.917Z",
  "text": "Hello folks,\nCan anyone help me how to automate fallowing using ansible for eg: assume I have an aws images AMI-123latest and currently I\u2019m already running 10 ec2 instances running on old AMI-123OLD so now i have to automate the upgradation of all 10 ec2 instances to latest AMI-123latest\nsuuggest best practies to automate  this usecase If possible any sample scripts URL in github ??",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/iancullinane",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3598675?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3598675?v=4&s=60",
   "displayName": "Ian Cullinane",
   "gv": "4",
   "id": "5b65d41ed73408ce4fa37f11",
   "url": "/iancullinane",
   "username": "iancullinane",
   "v": 11
  },
  "html": "Can a lambda that is triggered from an S3 event in us-east-1 access us-east-2? I am trying to do thing by creating a session for each, but when I try and specify a region it seems to default to whatever region the bucket is in.",
  "id": "5d7a64210099b81a513a78d7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2019-09-12T15:28:33.835Z",
  "text": "Can a lambda that is triggered from an S3 event in us-east-1 access us-east-2? I am trying to do thing by creating a session for each, but when I try and specify a region it seems to default to whatever region the bucket is in.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"iancullinane\" class=\"mention\">@iancullinane</span> the Lambda runtime has no such limitations, but it may default to a given region ",
  "id": "5d7a78200fc49226624f3315",
  "issues": [],
  "mentions": [
   {
    "screenName": "iancullinane",
    "userId": "5b65d41ed73408ce4fa37f11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 15,
  "sent": "2019-09-12T16:53:52.510Z",
  "text": "@iancullinane the Lambda runtime has no such limitations, but it may default to a given region ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/rahul-satal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6859257?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6859257?v=4&s=60",
   "displayName": "Rahul satal",
   "gv": "4",
   "id": "5d7b65cbd73408ce4fcad3ea",
   "url": "/rahul-satal",
   "username": "rahul-satal",
   "v": 1
  },
  "html": "Hi all,<br>I have created a lambda function to query Athena and it is working fine. But currently, the query results are getting stored on S3. But I want to consume the result directly from lambda function and email it using SES. Is it possible? Otherwise, I will have to fetch the result back from S3 and then email it.",
  "id": "5d7b66f672fe12511198f68e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-09-13T09:52:54.847Z",
  "text": "Hi all,\nI have created a lambda function to query Athena and it is working fine. But currently, the query results are getting stored on S3. But I want to consume the result directly from lambda function and email it using SES. Is it possible? Otherwise, I will have to fetch the result back from S3 and then email it.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-09-13T13:43:04.692Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/toho64",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/19485321?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/19485321?v=4&s=60",
   "displayName": "toho64",
   "gv": "4",
   "id": "5d7b9c40d73408ce4fcad9d1",
   "url": "/toho64",
   "username": "toho64",
   "v": 1
  },
  "html": "Hi all, is there anywhere a small example for uploading a sound file and getting the",
  "id": "5d7b9cabc82c2e0d7ecaacf7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2019-09-13T13:42:03.591Z",
  "text": "Hi all, is there anywhere a small example for uploading a sound file and getting the",
  "unread": false,
  "urls": [],
  "v": 3
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/toho64",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/19485321?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/19485321?v=4&s=60",
   "displayName": "toho64",
   "gv": "4",
   "id": "5d7b9c40d73408ce4fcad9d1",
   "url": "/toho64",
   "username": "toho64",
   "v": 1
  },
  "html": "transcribed text ?",
  "id": "5d7b9cbcd5c523462f76dbc4",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 18,
  "sent": "2019-09-13T13:42:20.846Z",
  "text": "transcribed text ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/iancullinane",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3598675?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3598675?v=4&s=60",
   "displayName": "Ian Cullinane",
   "gv": "4",
   "id": "5b65d41ed73408ce4fa37f11",
   "url": "/iancullinane",
   "username": "iancullinane",
   "v": 11
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"rahul-satal\" class=\"mention\">@rahul-satal</span> you can use bucket events to trigger a lambda directly from S3. This is the approach I would use as you still keep a record of the data, which you can store on Glacier or delete when you don&#39;t need it anymore",
  "id": "5d7ba27ed5c523462f770cba",
  "issues": [],
  "mentions": [
   {
    "screenName": "rahul-satal",
    "userId": "5d7b65cbd73408ce4fcad3ea",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 18,
  "sent": "2019-09-13T14:06:54.042Z",
  "text": "@rahul-satal you can use bucket events to trigger a lambda directly from S3. This is the approach I would use as you still keep a record of the data, which you can store on Glacier or delete when you don't need it anymore",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/iancullinane",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3598675?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3598675?v=4&s=60",
   "displayName": "Ian Cullinane",
   "gv": "4",
   "id": "5b65d41ed73408ce4fa37f11",
   "url": "/iancullinane",
   "username": "iancullinane",
   "v": 11
  },
  "html": "Does a Lambda doing aws sdk operations (specifically s3 to s3) inside need any inbound or outbound security group rules? Everything it does is within AWS",
  "id": "5d7ba2e6577fc14c7fba5cbe",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 19,
  "sent": "2019-09-13T14:08:38.079Z",
  "text": "Does a Lambda doing aws sdk operations (specifically s3 to s3) inside need any inbound or outbound security group rules? Everything it does is within AWS",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/rahul-satal",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/6859257?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/6859257?v=4&s=60",
   "displayName": "Rahul satal",
   "gv": "4",
   "id": "5d7b65cbd73408ce4fcad3ea",
   "url": "/rahul-satal",
   "username": "rahul-satal",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"iancullinane\" class=\"mention\">@iancullinane</span>, Probably yes. I can use bucket events to trigger a lambda directly from S3, but I don&#39;t want one extra lambda function. However, I have found a way to do it in the same lambda function. After making the query on Athena, we can use another class - GetQueryResults to get the result back in the same lambda. Link - <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/athena/#Athena.GetQueryResults\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/athena/#Athena.GetQueryResults</a>.  Thanks for your reply.",
  "id": "5d7ba47405fd3716951b2226",
  "issues": [],
  "mentions": [
   {
    "screenName": "iancullinane",
    "userId": "5b65d41ed73408ce4fa37f11",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 19,
  "sent": "2019-09-13T14:15:16.686Z",
  "text": "@iancullinane, Probably yes. I can use bucket events to trigger a lambda directly from S3, but I don't want one extra lambda function. However, I have found a way to do it in the same lambda function. After making the query on Athena, we can use another class - GetQueryResults to get the result back in the same lambda. Link - https://docs.aws.amazon.com/sdk-for-go/api/service/athena/#Athena.GetQueryResults.  Thanks for your reply.",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/athena/#Athena.GetQueryResults"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jeffotoni",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/1092879?v=4&s=60",
   "displayName": "jefferson otoni lima",
   "gv": "4",
   "id": "58b63979d73408ce4f4d96ef",
   "url": "/jeffotoni",
   "username": "jeffotoni",
   "v": 10
  },
  "html": "Best way to implement an Object not exist?",
  "id": "5d7fdd22577fc14c7fd747ed",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-09-16T19:06:10.209Z",
  "text": "Best way to implement an Object not exist?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/dre2004",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/29732449?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/29732449?v=4&s=60",
   "displayName": "dre2004",
   "gv": "4",
   "id": "5d80c183d73408ce4fcb3392",
   "url": "/dre2004",
   "username": "dre2004",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"ranman\" class=\"mention\">@ranman</span> I think so, I noticed that too when I was looking at the docco today.",
  "id": "5d80c1b2a6f48964491e4fcc",
  "issues": [],
  "mentions": [
   {
    "screenName": "ranman",
    "userId": "529c6dd9ed5ab0b3bf04dcd6",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 13,
  "sent": "2019-09-17T11:21:22.198Z",
  "text": "@ranman I think so, I noticed that too when I was looking at the docco today.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/deleemarf",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/30146157?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/30146157?v=4&s=60",
   "displayName": "deleemarf",
   "gv": "4",
   "id": "5d8219bbd73408ce4fcb57a8",
   "url": "/deleemarf",
   "username": "deleemarf",
   "v": 1
  },
  "html": "Hi Im trying to trigger lambda from API Gateway and then export a table with custom fields in Dynamo db to csv , prefix the file with current time stamp and save it to S3... finally send the link of the file.<br>I&#39;m trying to figure out how to export a table with custom fields in Dynamo db to csv? any tips?",
  "id": "5d821afda38dae3a63737f6b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2019-09-18T11:54:37.505Z",
  "text": "Hi Im trying to trigger lambda from API Gateway and then export a table with custom fields in Dynamo db to csv , prefix the file with current time stamp and save it to S3... finally send the link of the file. \nI'm trying to figure out how to export a table with custom fields in Dynamo db to csv? any tips?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/adityakrgupta",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/47442018?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/47442018?v=4&s=60",
   "displayName": "Aditya Kumar Gupta",
   "gv": "4",
   "id": "5d83702ad73408ce4fcb77ab",
   "url": "/adityakrgupta",
   "username": "adityakrgupta",
   "v": 1
  },
  "html": "I need help with figuring out how to make queries to Athana using golang sdk,can anyone link to some understandable tutorials? The documentation is very poorly written for Golang.",
  "id": "5d83709c2438b53a64dc4d33",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-09-19T12:12:12.943Z",
  "text": "I need help with figuring out how to make queries to Athana using golang sdk,can anyone link to some understandable tutorials? The documentation is very poorly written for Golang.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nebi-frame",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/47395523?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/47395523?v=4&s=60",
   "displayName": "nebi-frame",
   "gv": "4",
   "id": "5cbd5ac7d73408ce4fbe534c",
   "url": "/nebi-frame",
   "username": "nebi-frame",
   "v": 3
  },
  "html": "Hey all, is anyone using terraform ? I found that terraform-provider plugin is not using most up-to-date aws go sdk ?",
  "id": "5d839765c77f285fb1a74dc0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2019-09-19T14:57:41.432Z",
  "text": "Hey all, is anyone using terraform ? I found that terraform-provider plugin is not using most up-to-date aws go sdk ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/nebi-frame",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/47395523?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/47395523?v=4&s=60",
   "displayName": "nebi-frame",
   "gv": "4",
   "id": "5cbd5ac7d73408ce4fbe534c",
   "url": "/nebi-frame",
   "username": "nebi-frame",
   "v": 3
  },
  "html": "Any reason why?",
  "id": "5d839769901bb84d90375224",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 17,
  "sent": "2019-09-19T14:57:45.217Z",
  "text": "Any reason why?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-09-25T18:19:31.479Z",
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/g/u/sanjeevmaheve_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/458810897587113984/KjDuEP5o.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/458810897587113984/KjDuEP5o_bigger.jpeg",
   "displayName": "Sanjeev Kumar Maheve",
   "id": "5d8baef8d73408ce4fcc0ac0",
   "url": "/sanjeevmaheve_twitter",
   "username": "sanjeevmaheve_twitter",
   "v": 1
  },
  "html": "Hi here. I am looking to write unit test cases for my go program that uses DynamoDB for storing and retrieving data.  Is it okay to use <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbiface/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbiface/</a> and I guess it does support most of the functions of DynamoDB.",
  "id": "5d8baf5da929c26bf4c7f9c9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 14,
  "sent": "2019-09-25T18:18:05.709Z",
  "text": "Hi here. I am looking to write unit test cases for my go program that uses DynamoDB for storing and retrieving data.  Is it okay to use https://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbiface/ and I guess it does support most of the functions of DynamoDB.",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/dynamodb/dynamodbiface/"
   }
  ],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Yes, I also use these a lot for mocking API calls for unit tests.",
  "id": "5d8c0970692d464f796ec382",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-09-26T00:42:24.825Z",
  "text": "Yes, I also use these a lot for mocking API calls for unit tests.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "This should help you get started <a href=\"https://github.com/AutoSpotting/AutoSpotting/blob/master/core/mock_test.go\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">https://github.com/AutoSpotting/AutoSpotting/blob/master/core/mock_test.go</a>",
  "id": "5d8c09c4cdbb7d4f7889b94b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 16,
  "sent": "2019-09-26T00:43:48.925Z",
  "text": "This should help you get started https://github.com/AutoSpotting/AutoSpotting/blob/master/core/mock_test.go",
  "unread": false,
  "urls": [
   {
    "url": "https://github.com/AutoSpotting/AutoSpotting/blob/master/core/mock_test.go"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/g/u/sanjeevmaheve_twitter",
   "avatarUrlMedium": "https://pbs.twimg.com/profile_images/458810897587113984/KjDuEP5o.jpeg",
   "avatarUrlSmall": "https://pbs.twimg.com/profile_images/458810897587113984/KjDuEP5o_bigger.jpeg",
   "displayName": "Sanjeev Kumar Maheve",
   "id": "5d8baef8d73408ce4fcc0ac0",
   "url": "/sanjeevmaheve_twitter",
   "username": "sanjeevmaheve_twitter",
   "v": 1
  },
  "html": "Thanks Cristian",
  "id": "5d8c2be5fb00d668fa331c1d",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-09-26T03:09:25.841Z",
  "text": "Thanks Cristian",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/suren4Kites",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/50832843?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/50832843?v=4&s=60",
   "displayName": "suren4Kites",
   "gv": "4",
   "id": "5d8f44d6d73408ce4fcc4e62",
   "url": "/suren4Kites",
   "username": "suren4Kites",
   "v": 1
  },
  "html": "Hi, how can create and run Gremlin queries using this  ",
  "id": "5d8f451347de0a719d2672e5",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-09-28T11:33:39.165Z",
  "text": "Hi, how can create and run Gremlin queries using this  ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/zhuhesheng",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/9285333?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/9285333?v=4&s=60",
   "displayName": "zhuhesheng",
   "gv": "4",
   "id": "5d8dcbe2d73408ce4fcc3510",
   "url": "/zhuhesheng",
   "username": "zhuhesheng",
   "v": 1
  },
  "html": "Hi All, how can use aws stscreds with IRSA",
  "id": "5d904ddc0e829f6047470740",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 15,
  "sent": "2019-09-29T06:23:24.488Z",
  "text": "Hi All, how can use aws stscreds with IRSA",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Krithika3",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11369796?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11369796?v=4&s=60",
   "displayName": "Krithika3",
   "gv": "4",
   "id": "593863b5d73408ce4f6584f4",
   "url": "/Krithika3",
   "username": "Krithika3",
   "v": 3
  },
  "html": "HI All, has anyone been successfully able to use the GetQueryResultsPages for athena go lang sdk?",
  "id": "5d9a1ca09735874673087a97",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-06T16:56:00.645Z",
  "text": "HI All, has anyone been successfully able to use the GetQueryResultsPages for athena go lang sdk?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/Krithika3",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/11369796?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/11369796?v=4&s=60",
   "displayName": "Krithika3",
   "gv": "4",
   "id": "593863b5d73408ce4f6584f4",
   "url": "/Krithika3",
   "username": "Krithika3",
   "v": 3
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"adityakrgupta\" class=\"mention\">@adityakrgupta</span> ",
  "id": "5d9a1ca5940b4c2fc086d4b7",
  "issues": [],
  "mentions": [
   {
    "screenName": "adityakrgupta",
    "userId": "5d83702ad73408ce4fcb77ab",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-06T16:56:05.900Z",
  "text": "@adityakrgupta ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/gabrieljackson",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/3694686?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/3694686?v=4&s=60",
   "displayName": "Gabe Jackson",
   "gv": "4",
   "id": "5d9b9475d73408ce4fcd25d8",
   "url": "/gabrieljackson",
   "username": "gabrieljackson",
   "v": 1
  },
  "html": "<p>Hey there. I am struggling to get the S3 Canonical ID of an IAM user using the Go SDK.</p><p>Despite creating an S3 client with hardcoded access ID/Secret values of the IAM user in question, the ID I am receiving from the API is the one used to create the IAM user in the first place. For example, my current project creates a new IAM user, creates a new Access Key for that user, and then lists that user&#39;s buckets using the new Access Key in order to receive the <code>ListBucketsOutput.Owner.ID</code>. The issue here is that the ID returned is the one used to create the IAM user in the first place despite triple-checking that I am using a completely new client/session.</p><p>Anyone know what may be happening here?</p>",
  "id": "5d9b98c2e8de6f3ca058920f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-07T19:57:54.093Z",
  "text": "Hey there. I am struggling to get the S3 Canonical ID of an IAM user using the Go SDK.\n\nDespite creating an S3 client with hardcoded access ID/Secret values of the IAM user in question, the ID I am receiving from the API is the one used to create the IAM user in the first place. For example, my current project creates a new IAM user, creates a new Access Key for that user, and then lists that user's buckets using the new Access Key in order to receive the `ListBucketsOutput.Owner.ID`. The issue here is that the ID returned is the one used to create the IAM user in the first place despite triple-checking that I am using a completely new client/session.\n\nAnyone know what may be happening here?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-10-07T21:17:18.263Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/jaredkeithwhite",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/3399425?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/3399425?v=4&s=60",
   "displayName": "jaredkeithwhite",
   "gv": "4",
   "id": "5d9b9f0ad73408ce4fcd269c",
   "url": "/jaredkeithwhite",
   "username": "jaredkeithwhite",
   "v": 1
  },
  "html": "Hi there.  I&#39;m attempting to download some files from S3 (using the Golang SDK), and while the downloads are occurring to process these bytes concurrently.  For example, I know the files to be zipped (via gzip) and I understand the format of the underlying files for processing purposes as well.   My questions are:  is it concurrently safe to call <code>Bytes()</code> on the <code>WriteAtBuffer</code>?  Does invoking this clear the buffer of those bytes, such that subsequent calls to WriteAt do not fail?  And:  Is this the typical method by which one concurrently drains the buffer while writing to it?  Note that the process of reading from the buffer (e.g., the calls to <code>Bytes()</code> shall be performed in a separate Goroutine).  Thanks in advance. ",
  "id": "5d9bab4beac5612d22d174f6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-07T21:16:59.983Z",
  "text": "Hi there.  I'm attempting to download some files from S3 (using the Golang SDK), and while the downloads are occurring to process these bytes concurrently.  For example, I know the files to be zipped (via gzip) and I understand the format of the underlying files for processing purposes as well.   My questions are:  is it concurrently safe to call `Bytes()` on the `WriteAtBuffer`?  Does invoking this clear the buffer of those bytes, such that subsequent calls to WriteAt do not fail?  And:  Is this the typical method by which one concurrently drains the buffer while writing to it?  Note that the process of reading from the buffer (e.g., the calls to `Bytes()` shall be performed in a separate Goroutine).  Thanks in advance. ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/Clasyc",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/17416365?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/17416365?v=4&s=60",
   "displayName": "Deividas Pek\u016bnas",
   "gv": "4",
   "id": "5d9c9410d73408ce4fcd386b",
   "url": "/Clasyc",
   "username": "Clasyc",
   "v": 1
  },
  "html": "Hello, I&#39;m trying to import SSL certificate using ACM sdk Go.  I&#39;m getting error &quot;The certificate field contains more than one certificate. You can specify only one certificate in this field.&quot; If I&#39;m importing same  certificate using aws ui console, everything works just fine. What I could possibly be doing wrong.",
  "id": "5d9c94f7940b4c2fc09835c6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2019-10-08T13:53:59.786Z",
  "text": "Hello, I'm trying to import SSL certificate using ACM sdk Go.  I'm getting error \"The certificate field contains more than one certificate. You can specify only one certificate in this field.\" If I'm importing same  certificate using aws ui console, everything works just fine. What I could possibly be doing wrong.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/janitha09",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/13897587?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/13897587?v=4&s=60",
   "displayName": "janitha09",
   "gv": "4",
   "id": "5b22e838d73408ce4f9d652a",
   "url": "/janitha09",
   "username": "janitha09",
   "v": 2
  },
  "html": "is <code>service/ec2/api.go</code> auto generated? I see 6 contributors the PR I was about to open has a warning <code>For changes to files under the</code>/model/<code>folder, and manual edits to autogenerated code (e.g.</code>/service/s3/api.go<code>) please create an Issue instead of a PR for those type of changes</code> how is this done <code>src/github.com/aws/aws-sdk-go/models/apis/ec2/2016-11-15/docs-2.json</code>",
  "id": "5da0dc1665dd8569a0bdb09e",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-11T19:46:30.942Z",
  "text": "is `service/ec2/api.go` auto generated? I see 6 contributors the PR I was about to open has a warning `For changes to files under the `/model/` folder, and manual edits to autogenerated code (e.g. `/service/s3/api.go`) please create an Issue instead of a PR for those type of changes` how is this done `src/github.com/aws/aws-sdk-go/models/apis/ec2/2016-11-15/docs-2.json`",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/rajthakurbcone",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30458768?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30458768?v=4&s=60",
   "displayName": "Raj Thakur",
   "gv": "4",
   "id": "5da42d03d73408ce4fcdc0a6",
   "url": "/rajthakurbcone",
   "username": "rajthakurbcone",
   "v": 1
  },
  "html": "Is there  a simple way where I could execute an athena query from go lang and instead  of getting the query id, I want the results directly.",
  "id": "5da42d45870fa33a4decd165",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2019-10-14T08:09:41.058Z",
  "text": "Is there  a simple way where I could execute an athena query from go lang and instead  of getting the query id, I want the results directly.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-05.gitter.im/gh/uv/4/rajthakurbcone",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/30458768?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/30458768?v=4&s=60",
   "displayName": "Raj Thakur",
   "gv": "4",
   "id": "5da42d03d73408ce4fcdc0a6",
   "url": "/rajthakurbcone",
   "username": "rajthakurbcone",
   "v": 1
  },
  "html": "I  read a couple of articles, but all of them first execute the query to get id, and then use query id to get results. Is there a way to have these two steps at once only.",
  "id": "5da42d8380e62056e4000243",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 13,
  "sent": "2019-10-14T08:10:43.058Z",
  "text": "I  read a couple of articles, but all of them first execute the query to get id, and then use query id to get results. Is there a way to have these two steps at once only.",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jazztong",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15000126?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15000126?v=4&s=60",
   "displayName": "jazztong",
   "gv": "4",
   "id": "5a0a4252d73408ce4f7e7556",
   "url": "/jazztong",
   "username": "jazztong",
   "v": 2
  },
  "html": "hihi",
  "id": "5da6af0d809de9699f471ebc",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-16T05:47:57.344Z",
  "text": "hihi",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/jazztong",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/15000126?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/15000126?v=4&s=60",
   "displayName": "jazztong",
   "gv": "4",
   "id": "5a0a4252d73408ce4f7e7556",
   "url": "/jazztong",
   "username": "jazztong",
   "v": 2
  },
  "html": "wonder anyone can guide me the API for cloudwatch insight in GO",
  "id": "5da6af2939d0c70757ba1b4b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-16T05:48:25.286Z",
  "text": "wonder anyone can guide me the API for cloudwatch insight in GO",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-10-19T17:51:02.223Z",
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/PrasanjitPj17_gitlab",
   "avatarUrlMedium": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/4786181/avatar.png?s=128",
   "avatarUrlSmall": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/4786181/avatar.png?s=60",
   "displayName": "Prasanjit Pattanaik",
   "id": "5dab4bacd73408ce4fce62a9",
   "url": "/PrasanjitPj17_gitlab",
   "username": "PrasanjitPj17_gitlab",
   "v": 1
  },
  "html": "What can i do to <strong>DeleteObjects</strong> method as it take arguments of DeleteObjectsInput struct type but how to delar that struct i don&#39;t know and which variable in that struct is for what that also i don&#39;t know ",
  "id": "5dab4c4f714b8b053820eee6",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-19T17:47:59.102Z",
  "text": "What can i do to **DeleteObjects** method as it take arguments of DeleteObjectsInput struct type but how to delar that struct i don't know and which variable in that struct is for what that also i don't know ",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "The documentation contains a pretty good example <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.DeleteObject\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.DeleteObject</a>",
  "id": "5dab63ea0fdc4b6507197451",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-19T19:28:42.536Z",
  "text": "The documentation contains a pretty good example https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.DeleteObject",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.DeleteObject"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/PrasanjitPj17_gitlab",
   "avatarUrlMedium": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/4786181/avatar.png?s=128",
   "avatarUrlSmall": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/4786181/avatar.png?s=60",
   "displayName": "Prasanjit Pattanaik",
   "id": "5dab4bacd73408ce4fce62a9",
   "url": "/PrasanjitPj17_gitlab",
   "username": "PrasanjitPj17_gitlab",
   "v": 1
  },
  "html": "<span data-link-type=\"mention\" data-screen-name=\"cristim\" class=\"mention\">@cristim</span>  i want to use the <em>DeleteObjects</em>  not DeleteObject that is working fine for a single object ",
  "id": "5dabe364e3646f24c75a1e9b",
  "issues": [],
  "mentions": [
   {
    "screenName": "cristim",
    "userId": "558d211615522ed4b3e2d5da",
    "userIds": []
   }
  ],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-20T04:32:36.851Z",
  "text": "@cristim  i want to use the *DeleteObjects*  not DeleteObject that is working fine for a single object ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "Have a look at the documentation of DeleteObjects, there are similar examples as well ",
  "id": "5dac1da524af474d28e25c30",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 12,
  "sent": "2019-10-20T08:41:09.450Z",
  "text": "Have a look at the documentation of DeleteObjects, there are similar examples as well ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/PrasanjitPj17_gitlab",
   "avatarUrlMedium": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/4786181/avatar.png?s=128",
   "avatarUrlSmall": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/4786181/avatar.png?s=60",
   "displayName": "Prasanjit Pattanaik",
   "id": "5dab4bacd73408ce4fce62a9",
   "url": "/PrasanjitPj17_gitlab",
   "username": "PrasanjitPj17_gitlab",
   "v": 1
  },
  "html": "I want to delete a directory from S3 that i uploaded so what should i use ?",
  "id": "5dad7c9478e4974ace94b3a2",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-21T09:38:28.653Z",
  "text": "I want to delete a directory from S3 that i uploaded so what should i use ?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/g/u/PrasanjitPj17_gitlab",
   "avatarUrlMedium": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/4786181/avatar.png?s=128",
   "avatarUrlSmall": "https://assets.gitlab-static.net/uploads/-/system/user/avatar/4786181/avatar.png?s=60",
   "displayName": "Prasanjit Pattanaik",
   "id": "5dab4bacd73408ce4fce62a9",
   "url": "/PrasanjitPj17_gitlab",
   "username": "PrasanjitPj17_gitlab",
   "v": 1
  },
  "html": "<p>I am trying to delete a total directory from S3 that i uploaded to S3 and i want to delete it by using the Golang SDK , But not able to do that , i am able to delete the files present in the Directory in S3 but not that total Directory using the Golang SDK i need an example on it.</p><p>Example i uploaded a Directory test inside that there is one folder test.txt i am able to delete the test.txt file from S3 by using golang SDK but not able to delete the total Directory test from S3 using the Golang SDK DeleteObjects or DeleteObject</p>",
  "id": "5dad87ab8612756a5867c7b0",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-21T10:25:47.479Z",
  "text": "I am trying to delete a total directory from S3 that i uploaded to S3 and i want to delete it by using the Golang SDK , But not able to do that , i am able to delete the files present in the Directory in S3 but not that total Directory using the Golang SDK i need an example on it.\n\nExample i uploaded a Directory test inside that there is one folder test.txt i am able to delete the test.txt file from S3 by using golang SDK but not able to delete the total Directory test from S3 using the Golang SDK DeleteObjects or DeleteObject\n",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "S3 is not a filesysyem, directories are just a UI thing, S3 is just a key/value blob store. You  will need to list all objects with the common &quot;Directory&quot; path then delete the objects one by one ",
  "id": "5dade514fb4dab784add0cb7",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-21T17:04:20.316Z",
  "text": "S3 is not a filesysyem, directories are just a UI thing, S3 is just a key/value blob store. You  will need to list all objects with the common \"Directory\" path then delete the objects one by one ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-02.gitter.im/gh/uv/4/cristim",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/95209?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/95209?v=4&s=60",
   "displayName": "Cristian M\u0103gheru\u0219an-Stanciu @magheru_san",
   "gv": "4",
   "id": "558d211615522ed4b3e2d5da",
   "url": "/cristim",
   "username": "cristim",
   "v": 99
  },
  "html": "You can generate the input of DeleteObjects from the output of the list operation ",
  "id": "5dade5f5e469ef43583bf261",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-21T17:08:05.389Z",
  "text": "You can generate the input of DeleteObjects from the output of the list operation ",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/TristanJanicki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/46827578?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/46827578?v=4&s=60",
   "displayName": "Tristan Janicki",
   "gv": "4",
   "id": "5dadf833d73408ce4fce8e25",
   "url": "/TristanJanicki",
   "username": "TristanJanicki",
   "v": 1
  },
  "html": "Hey I&#39;m having trouble using AdminInitiateAuth in the aws golang sdk, is anyone able to help?",
  "id": "5dadf86814d55a37854e4c53",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-21T18:26:48.017Z",
  "text": "Hey I'm having trouble using AdminInitiateAuth in the aws golang sdk, is anyone able to help?",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/TristanJanicki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/46827578?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/46827578?v=4&s=60",
   "displayName": "Tristan Janicki",
   "gv": "4",
   "id": "5dadf833d73408ce4fce8e25",
   "url": "/TristanJanicki",
   "username": "TristanJanicki",
   "v": 1
  },
  "html": "it keeps saying I&#39;m missing the USERNAME parameter but I am passing it",
  "id": "5dadf89aa03ae1584fe3bd1f",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-21T18:27:38.483Z",
  "text": "it keeps saying I'm missing the USERNAME parameter but I am passing it",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/TristanJanicki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/46827578?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/46827578?v=4&s=60",
   "displayName": "Tristan Janicki",
   "gv": "4",
   "id": "5dadf833d73408ce4fce8e25",
   "url": "/TristanJanicki",
   "username": "TristanJanicki",
   "v": 1
  },
  "html": "nvm fixed it :D was a mistake on my part",
  "id": "5dae021e7477946bada5bd3a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-21T19:08:14.254Z",
  "text": "nvm fixed it :D was a mistake on my part",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/TristanJanicki",
   "avatarUrlMedium": "https://avatars1.githubusercontent.com/u/46827578?v=4&s=128",
   "avatarUrlSmall": "https://avatars1.githubusercontent.com/u/46827578?v=4&s=60",
   "displayName": "Tristan Janicki",
   "gv": "4",
   "id": "5dadf833d73408ce4fce8e25",
   "url": "/TristanJanicki",
   "username": "TristanJanicki",
   "v": 1
  },
  "html": "The go sdk keeps telling me that AdminRespondToAuthChallenge is not a function",
  "id": "5dae4ac9fb4dab784ae01903",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-22T00:18:17.561Z",
  "text": "The go sdk keeps telling me that AdminRespondToAuthChallenge is not a function",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/BruceWangNo1",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/8055536?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/8055536?v=4&s=60",
   "displayName": "Bruce Wang",
   "gv": "4",
   "id": "5d27f2c3d73408ce4fc5de71",
   "url": "/BruceWangNo1",
   "username": "BruceWangNo1",
   "v": 3
  },
  "html": "how to use s3 select",
  "id": "5daebc0b7477946badaada35",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-22T08:21:31.402Z",
  "text": "how to use s3 select",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "editedAt": "2019-10-24T04:49:27.531Z",
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/venkateshsetti",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/37399250?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/37399250?v=4&s=60",
   "displayName": "venkateshsetti",
   "gv": "4",
   "id": "5db12c66d73408ce4fced613",
   "url": "/venkateshsetti",
   "username": "venkateshsetti",
   "v": 1
  },
  "html": "hi, i am facing trouble with aws sdk for qldb service   , cant able to insert the data into ledgers through code",
  "id": "5db12d2114d55a3785667baf",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-24T04:48:33.491Z",
  "text": "hi, i am facing trouble with aws sdk for qldb service   , cant able to insert the data into ledgers through code",
  "unread": false,
  "urls": [],
  "v": 2
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/venkateshsetti",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/37399250?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/37399250?v=4&s=60",
   "displayName": "venkateshsetti",
   "gv": "4",
   "id": "5db12c66d73408ce4fced613",
   "url": "/venkateshsetti",
   "username": "venkateshsetti",
   "v": 1
  },
  "html": "there are two versions of go aws sdk, which package is best to  call aws services using client",
  "id": "5db131f2e886fb5aa2e6167a",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 10,
  "sent": "2019-10-24T05:09:06.022Z",
  "text": "there are two versions of go aws sdk, which package is best to  call aws services using client",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-03.gitter.im/gh/uv/4/venkateshsetti",
   "avatarUrlMedium": "https://avatars2.githubusercontent.com/u/37399250?v=4&s=128",
   "avatarUrlSmall": "https://avatars2.githubusercontent.com/u/37399250?v=4&s=60",
   "displayName": "venkateshsetti",
   "gv": "4",
   "id": "5db12c66d73408ce4fced613",
   "url": "/venkateshsetti",
   "username": "venkateshsetti",
   "v": 1
  },
  "html": "how to compute commit digest in qldb service",
  "id": "5db17cf9a03ae1584ffe0166",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 11,
  "sent": "2019-10-24T10:29:13.684Z",
  "text": "how to compute commit digest in qldb service",
  "unread": false,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-04.gitter.im/gh/uv/4/swoldemi",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/24848380?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/24848380?v=4&s=60",
   "displayName": "Simon Woldemichael",
   "gv": "4",
   "id": "58a02362d73408ce4f49bf00",
   "url": "/swoldemi",
   "username": "swoldemi",
   "v": 11
  },
  "html": "Is it just me or is <a href=\"https://docs.aws.amazon.com/sdk-for-go/api/service/ecr/#CreateRepositoryInput\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link \">https://docs.aws.amazon.com/sdk-for-go/api/service/ecr/#CreateRepositoryInput</a> missing ImageScanningConfiguration. I also don&#39;t see <code>type ImageScanningConfiguration</code> for setting ScanOnPush. Have the online docs just not been updated yet?",
  "id": "5dbcd34ca03ae1584f4f7eeb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 8,
  "sent": "2019-11-02T00:52:28.951Z",
  "text": "Is it just me or is https://docs.aws.amazon.com/sdk-for-go/api/service/ecr/#CreateRepositoryInput missing ImageScanningConfiguration. I also don't see `type ImageScanningConfiguration` for setting ScanOnPush. Have the online docs just not been updated yet?",
  "unread": false,
  "urls": [
   {
    "url": "https://docs.aws.amazon.com/sdk-for-go/api/service/ecr/#CreateRepositoryInput"
   }
  ],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ninetynineteen",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51573278?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51573278?v=4&s=60",
   "displayName": "ninetynineteen",
   "gv": "4",
   "id": "5dbfca19d73408ce4fcfde9b",
   "url": "/ninetynineteen",
   "username": "ninetynineteen",
   "v": 1
  },
  "html": "hi , in  this method  &quot; client.GetBucketMetricsConfigurationRequest(params)&quot;,how can i init the client?",
  "id": "5dbfca52fb4dab784a5ea484",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-11-04T06:50:58.836Z",
  "text": "hi , in  this method  \" client.GetBucketMetricsConfigurationRequest(params)\",how can i init the client?",
  "unread": true,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ninetynineteen",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51573278?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51573278?v=4&s=60",
   "displayName": "ninetynineteen",
   "gv": "4",
   "id": "5dbfca19d73408ce4fcfde9b",
   "url": "/ninetynineteen",
   "username": "ninetynineteen",
   "v": 1
  },
  "html": "hi , in  this method  &quot; client.GetBucketMetricsConfigurationRequest(params)&quot;,how can i init the client?",
  "id": "5dbfcf8f10bd4128a1b8178b",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-11-04T07:13:19.162Z",
  "text": "hi , in  this method  \" client.GetBucketMetricsConfigurationRequest(params)\",how can i init the client?",
  "unread": true,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ninetynineteen",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51573278?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51573278?v=4&s=60",
   "displayName": "ninetynineteen",
   "gv": "4",
   "id": "5dbfca19d73408ce4fcfde9b",
   "url": "/ninetynineteen",
   "username": "ninetynineteen",
   "v": 1
  },
  "html": "hi , in  this method  &quot; client.GetBucketMetricsConfigurationRequest(params)&quot;,how can i init the client?",
  "id": "5dbfcf8f2f8a0343573191b9",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-11-04T07:13:19.448Z",
  "text": "hi , in  this method  \" client.GetBucketMetricsConfigurationRequest(params)\",how can i init the client?",
  "unread": true,
  "urls": [],
  "v": 1
 },
 {
  "fromUser": {
   "avatarUrl": "https://avatars-01.gitter.im/gh/uv/4/ninetynineteen",
   "avatarUrlMedium": "https://avatars0.githubusercontent.com/u/51573278?v=4&s=128",
   "avatarUrlSmall": "https://avatars0.githubusercontent.com/u/51573278?v=4&s=60",
   "displayName": "ninetynineteen",
   "gv": "4",
   "id": "5dbfca19d73408ce4fcfde9b",
   "url": "/ninetynineteen",
   "username": "ninetynineteen",
   "v": 1
  },
  "html": "hi , in  this method  &quot; client.GetBucketMetricsConfigurationRequest(params)&quot;,how can i init the client?",
  "id": "5dbfcf912f8a0343573191bb",
  "issues": [],
  "mentions": [],
  "meta": [],
  "readBy": 4,
  "sent": "2019-11-04T07:13:21.372Z",
  "text": "hi , in  this method  \" client.GetBucketMetricsConfigurationRequest(params)\",how can i init the client?",
  "unread": true,
  "urls": [],
  "v": 1
 }
]